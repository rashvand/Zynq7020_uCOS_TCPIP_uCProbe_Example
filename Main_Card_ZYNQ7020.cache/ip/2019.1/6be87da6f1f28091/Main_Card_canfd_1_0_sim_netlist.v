// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2019.1 (win64) Build 2552052 Fri May 24 14:49:42 MDT 2019
// Date        : Tue Oct  6 07:51:11 2020
// Host        : PC_SaeedRashvnd running 64-bit major release  (build 9200)
// Command     : write_verilog -force -mode funcsim -rename_top decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix -prefix
//               decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ Main_Card_canfd_1_0_sim_netlist.v
// Design      : Main_Card_canfd_1_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7z020clg400-1
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* CHECK_LICENSE_TYPE = "Main_Card_canfd_1_0,canfd_v2_0_1,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "canfd_v2_0_1,Vivado 2019.1" *) 
(* NotValidForBitStream *)
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix
   (can_clk,
    can_clk_x2,
    can_phy_tx,
    can_phy_rx,
    ip2bus_intrevent,
    s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_rready);
  (* X_INTERFACE_INFO = "xilinx.com:interface:can:1.0 CAN_INTERFACE CLK, xilinx.com:signal:clock:1.0 can_clk_i CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME can_clk_i, ASSOCIATED_BUSIF CAN_INTERFACE, FREQ_HZ 40000000, PHASE 0.000, INSERT_VIP 0" *) input can_clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 can_clk_x2_i CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME can_clk_x2_i, FREQ_HZ 80000000, PHASE 0.0, CLK_DOMAIN /clk_wiz_1_clk_out1, INSERT_VIP 0" *) input can_clk_x2;
  (* X_INTERFACE_INFO = "xilinx.com:interface:can:1.0 CAN_INTERFACE TX" *) output can_phy_tx;
  (* X_INTERFACE_INFO = "xilinx.com:interface:can:1.0 CAN_INTERFACE RX" *) input can_phy_rx;
  (* X_INTERFACE_INFO = "xilinx.com:signal:interrupt:1.0 interrupt INTERRUPT" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME interrupt, SENSITIVITY LEVEL_HIGH, PortWidth 1" *) output ip2bus_intrevent;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 s_axi_aclk_i CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi_aclk_i, ASSOCIATED_BUSIF CAN_S_AXI_LITE, ASSOCIATED_RESET s_axi_aresetn, FREQ_HZ 100000000, PHASE 0.000, CLK_DOMAIN Main_Card_processing_system7_0_0_FCLK_CLK0, INSERT_VIP 0" *) input s_axi_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 s_axi_aresetn RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi_aresetn, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input s_axi_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CAN_S_AXI_LITE AWADDR" *) input [14:0]s_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CAN_S_AXI_LITE AWVALID" *) input s_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CAN_S_AXI_LITE AWREADY" *) output s_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CAN_S_AXI_LITE WDATA" *) input [31:0]s_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CAN_S_AXI_LITE WVALID" *) input s_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CAN_S_AXI_LITE WREADY" *) output s_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CAN_S_AXI_LITE BRESP" *) output [1:0]s_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CAN_S_AXI_LITE BVALID" *) output s_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CAN_S_AXI_LITE BREADY" *) input s_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CAN_S_AXI_LITE ARADDR" *) input [14:0]s_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CAN_S_AXI_LITE ARVALID" *) input s_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CAN_S_AXI_LITE ARREADY" *) output s_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CAN_S_AXI_LITE RDATA" *) output [31:0]s_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CAN_S_AXI_LITE RRESP" *) output [1:0]s_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CAN_S_AXI_LITE RVALID" *) output s_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CAN_S_AXI_LITE RREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME CAN_S_AXI_LITE, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 100000000, ID_WIDTH 0, ADDR_WIDTH 15, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 0, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 2, NUM_WRITE_OUTSTANDING 2, MAX_BURST_LENGTH 1, PHASE 0.000, CLK_DOMAIN Main_Card_processing_system7_0_0_FCLK_CLK0, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) input s_axi_rready;

  wire can_clk;
  wire can_clk_x2;
  wire can_phy_rx;
  wire can_phy_tx;
  wire ip2bus_intrevent;
  wire s_axi_aclk;
  wire [14:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [14:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire [1:0]s_axi_bresp;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire [1:0]s_axi_rresp;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire NLW_inst_apb_perror_UNCONNECTED;
  wire NLW_inst_apb_pready_UNCONNECTED;
  wire [31:0]NLW_inst_apb_prdata_UNCONNECTED;

  (* C_AXI_SHIFTED_ADDR_WIDTH = "13" *) 
  (* C_C2S_MTBF_STAGES = "4" *) 
  (* C_CAN_NUM_FILTERS = "32" *) 
  (* C_EINJ_MODE = "0" *) 
  (* C_EN_APB = "0" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_IS_EVAL = "0" *) 
  (* C_IS_NISO = "0" *) 
  (* C_RX_FIFO_0_DEPTH = "64" *) 
  (* C_RX_FIFO_1_DEPTH = "64" *) 
  (* C_S2C_MTBF_STAGES = "2" *) 
  (* C_S_AXI_ADDR_WIDTH = "15" *) 
  (* C_S_AXI_DATA_WIDTH = "32" *) 
  (* C_USE_XPM_CDC = "1" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* EN_RX_FIFO_1 = "1" *) 
  (* LOG_NUM_FILTERS = "5" *) 
  (* LOG_NUM_OF_RX_MB_BUF = "6" *) 
  (* LOG_NUM_OF_TX_BUF = "5" *) 
  (* NUM_OF_RX_MB_BUF = "48" *) 
  (* NUM_OF_TX_BUF = "32" *) 
  (* RX_MODE = "0" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1 inst
       (.apb_paddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .apb_pclk(1'b0),
        .apb_penable(1'b0),
        .apb_perror(NLW_inst_apb_perror_UNCONNECTED),
        .apb_prdata(NLW_inst_apb_prdata_UNCONNECTED[31:0]),
        .apb_pready(NLW_inst_apb_pready_UNCONNECTED),
        .apb_psel(1'b0),
        .apb_pwdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .apb_pwrite(1'b0),
        .apb_resetn(1'b1),
        .can_clk(can_clk),
        .can_clk_x2(can_clk_x2),
        .can_phy_rx(can_phy_rx),
        .can_phy_tx(can_phy_tx),
        .ip2bus_intrevent(ip2bus_intrevent),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(s_axi_bresp),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(s_axi_rresp),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) (* WIDTH = "10" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "ARRAY_SINGLE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input [9:0]src_in;
  input dest_clk;
  output [9:0]dest_out;

  wire [9:0]async_path_bit;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ARRAY_SINGLE" *) wire [9:0]\syncstages_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ARRAY_SINGLE" *) wire [9:0]\syncstages_ff[1] ;

  assign async_path_bit = src_in[9:0];
  assign dest_out[9:0] = \syncstages_ff[1] ;
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[0]),
        .Q(\syncstages_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[1]),
        .Q(\syncstages_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[2]),
        .Q(\syncstages_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[3]),
        .Q(\syncstages_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[4]),
        .Q(\syncstages_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[5]),
        .Q(\syncstages_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[6]),
        .Q(\syncstages_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[7]),
        .Q(\syncstages_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[8]),
        .Q(\syncstages_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[9]),
        .Q(\syncstages_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [0]),
        .Q(\syncstages_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [1]),
        .Q(\syncstages_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [2]),
        .Q(\syncstages_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [3]),
        .Q(\syncstages_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [4]),
        .Q(\syncstages_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [5]),
        .Q(\syncstages_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [6]),
        .Q(\syncstages_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [7]),
        .Q(\syncstages_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [8]),
        .Q(\syncstages_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [9]),
        .Q(\syncstages_ff[1] [9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_array_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "ARRAY_SINGLE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input [4:0]src_in;
  input dest_clk;
  output [4:0]dest_out;

  wire [4:0]async_path_bit;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ARRAY_SINGLE" *) wire [4:0]\syncstages_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ARRAY_SINGLE" *) wire [4:0]\syncstages_ff[1] ;

  assign async_path_bit = src_in[4:0];
  assign dest_out[4:0] = \syncstages_ff[1] ;
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[0]),
        .Q(\syncstages_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[1]),
        .Q(\syncstages_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[2]),
        .Q(\syncstages_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[3]),
        .Q(\syncstages_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[4]),
        .Q(\syncstages_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [0]),
        .Q(\syncstages_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [1]),
        .Q(\syncstages_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [2]),
        .Q(\syncstages_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [3]),
        .Q(\syncstages_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [4]),
        .Q(\syncstages_ff[1] [4]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b1" *) (* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) 
(* INV_DEF_VAL = "1'b0" *) (* RST_ACTIVE_HIGH = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "ASYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst
   (src_arst,
    dest_clk,
    dest_arst);
  input src_arst;
  input dest_clk;
  output dest_arst;

  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ASYNC_RST" *) wire [1:0]arststages_ff;
  wire dest_clk;
  wire reset_pol;
  wire src_arst;

  assign dest_arst = arststages_ff[1];
  LUT1 #(
    .INIT(2'h1)) 
    \arststages_ff[1]_i_1 
       (.I0(src_arst),
        .O(reset_pol));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDCE #(
    .INIT(1'b1)) 
    \arststages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .CLR(reset_pol),
        .D(1'b1),
        .Q(arststages_ff[0]));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDCE #(
    .INIT(1'b1)) 
    \arststages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .CLR(reset_pol),
        .D(arststages_ff[0]),
        .Q(arststages_ff[1]));
endmodule

(* DEF_VAL = "1'b1" *) (* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) 
(* INV_DEF_VAL = "1'b0" *) (* ORIG_REF_NAME = "xpm_cdc_async_rst" *) (* RST_ACTIVE_HIGH = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "ASYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__1
   (src_arst,
    dest_clk,
    dest_arst);
  input src_arst;
  input dest_clk;
  output dest_arst;

  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ASYNC_RST" *) wire [1:0]arststages_ff;
  wire dest_clk;
  wire reset_pol;
  wire src_arst;

  assign dest_arst = arststages_ff[1];
  LUT1 #(
    .INIT(2'h1)) 
    \arststages_ff[1]_i_1 
       (.I0(src_arst),
        .O(reset_pol));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDCE #(
    .INIT(1'b1)) 
    \arststages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .CLR(reset_pol),
        .D(1'b1),
        .Q(arststages_ff[0]));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDCE #(
    .INIT(1'b1)) 
    \arststages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .CLR(reset_pol),
        .D(arststages_ff[0]),
        .Q(arststages_ff[1]));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "SINGLE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [1:0]syncstages_ff;

  assign dest_out = syncstages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__16
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [1:0]syncstages_ff;

  assign dest_out = syncstages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__17
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [1:0]syncstages_ff;

  assign dest_out = syncstages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__18
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [1:0]syncstages_ff;

  assign dest_out = syncstages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__19
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [1:0]syncstages_ff;

  assign dest_out = syncstages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__20
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [1:0]syncstages_ff;

  assign dest_out = syncstages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__21
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [1:0]syncstages_ff;

  assign dest_out = syncstages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__22
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [1:0]syncstages_ff;

  assign dest_out = syncstages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__23
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [1:0]syncstages_ff;

  assign dest_out = syncstages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__24
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [1:0]syncstages_ff;

  assign dest_out = syncstages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__25
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [1:0]syncstages_ff;

  assign dest_out = syncstages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__26
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [1:0]syncstages_ff;

  assign dest_out = syncstages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__27
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [1:0]syncstages_ff;

  assign dest_out = syncstages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__28
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [1:0]syncstages_ff;

  assign dest_out = syncstages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__29
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [1:0]syncstages_ff;

  assign dest_out = syncstages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__30
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [1:0]syncstages_ff;

  assign dest_out = syncstages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b1" *) (* DEST_SYNC_FF = "4" *) (* INIT = "1" *) 
(* INIT_SYNC_FF = "0" *) (* SIM_ASSERT_CHK = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [3:0]syncstages_ff;

  assign dest_rst = syncstages_ff[3];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b1" *) (* DEST_SYNC_FF = "4" *) (* INIT = "1" *) 
(* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__2
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [3:0]syncstages_ff;

  assign dest_rst = syncstages_ff[3];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b1)) 
    \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
endmodule

(* ADDR_WIDTH_A = "11" *) (* ADDR_WIDTH_B = "11" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "32" *) (* BYTE_WRITE_WIDTH_B = "32" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "65536" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "1" *) (* NUM_CHAR_LOC = "0" *) (* P_ECC_MODE = "no_ecc" *) 
(* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) (* P_MAX_DEPTH_DATA = "2048" *) 
(* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) (* P_MIN_WIDTH_DATA = "32" *) 
(* P_MIN_WIDTH_DATA_A = "32" *) (* P_MIN_WIDTH_DATA_B = "32" *) (* P_MIN_WIDTH_DATA_ECC = "32" *) 
(* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "32" *) (* P_NUM_COLS_WRITE_A = "1" *) 
(* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) (* P_NUM_ROWS_READ_B = "1" *) 
(* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) (* P_SDP_WRITE_MODE = "no" *) 
(* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "11" *) (* P_WIDTH_ADDR_READ_B = "11" *) 
(* P_WIDTH_ADDR_WRITE_A = "11" *) (* P_WIDTH_ADDR_WRITE_B = "11" *) (* P_WIDTH_COL_WRITE_A = "32" *) 
(* P_WIDTH_COL_WRITE_B = "32" *) (* READ_DATA_WIDTH_A = "32" *) (* READ_DATA_WIDTH_B = "32" *) 
(* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "1" *) (* READ_RESET_VALUE_A = "0" *) 
(* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) (* USE_MEM_INIT = "1" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "32" *) 
(* WRITE_DATA_WIDTH_B = "32" *) (* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) 
(* XPM_MODULE = "TRUE" *) (* rsta_loop_iter = "32" *) (* rstb_loop_iter = "32" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [10:0]addra;
  input [31:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [31:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [10:0]addrb;
  input [31:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [31:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [31:0]dina;
  wire [31:0]doutb;
  wire ena;
  wire enb;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1_i_1_n_0 ;
  wire rstb;
  wire sleep;
  wire [0:0]wea;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_INJECTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_INJECTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_DOADO_UNCONNECTED ;
  wire [31:16]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_DOPADOP_UNCONNECTED ;
  wire [3:2]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_RDADDRECC_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_1_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_1_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_1_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_1_INJECTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_1_INJECTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_1_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_DOADO_UNCONNECTED ;
  wire [31:14]\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "2047" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p2_d16" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "17" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "2047" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p2_d16" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "17" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "65536" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "2047" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "17" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "2047" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "17" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0 
       (.ADDRARDADDR({1'b1,addra,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({1'b1,addrb,1'b0,1'b0,1'b0,1'b0}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b1),
        .CASCADEOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina[15:0]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0,dina[17:16]}),
        .DIPBDIP({1'b0,1'b0,1'b1,1'b1}),
        .DOADO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_DOADO_UNCONNECTED [31:0]),
        .DOBDO({\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_DOBDO_UNCONNECTED [31:16],doutb[15:0]}),
        .DOPADOP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP({\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_DOPBDOP_UNCONNECTED [3:2],doutb[17:16]}),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ena),
        .ENBWREN(\gen_wr_a.gen_word_narrow.mem_reg_1_i_1_n_0 ),
        .INJECTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_INJECTDBITERR_UNCONNECTED ),
        .INJECTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_INJECTSBITERR_UNCONNECTED ),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(rstb),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_SBITERR_UNCONNECTED ),
        .WEA({wea,wea,wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "2047" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d14" *) 
  (* \MEM.PORTA.DATA_LSB  = "18" *) 
  (* \MEM.PORTA.DATA_MSB  = "31" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "2047" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d14" *) 
  (* \MEM.PORTB.DATA_LSB  = "18" *) 
  (* \MEM.PORTB.DATA_MSB  = "31" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "65536" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "2047" *) 
  (* bram_slice_begin = "18" *) 
  (* bram_slice_end = "31" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "2047" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "18" *) 
  (* ram_slice_end = "31" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \gen_wr_a.gen_word_narrow.mem_reg_1 
       (.ADDRARDADDR({1'b1,addra,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({1'b1,addrb,1'b0,1'b0,1'b0,1'b0}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b1),
        .CASCADEOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina[31:18]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_DOADO_UNCONNECTED [31:0]),
        .DOBDO({\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_DOBDO_UNCONNECTED [31:14],doutb[31:18]}),
        .DOPADOP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ena),
        .ENBWREN(\gen_wr_a.gen_word_narrow.mem_reg_1_i_1_n_0 ),
        .INJECTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_INJECTDBITERR_UNCONNECTED ),
        .INJECTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_INJECTSBITERR_UNCONNECTED ),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(rstb),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_SBITERR_UNCONNECTED ),
        .WEA({wea,wea,wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  LUT2 #(
    .INIT(4'hE)) 
    \gen_wr_a.gen_word_narrow.mem_reg_1_i_1 
       (.I0(rstb),
        .I1(enb),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_1_i_1_n_0 ));
endmodule

(* ADDR_WIDTH_A = "11" *) (* ADDR_WIDTH_B = "11" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "32" *) (* BYTE_WRITE_WIDTH_B = "32" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "65536" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "1" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "2048" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "32" *) (* P_MIN_WIDTH_DATA_A = "32" *) (* P_MIN_WIDTH_DATA_B = "32" *) 
(* P_MIN_WIDTH_DATA_ECC = "32" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "32" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "11" *) 
(* P_WIDTH_ADDR_READ_B = "11" *) (* P_WIDTH_ADDR_WRITE_A = "11" *) (* P_WIDTH_ADDR_WRITE_B = "11" *) 
(* P_WIDTH_COL_WRITE_A = "32" *) (* P_WIDTH_COL_WRITE_B = "32" *) (* READ_DATA_WIDTH_A = "32" *) 
(* READ_DATA_WIDTH_B = "32" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "1" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "1" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH_A = "32" *) (* WRITE_DATA_WIDTH_B = "32" *) (* WRITE_MODE_A = "2" *) 
(* WRITE_MODE_B = "2" *) (* XPM_MODULE = "TRUE" *) (* rsta_loop_iter = "32" *) 
(* rstb_loop_iter = "32" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__1
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [10:0]addra;
  input [31:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [31:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [10:0]addrb;
  input [31:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [31:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [31:0]dina;
  wire [31:0]doutb;
  wire ena;
  wire enb;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1_i_1_n_0 ;
  wire rstb;
  wire sleep;
  wire [0:0]wea;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_INJECTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_INJECTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_DOADO_UNCONNECTED ;
  wire [31:16]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_DOPADOP_UNCONNECTED ;
  wire [3:2]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_RDADDRECC_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_1_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_1_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_1_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_1_INJECTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_1_INJECTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_1_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_DOADO_UNCONNECTED ;
  wire [31:14]\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "2047" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p2_d16" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "17" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "2047" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p2_d16" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "17" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "65536" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "2047" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "17" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "2047" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "17" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0 
       (.ADDRARDADDR({1'b1,addra,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({1'b1,addrb,1'b0,1'b0,1'b0,1'b0}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b1),
        .CASCADEOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina[15:0]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0,dina[17:16]}),
        .DIPBDIP({1'b0,1'b0,1'b1,1'b1}),
        .DOADO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_DOADO_UNCONNECTED [31:0]),
        .DOBDO({\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_DOBDO_UNCONNECTED [31:16],doutb[15:0]}),
        .DOPADOP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP({\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_DOPBDOP_UNCONNECTED [3:2],doutb[17:16]}),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ena),
        .ENBWREN(\gen_wr_a.gen_word_narrow.mem_reg_1_i_1_n_0 ),
        .INJECTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_INJECTDBITERR_UNCONNECTED ),
        .INJECTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_INJECTSBITERR_UNCONNECTED ),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(rstb),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_SBITERR_UNCONNECTED ),
        .WEA({wea,wea,wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "2047" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d14" *) 
  (* \MEM.PORTA.DATA_LSB  = "18" *) 
  (* \MEM.PORTA.DATA_MSB  = "31" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "2047" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d14" *) 
  (* \MEM.PORTB.DATA_LSB  = "18" *) 
  (* \MEM.PORTB.DATA_MSB  = "31" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "65536" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "2047" *) 
  (* bram_slice_begin = "18" *) 
  (* bram_slice_end = "31" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "2047" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "18" *) 
  (* ram_slice_end = "31" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \gen_wr_a.gen_word_narrow.mem_reg_1 
       (.ADDRARDADDR({1'b1,addra,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({1'b1,addrb,1'b0,1'b0,1'b0,1'b0}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b1),
        .CASCADEOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina[31:18]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_DOADO_UNCONNECTED [31:0]),
        .DOBDO({\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_DOBDO_UNCONNECTED [31:14],doutb[31:18]}),
        .DOPADOP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ena),
        .ENBWREN(\gen_wr_a.gen_word_narrow.mem_reg_1_i_1_n_0 ),
        .INJECTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_INJECTDBITERR_UNCONNECTED ),
        .INJECTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_INJECTSBITERR_UNCONNECTED ),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(rstb),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_1_SBITERR_UNCONNECTED ),
        .WEA({wea,wea,wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  LUT2 #(
    .INIT(4'hE)) 
    \gen_wr_a.gen_word_narrow.mem_reg_1_i_1 
       (.I0(rstb),
        .I1(enb),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_1_i_1_n_0 ));
endmodule

(* ADDR_WIDTH_A = "10" *) (* ADDR_WIDTH_B = "10" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "32" *) (* BYTE_WRITE_WIDTH_B = "32" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "32768" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "1" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "1024" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "32" *) (* P_MIN_WIDTH_DATA_A = "32" *) (* P_MIN_WIDTH_DATA_B = "32" *) 
(* P_MIN_WIDTH_DATA_ECC = "32" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "32" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "10" *) 
(* P_WIDTH_ADDR_READ_B = "10" *) (* P_WIDTH_ADDR_WRITE_A = "10" *) (* P_WIDTH_ADDR_WRITE_B = "10" *) 
(* P_WIDTH_COL_WRITE_A = "32" *) (* P_WIDTH_COL_WRITE_B = "32" *) (* READ_DATA_WIDTH_A = "32" *) 
(* READ_DATA_WIDTH_B = "32" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "1" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "1" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH_A = "32" *) (* WRITE_DATA_WIDTH_B = "32" *) (* WRITE_MODE_A = "2" *) 
(* WRITE_MODE_B = "2" *) (* XPM_MODULE = "TRUE" *) (* rsta_loop_iter = "32" *) 
(* rstb_loop_iter = "32" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized0
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [9:0]addra;
  input [31:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [31:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [9:0]addrb;
  input [31:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [31:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [9:0]addra;
  wire [9:0]addrb;
  wire clka;
  wire clkb;
  wire [31:0]dina;
  wire [31:0]doutb;
  wire ena;
  wire enb;
  wire \gen_wr_a.gen_word_narrow.mem_reg_i_1_n_0 ;
  wire rstb;
  wire sleep;
  wire [0:0]wea;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_INJECTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_INJECTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOADO_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "1023" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d32" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "31" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "1023" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d32" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "31" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "32768" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "1023" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "31" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "1023" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "31" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(36),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(36),
    .WRITE_WIDTH_B(36)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({1'b1,addra,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({1'b1,addrb,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b1),
        .CASCADEOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DIADI(dina),
        .DIBDI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOADO_UNCONNECTED [31:0]),
        .DOBDO(doutb),
        .DOPADOP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ena),
        .ENBWREN(\gen_wr_a.gen_word_narrow.mem_reg_i_1_n_0 ),
        .INJECTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_INJECTDBITERR_UNCONNECTED ),
        .INJECTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_INJECTSBITERR_UNCONNECTED ),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(rstb),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .WEA({wea,wea,wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  LUT2 #(
    .INIT(4'hE)) 
    \gen_wr_a.gen_word_narrow.mem_reg_i_1 
       (.I0(rstb),
        .I1(enb),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_i_1_n_0 ));
endmodule

(* ADDR_WIDTH_A = "10" *) (* ADDR_WIDTH_B = "10" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "32" *) (* BYTE_WRITE_WIDTH_B = "32" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "32768" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "1" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "1024" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "32" *) (* P_MIN_WIDTH_DATA_A = "32" *) (* P_MIN_WIDTH_DATA_B = "32" *) 
(* P_MIN_WIDTH_DATA_ECC = "32" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "32" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "10" *) 
(* P_WIDTH_ADDR_READ_B = "10" *) (* P_WIDTH_ADDR_WRITE_A = "10" *) (* P_WIDTH_ADDR_WRITE_B = "10" *) 
(* P_WIDTH_COL_WRITE_A = "32" *) (* P_WIDTH_COL_WRITE_B = "32" *) (* READ_DATA_WIDTH_A = "32" *) 
(* READ_DATA_WIDTH_B = "32" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "1" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "1" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH_A = "32" *) (* WRITE_DATA_WIDTH_B = "32" *) (* WRITE_MODE_A = "2" *) 
(* WRITE_MODE_B = "2" *) (* XPM_MODULE = "TRUE" *) (* rsta_loop_iter = "32" *) 
(* rstb_loop_iter = "32" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized0__1
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [9:0]addra;
  input [31:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [31:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [9:0]addrb;
  input [31:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [31:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [9:0]addra;
  wire [9:0]addrb;
  wire clka;
  wire clkb;
  wire [31:0]dina;
  wire [31:0]doutb;
  wire ena;
  wire enb;
  wire \gen_wr_a.gen_word_narrow.mem_reg_i_1_n_0 ;
  wire rstb;
  wire sleep;
  wire [0:0]wea;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_INJECTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_INJECTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOADO_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "1023" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d32" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "31" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "1023" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d32" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "31" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "32768" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "1023" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "31" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "1023" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "31" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(36),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(36),
    .WRITE_WIDTH_B(36)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({1'b1,addra,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({1'b1,addrb,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b1),
        .CASCADEOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DIADI(dina),
        .DIBDI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOADO_UNCONNECTED [31:0]),
        .DOBDO(doutb),
        .DOPADOP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ena),
        .ENBWREN(\gen_wr_a.gen_word_narrow.mem_reg_i_1_n_0 ),
        .INJECTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_INJECTDBITERR_UNCONNECTED ),
        .INJECTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_INJECTSBITERR_UNCONNECTED ),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(rstb),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .WEA({wea,wea,wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  LUT2 #(
    .INIT(4'hE)) 
    \gen_wr_a.gen_word_narrow.mem_reg_i_1 
       (.I0(rstb),
        .I1(enb),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_i_1_n_0 ));
endmodule

(* ADDR_WIDTH_A = "11" *) (* ADDR_WIDTH_B = "11" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "32" *) (* CASCADE_HEIGHT = "0" *) (* CLOCKING_MODE = "independent_clock" *) 
(* ECC_MODE = "no_ecc" *) (* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) 
(* MEMORY_OPTIMIZATION = "true" *) (* MEMORY_PRIMITIVE = "blockram" *) (* MEMORY_SIZE = "65536" *) 
(* MESSAGE_CONTROL = "1" *) (* P_CLOCKING_MODE = "1" *) (* P_ECC_MODE = "0" *) 
(* P_MEMORY_OPTIMIZATION = "1" *) (* P_MEMORY_PRIMITIVE = "2" *) (* P_WAKEUP_TIME = "0" *) 
(* P_WRITE_MODE_B = "2" *) (* READ_DATA_WIDTH_B = "32" *) (* READ_LATENCY_B = "1" *) 
(* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) (* USE_MEM_INIT = "1" *) 
(* WAKEUP_TIME = "disable_sleep" *) (* WRITE_DATA_WIDTH_A = "32" *) (* WRITE_MODE_B = "no_change" *) 
(* XPM_MODULE = "TRUE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_sdpram
   (sleep,
    clka,
    ena,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    addrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input ena;
  input [0:0]wea;
  input [10:0]addra;
  input [31:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [10:0]addrb;
  output [31:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [31:0]dina;
  wire [31:0]doutb;
  wire ena;
  wire enb;
  wire rstb;
  wire sleep;
  wire [0:0]wea;
  wire NLW_xpm_memory_base_inst_dbiterra_UNCONNECTED;
  wire NLW_xpm_memory_base_inst_dbiterrb_UNCONNECTED;
  wire NLW_xpm_memory_base_inst_sbiterra_UNCONNECTED;
  wire NLW_xpm_memory_base_inst_sbiterrb_UNCONNECTED;
  wire [31:0]NLW_xpm_memory_base_inst_douta_UNCONNECTED;

  assign dbiterrb = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* ADDR_WIDTH_A = "11" *) 
  (* ADDR_WIDTH_B = "11" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "32" *) 
  (* BYTE_WRITE_WIDTH_B = "32" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "31" *) 
  (* \MEM.ADDRESS_SPACE_END  = "2047" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "32" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "65536" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "1" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "2048" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "32" *) 
  (* P_MIN_WIDTH_DATA_A = "32" *) 
  (* P_MIN_WIDTH_DATA_B = "32" *) 
  (* P_MIN_WIDTH_DATA_ECC = "32" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "32" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "11" *) 
  (* P_WIDTH_ADDR_READ_B = "11" *) 
  (* P_WIDTH_ADDR_WRITE_A = "11" *) 
  (* P_WIDTH_ADDR_WRITE_B = "11" *) 
  (* P_WIDTH_COL_WRITE_A = "32" *) 
  (* P_WIDTH_COL_WRITE_B = "32" *) 
  (* READ_DATA_WIDTH_A = "32" *) 
  (* READ_DATA_WIDTH_B = "32" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "1" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "1" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "32" *) 
  (* WRITE_DATA_WIDTH_B = "32" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "32" *) 
  (* rstb_loop_iter = "32" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base xpm_memory_base_inst
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterra(NLW_xpm_memory_base_inst_dbiterra_UNCONNECTED),
        .dbiterrb(NLW_xpm_memory_base_inst_dbiterrb_UNCONNECTED),
        .dina(dina),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(NLW_xpm_memory_base_inst_douta_UNCONNECTED[31:0]),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rstb(rstb),
        .sbiterra(NLW_xpm_memory_base_inst_sbiterra_UNCONNECTED),
        .sbiterrb(NLW_xpm_memory_base_inst_sbiterrb_UNCONNECTED),
        .sleep(sleep),
        .wea(wea),
        .web(1'b0));
endmodule

(* ADDR_WIDTH_A = "11" *) (* ADDR_WIDTH_B = "11" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "32" *) (* CASCADE_HEIGHT = "0" *) (* CLOCKING_MODE = "independent_clock" *) 
(* ECC_MODE = "no_ecc" *) (* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) 
(* MEMORY_OPTIMIZATION = "true" *) (* MEMORY_PRIMITIVE = "blockram" *) (* MEMORY_SIZE = "65536" *) 
(* MESSAGE_CONTROL = "1" *) (* ORIG_REF_NAME = "xpm_memory_sdpram" *) (* P_CLOCKING_MODE = "1" *) 
(* P_ECC_MODE = "0" *) (* P_MEMORY_OPTIMIZATION = "1" *) (* P_MEMORY_PRIMITIVE = "2" *) 
(* P_WAKEUP_TIME = "0" *) (* P_WRITE_MODE_B = "2" *) (* READ_DATA_WIDTH_B = "32" *) 
(* READ_LATENCY_B = "1" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "1" *) (* WAKEUP_TIME = "disable_sleep" *) (* WRITE_DATA_WIDTH_A = "32" *) 
(* WRITE_MODE_B = "no_change" *) (* XPM_MODULE = "TRUE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_sdpram__1
   (sleep,
    clka,
    ena,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    addrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input ena;
  input [0:0]wea;
  input [10:0]addra;
  input [31:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [10:0]addrb;
  output [31:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [31:0]dina;
  wire [31:0]doutb;
  wire ena;
  wire enb;
  wire rstb;
  wire sleep;
  wire [0:0]wea;
  wire NLW_xpm_memory_base_inst_dbiterra_UNCONNECTED;
  wire NLW_xpm_memory_base_inst_dbiterrb_UNCONNECTED;
  wire NLW_xpm_memory_base_inst_sbiterra_UNCONNECTED;
  wire NLW_xpm_memory_base_inst_sbiterrb_UNCONNECTED;
  wire [31:0]NLW_xpm_memory_base_inst_douta_UNCONNECTED;

  assign dbiterrb = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* ADDR_WIDTH_A = "11" *) 
  (* ADDR_WIDTH_B = "11" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "32" *) 
  (* BYTE_WRITE_WIDTH_B = "32" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "31" *) 
  (* \MEM.ADDRESS_SPACE_END  = "2047" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "32" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "65536" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "1" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "2048" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "32" *) 
  (* P_MIN_WIDTH_DATA_A = "32" *) 
  (* P_MIN_WIDTH_DATA_B = "32" *) 
  (* P_MIN_WIDTH_DATA_ECC = "32" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "32" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "11" *) 
  (* P_WIDTH_ADDR_READ_B = "11" *) 
  (* P_WIDTH_ADDR_WRITE_A = "11" *) 
  (* P_WIDTH_ADDR_WRITE_B = "11" *) 
  (* P_WIDTH_COL_WRITE_A = "32" *) 
  (* P_WIDTH_COL_WRITE_B = "32" *) 
  (* READ_DATA_WIDTH_A = "32" *) 
  (* READ_DATA_WIDTH_B = "32" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "1" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "1" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "32" *) 
  (* WRITE_DATA_WIDTH_B = "32" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "32" *) 
  (* rstb_loop_iter = "32" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__1 xpm_memory_base_inst
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterra(NLW_xpm_memory_base_inst_dbiterra_UNCONNECTED),
        .dbiterrb(NLW_xpm_memory_base_inst_dbiterrb_UNCONNECTED),
        .dina(dina),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(NLW_xpm_memory_base_inst_douta_UNCONNECTED[31:0]),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rstb(rstb),
        .sbiterra(NLW_xpm_memory_base_inst_sbiterra_UNCONNECTED),
        .sbiterrb(NLW_xpm_memory_base_inst_sbiterrb_UNCONNECTED),
        .sleep(sleep),
        .wea(wea),
        .web(1'b0));
endmodule

(* ADDR_WIDTH_A = "10" *) (* ADDR_WIDTH_B = "10" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "32" *) (* CASCADE_HEIGHT = "0" *) (* CLOCKING_MODE = "independent_clock" *) 
(* ECC_MODE = "no_ecc" *) (* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) 
(* MEMORY_OPTIMIZATION = "true" *) (* MEMORY_PRIMITIVE = "blockram" *) (* MEMORY_SIZE = "32768" *) 
(* MESSAGE_CONTROL = "1" *) (* ORIG_REF_NAME = "xpm_memory_sdpram" *) (* P_CLOCKING_MODE = "1" *) 
(* P_ECC_MODE = "0" *) (* P_MEMORY_OPTIMIZATION = "1" *) (* P_MEMORY_PRIMITIVE = "2" *) 
(* P_WAKEUP_TIME = "0" *) (* P_WRITE_MODE_B = "2" *) (* READ_DATA_WIDTH_B = "32" *) 
(* READ_LATENCY_B = "1" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "1" *) (* WAKEUP_TIME = "disable_sleep" *) (* WRITE_DATA_WIDTH_A = "32" *) 
(* WRITE_MODE_B = "no_change" *) (* XPM_MODULE = "TRUE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_sdpram__parameterized0
   (sleep,
    clka,
    ena,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    addrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input ena;
  input [0:0]wea;
  input [9:0]addra;
  input [31:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [9:0]addrb;
  output [31:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [9:0]addra;
  wire [9:0]addrb;
  wire clka;
  wire clkb;
  wire [31:0]dina;
  wire [31:0]doutb;
  wire ena;
  wire enb;
  wire rstb;
  wire sleep;
  wire [0:0]wea;
  wire NLW_xpm_memory_base_inst_dbiterra_UNCONNECTED;
  wire NLW_xpm_memory_base_inst_dbiterrb_UNCONNECTED;
  wire NLW_xpm_memory_base_inst_sbiterra_UNCONNECTED;
  wire NLW_xpm_memory_base_inst_sbiterrb_UNCONNECTED;
  wire [31:0]NLW_xpm_memory_base_inst_douta_UNCONNECTED;

  assign dbiterrb = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* ADDR_WIDTH_A = "10" *) 
  (* ADDR_WIDTH_B = "10" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "32" *) 
  (* BYTE_WRITE_WIDTH_B = "32" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "31" *) 
  (* \MEM.ADDRESS_SPACE_END  = "1023" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "32" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "32768" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "1" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "1024" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "32" *) 
  (* P_MIN_WIDTH_DATA_A = "32" *) 
  (* P_MIN_WIDTH_DATA_B = "32" *) 
  (* P_MIN_WIDTH_DATA_ECC = "32" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "32" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "10" *) 
  (* P_WIDTH_ADDR_READ_B = "10" *) 
  (* P_WIDTH_ADDR_WRITE_A = "10" *) 
  (* P_WIDTH_ADDR_WRITE_B = "10" *) 
  (* P_WIDTH_COL_WRITE_A = "32" *) 
  (* P_WIDTH_COL_WRITE_B = "32" *) 
  (* READ_DATA_WIDTH_A = "32" *) 
  (* READ_DATA_WIDTH_B = "32" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "1" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "1" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "32" *) 
  (* WRITE_DATA_WIDTH_B = "32" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "32" *) 
  (* rstb_loop_iter = "32" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized0 xpm_memory_base_inst
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterra(NLW_xpm_memory_base_inst_dbiterra_UNCONNECTED),
        .dbiterrb(NLW_xpm_memory_base_inst_dbiterrb_UNCONNECTED),
        .dina(dina),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(NLW_xpm_memory_base_inst_douta_UNCONNECTED[31:0]),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rstb(rstb),
        .sbiterra(NLW_xpm_memory_base_inst_sbiterra_UNCONNECTED),
        .sbiterrb(NLW_xpm_memory_base_inst_sbiterrb_UNCONNECTED),
        .sleep(sleep),
        .wea(wea),
        .web(1'b0));
endmodule

(* ADDR_WIDTH_A = "10" *) (* ADDR_WIDTH_B = "10" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "32" *) (* CASCADE_HEIGHT = "0" *) (* CLOCKING_MODE = "independent_clock" *) 
(* ECC_MODE = "no_ecc" *) (* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) 
(* MEMORY_OPTIMIZATION = "true" *) (* MEMORY_PRIMITIVE = "blockram" *) (* MEMORY_SIZE = "32768" *) 
(* MESSAGE_CONTROL = "1" *) (* ORIG_REF_NAME = "xpm_memory_sdpram" *) (* P_CLOCKING_MODE = "1" *) 
(* P_ECC_MODE = "0" *) (* P_MEMORY_OPTIMIZATION = "1" *) (* P_MEMORY_PRIMITIVE = "2" *) 
(* P_WAKEUP_TIME = "0" *) (* P_WRITE_MODE_B = "2" *) (* READ_DATA_WIDTH_B = "32" *) 
(* READ_LATENCY_B = "1" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "1" *) (* WAKEUP_TIME = "disable_sleep" *) (* WRITE_DATA_WIDTH_A = "32" *) 
(* WRITE_MODE_B = "no_change" *) (* XPM_MODULE = "TRUE" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_sdpram__parameterized0__1
   (sleep,
    clka,
    ena,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    addrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input ena;
  input [0:0]wea;
  input [9:0]addra;
  input [31:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [9:0]addrb;
  output [31:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [9:0]addra;
  wire [9:0]addrb;
  wire clka;
  wire clkb;
  wire [31:0]dina;
  wire [31:0]doutb;
  wire ena;
  wire enb;
  wire rstb;
  wire sleep;
  wire [0:0]wea;
  wire NLW_xpm_memory_base_inst_dbiterra_UNCONNECTED;
  wire NLW_xpm_memory_base_inst_dbiterrb_UNCONNECTED;
  wire NLW_xpm_memory_base_inst_sbiterra_UNCONNECTED;
  wire NLW_xpm_memory_base_inst_sbiterrb_UNCONNECTED;
  wire [31:0]NLW_xpm_memory_base_inst_douta_UNCONNECTED;

  assign dbiterrb = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* ADDR_WIDTH_A = "10" *) 
  (* ADDR_WIDTH_B = "10" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "32" *) 
  (* BYTE_WRITE_WIDTH_B = "32" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "31" *) 
  (* \MEM.ADDRESS_SPACE_END  = "1023" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "32" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "32768" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "1" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "1024" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "32" *) 
  (* P_MIN_WIDTH_DATA_A = "32" *) 
  (* P_MIN_WIDTH_DATA_B = "32" *) 
  (* P_MIN_WIDTH_DATA_ECC = "32" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "32" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "10" *) 
  (* P_WIDTH_ADDR_READ_B = "10" *) 
  (* P_WIDTH_ADDR_WRITE_A = "10" *) 
  (* P_WIDTH_ADDR_WRITE_B = "10" *) 
  (* P_WIDTH_COL_WRITE_A = "32" *) 
  (* P_WIDTH_COL_WRITE_B = "32" *) 
  (* READ_DATA_WIDTH_A = "32" *) 
  (* READ_DATA_WIDTH_B = "32" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "1" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "1" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "32" *) 
  (* WRITE_DATA_WIDTH_B = "32" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "32" *) 
  (* rstb_loop_iter = "32" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized0__1 xpm_memory_base_inst
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterra(NLW_xpm_memory_base_inst_dbiterra_UNCONNECTED),
        .dbiterrb(NLW_xpm_memory_base_inst_dbiterrb_UNCONNECTED),
        .dina(dina),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(NLW_xpm_memory_base_inst_douta_UNCONNECTED[31:0]),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rstb(rstb),
        .sbiterra(NLW_xpm_memory_base_inst_sbiterra_UNCONNECTED),
        .sbiterrb(NLW_xpm_memory_base_inst_sbiterrb_UNCONNECTED),
        .sleep(sleep),
        .wea(wea),
        .web(1'b0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_address_decoder
   (Bus2IP_CS,
    s_axi_aclk,
    Q,
    dest_rst,
    E_DATA_ACK);
  output Bus2IP_CS;
  input s_axi_aclk;
  input Q;
  input dest_rst;
  input E_DATA_ACK;

  wire Bus2IP_CS;
  wire E_DATA_ACK;
  wire \MEM_DECODE_GEN[0].cs_out_i[0]_i_1_n_0 ;
  wire Q;
  wire dest_rst;
  wire s_axi_aclk;

  LUT4 #(
    .INIT(16'h00E0)) 
    \MEM_DECODE_GEN[0].cs_out_i[0]_i_1 
       (.I0(Bus2IP_CS),
        .I1(Q),
        .I2(dest_rst),
        .I3(E_DATA_ACK),
        .O(\MEM_DECODE_GEN[0].cs_out_i[0]_i_1_n_0 ));
  FDRE \MEM_DECODE_GEN[0].cs_out_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\MEM_DECODE_GEN[0].cs_out_i[0]_i_1_n_0 ),
        .Q(Bus2IP_CS),
        .R(1'b0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_axi_lite_ipif
   (Bus2IP_RNW,
    Bus2IP_CS,
    s_axi_rvalid,
    s_axi_bvalid,
    s_axi_rdata,
    \bus2ip_addr_i_reg[14] ,
    Bus2IP_Reset,
    s_axi_aclk,
    s_axi_arvalid,
    s_axi_awvalid,
    s_axi_wvalid,
    s_axi_wready,
    E_DATA_ACK,
    s_axi_bready,
    s_axi_rready,
    s_axi_araddr,
    s_axi_awaddr,
    dest_rst,
    Q);
  output Bus2IP_RNW;
  output Bus2IP_CS;
  output s_axi_rvalid;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [12:0]\bus2ip_addr_i_reg[14] ;
  input Bus2IP_Reset;
  input s_axi_aclk;
  input s_axi_arvalid;
  input s_axi_awvalid;
  input s_axi_wvalid;
  input s_axi_wready;
  input E_DATA_ACK;
  input s_axi_bready;
  input s_axi_rready;
  input [12:0]s_axi_araddr;
  input [12:0]s_axi_awaddr;
  input dest_rst;
  input [31:0]Q;

  wire Bus2IP_CS;
  wire Bus2IP_RNW;
  wire Bus2IP_Reset;
  wire E_DATA_ACK;
  wire [31:0]Q;
  wire [12:0]\bus2ip_addr_i_reg[14] ;
  wire dest_rst;
  wire s_axi_aclk;
  wire [12:0]s_axi_araddr;
  wire s_axi_arvalid;
  wire [12:0]s_axi_awaddr;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire s_axi_wready;
  wire s_axi_wvalid;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_slave_attachment I_SLAVE_ATTACHMENT
       (.Bus2IP_CS(Bus2IP_CS),
        .Bus2IP_Reset(Bus2IP_Reset),
        .E_DATA_ACK(E_DATA_ACK),
        .Q(Q),
        .\bus2ip_addr_i_reg[14]_0 (\bus2ip_addr_i_reg[14] ),
        .bus2ip_rnw_i_reg_0(Bus2IP_RNW),
        .dest_rst(dest_rst),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ic_main
   (\SINGLE_BIT.s_level_out_d4_reg ,
    \SINGLE_BIT.s_level_out_d4_reg_0 ,
    out,
    \SINGLE_BIT.s_level_out_d4_reg_1 ,
    \SINGLE_BIT.s_level_out_d4_reg_2 ,
    \SINGLE_BIT.s_level_out_d4_reg_3 ,
    \SINGLE_BIT.s_level_out_d4_reg_4 ,
    \SINGLE_BIT.s_level_out_d4_reg_5 ,
    \SINGLE_BIT.s_level_out_d4_reg_6 ,
    \SINGLE_BIT.s_level_out_d4_reg_7 ,
    \SINGLE_BIT.s_level_out_d4_reg_8 ,
    \SINGLE_BIT.s_level_out_d4_reg_9 ,
    \SINGLE_BIT.s_level_out_d4_reg_10 ,
    \SINGLE_BIT.s_level_out_d4_reg_11 ,
    \SINGLE_BIT.s_level_out_d6_reg ,
    \SINGLE_BIT.s_level_out_d6_reg_0 ,
    \SINGLE_BIT.s_level_out_d4_reg_12 ,
    \SINGLE_BIT.s_level_out_d4_reg_13 ,
    \SINGLE_BIT.s_level_out_d4_reg_14 ,
    \SINGLE_BIT.s_level_out_d4_reg_15 ,
    \SINGLE_BIT.s_level_out_d4_reg_16 ,
    IC_IPSIG_WRITE_I_reg_0,
    IC_REG_SR_SLEEP_FS3,
    IC_REG_MSR_LBACK_I_reg_0,
    IC_REG_MSR_ABR_I_reg_0,
    IC_REG_MSR_BRSD_I_reg_0,
    IC_REG_MSR_DAR_I_reg_0,
    IC_REG_MSR_DPEE_I_reg_0,
    IC_REG_ISR_BSOFF_FS3,
    IC_SYNC_ECR_WEN_FS3,
    IC_REG_ESR_CRCER_FS3,
    IC_REG_ESR_FMER_FS3,
    IC_REG_ESR_STER_FS3,
    IC_REG_ESR_BERR_FS3,
    IC_REG_ESR_ACKER_FS3,
    IC_REG_ESR_F_CRCER_FS3,
    IC_REG_ESR_F_FMER_FS3,
    IC_REG_ESR_F_STER_FS3,
    IC_REG_ESR_F_BERR_FS3,
    p_14_in,
    IC_REG_SR_SNOOP_I_reg_0,
    IC_REG_ISR_ARBLST_FS3,
    IC_REG_ISR_TXOK_FS3,
    RXOK_FS3,
    IC_SYNC_TSR_WEN_FS3,
    IC_REG_ISR_MSGLST_FS3,
    IC_REG_ISR_MSGLST_FS3_F1,
    IC_REG_ISR_MSGLST_FS3_TXE,
    IC_REG_SR_BBSY_I,
    IC_REG_SR_ERRWRN_I,
    ip2bus_intrevent,
    IC_REG_SBR_I_reg_0,
    IC_REG_MSR_SLEEP_reg_0,
    IC_REG_SRR_SRST_I_reg_0,
    IC_REG_SRR_CEN_I_reg_0,
    IC_REG_MSR_SBR_I_reg_0,
    IC_REG_ISR_ARBLST_I_reg_0,
    IC_REG_ISR_TXOK_I_reg_0,
    IC_REG_ISR_PEE_I_reg_0,
    IC_REG_ISR_BSFRD_I_reg_0,
    IC_REG_ISR_RXOK_I_reg_0,
    IC_REG_ISR_TSCNT_OFLW_I_reg_0,
    IC_REG_ISR_MSGLST_I_reg_0,
    IC_REG_ISR_ERROR_I_reg_0,
    IC_REG_ISR_BSOFF_I_reg_0,
    IC_REG_ISR_SLEEP_I_reg_0,
    IC_REG_ISR_WKUP_I_reg_0,
    IC_REG_ISR_RXWM_I_reg_0,
    IC_REG_ISR_TXTRS_I_reg_0,
    IC_REG_ISR_TXCRS_I_reg_0,
    IC_REG_ISR_MSGLST_I_F1_reg_0,
    IC_REG_ISR_RXWM_I_F1_reg_0,
    IC_REG_ISR_RXMNF_I_reg_0,
    IC_REG_ISR_MSGLST_I_TXE_reg_0,
    IC_REG_ISR_TXEWM_I_reg_0,
    IC_REG_ESR_CRCER_I,
    IC_REG_ESR_FMER_I,
    IC_REG_ESR_STER_I,
    IC_REG_ESR_BERR_I,
    IC_REG_ESR_ACKER_I,
    IC_REG_ESR_F_CRCER_I,
    IC_REG_ESR_F_FMER_I,
    IC_REG_ESR_F_STER_I,
    IC_REG_ESR_F_BERR_I,
    IC_TIMESTAMP_RST_reg_0,
    IC_SYNC_ECR_ACK_I_reg_0,
    IC_REG_MSR_SLEEP_I_reg_0,
    \IC_REG_BRPR_I_reg[0]_0 ,
    IC_REG_MSR_LBACK_I_reg_1,
    IC_REG_MSR_SNOOP_I_reg_0,
    IC_REG_MSR_BRSD_I_reg_1,
    IC_REG_MSR_DAR_I_reg_1,
    ACK_CR,
    \TRR_i_reg[0] ,
    Q,
    \IC_REG_IECRS_I_reg[0]_0 ,
    \TRR_i_reg[1] ,
    \TRR_i_reg[2] ,
    \TRR_i_reg[3] ,
    \TRR_i_reg[4] ,
    \TRR_i_reg[8] ,
    \TRR_i_reg[9] ,
    \TRR_i_reg[10] ,
    \IC_REG_IECRS_I_reg[15]_0 ,
    \IC_REG_IECRS_I_reg[14]_0 ,
    \IC_REG_IECRS_I_reg[13]_0 ,
    \IC_REG_IECRS_I_reg[12]_0 ,
    \IC_REG_IECRS_I_reg[11]_0 ,
    \IC_REG_TSR_I_reg[9]_0 ,
    \IC_REG_TSR_I_reg[0]_0 ,
    \RX_FIFO_AFR.IC_REG_AFR_I_reg[24]_0 ,
    \RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 ,
    \IC_REG_F_BRPR_I_reg[20]_0 ,
    \IC_REG_F_BRPR_I_reg[15]_0 ,
    \IC_REG_TSR_I_reg[11]_0 ,
    \RX_FIFO_AFR.IC_REG_AFR_I_reg[9]_0 ,
    \IC_REG_F_BRPR_I_reg[24]_0 ,
    \IC_REG_N_BTR_TS2_I_reg[0]_0 ,
    \IC_REG_N_BTR_TS2_I_reg[0]_1 ,
    \IC_REG_N_BTR_SJW_I_reg[1]_0 ,
    \IC_REG_N_BTR_SJW_I_reg[0]_0 ,
    \TCR_i_reg[12] ,
    \TCR_i_reg[13] ,
    \TCR_i_reg[15] ,
    \IC_REG_F_BRPR_I_reg[15]_1 ,
    \IC_REG_F_BTR_SJW_I_reg[0]_0 ,
    \TCR_i_reg[31] ,
    \RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 ,
    MSG_DONE_FROM_BSP,
    \num_reg_reg[2] ,
    \num_reg_reg[3] ,
    \RX_FIFO_AFR.IC_REG_AFR_I_reg[5]_0 ,
    G_RST_SRST_CEN_I0,
    IC_REG_ISR_ERROR_I10_out,
    IC_REG_ISR_TSCNT_OFLW_I0,
    \SINGLE_BIT.s_level_out_d4_reg_17 ,
    \IC_REG_IFF_EN_I_reg[0]_0 ,
    \IC_REG_ECR_I_reg[0]_0 ,
    \IC_REG_F_BTR_TS1_I_reg[0]_0 ,
    \IC_REG_F_BTR_TS2_I_reg[0]_0 ,
    \IC_REG_N_BTR_TS1_I_reg[0]_0 ,
    \IC_REG_SR_TDCV_I_reg[6]_0 ,
    \SINGLE_BIT.s_level_out_d6_reg_1 ,
    IC_SYNC_SR_RSTST,
    s_axi_aclk,
    IC_SYNC_SR_PEE,
    IC_SYNC_SR_BSFR,
    IC_SYNC_SR_LBACK,
    IC_SYNC_SR_BIDLE,
    IC_SYNC_SR_ERRWRN,
    IC_SYNC_ESR_F_CRCER,
    IC_SYNC_ESR_F_FMER,
    IC_SYNC_ESR_F_STER,
    IC_SYNC_ESR_F_BERR,
    TDCV_CNT_REG_WEN,
    IC_SYNC_TSR_WEN,
    IC_SYNC_ECR_WEN,
    IC_SYNC_ESR_CRCER,
    IC_SYNC_ESR_FMER,
    IC_SYNC_ESR_STER,
    IC_SYNC_ESR_BERR,
    IC_SYNC_ESR_ACKER,
    IC_SYNC_SR_SLEEP,
    IC_SYNC_ISR_ARBLST,
    IC_SYNC_ISR_TXOK,
    IC_SYNC_ISR_RXOK,
    IC_SYNC_ISR_MSGLST,
    IC_SYNC_ISR_MSGLST_F1,
    IC_SYNC_ISR_MSGLST_TXE,
    IC_SYNC_ISR_BSOFF,
    E,
    s_axi_wdata,
    IC_REG_SRR_SRST_I_reg_1,
    IC_REG_SRR_CEN_I_reg_1,
    IC_REG_MSR_SLEEP_I_reg_1,
    IC_REG_ISR_ARBLST_I_reg_1,
    IC_REG_ISR_TXOK_I_reg_1,
    IC_REG_ISR_PEE_I_reg_1,
    IC_REG_ISR_BSFRD_I_reg_1,
    IC_REG_ISR_RXOK_I_reg_1,
    IC_REG_ISR_TSCNT_OFLW_I_reg_1,
    IC_REG_ISR_MSGLST_I_reg_1,
    IC_REG_ISR_ERROR_I_reg_1,
    IC_REG_ISR_BSOFF_I_reg_1,
    IC_REG_ISR_SLEEP_I_reg_1,
    IC_REG_ISR_WKUP_I_reg_1,
    IC_REG_ISR_RXWM_I_reg_1,
    IC_REG_ISR_TXTRS_I_reg_1,
    IC_REG_ISR_TXCRS_I_reg_1,
    IC_REG_ISR_MSGLST_I_F1_reg_1,
    IC_REG_ISR_RXWM_I_F1_reg_1,
    IC_REG_ISR_RXMNF_I_reg_1,
    IC_REG_ISR_MSGLST_I_TXE_reg_1,
    IC_REG_ISR_TXEWM_I_reg_1,
    IC_REG_ESR_CRCER_I_reg_0,
    IC_REG_ESR_FMER_I_reg_0,
    IC_REG_ESR_STER_I_reg_0,
    IC_REG_ESR_BERR_I_reg_0,
    IC_REG_ESR_ACKER_I_reg_0,
    IC_REG_ESR_F_CRCER_I_reg_0,
    IC_REG_ESR_F_FMER_I_reg_0,
    IC_REG_ESR_F_STER_I_reg_0,
    IC_REG_ESR_F_BERR_I_reg_0,
    IC_TIMESTAMP_RST_reg_1,
    IC_REG_MSR_SBR_I_reg_1,
    Bus2IP_RNW,
    Bus2IP_CS,
    \IC_IPIC_COUNTER_I_reg[1]_0 ,
    \RD_DATA_RET_reg[31] ,
    \RD_DATA_RET_reg[31]_0 ,
    \RD_DATA_RET[21]_i_5 ,
    \RD_DATA_RET[21]_i_5_0 ,
    IC_REG_TRR_I,
    \RD_DATA_RET[9]_i_6 ,
    \RD_DATA_RET[9]_i_3 ,
    \RD_DATA_RET[11]_i_5 ,
    \RD_DATA_RET[9]_i_3_0 ,
    \RD_DATA_RET[24]_i_7 ,
    \RD_DATA_RET[24]_i_7_0 ,
    \RD_DATA_RET[10]_i_3 ,
    \RD_DATA_RET[10]_i_3_0 ,
    \RD_DATA_RET[0]_i_3 ,
    \RD_DATA_RET[0]_i_3_0 ,
    IC_REG_TCR_I,
    E_INTR_reg_0,
    MSG_ON_CAN_BUS_AXI,
    \exclude_winning_or_locked_req_reg[31] ,
    CANCEL_BUFFER_OL2TL_D1,
    \FSM_sequential_imm_cs[0]_i_2 ,
    \FSM_sequential_imm_cs[0]_i_2_0 ,
    \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[1] ,
    \IC_REG_BRPR_I_reg[0]_1 ,
    \ic_sync_ecr_cdc_tig_reg[0]_0 ,
    SR,
    \IC_REG_ECR_I_reg[15]_0 ,
    \time_stamp_cnt_cdc_tig_reg[0]_0 ,
    \IC_REG_TSR_I_reg[15]_0 ,
    \RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_1 ,
    \IC_REG_F_BRPR_I_reg[15]_2 ,
    \IC_REG_F_BTR_TS1_I_reg[0]_1 ,
    \IC_REG_IETRS_I_reg[0]_0 ,
    \IC_REG_IECRS_I_reg[0]_1 ,
    \RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ,
    \IC_REG_N_BTR_TS1_I_reg[0]_1 ,
    \ic_reg_sr_tdcv_cdc_tig_reg[6]_0 );
  output \SINGLE_BIT.s_level_out_d4_reg ;
  output \SINGLE_BIT.s_level_out_d4_reg_0 ;
  output out;
  output \SINGLE_BIT.s_level_out_d4_reg_1 ;
  output \SINGLE_BIT.s_level_out_d4_reg_2 ;
  output \SINGLE_BIT.s_level_out_d4_reg_3 ;
  output \SINGLE_BIT.s_level_out_d4_reg_4 ;
  output \SINGLE_BIT.s_level_out_d4_reg_5 ;
  output \SINGLE_BIT.s_level_out_d4_reg_6 ;
  output \SINGLE_BIT.s_level_out_d4_reg_7 ;
  output \SINGLE_BIT.s_level_out_d4_reg_8 ;
  output \SINGLE_BIT.s_level_out_d4_reg_9 ;
  output \SINGLE_BIT.s_level_out_d4_reg_10 ;
  output \SINGLE_BIT.s_level_out_d4_reg_11 ;
  output \SINGLE_BIT.s_level_out_d6_reg ;
  output \SINGLE_BIT.s_level_out_d6_reg_0 ;
  output \SINGLE_BIT.s_level_out_d4_reg_12 ;
  output \SINGLE_BIT.s_level_out_d4_reg_13 ;
  output \SINGLE_BIT.s_level_out_d4_reg_14 ;
  output \SINGLE_BIT.s_level_out_d4_reg_15 ;
  output \SINGLE_BIT.s_level_out_d4_reg_16 ;
  output IC_IPSIG_WRITE_I_reg_0;
  output IC_REG_SR_SLEEP_FS3;
  output IC_REG_MSR_LBACK_I_reg_0;
  output [1:0]IC_REG_MSR_ABR_I_reg_0;
  output IC_REG_MSR_BRSD_I_reg_0;
  output IC_REG_MSR_DAR_I_reg_0;
  output IC_REG_MSR_DPEE_I_reg_0;
  output IC_REG_ISR_BSOFF_FS3;
  output IC_SYNC_ECR_WEN_FS3;
  output IC_REG_ESR_CRCER_FS3;
  output IC_REG_ESR_FMER_FS3;
  output IC_REG_ESR_STER_FS3;
  output IC_REG_ESR_BERR_FS3;
  output IC_REG_ESR_ACKER_FS3;
  output IC_REG_ESR_F_CRCER_FS3;
  output IC_REG_ESR_F_FMER_FS3;
  output IC_REG_ESR_F_STER_FS3;
  output IC_REG_ESR_F_BERR_FS3;
  output [1:0]p_14_in;
  output IC_REG_SR_SNOOP_I_reg_0;
  output IC_REG_ISR_ARBLST_FS3;
  output IC_REG_ISR_TXOK_FS3;
  output RXOK_FS3;
  output IC_SYNC_TSR_WEN_FS3;
  output IC_REG_ISR_MSGLST_FS3;
  output IC_REG_ISR_MSGLST_FS3_F1;
  output IC_REG_ISR_MSGLST_FS3_TXE;
  output IC_REG_SR_BBSY_I;
  output IC_REG_SR_ERRWRN_I;
  output ip2bus_intrevent;
  output IC_REG_SBR_I_reg_0;
  output IC_REG_MSR_SLEEP_reg_0;
  output IC_REG_SRR_SRST_I_reg_0;
  output IC_REG_SRR_CEN_I_reg_0;
  output [0:0]IC_REG_MSR_SBR_I_reg_0;
  output IC_REG_ISR_ARBLST_I_reg_0;
  output IC_REG_ISR_TXOK_I_reg_0;
  output IC_REG_ISR_PEE_I_reg_0;
  output IC_REG_ISR_BSFRD_I_reg_0;
  output IC_REG_ISR_RXOK_I_reg_0;
  output IC_REG_ISR_TSCNT_OFLW_I_reg_0;
  output IC_REG_ISR_MSGLST_I_reg_0;
  output IC_REG_ISR_ERROR_I_reg_0;
  output IC_REG_ISR_BSOFF_I_reg_0;
  output IC_REG_ISR_SLEEP_I_reg_0;
  output IC_REG_ISR_WKUP_I_reg_0;
  output IC_REG_ISR_RXWM_I_reg_0;
  output IC_REG_ISR_TXTRS_I_reg_0;
  output IC_REG_ISR_TXCRS_I_reg_0;
  output IC_REG_ISR_MSGLST_I_F1_reg_0;
  output IC_REG_ISR_RXWM_I_F1_reg_0;
  output IC_REG_ISR_RXMNF_I_reg_0;
  output IC_REG_ISR_MSGLST_I_TXE_reg_0;
  output IC_REG_ISR_TXEWM_I_reg_0;
  output IC_REG_ESR_CRCER_I;
  output IC_REG_ESR_FMER_I;
  output IC_REG_ESR_STER_I;
  output IC_REG_ESR_BERR_I;
  output IC_REG_ESR_ACKER_I;
  output IC_REG_ESR_F_CRCER_I;
  output IC_REG_ESR_F_FMER_I;
  output IC_REG_ESR_F_STER_I;
  output IC_REG_ESR_F_BERR_I;
  output IC_TIMESTAMP_RST_reg_0;
  output IC_SYNC_ECR_ACK_I_reg_0;
  output IC_REG_MSR_SLEEP_I_reg_0;
  output [7:0]\IC_REG_BRPR_I_reg[0]_0 ;
  output IC_REG_MSR_LBACK_I_reg_1;
  output IC_REG_MSR_SNOOP_I_reg_0;
  output IC_REG_MSR_BRSD_I_reg_1;
  output IC_REG_MSR_DAR_I_reg_1;
  output ACK_CR;
  output \TRR_i_reg[0] ;
  output [31:0]Q;
  output [31:0]\IC_REG_IECRS_I_reg[0]_0 ;
  output \TRR_i_reg[1] ;
  output \TRR_i_reg[2] ;
  output \TRR_i_reg[3] ;
  output \TRR_i_reg[4] ;
  output \TRR_i_reg[8] ;
  output \TRR_i_reg[9] ;
  output \TRR_i_reg[10] ;
  output \IC_REG_IECRS_I_reg[15]_0 ;
  output \IC_REG_IECRS_I_reg[14]_0 ;
  output \IC_REG_IECRS_I_reg[13]_0 ;
  output \IC_REG_IECRS_I_reg[12]_0 ;
  output \IC_REG_IECRS_I_reg[11]_0 ;
  output \IC_REG_TSR_I_reg[9]_0 ;
  output [12:0]\IC_REG_TSR_I_reg[0]_0 ;
  output \RX_FIFO_AFR.IC_REG_AFR_I_reg[24]_0 ;
  output [21:0]\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 ;
  output \IC_REG_F_BRPR_I_reg[20]_0 ;
  output [14:0]\IC_REG_F_BRPR_I_reg[15]_0 ;
  output \IC_REG_TSR_I_reg[11]_0 ;
  output \RX_FIFO_AFR.IC_REG_AFR_I_reg[9]_0 ;
  output \IC_REG_F_BRPR_I_reg[24]_0 ;
  output \IC_REG_N_BTR_TS2_I_reg[0]_0 ;
  output [6:0]\IC_REG_N_BTR_TS2_I_reg[0]_1 ;
  output \IC_REG_N_BTR_SJW_I_reg[1]_0 ;
  output [6:0]\IC_REG_N_BTR_SJW_I_reg[0]_0 ;
  output \TCR_i_reg[12] ;
  output \TCR_i_reg[13] ;
  output \TCR_i_reg[15] ;
  output \IC_REG_F_BRPR_I_reg[15]_1 ;
  output [3:0]\IC_REG_F_BTR_SJW_I_reg[0]_0 ;
  output \TCR_i_reg[31] ;
  output [10:0]\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 ;
  output MSG_DONE_FROM_BSP;
  output \num_reg_reg[2] ;
  output \num_reg_reg[3] ;
  output \RX_FIFO_AFR.IC_REG_AFR_I_reg[5]_0 ;
  output G_RST_SRST_CEN_I0;
  output IC_REG_ISR_ERROR_I10_out;
  output IC_REG_ISR_TSCNT_OFLW_I0;
  output \SINGLE_BIT.s_level_out_d4_reg_17 ;
  output [7:0]\IC_REG_IFF_EN_I_reg[0]_0 ;
  output [15:0]\IC_REG_ECR_I_reg[0]_0 ;
  output [4:0]\IC_REG_F_BTR_TS1_I_reg[0]_0 ;
  output [3:0]\IC_REG_F_BTR_TS2_I_reg[0]_0 ;
  output [7:0]\IC_REG_N_BTR_TS1_I_reg[0]_0 ;
  output [6:0]\IC_REG_SR_TDCV_I_reg[6]_0 ;
  input \SINGLE_BIT.s_level_out_d6_reg_1 ;
  input IC_SYNC_SR_RSTST;
  input s_axi_aclk;
  input IC_SYNC_SR_PEE;
  input IC_SYNC_SR_BSFR;
  input IC_SYNC_SR_LBACK;
  input IC_SYNC_SR_BIDLE;
  input IC_SYNC_SR_ERRWRN;
  input IC_SYNC_ESR_F_CRCER;
  input IC_SYNC_ESR_F_FMER;
  input IC_SYNC_ESR_F_STER;
  input IC_SYNC_ESR_F_BERR;
  input TDCV_CNT_REG_WEN;
  input IC_SYNC_TSR_WEN;
  input IC_SYNC_ECR_WEN;
  input IC_SYNC_ESR_CRCER;
  input IC_SYNC_ESR_FMER;
  input IC_SYNC_ESR_STER;
  input IC_SYNC_ESR_BERR;
  input IC_SYNC_ESR_ACKER;
  input IC_SYNC_SR_SLEEP;
  input IC_SYNC_ISR_ARBLST;
  input IC_SYNC_ISR_TXOK;
  input IC_SYNC_ISR_RXOK;
  input IC_SYNC_ISR_MSGLST;
  input IC_SYNC_ISR_MSGLST_F1;
  input IC_SYNC_ISR_MSGLST_TXE;
  input IC_SYNC_ISR_BSOFF;
  input [0:0]E;
  input [31:0]s_axi_wdata;
  input IC_REG_SRR_SRST_I_reg_1;
  input IC_REG_SRR_CEN_I_reg_1;
  input IC_REG_MSR_SLEEP_I_reg_1;
  input IC_REG_ISR_ARBLST_I_reg_1;
  input IC_REG_ISR_TXOK_I_reg_1;
  input IC_REG_ISR_PEE_I_reg_1;
  input IC_REG_ISR_BSFRD_I_reg_1;
  input IC_REG_ISR_RXOK_I_reg_1;
  input IC_REG_ISR_TSCNT_OFLW_I_reg_1;
  input IC_REG_ISR_MSGLST_I_reg_1;
  input IC_REG_ISR_ERROR_I_reg_1;
  input IC_REG_ISR_BSOFF_I_reg_1;
  input IC_REG_ISR_SLEEP_I_reg_1;
  input IC_REG_ISR_WKUP_I_reg_1;
  input IC_REG_ISR_RXWM_I_reg_1;
  input IC_REG_ISR_TXTRS_I_reg_1;
  input IC_REG_ISR_TXCRS_I_reg_1;
  input IC_REG_ISR_MSGLST_I_F1_reg_1;
  input IC_REG_ISR_RXWM_I_F1_reg_1;
  input IC_REG_ISR_RXMNF_I_reg_1;
  input IC_REG_ISR_MSGLST_I_TXE_reg_1;
  input IC_REG_ISR_TXEWM_I_reg_1;
  input IC_REG_ESR_CRCER_I_reg_0;
  input IC_REG_ESR_FMER_I_reg_0;
  input IC_REG_ESR_STER_I_reg_0;
  input IC_REG_ESR_BERR_I_reg_0;
  input IC_REG_ESR_ACKER_I_reg_0;
  input IC_REG_ESR_F_CRCER_I_reg_0;
  input IC_REG_ESR_F_FMER_I_reg_0;
  input IC_REG_ESR_F_STER_I_reg_0;
  input IC_REG_ESR_F_BERR_I_reg_0;
  input IC_TIMESTAMP_RST_reg_1;
  input IC_REG_MSR_SBR_I_reg_1;
  input Bus2IP_RNW;
  input Bus2IP_CS;
  input \IC_IPIC_COUNTER_I_reg[1]_0 ;
  input \RD_DATA_RET_reg[31] ;
  input \RD_DATA_RET_reg[31]_0 ;
  input \RD_DATA_RET[21]_i_5 ;
  input \RD_DATA_RET[21]_i_5_0 ;
  input [8:0]IC_REG_TRR_I;
  input \RD_DATA_RET[9]_i_6 ;
  input \RD_DATA_RET[9]_i_3 ;
  input \RD_DATA_RET[11]_i_5 ;
  input \RD_DATA_RET[9]_i_3_0 ;
  input \RD_DATA_RET[24]_i_7 ;
  input \RD_DATA_RET[24]_i_7_0 ;
  input \RD_DATA_RET[10]_i_3 ;
  input \RD_DATA_RET[10]_i_3_0 ;
  input \RD_DATA_RET[0]_i_3 ;
  input \RD_DATA_RET[0]_i_3_0 ;
  input [3:0]IC_REG_TCR_I;
  input E_INTR_reg_0;
  input MSG_ON_CAN_BUS_AXI;
  input \exclude_winning_or_locked_req_reg[31] ;
  input CANCEL_BUFFER_OL2TL_D1;
  input [4:0]\FSM_sequential_imm_cs[0]_i_2 ;
  input \FSM_sequential_imm_cs[0]_i_2_0 ;
  input [0:0]\MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[1] ;
  input [0:0]\IC_REG_BRPR_I_reg[0]_1 ;
  input [15:0]\ic_sync_ecr_cdc_tig_reg[0]_0 ;
  input [0:0]SR;
  input [0:0]\IC_REG_ECR_I_reg[15]_0 ;
  input [15:0]\time_stamp_cnt_cdc_tig_reg[0]_0 ;
  input [0:0]\IC_REG_TSR_I_reg[15]_0 ;
  input [0:0]\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_1 ;
  input [0:0]\IC_REG_F_BRPR_I_reg[15]_2 ;
  input [0:0]\IC_REG_F_BTR_TS1_I_reg[0]_1 ;
  input [0:0]\IC_REG_IETRS_I_reg[0]_0 ;
  input [0:0]\IC_REG_IECRS_I_reg[0]_1 ;
  input [0:0]\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ;
  input [0:0]\IC_REG_N_BTR_TS1_I_reg[0]_1 ;
  input [6:0]\ic_reg_sr_tdcv_cdc_tig_reg[6]_0 ;

  wire ACKER_2S_CDC_TO_n_1;
  wire ACK_CR;
  wire BSOFF_2S_CDC_TO_n_1;
  wire Bus2IP_CS;
  wire Bus2IP_RNW;
  wire CANCEL_BUFFER_OL2TL_D1;
  wire [0:0]E;
  wire ECRWEN_2S_CDC_TO_n_1;
  wire E_INTR0;
  wire E_INTR_i_10_n_0;
  wire E_INTR_i_11_n_0;
  wire E_INTR_i_2_n_0;
  wire E_INTR_i_3_n_0;
  wire E_INTR_i_4_n_0;
  wire E_INTR_i_5_n_0;
  wire E_INTR_i_6_n_0;
  wire E_INTR_i_7_n_0;
  wire E_INTR_i_8_n_0;
  wire E_INTR_i_9_n_0;
  wire E_INTR_reg_0;
  wire \FSM_sequential_imm_cs[0]_i_13_n_0 ;
  wire \FSM_sequential_imm_cs[0]_i_14_n_0 ;
  wire \FSM_sequential_imm_cs[0]_i_15_n_0 ;
  wire \FSM_sequential_imm_cs[0]_i_16_n_0 ;
  wire \FSM_sequential_imm_cs[0]_i_17_n_0 ;
  wire [4:0]\FSM_sequential_imm_cs[0]_i_2 ;
  wire \FSM_sequential_imm_cs[0]_i_2_0 ;
  wire \FSM_sequential_imm_cs[0]_i_8_n_0 ;
  wire \FSM_sequential_imm_cs[0]_i_9_n_0 ;
  wire \FSM_sequential_imm_cs_reg[0]_i_11_n_0 ;
  wire \FSM_sequential_imm_cs_reg[0]_i_12_n_0 ;
  wire F_BERR_2S_CDC_TO_n_1;
  wire F_CRCER_2S_CDC_TO_n_1;
  wire F_FMER_2S_CDC_TO_n_1;
  wire G_RST_SRST_CEN_I0;
  wire IC_INTR_CLR_FS;
  wire IC_INTR_CLR_FS_i_10_n_0;
  wire IC_INTR_CLR_FS_i_11_n_0;
  wire IC_INTR_CLR_FS_i_12_n_0;
  wire IC_INTR_CLR_FS_i_2_n_0;
  wire IC_INTR_CLR_FS_i_3_n_0;
  wire IC_INTR_CLR_FS_i_4_n_0;
  wire IC_INTR_CLR_FS_i_5_n_0;
  wire IC_INTR_CLR_FS_i_6_n_0;
  wire IC_INTR_CLR_FS_i_7_n_0;
  wire IC_INTR_CLR_FS_i_8_n_0;
  wire IC_INTR_CLR_FS_i_9_n_0;
  wire IC_INTR_CLR_IC;
  wire [1:0]IC_IPIC_COUNTER_I;
  wire \IC_IPIC_COUNTER_I[0]_i_1_n_0 ;
  wire \IC_IPIC_COUNTER_I[1]_i_1_n_0 ;
  wire \IC_IPIC_COUNTER_I_reg[1]_0 ;
  wire IC_IPSIG_WRITE_I0;
  wire IC_IPSIG_WRITE_I_reg_0;
  wire [0:24]IC_REG_AFR;
  wire [7:0]\IC_REG_BRPR_I_reg[0]_0 ;
  wire [0:0]\IC_REG_BRPR_I_reg[0]_1 ;
  wire [15:0]\IC_REG_ECR_I_reg[0]_0 ;
  wire [0:0]\IC_REG_ECR_I_reg[15]_0 ;
  wire IC_REG_ESR_ACKER_FS3;
  wire IC_REG_ESR_ACKER_I;
  wire IC_REG_ESR_ACKER_I_reg_0;
  wire IC_REG_ESR_BERR_FS3;
  wire IC_REG_ESR_BERR_I;
  wire IC_REG_ESR_BERR_I_reg_0;
  wire IC_REG_ESR_CRCER_FS3;
  wire IC_REG_ESR_CRCER_I;
  wire IC_REG_ESR_CRCER_I_reg_0;
  wire IC_REG_ESR_FMER_FS3;
  wire IC_REG_ESR_FMER_I;
  wire IC_REG_ESR_FMER_I_reg_0;
  wire IC_REG_ESR_F_BERR_FS3;
  wire IC_REG_ESR_F_BERR_I;
  wire IC_REG_ESR_F_BERR_I_reg_0;
  wire IC_REG_ESR_F_CRCER_FS3;
  wire IC_REG_ESR_F_CRCER_I;
  wire IC_REG_ESR_F_CRCER_I_reg_0;
  wire IC_REG_ESR_F_FMER_FS3;
  wire IC_REG_ESR_F_FMER_I;
  wire IC_REG_ESR_F_FMER_I_reg_0;
  wire IC_REG_ESR_F_STER_FS3;
  wire IC_REG_ESR_F_STER_I;
  wire IC_REG_ESR_F_STER_I_reg_0;
  wire IC_REG_ESR_STER_FS3;
  wire IC_REG_ESR_STER_I;
  wire IC_REG_ESR_STER_I_reg_0;
  wire [14:0]\IC_REG_F_BRPR_I_reg[15]_0 ;
  wire \IC_REG_F_BRPR_I_reg[15]_1 ;
  wire [0:0]\IC_REG_F_BRPR_I_reg[15]_2 ;
  wire \IC_REG_F_BRPR_I_reg[20]_0 ;
  wire \IC_REG_F_BRPR_I_reg[24]_0 ;
  wire [3:0]\IC_REG_F_BTR_SJW_I_reg[0]_0 ;
  wire [4:0]\IC_REG_F_BTR_TS1_I_reg[0]_0 ;
  wire [0:0]\IC_REG_F_BTR_TS1_I_reg[0]_1 ;
  wire [3:0]\IC_REG_F_BTR_TS2_I_reg[0]_0 ;
  wire [31:0]\IC_REG_IECRS_I_reg[0]_0 ;
  wire [0:0]\IC_REG_IECRS_I_reg[0]_1 ;
  wire \IC_REG_IECRS_I_reg[11]_0 ;
  wire \IC_REG_IECRS_I_reg[12]_0 ;
  wire \IC_REG_IECRS_I_reg[13]_0 ;
  wire \IC_REG_IECRS_I_reg[14]_0 ;
  wire \IC_REG_IECRS_I_reg[15]_0 ;
  wire [0:0]\IC_REG_IETRS_I_reg[0]_0 ;
  wire [7:0]\IC_REG_IFF_EN_I_reg[0]_0 ;
  wire IC_REG_ISR_ARBLST_FS3;
  wire IC_REG_ISR_ARBLST_I_reg_0;
  wire IC_REG_ISR_ARBLST_I_reg_1;
  wire IC_REG_ISR_BSFRD_I_reg_0;
  wire IC_REG_ISR_BSFRD_I_reg_1;
  wire IC_REG_ISR_BSOFF_FS3;
  wire IC_REG_ISR_BSOFF_I_reg_0;
  wire IC_REG_ISR_BSOFF_I_reg_1;
  wire IC_REG_ISR_ERROR_I10_out;
  wire IC_REG_ISR_ERROR_I_reg_0;
  wire IC_REG_ISR_ERROR_I_reg_1;
  wire IC_REG_ISR_MSGLST_FS3;
  wire IC_REG_ISR_MSGLST_FS3_F1;
  wire IC_REG_ISR_MSGLST_FS3_TXE;
  wire IC_REG_ISR_MSGLST_I_F1_reg_0;
  wire IC_REG_ISR_MSGLST_I_F1_reg_1;
  wire IC_REG_ISR_MSGLST_I_TXE_reg_0;
  wire IC_REG_ISR_MSGLST_I_TXE_reg_1;
  wire IC_REG_ISR_MSGLST_I_reg_0;
  wire IC_REG_ISR_MSGLST_I_reg_1;
  wire IC_REG_ISR_PEE_I_reg_0;
  wire IC_REG_ISR_PEE_I_reg_1;
  wire IC_REG_ISR_RXMNF_I_reg_0;
  wire IC_REG_ISR_RXMNF_I_reg_1;
  wire IC_REG_ISR_RXOK_I_reg_0;
  wire IC_REG_ISR_RXOK_I_reg_1;
  wire IC_REG_ISR_RXWM_I_F1_reg_0;
  wire IC_REG_ISR_RXWM_I_F1_reg_1;
  wire IC_REG_ISR_RXWM_I_reg_0;
  wire IC_REG_ISR_RXWM_I_reg_1;
  wire IC_REG_ISR_SLEEP_I_reg_0;
  wire IC_REG_ISR_SLEEP_I_reg_1;
  wire IC_REG_ISR_TSCNT_OFLW_I0;
  wire IC_REG_ISR_TSCNT_OFLW_I2;
  wire IC_REG_ISR_TSCNT_OFLW_I_i_3_n_0;
  wire IC_REG_ISR_TSCNT_OFLW_I_i_4_n_0;
  wire IC_REG_ISR_TSCNT_OFLW_I_i_6_n_0;
  wire IC_REG_ISR_TSCNT_OFLW_I_i_7_n_0;
  wire IC_REG_ISR_TSCNT_OFLW_I_i_8_n_0;
  wire IC_REG_ISR_TSCNT_OFLW_I_i_9_n_0;
  wire IC_REG_ISR_TSCNT_OFLW_I_reg_0;
  wire IC_REG_ISR_TSCNT_OFLW_I_reg_1;
  wire IC_REG_ISR_TXCRS_I_reg_0;
  wire IC_REG_ISR_TXCRS_I_reg_1;
  wire IC_REG_ISR_TXEWM_I_reg_0;
  wire IC_REG_ISR_TXEWM_I_reg_1;
  wire IC_REG_ISR_TXOK_FS3;
  wire IC_REG_ISR_TXOK_I_reg_0;
  wire IC_REG_ISR_TXOK_I_reg_1;
  wire IC_REG_ISR_TXTRS_I_reg_0;
  wire IC_REG_ISR_TXTRS_I_reg_1;
  wire IC_REG_ISR_WKUP_I_reg_0;
  wire IC_REG_ISR_WKUP_I_reg_1;
  wire [1:0]IC_REG_MSR_ABR_I_reg_0;
  wire IC_REG_MSR_BRSD_I_reg_0;
  wire IC_REG_MSR_BRSD_I_reg_1;
  wire IC_REG_MSR_DAR_I_reg_0;
  wire IC_REG_MSR_DAR_I_reg_1;
  wire IC_REG_MSR_DPEE_I_reg_0;
  wire IC_REG_MSR_LBACK_I_reg_0;
  wire IC_REG_MSR_LBACK_I_reg_1;
  wire [0:0]IC_REG_MSR_SBR_I_reg_0;
  wire IC_REG_MSR_SBR_I_reg_1;
  wire IC_REG_MSR_SLEEP0;
  wire IC_REG_MSR_SLEEP_I_reg_0;
  wire IC_REG_MSR_SLEEP_I_reg_1;
  wire IC_REG_MSR_SLEEP_reg_0;
  wire IC_REG_MSR_SNOOP_I_reg_0;
  wire [6:0]\IC_REG_N_BTR_SJW_I_reg[0]_0 ;
  wire \IC_REG_N_BTR_SJW_I_reg[1]_0 ;
  wire [7:0]\IC_REG_N_BTR_TS1_I_reg[0]_0 ;
  wire [0:0]\IC_REG_N_BTR_TS1_I_reg[0]_1 ;
  wire \IC_REG_N_BTR_TS2_I_reg[0]_0 ;
  wire [6:0]\IC_REG_N_BTR_TS2_I_reg[0]_1 ;
  wire IC_REG_SBR_I0;
  wire IC_REG_SBR_I_reg_0;
  wire IC_REG_SRR_CEN_I_reg_0;
  wire IC_REG_SRR_CEN_I_reg_1;
  wire IC_REG_SRR_SRST_I_reg_0;
  wire IC_REG_SRR_SRST_I_reg_1;
  wire IC_REG_SR_BBSY_I;
  wire IC_REG_SR_BBSY_I0;
  wire IC_REG_SR_BIDLE_I;
  wire IC_REG_SR_BIDLE_I0;
  wire IC_REG_SR_ERRWRN_FS2;
  wire IC_REG_SR_ERRWRN_I;
  wire IC_REG_SR_ERRWRN_I0;
  wire [1:0]IC_REG_SR_ESTAT_FS2;
  wire [1:0]IC_REG_SR_ESTAT_I;
  wire IC_REG_SR_LBACK_FS2;
  wire IC_REG_SR_LBACK_I;
  wire IC_REG_SR_LBACK_I0;
  wire IC_REG_SR_NORMAL_I;
  wire IC_REG_SR_NORMAL_I0;
  wire IC_REG_SR_RSTST_FS2;
  wire IC_REG_SR_RSTST_I;
  wire IC_REG_SR_SLEEP_FS3;
  wire IC_REG_SR_SLEEP_I;
  wire IC_REG_SR_SLEEP_I0;
  wire IC_REG_SR_SNOOP_I0;
  wire IC_REG_SR_SNOOP_I_reg_0;
  wire IC_REG_SR_TDCV_I0;
  wire [6:0]\IC_REG_SR_TDCV_I_reg[6]_0 ;
  wire [3:0]IC_REG_TCR_I;
  wire [8:0]IC_REG_TRR_I;
  wire [0:15]IC_REG_TSR_I_D;
  wire [12:0]\IC_REG_TSR_I_reg[0]_0 ;
  wire \IC_REG_TSR_I_reg[11]_0 ;
  wire [0:0]\IC_REG_TSR_I_reg[15]_0 ;
  wire \IC_REG_TSR_I_reg[9]_0 ;
  wire IC_SYNC_ECR_ACK_I_reg_0;
  wire IC_SYNC_ECR_WEN;
  wire IC_SYNC_ECR_WEN_FS3;
  wire IC_SYNC_ESR_ACKER;
  wire IC_SYNC_ESR_BERR;
  wire IC_SYNC_ESR_CRCER;
  wire IC_SYNC_ESR_FMER;
  wire IC_SYNC_ESR_F_BERR;
  wire IC_SYNC_ESR_F_CRCER;
  wire IC_SYNC_ESR_F_FMER;
  wire IC_SYNC_ESR_F_STER;
  wire IC_SYNC_ESR_STER;
  wire IC_SYNC_ISR_ARBLST;
  wire IC_SYNC_ISR_BSOFF;
  wire IC_SYNC_ISR_MSGLST;
  wire IC_SYNC_ISR_MSGLST_F1;
  wire IC_SYNC_ISR_MSGLST_TXE;
  wire IC_SYNC_ISR_RXOK;
  wire IC_SYNC_ISR_TXOK;
  wire IC_SYNC_SR_BIDLE;
  wire IC_SYNC_SR_BSFR;
  wire IC_SYNC_SR_ERRWRN;
  wire IC_SYNC_SR_LBACK;
  wire IC_SYNC_SR_PEE;
  wire IC_SYNC_SR_RSTST;
  wire IC_SYNC_SR_SLEEP;
  wire IC_SYNC_TSR_WEN;
  wire IC_SYNC_TSR_WEN_FS3;
  wire IC_TIMESTAMP_RST_reg_0;
  wire IC_TIMESTAMP_RST_reg_1;
  wire MSG_DONE_FROM_BSP;
  wire MSG_ON_CAN_BUS_AXI;
  wire [0:0]\MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[1] ;
  wire [31:0]Q;
  wire \RD_DATA_RET[0]_i_3 ;
  wire \RD_DATA_RET[0]_i_3_0 ;
  wire \RD_DATA_RET[10]_i_3 ;
  wire \RD_DATA_RET[10]_i_3_0 ;
  wire \RD_DATA_RET[11]_i_5 ;
  wire \RD_DATA_RET[21]_i_10_n_0 ;
  wire \RD_DATA_RET[21]_i_5 ;
  wire \RD_DATA_RET[21]_i_5_0 ;
  wire \RD_DATA_RET[21]_i_9_n_0 ;
  wire \RD_DATA_RET[22]_i_8_n_0 ;
  wire \RD_DATA_RET[22]_i_9_n_0 ;
  wire \RD_DATA_RET[23]_i_8_n_0 ;
  wire \RD_DATA_RET[23]_i_9_n_0 ;
  wire \RD_DATA_RET[24]_i_7 ;
  wire \RD_DATA_RET[24]_i_7_0 ;
  wire \RD_DATA_RET[27]_i_12_n_0 ;
  wire \RD_DATA_RET[27]_i_13_n_0 ;
  wire \RD_DATA_RET[28]_i_10_n_0 ;
  wire \RD_DATA_RET[28]_i_11_n_0 ;
  wire \RD_DATA_RET[29]_i_10_n_0 ;
  wire \RD_DATA_RET[29]_i_11_n_0 ;
  wire \RD_DATA_RET[30]_i_11_n_0 ;
  wire \RD_DATA_RET[30]_i_12_n_0 ;
  wire \RD_DATA_RET[31]_i_10_n_0 ;
  wire \RD_DATA_RET[31]_i_11_n_0 ;
  wire \RD_DATA_RET[9]_i_3 ;
  wire \RD_DATA_RET[9]_i_3_0 ;
  wire \RD_DATA_RET[9]_i_6 ;
  wire \RD_DATA_RET_reg[31] ;
  wire \RD_DATA_RET_reg[31]_0 ;
  wire RXOK_FS3;
  wire [0:0]\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ;
  wire [21:0]\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 ;
  wire \RX_FIFO_AFR.IC_REG_AFR_I_reg[24]_0 ;
  wire \RX_FIFO_AFR.IC_REG_AFR_I_reg[5]_0 ;
  wire \RX_FIFO_AFR.IC_REG_AFR_I_reg[9]_0 ;
  wire [10:0]\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 ;
  wire [0:0]\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_1 ;
  wire \RX_FIFO_IERBUF.IC_REG_IER_I_reg_n_0_[23] ;
  wire \RX_FIFO_IERBUF.IC_REG_IER_I_reg_n_0_[27] ;
  wire \RX_FIFO_IERBUF.IC_REG_IER_I_reg_n_0_[31] ;
  wire \SINGLE_BIT.s_level_out_d4_reg ;
  wire \SINGLE_BIT.s_level_out_d4_reg_0 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_1 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_10 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_11 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_12 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_13 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_14 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_15 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_16 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_17 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_2 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_3 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_4 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_5 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_6 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_7 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_8 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_9 ;
  wire \SINGLE_BIT.s_level_out_d6_reg ;
  wire \SINGLE_BIT.s_level_out_d6_reg_0 ;
  wire \SINGLE_BIT.s_level_out_d6_reg_1 ;
  wire [0:0]SR;
  wire \TCR_i_reg[12] ;
  wire \TCR_i_reg[13] ;
  wire \TCR_i_reg[15] ;
  wire \TCR_i_reg[31] ;
  wire TDCV_CNT_REG_WEN;
  wire TDCV_CNT_REG_WEN_FS2;
  wire TDCV_CNT_REG_WEN_FS3;
  wire \TRR_i_reg[0] ;
  wire \TRR_i_reg[10] ;
  wire \TRR_i_reg[1] ;
  wire \TRR_i_reg[2] ;
  wire \TRR_i_reg[3] ;
  wire \TRR_i_reg[4] ;
  wire \TRR_i_reg[8] ;
  wire \TRR_i_reg[9] ;
  wire \exclude_winning_or_locked_req_reg[31] ;
  wire [6:0]ic_reg_sr_tdcv_cdc_tig;
  wire [6:0]\ic_reg_sr_tdcv_cdc_tig_reg[6]_0 ;
  wire [0:15]ic_sync_ecr_cdc_tig;
  wire [15:0]\ic_sync_ecr_cdc_tig_reg[0]_0 ;
  wire ip2bus_intrevent;
  wire \num_reg_reg[2] ;
  wire \num_reg_reg[3] ;
  wire out;
  wire p_10_in__0;
  wire [22:16]p_11_in;
  wire [1:0]p_14_in;
  wire p_16_in;
  wire p_17_in;
  wire p_18_in;
  wire [1:0]p_2_out;
  wire [2:2]p_3_in;
  wire p_9_in;
  wire s_axi_aclk;
  wire [31:0]s_axi_wdata;
  wire [0:15]time_stamp_cnt_cdc_tig;
  wire [15:0]\time_stamp_cnt_cdc_tig_reg[0]_0 ;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_10 ACKER_2S_CDC_TO
       (.IC_REG_ESR_ACKER_FS3(IC_REG_ESR_ACKER_FS3),
        .IC_REG_ESR_BERR_FS3(IC_REG_ESR_BERR_FS3),
        .IC_REG_ISR_ERROR_I_i_2(\SINGLE_BIT.s_level_out_d4_reg_9 ),
        .IC_REG_ISR_ERROR_I_i_2_0(F_FMER_2S_CDC_TO_n_1),
        .IC_REG_ISR_ERROR_I_i_2_1(F_CRCER_2S_CDC_TO_n_1),
        .IC_SYNC_ESR_ACKER(IC_SYNC_ESR_ACKER),
        .\SINGLE_BIT.s_level_out_d4_reg_0 (ACKER_2S_CDC_TO_n_1),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .out(\SINGLE_BIT.s_level_out_d4_reg_10 ),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized7 ARBLST_2S_CDC_TO
       (.IC_SYNC_ISR_ARBLST(IC_SYNC_ISR_ARBLST),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg ),
        .\SINGLE_BIT.s_level_out_d6_reg_1 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_11 BERR_2S_CDC_TO
       (.IC_SYNC_ESR_BERR(IC_SYNC_ESR_BERR),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .out(\SINGLE_BIT.s_level_out_d4_reg_9 ),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_12 BIDLE_2S_CDC_TO
       (.IC_REG_SR_BBSY_I0(IC_REG_SR_BBSY_I0),
        .IC_REG_SR_BIDLE_I0(IC_REG_SR_BIDLE_I0),
        .IC_SYNC_SR_BIDLE(IC_SYNC_SR_BIDLE),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .out(IC_REG_SR_RSTST_FS2),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_13 BSFR_2S_CDC_TO
       (.IC_SYNC_SR_BSFR(IC_SYNC_SR_BSFR),
        .\SINGLE_BIT.s_level_out_d4_reg_0 (\SINGLE_BIT.s_level_out_d4_reg_0 ),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_14 BSOFF_2S_CDC_TO
       (.D(p_2_out[0]),
        .E_RST_I_reg(BSOFF_2S_CDC_TO_n_1),
        .IC_REG_ISR_BSOFF_FS3(IC_REG_ISR_BSOFF_FS3),
        .IC_REG_MSR_SBR_I_reg(IC_REG_MSR_SBR_I_reg_1),
        .IC_REG_SR_ERRWRN_I0(IC_REG_SR_ERRWRN_I0),
        .IC_REG_SR_ERRWRN_I_reg(IC_REG_SR_ERRWRN_FS2),
        .IC_REG_SR_ERRWRN_I_reg_0(IC_REG_SR_RSTST_FS2),
        .\IC_REG_SR_ESTAT_I_reg[0] (IC_REG_SR_ESTAT_FS2[0]),
        .IC_SYNC_ISR_BSOFF(IC_SYNC_ISR_BSOFF),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .out(\SINGLE_BIT.s_level_out_d4_reg_16 ),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_15 CRCER_2S_CDC_TO
       (.IC_SYNC_ESR_CRCER(IC_SYNC_ESR_CRCER),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .out(\SINGLE_BIT.s_level_out_d4_reg_6 ),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_16 ECRWEN_2S_CDC_TO
       (.IC_SYNC_ECR_ACK_I_reg(ECRWEN_2S_CDC_TO_n_1),
        .IC_SYNC_ECR_ACK_I_reg_0(IC_SYNC_ECR_ACK_I_reg_0),
        .IC_SYNC_ECR_ACK_I_reg_1(IC_REG_SRR_CEN_I_reg_0),
        .IC_SYNC_ECR_WEN(IC_SYNC_ECR_WEN),
        .IC_SYNC_ECR_WEN_FS3(IC_SYNC_ECR_WEN_FS3),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .out(\SINGLE_BIT.s_level_out_d4_reg_5 ),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_17 ERRWRN_2S_CDC_TO
       (.IC_SYNC_SR_ERRWRN(IC_SYNC_SR_ERRWRN),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .out(IC_REG_SR_ERRWRN_FS2),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized6 ESTAT_2S_CDC_TO
       (.D(IC_REG_SR_ESTAT_FS2),
        .\MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[1]_0 (\MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[1] ),
        .\MULTI_BIT.s_level_out_bus_d4_reg[0]_0 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .s_axi_aclk(s_axi_aclk));
  LUT4 #(
    .INIT(16'hFFFE)) 
    E_INTR_i_1
       (.I0(E_INTR_i_2_n_0),
        .I1(E_INTR_i_3_n_0),
        .I2(E_INTR_i_4_n_0),
        .I3(E_INTR_i_5_n_0),
        .O(E_INTR0));
  LUT4 #(
    .INIT(16'hF888)) 
    E_INTR_i_10
       (.I0(IC_REG_ISR_ARBLST_I_reg_0),
        .I1(\RX_FIFO_IERBUF.IC_REG_IER_I_reg_n_0_[31] ),
        .I2(IC_REG_ISR_TXEWM_I_reg_0),
        .I3(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [10]),
        .O(E_INTR_i_10_n_0));
  LUT4 #(
    .INIT(16'hF888)) 
    E_INTR_i_11
       (.I0(IC_REG_ISR_RXWM_I_F1_reg_0),
        .I1(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [7]),
        .I2(IC_REG_ISR_MSGLST_I_F1_reg_0),
        .I3(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [6]),
        .O(E_INTR_i_11_n_0));
  LUT6 #(
    .INIT(64'h0FFF088808880888)) 
    E_INTR_i_2
       (.I0(p_18_in),
        .I1(IC_REG_ISR_TXOK_I_reg_0),
        .I2(IC_INTR_CLR_FS),
        .I3(E_INTR_reg_0),
        .I4(\RX_FIFO_IERBUF.IC_REG_IER_I_reg_n_0_[27] ),
        .I5(IC_REG_ISR_RXOK_I_reg_0),
        .O(E_INTR_i_2_n_0));
  LUT6 #(
    .INIT(64'h0FFF0EEE0EEE0EEE)) 
    E_INTR_i_3
       (.I0(E_INTR_i_6_n_0),
        .I1(E_INTR_i_7_n_0),
        .I2(IC_INTR_CLR_FS),
        .I3(E_INTR_reg_0),
        .I4(p_17_in),
        .I5(IC_REG_ISR_PEE_I_reg_0),
        .O(E_INTR_i_3_n_0));
  LUT6 #(
    .INIT(64'h0FFF088808880888)) 
    E_INTR_i_4
       (.I0(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [1]),
        .I1(IC_REG_ISR_MSGLST_I_reg_0),
        .I2(IC_INTR_CLR_FS),
        .I3(E_INTR_reg_0),
        .I4(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [0]),
        .I5(IC_REG_ISR_TSCNT_OFLW_I_reg_0),
        .O(E_INTR_i_4_n_0));
  LUT6 #(
    .INIT(64'h0FFF088808880888)) 
    E_INTR_i_5
       (.I0(p_16_in),
        .I1(IC_REG_ISR_BSFRD_I_reg_0),
        .I2(IC_INTR_CLR_FS),
        .I3(E_INTR_reg_0),
        .I4(\RX_FIFO_IERBUF.IC_REG_IER_I_reg_n_0_[23] ),
        .I5(IC_REG_ISR_ERROR_I_reg_0),
        .O(E_INTR_i_5_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    E_INTR_i_6
       (.I0(E_INTR_i_8_n_0),
        .I1(IC_REG_ISR_SLEEP_I_reg_0),
        .I2(p_9_in),
        .I3(IC_REG_ISR_BSOFF_I_reg_0),
        .I4(p_10_in__0),
        .I5(E_INTR_i_9_n_0),
        .O(E_INTR_i_6_n_0));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    E_INTR_i_7
       (.I0(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [8]),
        .I1(IC_REG_ISR_RXMNF_I_reg_0),
        .I2(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [9]),
        .I3(IC_REG_ISR_MSGLST_I_TXE_reg_0),
        .I4(E_INTR_i_10_n_0),
        .O(E_INTR_i_7_n_0));
  LUT4 #(
    .INIT(16'hF888)) 
    E_INTR_i_8
       (.I0(IC_REG_ISR_RXWM_I_reg_0),
        .I1(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [3]),
        .I2(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [2]),
        .I3(IC_REG_ISR_WKUP_I_reg_0),
        .O(E_INTR_i_8_n_0));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    E_INTR_i_9
       (.I0(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [4]),
        .I1(IC_REG_ISR_TXTRS_I_reg_0),
        .I2(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [5]),
        .I3(IC_REG_ISR_TXCRS_I_reg_0),
        .I4(E_INTR_i_11_n_0),
        .O(E_INTR_i_9_n_0));
  FDRE E_INTR_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(E_INTR0),
        .Q(ip2bus_intrevent),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_18 FMER_2S_CDC_TO
       (.IC_REG_ESR_FMER_FS3(IC_REG_ESR_FMER_FS3),
        .IC_REG_ESR_STER_FS3(IC_REG_ESR_STER_FS3),
        .IC_REG_ISR_ERROR_I10_out(IC_REG_ISR_ERROR_I10_out),
        .IC_REG_ISR_ERROR_I_reg(\SINGLE_BIT.s_level_out_d4_reg_8 ),
        .IC_REG_ISR_ERROR_I_reg_0(F_BERR_2S_CDC_TO_n_1),
        .IC_REG_ISR_ERROR_I_reg_1(ACKER_2S_CDC_TO_n_1),
        .IC_SYNC_ESR_FMER(IC_SYNC_ESR_FMER),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .out(\SINGLE_BIT.s_level_out_d4_reg_7 ),
        .s_axi_aclk(s_axi_aclk));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \FSM_sequential_imm_cs[0]_i_13 
       (.I0(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [20]),
        .I1(IC_REG_AFR[0]),
        .I2(\FSM_sequential_imm_cs[0]_i_2 [0]),
        .I3(\FSM_sequential_imm_cs[0]_i_2 [1]),
        .I4(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [19]),
        .I5(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [21]),
        .O(\FSM_sequential_imm_cs[0]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \FSM_sequential_imm_cs[0]_i_14 
       (.I0(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [1]),
        .I1(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [3]),
        .I2(\FSM_sequential_imm_cs[0]_i_2 [0]),
        .I3(\FSM_sequential_imm_cs[0]_i_2 [1]),
        .I4(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [0]),
        .I5(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [2]),
        .O(\FSM_sequential_imm_cs[0]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \FSM_sequential_imm_cs[0]_i_15 
       (.I0(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [5]),
        .I1(IC_REG_AFR[24]),
        .I2(\FSM_sequential_imm_cs[0]_i_2 [0]),
        .I3(\FSM_sequential_imm_cs[0]_i_2 [1]),
        .I4(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [4]),
        .I5(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [6]),
        .O(\FSM_sequential_imm_cs[0]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \FSM_sequential_imm_cs[0]_i_16 
       (.I0(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [11]),
        .I1(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [13]),
        .I2(\FSM_sequential_imm_cs[0]_i_2 [0]),
        .I3(\FSM_sequential_imm_cs[0]_i_2 [1]),
        .I4(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [10]),
        .I5(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [12]),
        .O(\FSM_sequential_imm_cs[0]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \FSM_sequential_imm_cs[0]_i_17 
       (.I0(IC_REG_AFR[10]),
        .I1(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [14]),
        .I2(\FSM_sequential_imm_cs[0]_i_2 [0]),
        .I3(\FSM_sequential_imm_cs[0]_i_2 [1]),
        .I4(IC_REG_AFR[11]),
        .I5(IC_REG_AFR[9]),
        .O(\FSM_sequential_imm_cs[0]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hF000A0A0C0C00000)) 
    \FSM_sequential_imm_cs[0]_i_6 
       (.I0(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [17]),
        .I1(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [16]),
        .I2(\FSM_sequential_imm_cs[0]_i_2_0 ),
        .I3(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [18]),
        .I4(\FSM_sequential_imm_cs[0]_i_2 [0]),
        .I5(\FSM_sequential_imm_cs[0]_i_2 [1]),
        .O(\RX_FIFO_AFR.IC_REG_AFR_I_reg[5]_0 ));
  LUT6 #(
    .INIT(64'hF0CC00AA00CC00AA)) 
    \FSM_sequential_imm_cs[0]_i_7 
       (.I0(\FSM_sequential_imm_cs_reg[0]_i_11_n_0 ),
        .I1(\FSM_sequential_imm_cs_reg[0]_i_12_n_0 ),
        .I2(\FSM_sequential_imm_cs[0]_i_13_n_0 ),
        .I3(\FSM_sequential_imm_cs[0]_i_2 [3]),
        .I4(\FSM_sequential_imm_cs[0]_i_2 [4]),
        .I5(\FSM_sequential_imm_cs[0]_i_2 [2]),
        .O(\num_reg_reg[3] ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \FSM_sequential_imm_cs[0]_i_8 
       (.I0(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [8]),
        .I1(IC_REG_AFR[20]),
        .I2(\FSM_sequential_imm_cs[0]_i_2 [0]),
        .I3(\FSM_sequential_imm_cs[0]_i_2 [1]),
        .I4(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [7]),
        .I5(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [9]),
        .O(\FSM_sequential_imm_cs[0]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \FSM_sequential_imm_cs[0]_i_9 
       (.I0(IC_REG_AFR[18]),
        .I1(IC_REG_AFR[16]),
        .I2(\FSM_sequential_imm_cs[0]_i_2 [0]),
        .I3(\FSM_sequential_imm_cs[0]_i_2 [1]),
        .I4(IC_REG_AFR[19]),
        .I5(IC_REG_AFR[17]),
        .O(\FSM_sequential_imm_cs[0]_i_9_n_0 ));
  MUXF7 \FSM_sequential_imm_cs_reg[0]_i_11 
       (.I0(\FSM_sequential_imm_cs[0]_i_14_n_0 ),
        .I1(\FSM_sequential_imm_cs[0]_i_15_n_0 ),
        .O(\FSM_sequential_imm_cs_reg[0]_i_11_n_0 ),
        .S(\FSM_sequential_imm_cs[0]_i_2 [2]));
  MUXF7 \FSM_sequential_imm_cs_reg[0]_i_12 
       (.I0(\FSM_sequential_imm_cs[0]_i_16_n_0 ),
        .I1(\FSM_sequential_imm_cs[0]_i_17_n_0 ),
        .O(\FSM_sequential_imm_cs_reg[0]_i_12_n_0 ),
        .S(\FSM_sequential_imm_cs[0]_i_2 [2]));
  MUXF7 \FSM_sequential_imm_cs_reg[0]_i_5 
       (.I0(\FSM_sequential_imm_cs[0]_i_8_n_0 ),
        .I1(\FSM_sequential_imm_cs[0]_i_9_n_0 ),
        .O(\num_reg_reg[2] ),
        .S(\FSM_sequential_imm_cs[0]_i_2 [2]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_19 F_BERR_2S_CDC_TO
       (.IC_REG_ESR_CRCER_FS3(IC_REG_ESR_CRCER_FS3),
        .IC_REG_ESR_F_BERR_FS3(IC_REG_ESR_F_BERR_FS3),
        .IC_REG_ESR_F_STER_FS3(IC_REG_ESR_F_STER_FS3),
        .IC_REG_ISR_ERROR_I_i_2(\SINGLE_BIT.s_level_out_d4_reg_2 ),
        .IC_REG_ISR_ERROR_I_i_2_0(\SINGLE_BIT.s_level_out_d4_reg_6 ),
        .IC_SYNC_ESR_F_BERR(IC_SYNC_ESR_F_BERR),
        .\SINGLE_BIT.s_level_out_d4_reg_0 (F_BERR_2S_CDC_TO_n_1),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .out(\SINGLE_BIT.s_level_out_d4_reg_3 ),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_20 F_CRCER_2S_CDC_TO
       (.IC_REG_ESR_F_CRCER_FS3(IC_REG_ESR_F_CRCER_FS3),
        .IC_SYNC_ESR_F_CRCER(IC_SYNC_ESR_F_CRCER),
        .\SINGLE_BIT.s_level_out_d4_reg_0 (F_CRCER_2S_CDC_TO_n_1),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .out(out),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_21 F_FMER_2S_CDC_TO
       (.IC_REG_ESR_F_FMER_FS3(IC_REG_ESR_F_FMER_FS3),
        .IC_SYNC_ESR_F_FMER(IC_SYNC_ESR_F_FMER),
        .\SINGLE_BIT.s_level_out_d4_reg_0 (F_FMER_2S_CDC_TO_n_1),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .out(\SINGLE_BIT.s_level_out_d4_reg_1 ),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_22 F_STER_2S_CDC_TO
       (.IC_SYNC_ESR_F_STER(IC_SYNC_ESR_F_STER),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .out(\SINGLE_BIT.s_level_out_d4_reg_2 ),
        .s_axi_aclk(s_axi_aclk));
  LUT2 #(
    .INIT(4'hB)) 
    G_RST_SRST_CEN_I_i_1
       (.I0(IC_REG_SRR_SRST_I_reg_0),
        .I1(IC_REG_SRR_CEN_I_reg_0),
        .O(G_RST_SRST_CEN_I0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized5 ICRSTST_2S_CDC_TO
       (.D(p_2_out[1]),
        .\IC_REG_SR_ESTAT_I_reg[1] (IC_REG_SR_ESTAT_FS2[1]),
        .\IC_REG_SR_ESTAT_I_reg[1]_0 (\SINGLE_BIT.s_level_out_d4_reg_16 ),
        .IC_SYNC_SR_RSTST(IC_SYNC_SR_RSTST),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .out(IC_REG_SR_RSTST_FS2),
        .s_axi_aclk(s_axi_aclk));
  LUT5 #(
    .INIT(32'hFEEEEEEE)) 
    IC_INTR_CLR_FS_i_1
       (.I0(IC_INTR_CLR_FS_i_2_n_0),
        .I1(IC_INTR_CLR_FS_i_3_n_0),
        .I2(s_axi_wdata[15]),
        .I3(IC_REG_ISR_MSGLST_I_F1_reg_0),
        .I4(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [6]),
        .O(IC_INTR_CLR_IC));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    IC_INTR_CLR_FS_i_10
       (.I0(p_9_in),
        .I1(IC_REG_ISR_SLEEP_I_reg_0),
        .I2(s_axi_wdata[10]),
        .I3(p_10_in__0),
        .I4(IC_REG_ISR_BSOFF_I_reg_0),
        .I5(s_axi_wdata[9]),
        .O(IC_INTR_CLR_FS_i_10_n_0));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    IC_INTR_CLR_FS_i_11
       (.I0(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [1]),
        .I1(IC_REG_ISR_MSGLST_I_reg_0),
        .I2(s_axi_wdata[6]),
        .I3(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [0]),
        .I4(IC_REG_ISR_TSCNT_OFLW_I_reg_0),
        .I5(s_axi_wdata[5]),
        .O(IC_INTR_CLR_FS_i_11_n_0));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    IC_INTR_CLR_FS_i_12
       (.I0(\RX_FIFO_IERBUF.IC_REG_IER_I_reg_n_0_[27] ),
        .I1(IC_REG_ISR_RXOK_I_reg_0),
        .I2(s_axi_wdata[4]),
        .I3(p_16_in),
        .I4(IC_REG_ISR_BSFRD_I_reg_0),
        .I5(s_axi_wdata[3]),
        .O(IC_INTR_CLR_FS_i_12_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    IC_INTR_CLR_FS_i_2
       (.I0(IC_INTR_CLR_FS_i_4_n_0),
        .I1(IC_INTR_CLR_FS_i_5_n_0),
        .I2(IC_INTR_CLR_FS_i_6_n_0),
        .I3(IC_INTR_CLR_FS_i_7_n_0),
        .I4(IC_INTR_CLR_FS_i_8_n_0),
        .I5(IC_INTR_CLR_FS_i_9_n_0),
        .O(IC_INTR_CLR_FS_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFEFEFEFEFEFEFE)) 
    IC_INTR_CLR_FS_i_3
       (.I0(IC_INTR_CLR_FS_i_10_n_0),
        .I1(IC_INTR_CLR_FS_i_11_n_0),
        .I2(IC_INTR_CLR_FS_i_12_n_0),
        .I3(s_axi_wdata[8]),
        .I4(IC_REG_ISR_ERROR_I_reg_0),
        .I5(\RX_FIFO_IERBUF.IC_REG_IER_I_reg_n_0_[23] ),
        .O(IC_INTR_CLR_FS_i_3_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    IC_INTR_CLR_FS_i_4
       (.I0(s_axi_wdata[30]),
        .I1(IC_REG_ISR_MSGLST_I_TXE_reg_0),
        .I2(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [9]),
        .O(IC_INTR_CLR_FS_i_4_n_0));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    IC_INTR_CLR_FS_i_5
       (.I0(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [8]),
        .I1(IC_REG_ISR_RXMNF_I_reg_0),
        .I2(s_axi_wdata[17]),
        .I3(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [7]),
        .I4(IC_REG_ISR_RXWM_I_F1_reg_0),
        .I5(s_axi_wdata[16]),
        .O(IC_INTR_CLR_FS_i_5_n_0));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    IC_INTR_CLR_FS_i_6
       (.I0(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [5]),
        .I1(IC_REG_ISR_TXCRS_I_reg_0),
        .I2(s_axi_wdata[14]),
        .I3(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [4]),
        .I4(IC_REG_ISR_TXTRS_I_reg_0),
        .I5(s_axi_wdata[13]),
        .O(IC_INTR_CLR_FS_i_6_n_0));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    IC_INTR_CLR_FS_i_7
       (.I0(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [3]),
        .I1(IC_REG_ISR_RXWM_I_reg_0),
        .I2(s_axi_wdata[12]),
        .I3(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [2]),
        .I4(IC_REG_ISR_WKUP_I_reg_0),
        .I5(s_axi_wdata[11]),
        .O(IC_INTR_CLR_FS_i_7_n_0));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    IC_INTR_CLR_FS_i_8
       (.I0(p_17_in),
        .I1(IC_REG_ISR_PEE_I_reg_0),
        .I2(s_axi_wdata[2]),
        .I3(p_18_in),
        .I4(IC_REG_ISR_TXOK_I_reg_0),
        .I5(s_axi_wdata[1]),
        .O(IC_INTR_CLR_FS_i_8_n_0));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    IC_INTR_CLR_FS_i_9
       (.I0(\RX_FIFO_IERBUF.IC_REG_IER_I_reg_n_0_[31] ),
        .I1(IC_REG_ISR_ARBLST_I_reg_0),
        .I2(s_axi_wdata[0]),
        .I3(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [10]),
        .I4(IC_REG_ISR_TXEWM_I_reg_0),
        .I5(s_axi_wdata[31]),
        .O(IC_INTR_CLR_FS_i_9_n_0));
  FDRE IC_INTR_CLR_FS_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_INTR_CLR_IC),
        .Q(IC_INTR_CLR_FS),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  LUT4 #(
    .INIT(16'h0100)) 
    \IC_IPIC_COUNTER_I[0]_i_1 
       (.I0(IC_IPIC_COUNTER_I[0]),
        .I1(\IC_IPIC_COUNTER_I_reg[1]_0 ),
        .I2(\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .I3(Bus2IP_CS),
        .O(\IC_IPIC_COUNTER_I[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT5 #(
    .INIT(32'h00060000)) 
    \IC_IPIC_COUNTER_I[1]_i_1 
       (.I0(IC_IPIC_COUNTER_I[1]),
        .I1(IC_IPIC_COUNTER_I[0]),
        .I2(\IC_IPIC_COUNTER_I_reg[1]_0 ),
        .I3(\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .I4(Bus2IP_CS),
        .O(\IC_IPIC_COUNTER_I[1]_i_1_n_0 ));
  FDRE \IC_IPIC_COUNTER_I_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\IC_IPIC_COUNTER_I[0]_i_1_n_0 ),
        .Q(IC_IPIC_COUNTER_I[0]),
        .R(1'b0));
  FDRE \IC_IPIC_COUNTER_I_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\IC_IPIC_COUNTER_I[1]_i_1_n_0 ),
        .Q(IC_IPIC_COUNTER_I[1]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00000010)) 
    IC_IPSIG_WRITE_I_i_1
       (.I0(Bus2IP_RNW),
        .I1(IC_IPIC_COUNTER_I[0]),
        .I2(Bus2IP_CS),
        .I3(IC_IPIC_COUNTER_I[1]),
        .I4(\IC_IPIC_COUNTER_I_reg[1]_0 ),
        .O(IC_IPSIG_WRITE_I0));
  FDRE IC_IPSIG_WRITE_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_IPSIG_WRITE_I0),
        .Q(IC_IPSIG_WRITE_I_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_BRPR_I_reg[0] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_BRPR_I_reg[0]_1 ),
        .D(s_axi_wdata[7]),
        .Q(\IC_REG_BRPR_I_reg[0]_0 [7]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_BRPR_I_reg[1] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_BRPR_I_reg[0]_1 ),
        .D(s_axi_wdata[6]),
        .Q(\IC_REG_BRPR_I_reg[0]_0 [6]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_BRPR_I_reg[2] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_BRPR_I_reg[0]_1 ),
        .D(s_axi_wdata[5]),
        .Q(\IC_REG_BRPR_I_reg[0]_0 [5]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_BRPR_I_reg[3] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_BRPR_I_reg[0]_1 ),
        .D(s_axi_wdata[4]),
        .Q(\IC_REG_BRPR_I_reg[0]_0 [4]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_BRPR_I_reg[4] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_BRPR_I_reg[0]_1 ),
        .D(s_axi_wdata[3]),
        .Q(\IC_REG_BRPR_I_reg[0]_0 [3]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_BRPR_I_reg[5] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_BRPR_I_reg[0]_1 ),
        .D(s_axi_wdata[2]),
        .Q(\IC_REG_BRPR_I_reg[0]_0 [2]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_BRPR_I_reg[6] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_BRPR_I_reg[0]_1 ),
        .D(s_axi_wdata[1]),
        .Q(\IC_REG_BRPR_I_reg[0]_0 [1]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_BRPR_I_reg[7] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_BRPR_I_reg[0]_1 ),
        .D(s_axi_wdata[0]),
        .Q(\IC_REG_BRPR_I_reg[0]_0 [0]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_ECR_I_reg[0] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_ECR_I_reg[15]_0 ),
        .D(ic_sync_ecr_cdc_tig[0]),
        .Q(\IC_REG_ECR_I_reg[0]_0 [15]),
        .R(SR));
  FDRE \IC_REG_ECR_I_reg[10] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_ECR_I_reg[15]_0 ),
        .D(ic_sync_ecr_cdc_tig[10]),
        .Q(\IC_REG_ECR_I_reg[0]_0 [5]),
        .R(SR));
  FDRE \IC_REG_ECR_I_reg[11] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_ECR_I_reg[15]_0 ),
        .D(ic_sync_ecr_cdc_tig[11]),
        .Q(\IC_REG_ECR_I_reg[0]_0 [4]),
        .R(SR));
  FDRE \IC_REG_ECR_I_reg[12] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_ECR_I_reg[15]_0 ),
        .D(ic_sync_ecr_cdc_tig[12]),
        .Q(\IC_REG_ECR_I_reg[0]_0 [3]),
        .R(SR));
  FDRE \IC_REG_ECR_I_reg[13] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_ECR_I_reg[15]_0 ),
        .D(ic_sync_ecr_cdc_tig[13]),
        .Q(\IC_REG_ECR_I_reg[0]_0 [2]),
        .R(SR));
  FDRE \IC_REG_ECR_I_reg[14] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_ECR_I_reg[15]_0 ),
        .D(ic_sync_ecr_cdc_tig[14]),
        .Q(\IC_REG_ECR_I_reg[0]_0 [1]),
        .R(SR));
  FDRE \IC_REG_ECR_I_reg[15] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_ECR_I_reg[15]_0 ),
        .D(ic_sync_ecr_cdc_tig[15]),
        .Q(\IC_REG_ECR_I_reg[0]_0 [0]),
        .R(SR));
  FDRE \IC_REG_ECR_I_reg[1] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_ECR_I_reg[15]_0 ),
        .D(ic_sync_ecr_cdc_tig[1]),
        .Q(\IC_REG_ECR_I_reg[0]_0 [14]),
        .R(SR));
  FDRE \IC_REG_ECR_I_reg[2] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_ECR_I_reg[15]_0 ),
        .D(ic_sync_ecr_cdc_tig[2]),
        .Q(\IC_REG_ECR_I_reg[0]_0 [13]),
        .R(SR));
  FDRE \IC_REG_ECR_I_reg[3] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_ECR_I_reg[15]_0 ),
        .D(ic_sync_ecr_cdc_tig[3]),
        .Q(\IC_REG_ECR_I_reg[0]_0 [12]),
        .R(SR));
  FDRE \IC_REG_ECR_I_reg[4] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_ECR_I_reg[15]_0 ),
        .D(ic_sync_ecr_cdc_tig[4]),
        .Q(\IC_REG_ECR_I_reg[0]_0 [11]),
        .R(SR));
  FDRE \IC_REG_ECR_I_reg[5] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_ECR_I_reg[15]_0 ),
        .D(ic_sync_ecr_cdc_tig[5]),
        .Q(\IC_REG_ECR_I_reg[0]_0 [10]),
        .R(SR));
  FDRE \IC_REG_ECR_I_reg[6] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_ECR_I_reg[15]_0 ),
        .D(ic_sync_ecr_cdc_tig[6]),
        .Q(\IC_REG_ECR_I_reg[0]_0 [9]),
        .R(SR));
  FDRE \IC_REG_ECR_I_reg[7] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_ECR_I_reg[15]_0 ),
        .D(ic_sync_ecr_cdc_tig[7]),
        .Q(\IC_REG_ECR_I_reg[0]_0 [8]),
        .R(SR));
  FDRE \IC_REG_ECR_I_reg[8] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_ECR_I_reg[15]_0 ),
        .D(ic_sync_ecr_cdc_tig[8]),
        .Q(\IC_REG_ECR_I_reg[0]_0 [7]),
        .R(SR));
  FDRE \IC_REG_ECR_I_reg[9] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_ECR_I_reg[15]_0 ),
        .D(ic_sync_ecr_cdc_tig[9]),
        .Q(\IC_REG_ECR_I_reg[0]_0 [6]),
        .R(SR));
  FDRE IC_REG_ESR_ACKER_FS3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\SINGLE_BIT.s_level_out_d4_reg_10 ),
        .Q(IC_REG_ESR_ACKER_FS3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ESR_ACKER_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ESR_ACKER_I_reg_0),
        .Q(IC_REG_ESR_ACKER_I),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ESR_BERR_FS3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\SINGLE_BIT.s_level_out_d4_reg_9 ),
        .Q(IC_REG_ESR_BERR_FS3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ESR_BERR_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ESR_BERR_I_reg_0),
        .Q(IC_REG_ESR_BERR_I),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ESR_CRCER_FS3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\SINGLE_BIT.s_level_out_d4_reg_6 ),
        .Q(IC_REG_ESR_CRCER_FS3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ESR_CRCER_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ESR_CRCER_I_reg_0),
        .Q(IC_REG_ESR_CRCER_I),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ESR_FMER_FS3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\SINGLE_BIT.s_level_out_d4_reg_7 ),
        .Q(IC_REG_ESR_FMER_FS3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ESR_FMER_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ESR_FMER_I_reg_0),
        .Q(IC_REG_ESR_FMER_I),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ESR_F_BERR_FS3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\SINGLE_BIT.s_level_out_d4_reg_3 ),
        .Q(IC_REG_ESR_F_BERR_FS3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ESR_F_BERR_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ESR_F_BERR_I_reg_0),
        .Q(IC_REG_ESR_F_BERR_I),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ESR_F_CRCER_FS3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(out),
        .Q(IC_REG_ESR_F_CRCER_FS3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ESR_F_CRCER_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ESR_F_CRCER_I_reg_0),
        .Q(IC_REG_ESR_F_CRCER_I),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ESR_F_FMER_FS3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\SINGLE_BIT.s_level_out_d4_reg_1 ),
        .Q(IC_REG_ESR_F_FMER_FS3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ESR_F_FMER_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ESR_F_FMER_I_reg_0),
        .Q(IC_REG_ESR_F_FMER_I),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ESR_F_STER_FS3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\SINGLE_BIT.s_level_out_d4_reg_2 ),
        .Q(IC_REG_ESR_F_STER_FS3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ESR_F_STER_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ESR_F_STER_I_reg_0),
        .Q(IC_REG_ESR_F_STER_I),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ESR_STER_FS3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\SINGLE_BIT.s_level_out_d4_reg_8 ),
        .Q(IC_REG_ESR_STER_FS3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ESR_STER_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ESR_STER_I_reg_0),
        .Q(IC_REG_ESR_STER_I),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BRPR_I_reg[15] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BRPR_I_reg[15]_2 ),
        .D(s_axi_wdata[16]),
        .Q(\IC_REG_F_BRPR_I_reg[15]_0 [14]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BRPR_I_reg[18] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BRPR_I_reg[15]_2 ),
        .D(s_axi_wdata[13]),
        .Q(\IC_REG_F_BRPR_I_reg[15]_0 [13]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BRPR_I_reg[19] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BRPR_I_reg[15]_2 ),
        .D(s_axi_wdata[12]),
        .Q(\IC_REG_F_BRPR_I_reg[15]_0 [12]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BRPR_I_reg[20] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BRPR_I_reg[15]_2 ),
        .D(s_axi_wdata[11]),
        .Q(\IC_REG_F_BRPR_I_reg[15]_0 [11]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BRPR_I_reg[21] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BRPR_I_reg[15]_2 ),
        .D(s_axi_wdata[10]),
        .Q(\IC_REG_F_BRPR_I_reg[15]_0 [10]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BRPR_I_reg[22] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BRPR_I_reg[15]_2 ),
        .D(s_axi_wdata[9]),
        .Q(\IC_REG_F_BRPR_I_reg[15]_0 [9]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BRPR_I_reg[23] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BRPR_I_reg[15]_2 ),
        .D(s_axi_wdata[8]),
        .Q(\IC_REG_F_BRPR_I_reg[15]_0 [8]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BRPR_I_reg[24] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BRPR_I_reg[15]_2 ),
        .D(s_axi_wdata[7]),
        .Q(\IC_REG_F_BRPR_I_reg[15]_0 [7]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BRPR_I_reg[25] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BRPR_I_reg[15]_2 ),
        .D(s_axi_wdata[6]),
        .Q(\IC_REG_F_BRPR_I_reg[15]_0 [6]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BRPR_I_reg[26] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BRPR_I_reg[15]_2 ),
        .D(s_axi_wdata[5]),
        .Q(\IC_REG_F_BRPR_I_reg[15]_0 [5]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BRPR_I_reg[27] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BRPR_I_reg[15]_2 ),
        .D(s_axi_wdata[4]),
        .Q(\IC_REG_F_BRPR_I_reg[15]_0 [4]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BRPR_I_reg[28] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BRPR_I_reg[15]_2 ),
        .D(s_axi_wdata[3]),
        .Q(\IC_REG_F_BRPR_I_reg[15]_0 [3]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BRPR_I_reg[29] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BRPR_I_reg[15]_2 ),
        .D(s_axi_wdata[2]),
        .Q(\IC_REG_F_BRPR_I_reg[15]_0 [2]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BRPR_I_reg[30] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BRPR_I_reg[15]_2 ),
        .D(s_axi_wdata[1]),
        .Q(\IC_REG_F_BRPR_I_reg[15]_0 [1]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BRPR_I_reg[31] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BRPR_I_reg[15]_2 ),
        .D(s_axi_wdata[0]),
        .Q(\IC_REG_F_BRPR_I_reg[15]_0 [0]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BTR_SJW_I_reg[0] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[19]),
        .Q(\IC_REG_F_BTR_SJW_I_reg[0]_0 [3]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BTR_SJW_I_reg[1] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[18]),
        .Q(\IC_REG_F_BTR_SJW_I_reg[0]_0 [2]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BTR_SJW_I_reg[2] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[17]),
        .Q(\IC_REG_F_BTR_SJW_I_reg[0]_0 [1]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BTR_SJW_I_reg[3] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[16]),
        .Q(\IC_REG_F_BTR_SJW_I_reg[0]_0 [0]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BTR_TS1_I_reg[0] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[4]),
        .Q(\IC_REG_F_BTR_TS1_I_reg[0]_0 [4]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BTR_TS1_I_reg[1] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[3]),
        .Q(\IC_REG_F_BTR_TS1_I_reg[0]_0 [3]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BTR_TS1_I_reg[2] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[2]),
        .Q(\IC_REG_F_BTR_TS1_I_reg[0]_0 [2]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BTR_TS1_I_reg[3] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[1]),
        .Q(\IC_REG_F_BTR_TS1_I_reg[0]_0 [1]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BTR_TS1_I_reg[4] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[0]),
        .Q(\IC_REG_F_BTR_TS1_I_reg[0]_0 [0]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BTR_TS2_I_reg[0] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[11]),
        .Q(\IC_REG_F_BTR_TS2_I_reg[0]_0 [3]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BTR_TS2_I_reg[1] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[10]),
        .Q(\IC_REG_F_BTR_TS2_I_reg[0]_0 [2]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BTR_TS2_I_reg[2] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[9]),
        .Q(\IC_REG_F_BTR_TS2_I_reg[0]_0 [1]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_F_BTR_TS2_I_reg[3] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_F_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[8]),
        .Q(\IC_REG_F_BTR_TS2_I_reg[0]_0 [0]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[0] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[31]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [31]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[10] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[21]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [21]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[11] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[20]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [20]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[12] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[19]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [19]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[13] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[18]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [18]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[14] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[17]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [17]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[15] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[16]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [16]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[16] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[15]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [15]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[17] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[14]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [14]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[18] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[13]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [13]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[19] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[12]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [12]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[1] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[30]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [30]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[20] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[11]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [11]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[21] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[10]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [10]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[22] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[9]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [9]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[23] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[8]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [8]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[24] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[7]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [7]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[25] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[6]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [6]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[26] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[5]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [5]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[27] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[4]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [4]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[28] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[3]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [3]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[29] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[2]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [2]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[2] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[29]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [29]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[30] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[1]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [1]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[31] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[0]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [0]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[3] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[28]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [28]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[4] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[27]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [27]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[5] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[26]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [26]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[6] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[25]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [25]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[7] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[24]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [24]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[8] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[23]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [23]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IECRS_I_reg[9] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IECRS_I_reg[0]_1 ),
        .D(s_axi_wdata[22]),
        .Q(\IC_REG_IECRS_I_reg[0]_0 [22]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[0] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[31]),
        .Q(Q[31]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[10] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[21]),
        .Q(Q[21]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[11] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[20]),
        .Q(Q[20]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[12] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[19]),
        .Q(Q[19]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[13] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[18]),
        .Q(Q[18]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[14] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[17]),
        .Q(Q[17]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[15] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[16]),
        .Q(Q[16]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[16] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[15]),
        .Q(Q[15]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[17] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[14]),
        .Q(Q[14]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[18] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[13]),
        .Q(Q[13]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[19] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[12]),
        .Q(Q[12]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[1] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[30]),
        .Q(Q[30]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[20] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[11]),
        .Q(Q[11]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[21] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[10]),
        .Q(Q[10]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[22] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[9]),
        .Q(Q[9]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[23] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[8]),
        .Q(Q[8]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[24] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[7]),
        .Q(Q[7]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[25] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[6]),
        .Q(Q[6]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[26] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[5]),
        .Q(Q[5]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[27] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[4]),
        .Q(Q[4]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[28] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[3]),
        .Q(Q[3]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[29] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[2]),
        .Q(Q[2]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[2] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[29]),
        .Q(Q[29]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[30] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[1]),
        .Q(Q[1]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[31] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[0]),
        .Q(Q[0]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[3] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[28]),
        .Q(Q[28]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[4] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[27]),
        .Q(Q[27]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[5] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[26]),
        .Q(Q[26]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[6] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[25]),
        .Q(Q[25]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[7] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[24]),
        .Q(Q[24]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[8] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[23]),
        .Q(Q[23]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IETRS_I_reg[9] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_IETRS_I_reg[0]_0 ),
        .D(s_axi_wdata[22]),
        .Q(Q[22]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IFF_EN_I_reg[0] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[15]),
        .Q(\IC_REG_IFF_EN_I_reg[0]_0 [7]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IFF_EN_I_reg[1] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[14]),
        .Q(\IC_REG_IFF_EN_I_reg[0]_0 [6]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IFF_EN_I_reg[2] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[13]),
        .Q(\IC_REG_IFF_EN_I_reg[0]_0 [5]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IFF_EN_I_reg[3] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[12]),
        .Q(\IC_REG_IFF_EN_I_reg[0]_0 [4]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IFF_EN_I_reg[4] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[11]),
        .Q(\IC_REG_IFF_EN_I_reg[0]_0 [3]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IFF_EN_I_reg[5] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[10]),
        .Q(\IC_REG_IFF_EN_I_reg[0]_0 [2]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IFF_EN_I_reg[6] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[9]),
        .Q(\IC_REG_IFF_EN_I_reg[0]_0 [1]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_IFF_EN_I_reg[7] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[8]),
        .Q(\IC_REG_IFF_EN_I_reg[0]_0 [0]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ISR_ARBLST_FS3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\SINGLE_BIT.s_level_out_d6_reg ),
        .Q(IC_REG_ISR_ARBLST_FS3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ISR_ARBLST_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ISR_ARBLST_I_reg_1),
        .Q(IC_REG_ISR_ARBLST_I_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ISR_BSFRD_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ISR_BSFRD_I_reg_1),
        .Q(IC_REG_ISR_BSFRD_I_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ISR_BSOFF_FS3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\SINGLE_BIT.s_level_out_d4_reg_16 ),
        .Q(IC_REG_ISR_BSOFF_FS3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ISR_BSOFF_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ISR_BSOFF_I_reg_1),
        .Q(IC_REG_ISR_BSOFF_I_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ISR_ERROR_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ISR_ERROR_I_reg_1),
        .Q(IC_REG_ISR_ERROR_I_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ISR_MSGLST_FS3_F1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\SINGLE_BIT.s_level_out_d4_reg_14 ),
        .Q(IC_REG_ISR_MSGLST_FS3_F1),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ISR_MSGLST_FS3_TXE_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\SINGLE_BIT.s_level_out_d4_reg_15 ),
        .Q(IC_REG_ISR_MSGLST_FS3_TXE),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ISR_MSGLST_FS3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\SINGLE_BIT.s_level_out_d4_reg_13 ),
        .Q(IC_REG_ISR_MSGLST_FS3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ISR_MSGLST_I_F1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ISR_MSGLST_I_F1_reg_1),
        .Q(IC_REG_ISR_MSGLST_I_F1_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ISR_MSGLST_I_TXE_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ISR_MSGLST_I_TXE_reg_1),
        .Q(IC_REG_ISR_MSGLST_I_TXE_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ISR_MSGLST_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ISR_MSGLST_I_reg_1),
        .Q(IC_REG_ISR_MSGLST_I_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ISR_PEE_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ISR_PEE_I_reg_1),
        .Q(IC_REG_ISR_PEE_I_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ISR_RXMNF_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ISR_RXMNF_I_reg_1),
        .Q(IC_REG_ISR_RXMNF_I_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ISR_RXOK_FS3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\SINGLE_BIT.s_level_out_d4_reg_12 ),
        .Q(RXOK_FS3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ISR_RXOK_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ISR_RXOK_I_reg_1),
        .Q(IC_REG_ISR_RXOK_I_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ISR_RXWM_I_F1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ISR_RXWM_I_F1_reg_1),
        .Q(IC_REG_ISR_RXWM_I_F1_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ISR_RXWM_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ISR_RXWM_I_reg_1),
        .Q(IC_REG_ISR_RXWM_I_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ISR_SLEEP_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ISR_SLEEP_I_reg_1),
        .Q(IC_REG_ISR_SLEEP_I_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    IC_REG_ISR_TSCNT_OFLW_I_i_2
       (.I0(IC_REG_ISR_TSCNT_OFLW_I_i_3_n_0),
        .I1(IC_REG_ISR_TSCNT_OFLW_I_i_4_n_0),
        .I2(p_11_in[16]),
        .I3(\IC_REG_TSR_I_reg[0]_0 [0]),
        .I4(\IC_REG_TSR_I_reg[0]_0 [1]),
        .I5(IC_REG_ISR_TSCNT_OFLW_I2),
        .O(IC_REG_ISR_TSCNT_OFLW_I0));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    IC_REG_ISR_TSCNT_OFLW_I_i_3
       (.I0(\IC_REG_TSR_I_reg[0]_0 [8]),
        .I1(\IC_REG_TSR_I_reg[0]_0 [9]),
        .I2(\IC_REG_TSR_I_reg[0]_0 [10]),
        .I3(\IC_REG_TSR_I_reg[0]_0 [11]),
        .I4(\IC_REG_TSR_I_reg[0]_0 [12]),
        .I5(IC_REG_SRR_CEN_I_reg_0),
        .O(IC_REG_ISR_TSCNT_OFLW_I_i_3_n_0));
  LUT5 #(
    .INIT(32'h00010000)) 
    IC_REG_ISR_TSCNT_OFLW_I_i_4
       (.I0(\IC_REG_TSR_I_reg[0]_0 [2]),
        .I1(p_11_in[20]),
        .I2(\IC_REG_TSR_I_reg[0]_0 [3]),
        .I3(p_11_in[22]),
        .I4(IC_REG_ISR_TSCNT_OFLW_I_i_6_n_0),
        .O(IC_REG_ISR_TSCNT_OFLW_I_i_4_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    IC_REG_ISR_TSCNT_OFLW_I_i_5
       (.I0(IC_REG_ISR_TSCNT_OFLW_I_i_7_n_0),
        .I1(IC_REG_TSR_I_D[14]),
        .I2(IC_REG_TSR_I_D[15]),
        .I3(IC_REG_TSR_I_D[12]),
        .I4(IC_REG_TSR_I_D[13]),
        .I5(IC_REG_ISR_TSCNT_OFLW_I_i_8_n_0),
        .O(IC_REG_ISR_TSCNT_OFLW_I2));
  LUT4 #(
    .INIT(16'h0001)) 
    IC_REG_ISR_TSCNT_OFLW_I_i_6
       (.I0(\IC_REG_TSR_I_reg[0]_0 [7]),
        .I1(\IC_REG_TSR_I_reg[0]_0 [6]),
        .I2(\IC_REG_TSR_I_reg[0]_0 [5]),
        .I3(\IC_REG_TSR_I_reg[0]_0 [4]),
        .O(IC_REG_ISR_TSCNT_OFLW_I_i_6_n_0));
  LUT4 #(
    .INIT(16'h8000)) 
    IC_REG_ISR_TSCNT_OFLW_I_i_7
       (.I0(IC_REG_TSR_I_D[8]),
        .I1(IC_REG_TSR_I_D[9]),
        .I2(IC_REG_TSR_I_D[10]),
        .I3(IC_REG_TSR_I_D[11]),
        .O(IC_REG_ISR_TSCNT_OFLW_I_i_7_n_0));
  LUT5 #(
    .INIT(32'h80000000)) 
    IC_REG_ISR_TSCNT_OFLW_I_i_8
       (.I0(IC_REG_TSR_I_D[3]),
        .I1(IC_REG_TSR_I_D[2]),
        .I2(IC_REG_TSR_I_D[1]),
        .I3(IC_REG_TSR_I_D[0]),
        .I4(IC_REG_ISR_TSCNT_OFLW_I_i_9_n_0),
        .O(IC_REG_ISR_TSCNT_OFLW_I_i_8_n_0));
  LUT4 #(
    .INIT(16'h8000)) 
    IC_REG_ISR_TSCNT_OFLW_I_i_9
       (.I0(IC_REG_TSR_I_D[4]),
        .I1(IC_REG_TSR_I_D[5]),
        .I2(IC_REG_TSR_I_D[6]),
        .I3(IC_REG_TSR_I_D[7]),
        .O(IC_REG_ISR_TSCNT_OFLW_I_i_9_n_0));
  FDRE IC_REG_ISR_TSCNT_OFLW_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ISR_TSCNT_OFLW_I_reg_1),
        .Q(IC_REG_ISR_TSCNT_OFLW_I_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ISR_TXCRS_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ISR_TXCRS_I_reg_1),
        .Q(IC_REG_ISR_TXCRS_I_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ISR_TXEWM_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ISR_TXEWM_I_reg_1),
        .Q(IC_REG_ISR_TXEWM_I_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ISR_TXOK_FS3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\SINGLE_BIT.s_level_out_d6_reg_0 ),
        .Q(IC_REG_ISR_TXOK_FS3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ISR_TXOK_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ISR_TXOK_I_reg_1),
        .Q(IC_REG_ISR_TXOK_I_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ISR_TXTRS_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ISR_TXTRS_I_reg_1),
        .Q(IC_REG_ISR_TXTRS_I_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_ISR_WKUP_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_ISR_WKUP_I_reg_1),
        .Q(IC_REG_ISR_WKUP_I_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_MSR_ABR_I_reg
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[7]),
        .Q(IC_REG_MSR_ABR_I_reg_0[1]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_MSR_BRSD_I_reg
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[3]),
        .Q(IC_REG_MSR_BRSD_I_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_MSR_DAR_I_reg
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[4]),
        .Q(IC_REG_MSR_DAR_I_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_MSR_DPEE_I_reg
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[5]),
        .Q(IC_REG_MSR_DPEE_I_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_MSR_LBACK_I_reg
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[1]),
        .Q(IC_REG_MSR_LBACK_I_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_MSR_SBR_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(BSOFF_2S_CDC_TO_n_1),
        .Q(IC_REG_MSR_SBR_I_reg_0),
        .R(1'b0));
  FDRE IC_REG_MSR_SLEEP_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_MSR_SLEEP_I_reg_1),
        .Q(IC_REG_MSR_ABR_I_reg_0[0]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h2)) 
    IC_REG_MSR_SLEEP_i_1
       (.I0(IC_REG_MSR_ABR_I_reg_0[0]),
        .I1(IC_REG_MSR_LBACK_I_reg_0),
        .O(IC_REG_MSR_SLEEP0));
  FDRE IC_REG_MSR_SLEEP_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_MSR_SLEEP0),
        .Q(IC_REG_MSR_SLEEP_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_MSR_SNOOP_I_reg
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[2]),
        .Q(p_3_in),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_N_BTR_SJW_I_reg[0] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_N_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[22]),
        .Q(\IC_REG_N_BTR_SJW_I_reg[0]_0 [6]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_N_BTR_SJW_I_reg[1] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_N_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[21]),
        .Q(\IC_REG_N_BTR_SJW_I_reg[0]_0 [5]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_N_BTR_SJW_I_reg[2] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_N_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[20]),
        .Q(\IC_REG_N_BTR_SJW_I_reg[0]_0 [4]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_N_BTR_SJW_I_reg[3] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_N_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[19]),
        .Q(\IC_REG_N_BTR_SJW_I_reg[0]_0 [3]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_N_BTR_SJW_I_reg[4] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_N_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[18]),
        .Q(\IC_REG_N_BTR_SJW_I_reg[0]_0 [2]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_N_BTR_SJW_I_reg[5] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_N_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[17]),
        .Q(\IC_REG_N_BTR_SJW_I_reg[0]_0 [1]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_N_BTR_SJW_I_reg[6] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_N_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[16]),
        .Q(\IC_REG_N_BTR_SJW_I_reg[0]_0 [0]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_N_BTR_TS1_I_reg[0] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_N_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[7]),
        .Q(\IC_REG_N_BTR_TS1_I_reg[0]_0 [7]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_N_BTR_TS1_I_reg[1] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_N_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[6]),
        .Q(\IC_REG_N_BTR_TS1_I_reg[0]_0 [6]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_N_BTR_TS1_I_reg[2] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_N_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[5]),
        .Q(\IC_REG_N_BTR_TS1_I_reg[0]_0 [5]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_N_BTR_TS1_I_reg[3] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_N_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[4]),
        .Q(\IC_REG_N_BTR_TS1_I_reg[0]_0 [4]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_N_BTR_TS1_I_reg[4] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_N_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[3]),
        .Q(\IC_REG_N_BTR_TS1_I_reg[0]_0 [3]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_N_BTR_TS1_I_reg[5] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_N_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[2]),
        .Q(\IC_REG_N_BTR_TS1_I_reg[0]_0 [2]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_N_BTR_TS1_I_reg[6] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_N_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[1]),
        .Q(\IC_REG_N_BTR_TS1_I_reg[0]_0 [1]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_N_BTR_TS1_I_reg[7] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_N_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[0]),
        .Q(\IC_REG_N_BTR_TS1_I_reg[0]_0 [0]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_N_BTR_TS2_I_reg[0] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_N_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[14]),
        .Q(\IC_REG_N_BTR_TS2_I_reg[0]_1 [6]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_N_BTR_TS2_I_reg[1] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_N_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[13]),
        .Q(\IC_REG_N_BTR_TS2_I_reg[0]_1 [5]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_N_BTR_TS2_I_reg[2] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_N_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[12]),
        .Q(\IC_REG_N_BTR_TS2_I_reg[0]_1 [4]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_N_BTR_TS2_I_reg[3] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_N_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[11]),
        .Q(\IC_REG_N_BTR_TS2_I_reg[0]_1 [3]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_N_BTR_TS2_I_reg[4] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_N_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[10]),
        .Q(\IC_REG_N_BTR_TS2_I_reg[0]_1 [2]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_N_BTR_TS2_I_reg[5] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_N_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[9]),
        .Q(\IC_REG_N_BTR_TS2_I_reg[0]_1 [1]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_N_BTR_TS2_I_reg[6] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_N_BTR_TS1_I_reg[0]_1 ),
        .D(s_axi_wdata[8]),
        .Q(\IC_REG_N_BTR_TS2_I_reg[0]_1 [0]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  LUT2 #(
    .INIT(4'hE)) 
    IC_REG_SBR_I_i_1
       (.I0(IC_REG_MSR_ABR_I_reg_0[1]),
        .I1(IC_REG_MSR_SBR_I_reg_0),
        .O(IC_REG_SBR_I0));
  FDRE IC_REG_SBR_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_SBR_I0),
        .Q(IC_REG_SBR_I_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_SRR_CEN_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_SRR_CEN_I_reg_1),
        .Q(IC_REG_SRR_CEN_I_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_SRR_SRST_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_SRR_SRST_I_reg_1),
        .Q(IC_REG_SRR_SRST_I_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_SR_BBSY_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_SR_BBSY_I0),
        .Q(IC_REG_SR_BBSY_I),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_SR_BIDLE_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_SR_BIDLE_I0),
        .Q(IC_REG_SR_BIDLE_I),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_SR_BSFR_FS3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\SINGLE_BIT.s_level_out_d4_reg_0 ),
        .Q(p_14_in[1]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_SR_ERRWRN_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_SR_ERRWRN_I0),
        .Q(IC_REG_SR_ERRWRN_I),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_SR_ESTAT_I_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_2_out[0]),
        .Q(IC_REG_SR_ESTAT_I[0]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_SR_ESTAT_I_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_2_out[1]),
        .Q(IC_REG_SR_ESTAT_I[1]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_SR_LBACK_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_SR_LBACK_I0),
        .Q(IC_REG_SR_LBACK_I),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_SR_NORMAL_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_SR_NORMAL_I0),
        .Q(IC_REG_SR_NORMAL_I),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_SR_PEE_FS3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\SINGLE_BIT.s_level_out_d4_reg ),
        .Q(p_14_in[0]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDSE IC_REG_SR_RSTST_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_SR_RSTST_FS2),
        .Q(IC_REG_SR_RSTST_I),
        .S(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_SR_SLEEP_FS3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\SINGLE_BIT.s_level_out_d4_reg_11 ),
        .Q(IC_REG_SR_SLEEP_FS3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_REG_SR_SLEEP_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_SR_SLEEP_I0),
        .Q(IC_REG_SR_SLEEP_I),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  LUT3 #(
    .INIT(8'h04)) 
    IC_REG_SR_SNOOP_I_i_1
       (.I0(IC_REG_MSR_LBACK_I_reg_0),
        .I1(p_3_in),
        .I2(IC_REG_MSR_ABR_I_reg_0[0]),
        .O(IC_REG_SR_SNOOP_I0));
  FDRE IC_REG_SR_SNOOP_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_SR_SNOOP_I0),
        .Q(IC_REG_SR_SNOOP_I_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_SR_TDCV_I_reg[0] 
       (.C(s_axi_aclk),
        .CE(IC_REG_SR_TDCV_I0),
        .D(ic_reg_sr_tdcv_cdc_tig[0]),
        .Q(\IC_REG_SR_TDCV_I_reg[6]_0 [0]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_SR_TDCV_I_reg[1] 
       (.C(s_axi_aclk),
        .CE(IC_REG_SR_TDCV_I0),
        .D(ic_reg_sr_tdcv_cdc_tig[1]),
        .Q(\IC_REG_SR_TDCV_I_reg[6]_0 [1]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_SR_TDCV_I_reg[2] 
       (.C(s_axi_aclk),
        .CE(IC_REG_SR_TDCV_I0),
        .D(ic_reg_sr_tdcv_cdc_tig[2]),
        .Q(\IC_REG_SR_TDCV_I_reg[6]_0 [2]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_SR_TDCV_I_reg[3] 
       (.C(s_axi_aclk),
        .CE(IC_REG_SR_TDCV_I0),
        .D(ic_reg_sr_tdcv_cdc_tig[3]),
        .Q(\IC_REG_SR_TDCV_I_reg[6]_0 [3]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_SR_TDCV_I_reg[4] 
       (.C(s_axi_aclk),
        .CE(IC_REG_SR_TDCV_I0),
        .D(ic_reg_sr_tdcv_cdc_tig[4]),
        .Q(\IC_REG_SR_TDCV_I_reg[6]_0 [4]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_SR_TDCV_I_reg[5] 
       (.C(s_axi_aclk),
        .CE(IC_REG_SR_TDCV_I0),
        .D(ic_reg_sr_tdcv_cdc_tig[5]),
        .Q(\IC_REG_SR_TDCV_I_reg[6]_0 [5]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_SR_TDCV_I_reg[6] 
       (.C(s_axi_aclk),
        .CE(IC_REG_SR_TDCV_I0),
        .D(ic_reg_sr_tdcv_cdc_tig[6]),
        .Q(\IC_REG_SR_TDCV_I_reg[6]_0 [6]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_TSR_I_D_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\IC_REG_TSR_I_reg[0]_0 [12]),
        .Q(IC_REG_TSR_I_D[0]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_TSR_I_D_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\IC_REG_TSR_I_reg[0]_0 [3]),
        .Q(IC_REG_TSR_I_D[10]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_TSR_I_D_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_11_in[20]),
        .Q(IC_REG_TSR_I_D[11]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_TSR_I_D_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\IC_REG_TSR_I_reg[0]_0 [2]),
        .Q(IC_REG_TSR_I_D[12]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_TSR_I_D_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\IC_REG_TSR_I_reg[0]_0 [1]),
        .Q(IC_REG_TSR_I_D[13]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_TSR_I_D_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\IC_REG_TSR_I_reg[0]_0 [0]),
        .Q(IC_REG_TSR_I_D[14]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_TSR_I_D_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_11_in[16]),
        .Q(IC_REG_TSR_I_D[15]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_TSR_I_D_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\IC_REG_TSR_I_reg[0]_0 [11]),
        .Q(IC_REG_TSR_I_D[1]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_TSR_I_D_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\IC_REG_TSR_I_reg[0]_0 [10]),
        .Q(IC_REG_TSR_I_D[2]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_TSR_I_D_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\IC_REG_TSR_I_reg[0]_0 [9]),
        .Q(IC_REG_TSR_I_D[3]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_TSR_I_D_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\IC_REG_TSR_I_reg[0]_0 [8]),
        .Q(IC_REG_TSR_I_D[4]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_TSR_I_D_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\IC_REG_TSR_I_reg[0]_0 [7]),
        .Q(IC_REG_TSR_I_D[5]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_TSR_I_D_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\IC_REG_TSR_I_reg[0]_0 [6]),
        .Q(IC_REG_TSR_I_D[6]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_TSR_I_D_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\IC_REG_TSR_I_reg[0]_0 [5]),
        .Q(IC_REG_TSR_I_D[7]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_TSR_I_D_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\IC_REG_TSR_I_reg[0]_0 [4]),
        .Q(IC_REG_TSR_I_D[8]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_TSR_I_D_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_11_in[22]),
        .Q(IC_REG_TSR_I_D[9]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \IC_REG_TSR_I_reg[0] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_TSR_I_reg[15]_0 ),
        .D(time_stamp_cnt_cdc_tig[0]),
        .Q(\IC_REG_TSR_I_reg[0]_0 [12]),
        .R(SR));
  FDRE \IC_REG_TSR_I_reg[10] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_TSR_I_reg[15]_0 ),
        .D(time_stamp_cnt_cdc_tig[10]),
        .Q(\IC_REG_TSR_I_reg[0]_0 [3]),
        .R(SR));
  FDRE \IC_REG_TSR_I_reg[11] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_TSR_I_reg[15]_0 ),
        .D(time_stamp_cnt_cdc_tig[11]),
        .Q(p_11_in[20]),
        .R(SR));
  FDRE \IC_REG_TSR_I_reg[12] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_TSR_I_reg[15]_0 ),
        .D(time_stamp_cnt_cdc_tig[12]),
        .Q(\IC_REG_TSR_I_reg[0]_0 [2]),
        .R(SR));
  FDRE \IC_REG_TSR_I_reg[13] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_TSR_I_reg[15]_0 ),
        .D(time_stamp_cnt_cdc_tig[13]),
        .Q(\IC_REG_TSR_I_reg[0]_0 [1]),
        .R(SR));
  FDRE \IC_REG_TSR_I_reg[14] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_TSR_I_reg[15]_0 ),
        .D(time_stamp_cnt_cdc_tig[14]),
        .Q(\IC_REG_TSR_I_reg[0]_0 [0]),
        .R(SR));
  FDRE \IC_REG_TSR_I_reg[15] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_TSR_I_reg[15]_0 ),
        .D(time_stamp_cnt_cdc_tig[15]),
        .Q(p_11_in[16]),
        .R(SR));
  FDRE \IC_REG_TSR_I_reg[1] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_TSR_I_reg[15]_0 ),
        .D(time_stamp_cnt_cdc_tig[1]),
        .Q(\IC_REG_TSR_I_reg[0]_0 [11]),
        .R(SR));
  FDRE \IC_REG_TSR_I_reg[2] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_TSR_I_reg[15]_0 ),
        .D(time_stamp_cnt_cdc_tig[2]),
        .Q(\IC_REG_TSR_I_reg[0]_0 [10]),
        .R(SR));
  FDRE \IC_REG_TSR_I_reg[3] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_TSR_I_reg[15]_0 ),
        .D(time_stamp_cnt_cdc_tig[3]),
        .Q(\IC_REG_TSR_I_reg[0]_0 [9]),
        .R(SR));
  FDRE \IC_REG_TSR_I_reg[4] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_TSR_I_reg[15]_0 ),
        .D(time_stamp_cnt_cdc_tig[4]),
        .Q(\IC_REG_TSR_I_reg[0]_0 [8]),
        .R(SR));
  FDRE \IC_REG_TSR_I_reg[5] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_TSR_I_reg[15]_0 ),
        .D(time_stamp_cnt_cdc_tig[5]),
        .Q(\IC_REG_TSR_I_reg[0]_0 [7]),
        .R(SR));
  FDRE \IC_REG_TSR_I_reg[6] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_TSR_I_reg[15]_0 ),
        .D(time_stamp_cnt_cdc_tig[6]),
        .Q(\IC_REG_TSR_I_reg[0]_0 [6]),
        .R(SR));
  FDRE \IC_REG_TSR_I_reg[7] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_TSR_I_reg[15]_0 ),
        .D(time_stamp_cnt_cdc_tig[7]),
        .Q(\IC_REG_TSR_I_reg[0]_0 [5]),
        .R(SR));
  FDRE \IC_REG_TSR_I_reg[8] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_TSR_I_reg[15]_0 ),
        .D(time_stamp_cnt_cdc_tig[8]),
        .Q(\IC_REG_TSR_I_reg[0]_0 [4]),
        .R(SR));
  FDRE \IC_REG_TSR_I_reg[9] 
       (.C(s_axi_aclk),
        .CE(\IC_REG_TSR_I_reg[15]_0 ),
        .D(time_stamp_cnt_cdc_tig[9]),
        .Q(p_11_in[22]),
        .R(SR));
  FDRE IC_SYNC_ECR_ACK_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ECRWEN_2S_CDC_TO_n_1),
        .Q(IC_SYNC_ECR_ACK_I_reg_0),
        .R(1'b0));
  FDRE IC_SYNC_ECR_WEN_FS3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\SINGLE_BIT.s_level_out_d4_reg_5 ),
        .Q(IC_SYNC_ECR_WEN_FS3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_SYNC_TSR_WEN_FS3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\SINGLE_BIT.s_level_out_d4_reg_4 ),
        .Q(IC_SYNC_TSR_WEN_FS3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE IC_TIMESTAMP_RST_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_TIMESTAMP_RST_reg_1),
        .Q(IC_TIMESTAMP_RST_reg_0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_23 LBACK_2S_CDC_TO
       (.IC_REG_SR_LBACK_I0(IC_REG_SR_LBACK_I0),
        .IC_REG_SR_LBACK_I_reg(IC_REG_SR_RSTST_FS2),
        .IC_REG_SR_SLEEP_I0(IC_REG_SR_SLEEP_I0),
        .IC_REG_SR_SLEEP_I_reg(\SINGLE_BIT.s_level_out_d4_reg_11 ),
        .IC_SYNC_SR_LBACK(IC_SYNC_SR_LBACK),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .out(IC_REG_SR_LBACK_FS2),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_24 MSGLST_2S_CDC_TO
       (.IC_SYNC_ISR_MSGLST(IC_SYNC_ISR_MSGLST),
        .\SINGLE_BIT.s_level_out_d4_reg_0 (\SINGLE_BIT.s_level_out_d4_reg_13 ),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_25 MSGLST_F1_2S_CDC_TO
       (.IC_SYNC_ISR_MSGLST_F1(IC_SYNC_ISR_MSGLST_F1),
        .\SINGLE_BIT.s_level_out_d4_reg_0 (\SINGLE_BIT.s_level_out_d4_reg_14 ),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_26 MSGLST_TXE_2S_CDC_TO
       (.IC_SYNC_ISR_MSGLST_TXE(IC_SYNC_ISR_MSGLST_TXE),
        .\SINGLE_BIT.s_level_out_d4_reg_0 (\SINGLE_BIT.s_level_out_d4_reg_15 ),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_27 PEE_2S_CDC_TO
       (.IC_SYNC_SR_PEE(IC_SYNC_SR_PEE),
        .\SINGLE_BIT.s_level_out_d4_reg_0 (\SINGLE_BIT.s_level_out_d4_reg ),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .s_axi_aclk(s_axi_aclk));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \RD_DATA_RET[0]_i_11 
       (.I0(IC_REG_TCR_I[3]),
        .I1(IC_REG_AFR[0]),
        .I2(\RD_DATA_RET[0]_i_3 ),
        .I3(\RD_DATA_RET[0]_i_3_0 ),
        .I4(Q[31]),
        .I5(\IC_REG_IECRS_I_reg[0]_0 [31]),
        .O(\TCR_i_reg[31] ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \RD_DATA_RET[10]_i_9 
       (.I0(\IC_REG_N_BTR_SJW_I_reg[0]_0 [5]),
        .I1(IC_REG_AFR[10]),
        .I2(\RD_DATA_RET[10]_i_3 ),
        .I3(\RD_DATA_RET[10]_i_3_0 ),
        .O(\IC_REG_N_BTR_SJW_I_reg[1]_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[11]_i_6 
       (.I0(\IC_REG_IECRS_I_reg[0]_0 [20]),
        .I1(\RD_DATA_RET[9]_i_3 ),
        .I2(Q[20]),
        .I3(\RD_DATA_RET[9]_i_6 ),
        .O(\IC_REG_IECRS_I_reg[11]_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[11]_i_7 
       (.I0(p_11_in[20]),
        .I1(\RD_DATA_RET[11]_i_5 ),
        .I2(IC_REG_AFR[11]),
        .I3(\RD_DATA_RET[9]_i_3_0 ),
        .O(\IC_REG_TSR_I_reg[11]_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[12]_i_9 
       (.I0(\IC_REG_IECRS_I_reg[0]_0 [19]),
        .I1(\RD_DATA_RET[9]_i_3 ),
        .I2(Q[19]),
        .I3(\RD_DATA_RET[9]_i_6 ),
        .O(\IC_REG_IECRS_I_reg[12]_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[13]_i_6 
       (.I0(\IC_REG_IECRS_I_reg[0]_0 [18]),
        .I1(\RD_DATA_RET[9]_i_3 ),
        .I2(Q[18]),
        .I3(\RD_DATA_RET[9]_i_6 ),
        .O(\IC_REG_IECRS_I_reg[13]_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[14]_i_9 
       (.I0(\IC_REG_IECRS_I_reg[0]_0 [17]),
        .I1(\RD_DATA_RET[9]_i_3 ),
        .I2(Q[17]),
        .I3(\RD_DATA_RET[9]_i_6 ),
        .O(\IC_REG_IECRS_I_reg[14]_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[15]_i_7 
       (.I0(\IC_REG_IECRS_I_reg[0]_0 [16]),
        .I1(\RD_DATA_RET[9]_i_3 ),
        .I2(Q[16]),
        .I3(\RD_DATA_RET[9]_i_6 ),
        .O(\IC_REG_IECRS_I_reg[15]_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \RD_DATA_RET[15]_i_9 
       (.I0(\IC_REG_F_BRPR_I_reg[15]_0 [14]),
        .I1(IC_REG_TRR_I[8]),
        .I2(\RD_DATA_RET[0]_i_3 ),
        .I3(\RD_DATA_RET[0]_i_3_0 ),
        .I4(p_11_in[16]),
        .I5(\IC_REG_F_BTR_SJW_I_reg[0]_0 [0]),
        .O(\IC_REG_F_BRPR_I_reg[15]_1 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \RD_DATA_RET[16]_i_6 
       (.I0(IC_REG_TCR_I[2]),
        .I1(IC_REG_AFR[16]),
        .I2(\RD_DATA_RET[0]_i_3 ),
        .I3(\RD_DATA_RET[0]_i_3_0 ),
        .I4(Q[15]),
        .I5(\IC_REG_IECRS_I_reg[0]_0 [15]),
        .O(\TCR_i_reg[15] ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \RD_DATA_RET[17]_i_7 
       (.I0(\IC_REG_N_BTR_TS2_I_reg[0]_1 [6]),
        .I1(IC_REG_AFR[17]),
        .I2(\RD_DATA_RET[10]_i_3 ),
        .I3(\RD_DATA_RET[10]_i_3_0 ),
        .O(\IC_REG_N_BTR_TS2_I_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \RD_DATA_RET[18]_i_11 
       (.I0(IC_REG_TCR_I[1]),
        .I1(IC_REG_AFR[18]),
        .I2(\RD_DATA_RET[0]_i_3 ),
        .I3(\RD_DATA_RET[0]_i_3_0 ),
        .I4(Q[13]),
        .I5(\IC_REG_IECRS_I_reg[0]_0 [13]),
        .O(\TCR_i_reg[13] ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \RD_DATA_RET[19]_i_7 
       (.I0(IC_REG_TCR_I[0]),
        .I1(IC_REG_AFR[19]),
        .I2(\RD_DATA_RET[0]_i_3 ),
        .I3(\RD_DATA_RET[0]_i_3_0 ),
        .I4(Q[12]),
        .I5(\IC_REG_IECRS_I_reg[0]_0 [12]),
        .O(\TCR_i_reg[12] ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[20]_i_5 
       (.I0(\IC_REG_F_BRPR_I_reg[15]_0 [11]),
        .I1(\RD_DATA_RET[24]_i_7 ),
        .I2(IC_REG_AFR[20]),
        .I3(\RD_DATA_RET[9]_i_3_0 ),
        .O(\IC_REG_F_BRPR_I_reg[20]_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \RD_DATA_RET[21]_i_10 
       (.I0(p_14_in[1]),
        .I1(p_9_in),
        .I2(\RD_DATA_RET[0]_i_3 ),
        .I3(\RD_DATA_RET[0]_i_3_0 ),
        .I4(IC_REG_ESR_F_STER_I),
        .I5(IC_REG_ISR_SLEEP_I_reg_0),
        .O(\RD_DATA_RET[21]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \RD_DATA_RET[21]_i_7 
       (.I0(\RD_DATA_RET[21]_i_9_n_0 ),
        .I1(\RD_DATA_RET[21]_i_5 ),
        .I2(\RD_DATA_RET[21]_i_10_n_0 ),
        .I3(\RD_DATA_RET[21]_i_5_0 ),
        .I4(IC_REG_TRR_I[7]),
        .O(\TRR_i_reg[10] ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[21]_i_9 
       (.I0(Q[10]),
        .I1(\RD_DATA_RET[9]_i_6 ),
        .I2(\IC_REG_IECRS_I_reg[0]_0 [10]),
        .I3(\RD_DATA_RET[9]_i_3 ),
        .O(\RD_DATA_RET[21]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \RD_DATA_RET[22]_i_6 
       (.I0(\RD_DATA_RET[22]_i_8_n_0 ),
        .I1(\RD_DATA_RET[21]_i_5 ),
        .I2(\RD_DATA_RET[22]_i_9_n_0 ),
        .I3(\RD_DATA_RET[21]_i_5_0 ),
        .I4(IC_REG_TRR_I[6]),
        .O(\TRR_i_reg[9] ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[22]_i_8 
       (.I0(Q[9]),
        .I1(\RD_DATA_RET[9]_i_6 ),
        .I2(\IC_REG_IECRS_I_reg[0]_0 [9]),
        .I3(\RD_DATA_RET[9]_i_3 ),
        .O(\RD_DATA_RET[22]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \RD_DATA_RET[22]_i_9 
       (.I0(p_14_in[0]),
        .I1(p_10_in__0),
        .I2(\RD_DATA_RET[0]_i_3 ),
        .I3(\RD_DATA_RET[0]_i_3_0 ),
        .I4(IC_REG_ESR_F_FMER_I),
        .I5(IC_REG_ISR_BSOFF_I_reg_0),
        .O(\RD_DATA_RET[22]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \RD_DATA_RET[23]_i_6 
       (.I0(\RD_DATA_RET[23]_i_8_n_0 ),
        .I1(\RD_DATA_RET[21]_i_5 ),
        .I2(\RD_DATA_RET[23]_i_9_n_0 ),
        .I3(\RD_DATA_RET[21]_i_5_0 ),
        .I4(IC_REG_TRR_I[5]),
        .O(\TRR_i_reg[8] ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[23]_i_8 
       (.I0(Q[8]),
        .I1(\RD_DATA_RET[9]_i_6 ),
        .I2(\IC_REG_IECRS_I_reg[0]_0 [8]),
        .I3(\RD_DATA_RET[9]_i_3 ),
        .O(\RD_DATA_RET[23]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \RD_DATA_RET[23]_i_9 
       (.I0(IC_REG_SR_ESTAT_I[1]),
        .I1(\RX_FIFO_IERBUF.IC_REG_IER_I_reg_n_0_[23] ),
        .I2(\RD_DATA_RET[0]_i_3 ),
        .I3(\RD_DATA_RET[0]_i_3_0 ),
        .I4(IC_REG_ESR_F_CRCER_I),
        .I5(IC_REG_ISR_ERROR_I_reg_0),
        .O(\RD_DATA_RET[23]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[24]_i_6 
       (.I0(IC_REG_AFR[24]),
        .I1(\RD_DATA_RET[9]_i_3_0 ),
        .I2(\IC_REG_IECRS_I_reg[0]_0 [7]),
        .I3(\RD_DATA_RET[9]_i_3 ),
        .O(\RX_FIFO_AFR.IC_REG_AFR_I_reg[24]_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[24]_i_8 
       (.I0(\IC_REG_F_BRPR_I_reg[15]_0 [7]),
        .I1(\RD_DATA_RET[24]_i_7 ),
        .I2(IC_REG_SR_ESTAT_I[0]),
        .I3(\RD_DATA_RET[24]_i_7_0 ),
        .O(\IC_REG_F_BRPR_I_reg[24]_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \RD_DATA_RET[27]_i_10 
       (.I0(\RD_DATA_RET[27]_i_12_n_0 ),
        .I1(\RD_DATA_RET[21]_i_5 ),
        .I2(\RD_DATA_RET[27]_i_13_n_0 ),
        .I3(\RD_DATA_RET[21]_i_5_0 ),
        .I4(IC_REG_TRR_I[4]),
        .O(\TRR_i_reg[4] ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[27]_i_12 
       (.I0(Q[4]),
        .I1(\RD_DATA_RET[9]_i_6 ),
        .I2(\IC_REG_IECRS_I_reg[0]_0 [4]),
        .I3(\RD_DATA_RET[9]_i_3 ),
        .O(\RD_DATA_RET[27]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \RD_DATA_RET[27]_i_13 
       (.I0(IC_REG_SR_BIDLE_I),
        .I1(\RX_FIFO_IERBUF.IC_REG_IER_I_reg_n_0_[27] ),
        .I2(\RD_DATA_RET[0]_i_3 ),
        .I3(\RD_DATA_RET[0]_i_3_0 ),
        .I4(IC_REG_ESR_ACKER_I),
        .I5(IC_REG_ISR_RXOK_I_reg_0),
        .O(\RD_DATA_RET[27]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[27]_i_4 
       (.I0(IC_REG_MSR_DAR_I_reg_0),
        .I1(\RD_DATA_RET_reg[31] ),
        .I2(\IC_REG_BRPR_I_reg[0]_0 [4]),
        .I3(\RD_DATA_RET_reg[31]_0 ),
        .O(IC_REG_MSR_DAR_I_reg_1));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[28]_i_10 
       (.I0(Q[3]),
        .I1(\RD_DATA_RET[9]_i_6 ),
        .I2(\IC_REG_IECRS_I_reg[0]_0 [3]),
        .I3(\RD_DATA_RET[9]_i_3 ),
        .O(\RD_DATA_RET[28]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \RD_DATA_RET[28]_i_11 
       (.I0(IC_REG_SR_NORMAL_I),
        .I1(p_16_in),
        .I2(\RD_DATA_RET[0]_i_3 ),
        .I3(\RD_DATA_RET[0]_i_3_0 ),
        .I4(IC_REG_ESR_BERR_I),
        .I5(IC_REG_ISR_BSFRD_I_reg_0),
        .O(\RD_DATA_RET[28]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[28]_i_3 
       (.I0(IC_REG_MSR_BRSD_I_reg_0),
        .I1(\RD_DATA_RET_reg[31] ),
        .I2(\IC_REG_BRPR_I_reg[0]_0 [3]),
        .I3(\RD_DATA_RET_reg[31]_0 ),
        .O(IC_REG_MSR_BRSD_I_reg_1));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \RD_DATA_RET[28]_i_8 
       (.I0(\RD_DATA_RET[28]_i_10_n_0 ),
        .I1(\RD_DATA_RET[21]_i_5 ),
        .I2(\RD_DATA_RET[28]_i_11_n_0 ),
        .I3(\RD_DATA_RET[21]_i_5_0 ),
        .I4(IC_REG_TRR_I[3]),
        .O(\TRR_i_reg[3] ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[29]_i_10 
       (.I0(Q[2]),
        .I1(\RD_DATA_RET[9]_i_6 ),
        .I2(\IC_REG_IECRS_I_reg[0]_0 [2]),
        .I3(\RD_DATA_RET[9]_i_3 ),
        .O(\RD_DATA_RET[29]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \RD_DATA_RET[29]_i_11 
       (.I0(IC_REG_SR_SLEEP_I),
        .I1(p_17_in),
        .I2(\RD_DATA_RET[0]_i_3 ),
        .I3(\RD_DATA_RET[0]_i_3_0 ),
        .I4(IC_REG_ESR_STER_I),
        .I5(IC_REG_ISR_PEE_I_reg_0),
        .O(\RD_DATA_RET[29]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[29]_i_3 
       (.I0(p_3_in),
        .I1(\RD_DATA_RET_reg[31] ),
        .I2(\IC_REG_BRPR_I_reg[0]_0 [2]),
        .I3(\RD_DATA_RET_reg[31]_0 ),
        .O(IC_REG_MSR_SNOOP_I_reg_0));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \RD_DATA_RET[29]_i_8 
       (.I0(\RD_DATA_RET[29]_i_10_n_0 ),
        .I1(\RD_DATA_RET[21]_i_5 ),
        .I2(\RD_DATA_RET[29]_i_11_n_0 ),
        .I3(\RD_DATA_RET[21]_i_5_0 ),
        .I4(IC_REG_TRR_I[2]),
        .O(\TRR_i_reg[2] ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[30]_i_11 
       (.I0(Q[1]),
        .I1(\RD_DATA_RET[9]_i_6 ),
        .I2(\IC_REG_IECRS_I_reg[0]_0 [1]),
        .I3(\RD_DATA_RET[9]_i_3 ),
        .O(\RD_DATA_RET[30]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \RD_DATA_RET[30]_i_12 
       (.I0(IC_REG_SR_LBACK_I),
        .I1(p_18_in),
        .I2(\RD_DATA_RET[0]_i_3 ),
        .I3(\RD_DATA_RET[0]_i_3_0 ),
        .I4(IC_REG_ESR_FMER_I),
        .I5(IC_REG_ISR_TXOK_I_reg_0),
        .O(\RD_DATA_RET[30]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[30]_i_3 
       (.I0(IC_REG_MSR_LBACK_I_reg_0),
        .I1(\RD_DATA_RET_reg[31] ),
        .I2(\IC_REG_BRPR_I_reg[0]_0 [1]),
        .I3(\RD_DATA_RET_reg[31]_0 ),
        .O(IC_REG_MSR_LBACK_I_reg_1));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \RD_DATA_RET[30]_i_9 
       (.I0(\RD_DATA_RET[30]_i_11_n_0 ),
        .I1(\RD_DATA_RET[21]_i_5 ),
        .I2(\RD_DATA_RET[30]_i_12_n_0 ),
        .I3(\RD_DATA_RET[21]_i_5_0 ),
        .I4(IC_REG_TRR_I[1]),
        .O(\TRR_i_reg[1] ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[31]_i_10 
       (.I0(Q[0]),
        .I1(\RD_DATA_RET[9]_i_6 ),
        .I2(\IC_REG_IECRS_I_reg[0]_0 [0]),
        .I3(\RD_DATA_RET[9]_i_3 ),
        .O(\RD_DATA_RET[31]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \RD_DATA_RET[31]_i_11 
       (.I0(IC_REG_SR_RSTST_I),
        .I1(\RX_FIFO_IERBUF.IC_REG_IER_I_reg_n_0_[31] ),
        .I2(\RD_DATA_RET[0]_i_3 ),
        .I3(\RD_DATA_RET[0]_i_3_0 ),
        .I4(IC_REG_ESR_CRCER_I),
        .I5(IC_REG_ISR_ARBLST_I_reg_0),
        .O(\RD_DATA_RET[31]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[31]_i_3 
       (.I0(IC_REG_MSR_ABR_I_reg_0[0]),
        .I1(\RD_DATA_RET_reg[31] ),
        .I2(\IC_REG_BRPR_I_reg[0]_0 [0]),
        .I3(\RD_DATA_RET_reg[31]_0 ),
        .O(IC_REG_MSR_SLEEP_I_reg_0));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \RD_DATA_RET[31]_i_8 
       (.I0(\RD_DATA_RET[31]_i_10_n_0 ),
        .I1(\RD_DATA_RET[21]_i_5 ),
        .I2(\RD_DATA_RET[31]_i_11_n_0 ),
        .I3(\RD_DATA_RET[21]_i_5_0 ),
        .I4(IC_REG_TRR_I[0]),
        .O(\TRR_i_reg[0] ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[9]_i_4 
       (.I0(IC_REG_AFR[9]),
        .I1(\RD_DATA_RET[9]_i_3_0 ),
        .I2(\IC_REG_IECRS_I_reg[0]_0 [22]),
        .I3(\RD_DATA_RET[9]_i_3 ),
        .O(\RX_FIFO_AFR.IC_REG_AFR_I_reg[9]_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[9]_i_7 
       (.I0(p_11_in[22]),
        .I1(\RD_DATA_RET[11]_i_5 ),
        .I2(Q[22]),
        .I3(\RD_DATA_RET[9]_i_6 ),
        .O(\IC_REG_TSR_I_reg[9]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    RD_DATA_i_1
       (.I0(IC_IPIC_COUNTER_I[0]),
        .I1(Bus2IP_CS),
        .I2(IC_IPIC_COUNTER_I[1]),
        .I3(\IC_IPIC_COUNTER_I_reg[1]_0 ),
        .O(ACK_CR));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_28 RXOK_2S_CDC_TO
       (.IC_SYNC_ISR_RXOK(IC_SYNC_ISR_RXOK),
        .\SINGLE_BIT.s_level_out_d4_reg_0 (\SINGLE_BIT.s_level_out_d4_reg_12 ),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .s_axi_aclk(s_axi_aclk));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[0] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[31]),
        .Q(IC_REG_AFR[0]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[10] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[21]),
        .Q(IC_REG_AFR[10]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[11] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[20]),
        .Q(IC_REG_AFR[11]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[12] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[19]),
        .Q(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [13]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[13] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[18]),
        .Q(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [12]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[14] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[17]),
        .Q(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [11]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[15] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[16]),
        .Q(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [10]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[16] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[15]),
        .Q(IC_REG_AFR[16]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[17] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[14]),
        .Q(IC_REG_AFR[17]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[18] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[13]),
        .Q(IC_REG_AFR[18]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[19] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[12]),
        .Q(IC_REG_AFR[19]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[1] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[30]),
        .Q(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [21]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[20] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[11]),
        .Q(IC_REG_AFR[20]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[21] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[10]),
        .Q(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [9]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[22] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[9]),
        .Q(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [8]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[23] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[8]),
        .Q(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [7]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[24] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[7]),
        .Q(IC_REG_AFR[24]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[25] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[6]),
        .Q(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [6]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[26] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[5]),
        .Q(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [5]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[27] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[4]),
        .Q(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [4]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[28] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[3]),
        .Q(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [3]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[29] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[2]),
        .Q(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [2]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[2] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[29]),
        .Q(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [20]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[30] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[1]),
        .Q(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [1]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[31] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[0]),
        .Q(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [0]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[3] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[28]),
        .Q(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [19]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[4] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[27]),
        .Q(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [18]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[5] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[26]),
        .Q(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [17]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[6] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[25]),
        .Q(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [16]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[7] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[24]),
        .Q(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [15]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[8] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[23]),
        .Q(\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 [14]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_AFR.IC_REG_AFR_I_reg[9] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 ),
        .D(s_axi_wdata[22]),
        .Q(IC_REG_AFR[9]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_IERBUF.IC_REG_IER_I_reg[0] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_1 ),
        .D(s_axi_wdata[31]),
        .Q(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [10]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_IERBUF.IC_REG_IER_I_reg[14] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_1 ),
        .D(s_axi_wdata[17]),
        .Q(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [8]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_IERBUF.IC_REG_IER_I_reg[15] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_1 ),
        .D(s_axi_wdata[16]),
        .Q(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [7]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_IERBUF.IC_REG_IER_I_reg[16] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_1 ),
        .D(s_axi_wdata[15]),
        .Q(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [6]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_IERBUF.IC_REG_IER_I_reg[17] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_1 ),
        .D(s_axi_wdata[14]),
        .Q(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [5]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_IERBUF.IC_REG_IER_I_reg[18] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_1 ),
        .D(s_axi_wdata[13]),
        .Q(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [4]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_IERBUF.IC_REG_IER_I_reg[19] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_1 ),
        .D(s_axi_wdata[12]),
        .Q(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [3]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_IERBUF.IC_REG_IER_I_reg[1] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_1 ),
        .D(s_axi_wdata[30]),
        .Q(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [9]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_IERBUF.IC_REG_IER_I_reg[20] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_1 ),
        .D(s_axi_wdata[11]),
        .Q(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [2]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_IERBUF.IC_REG_IER_I_reg[21] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_1 ),
        .D(s_axi_wdata[10]),
        .Q(p_9_in),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_IERBUF.IC_REG_IER_I_reg[22] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_1 ),
        .D(s_axi_wdata[9]),
        .Q(p_10_in__0),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_IERBUF.IC_REG_IER_I_reg[23] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_1 ),
        .D(s_axi_wdata[8]),
        .Q(\RX_FIFO_IERBUF.IC_REG_IER_I_reg_n_0_[23] ),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_IERBUF.IC_REG_IER_I_reg[25] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_1 ),
        .D(s_axi_wdata[6]),
        .Q(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [1]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_IERBUF.IC_REG_IER_I_reg[26] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_1 ),
        .D(s_axi_wdata[5]),
        .Q(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 [0]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_IERBUF.IC_REG_IER_I_reg[27] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_1 ),
        .D(s_axi_wdata[4]),
        .Q(\RX_FIFO_IERBUF.IC_REG_IER_I_reg_n_0_[27] ),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_IERBUF.IC_REG_IER_I_reg[28] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_1 ),
        .D(s_axi_wdata[3]),
        .Q(p_16_in),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_IERBUF.IC_REG_IER_I_reg[29] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_1 ),
        .D(s_axi_wdata[2]),
        .Q(p_17_in),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_IERBUF.IC_REG_IER_I_reg[30] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_1 ),
        .D(s_axi_wdata[1]),
        .Q(p_18_in),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \RX_FIFO_IERBUF.IC_REG_IER_I_reg[31] 
       (.C(s_axi_aclk),
        .CE(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_1 ),
        .D(s_axi_wdata[0]),
        .Q(\RX_FIFO_IERBUF.IC_REG_IER_I_reg_n_0_[31] ),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_29 SLEEP_2S_CDC_TO
       (.IC_REG_SR_NORMAL_I0(IC_REG_SR_NORMAL_I0),
        .IC_REG_SR_NORMAL_I_reg(IC_REG_SR_LBACK_FS2),
        .IC_REG_SR_NORMAL_I_reg_0(IC_REG_SR_RSTST_FS2),
        .IC_REG_SR_SLEEP_FS3(IC_REG_SR_SLEEP_FS3),
        .IC_SYNC_SR_SLEEP(IC_SYNC_SR_SLEEP),
        .\SINGLE_BIT.s_level_out_d4_reg_0 (\SINGLE_BIT.s_level_out_d4_reg_17 ),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .out(\SINGLE_BIT.s_level_out_d4_reg_11 ),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_30 STER_2S_CDC_TO
       (.IC_SYNC_ESR_STER(IC_SYNC_ESR_STER),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .out(\SINGLE_BIT.s_level_out_d4_reg_8 ),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_31 TDCVWEN_2S_CDC_TO
       (.E(IC_REG_SR_TDCV_I0),
        .\IC_REG_SR_TDCV_I_reg[0] (IC_REG_SRR_CEN_I_reg_0),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .TDCV_CNT_REG_WEN(TDCV_CNT_REG_WEN),
        .TDCV_CNT_REG_WEN_FS3(TDCV_CNT_REG_WEN_FS3),
        .out(TDCV_CNT_REG_WEN_FS2),
        .s_axi_aclk(s_axi_aclk));
  FDRE TDCV_CNT_REG_WEN_FS3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(TDCV_CNT_REG_WEN_FS2),
        .Q(TDCV_CNT_REG_WEN_FS3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_32 TSRWEN_2S_CDC_TO
       (.IC_SYNC_TSR_WEN(IC_SYNC_TSR_WEN),
        .\SINGLE_BIT.s_level_out_d4_reg_0 (\SINGLE_BIT.s_level_out_d4_reg_4 ),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized7_33 TXOK_2S_CDC_TO
       (.IC_SYNC_ISR_TXOK(IC_SYNC_ISR_TXOK),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg_0 ),
        .\SINGLE_BIT.s_level_out_d6_reg_1 (\SINGLE_BIT.s_level_out_d6_reg_1 ),
        .s_axi_aclk(s_axi_aclk));
  LUT5 #(
    .INIT(32'h44444440)) 
    \exclude_winning_or_locked_req[31]_i_3 
       (.I0(MSG_ON_CAN_BUS_AXI),
        .I1(\exclude_winning_or_locked_req_reg[31] ),
        .I2(CANCEL_BUFFER_OL2TL_D1),
        .I3(IC_REG_SRR_CEN_I_reg_0),
        .I4(IC_REG_MSR_DAR_I_reg_0),
        .O(MSG_DONE_FROM_BSP));
  FDRE \ic_reg_sr_tdcv_cdc_tig_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ic_reg_sr_tdcv_cdc_tig_reg[6]_0 [0]),
        .Q(ic_reg_sr_tdcv_cdc_tig[0]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \ic_reg_sr_tdcv_cdc_tig_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ic_reg_sr_tdcv_cdc_tig_reg[6]_0 [1]),
        .Q(ic_reg_sr_tdcv_cdc_tig[1]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \ic_reg_sr_tdcv_cdc_tig_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ic_reg_sr_tdcv_cdc_tig_reg[6]_0 [2]),
        .Q(ic_reg_sr_tdcv_cdc_tig[2]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \ic_reg_sr_tdcv_cdc_tig_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ic_reg_sr_tdcv_cdc_tig_reg[6]_0 [3]),
        .Q(ic_reg_sr_tdcv_cdc_tig[3]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \ic_reg_sr_tdcv_cdc_tig_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ic_reg_sr_tdcv_cdc_tig_reg[6]_0 [4]),
        .Q(ic_reg_sr_tdcv_cdc_tig[4]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \ic_reg_sr_tdcv_cdc_tig_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ic_reg_sr_tdcv_cdc_tig_reg[6]_0 [5]),
        .Q(ic_reg_sr_tdcv_cdc_tig[5]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \ic_reg_sr_tdcv_cdc_tig_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ic_reg_sr_tdcv_cdc_tig_reg[6]_0 [6]),
        .Q(ic_reg_sr_tdcv_cdc_tig[6]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \ic_sync_ecr_cdc_tig_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ic_sync_ecr_cdc_tig_reg[0]_0 [15]),
        .Q(ic_sync_ecr_cdc_tig[0]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \ic_sync_ecr_cdc_tig_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ic_sync_ecr_cdc_tig_reg[0]_0 [5]),
        .Q(ic_sync_ecr_cdc_tig[10]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \ic_sync_ecr_cdc_tig_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ic_sync_ecr_cdc_tig_reg[0]_0 [4]),
        .Q(ic_sync_ecr_cdc_tig[11]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \ic_sync_ecr_cdc_tig_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ic_sync_ecr_cdc_tig_reg[0]_0 [3]),
        .Q(ic_sync_ecr_cdc_tig[12]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \ic_sync_ecr_cdc_tig_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ic_sync_ecr_cdc_tig_reg[0]_0 [2]),
        .Q(ic_sync_ecr_cdc_tig[13]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \ic_sync_ecr_cdc_tig_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ic_sync_ecr_cdc_tig_reg[0]_0 [1]),
        .Q(ic_sync_ecr_cdc_tig[14]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \ic_sync_ecr_cdc_tig_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ic_sync_ecr_cdc_tig_reg[0]_0 [0]),
        .Q(ic_sync_ecr_cdc_tig[15]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \ic_sync_ecr_cdc_tig_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ic_sync_ecr_cdc_tig_reg[0]_0 [14]),
        .Q(ic_sync_ecr_cdc_tig[1]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \ic_sync_ecr_cdc_tig_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ic_sync_ecr_cdc_tig_reg[0]_0 [13]),
        .Q(ic_sync_ecr_cdc_tig[2]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \ic_sync_ecr_cdc_tig_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ic_sync_ecr_cdc_tig_reg[0]_0 [12]),
        .Q(ic_sync_ecr_cdc_tig[3]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \ic_sync_ecr_cdc_tig_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ic_sync_ecr_cdc_tig_reg[0]_0 [11]),
        .Q(ic_sync_ecr_cdc_tig[4]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \ic_sync_ecr_cdc_tig_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ic_sync_ecr_cdc_tig_reg[0]_0 [10]),
        .Q(ic_sync_ecr_cdc_tig[5]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \ic_sync_ecr_cdc_tig_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ic_sync_ecr_cdc_tig_reg[0]_0 [9]),
        .Q(ic_sync_ecr_cdc_tig[6]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \ic_sync_ecr_cdc_tig_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ic_sync_ecr_cdc_tig_reg[0]_0 [8]),
        .Q(ic_sync_ecr_cdc_tig[7]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \ic_sync_ecr_cdc_tig_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ic_sync_ecr_cdc_tig_reg[0]_0 [7]),
        .Q(ic_sync_ecr_cdc_tig[8]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \ic_sync_ecr_cdc_tig_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ic_sync_ecr_cdc_tig_reg[0]_0 [6]),
        .Q(ic_sync_ecr_cdc_tig[9]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \time_stamp_cnt_cdc_tig_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\time_stamp_cnt_cdc_tig_reg[0]_0 [15]),
        .Q(time_stamp_cnt_cdc_tig[0]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \time_stamp_cnt_cdc_tig_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\time_stamp_cnt_cdc_tig_reg[0]_0 [5]),
        .Q(time_stamp_cnt_cdc_tig[10]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \time_stamp_cnt_cdc_tig_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\time_stamp_cnt_cdc_tig_reg[0]_0 [4]),
        .Q(time_stamp_cnt_cdc_tig[11]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \time_stamp_cnt_cdc_tig_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\time_stamp_cnt_cdc_tig_reg[0]_0 [3]),
        .Q(time_stamp_cnt_cdc_tig[12]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \time_stamp_cnt_cdc_tig_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\time_stamp_cnt_cdc_tig_reg[0]_0 [2]),
        .Q(time_stamp_cnt_cdc_tig[13]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \time_stamp_cnt_cdc_tig_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\time_stamp_cnt_cdc_tig_reg[0]_0 [1]),
        .Q(time_stamp_cnt_cdc_tig[14]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \time_stamp_cnt_cdc_tig_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\time_stamp_cnt_cdc_tig_reg[0]_0 [0]),
        .Q(time_stamp_cnt_cdc_tig[15]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \time_stamp_cnt_cdc_tig_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\time_stamp_cnt_cdc_tig_reg[0]_0 [14]),
        .Q(time_stamp_cnt_cdc_tig[1]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \time_stamp_cnt_cdc_tig_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\time_stamp_cnt_cdc_tig_reg[0]_0 [13]),
        .Q(time_stamp_cnt_cdc_tig[2]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \time_stamp_cnt_cdc_tig_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\time_stamp_cnt_cdc_tig_reg[0]_0 [12]),
        .Q(time_stamp_cnt_cdc_tig[3]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \time_stamp_cnt_cdc_tig_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\time_stamp_cnt_cdc_tig_reg[0]_0 [11]),
        .Q(time_stamp_cnt_cdc_tig[4]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \time_stamp_cnt_cdc_tig_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\time_stamp_cnt_cdc_tig_reg[0]_0 [10]),
        .Q(time_stamp_cnt_cdc_tig[5]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \time_stamp_cnt_cdc_tig_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\time_stamp_cnt_cdc_tig_reg[0]_0 [9]),
        .Q(time_stamp_cnt_cdc_tig[6]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \time_stamp_cnt_cdc_tig_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\time_stamp_cnt_cdc_tig_reg[0]_0 [8]),
        .Q(time_stamp_cnt_cdc_tig[7]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \time_stamp_cnt_cdc_tig_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\time_stamp_cnt_cdc_tig_reg[0]_0 [7]),
        .Q(time_stamp_cnt_cdc_tig[8]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  FDRE \time_stamp_cnt_cdc_tig_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\time_stamp_cnt_cdc_tig_reg[0]_0 [6]),
        .Q(time_stamp_cnt_cdc_tig[9]),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_adec
   (E_DATA_ACK,
    ACK_H_reg,
    E_RST_I_reg,
    IC_IPSIG_WRITE_I_reg,
    \ADDR_RET_reg[11]_0 ,
    \ADDR_RET_reg[11]_1 ,
    \ADDR_RET_reg[11]_2 ,
    \ADDR_RET_reg[11]_3 ,
    \RD_INDEX_reg[3] ,
    \RD_INDEX_reg[2] ,
    \RD_INDEX_reg[1] ,
    \ADDR_RET_reg[8]_0 ,
    \ADDR_RET_reg[12]_0 ,
    \ADDR_RET_reg[8]_1 ,
    \ADDR_RET_reg[8]_2 ,
    \ADDR_RET_reg[8]_3 ,
    \ADDR_RET_reg[12]_1 ,
    \ADDR_RET_reg[12]_2 ,
    \ADDR_RET_reg[12]_3 ,
    \ADDR_RET_reg[12]_4 ,
    \ADDR_RET_reg[8]_4 ,
    \ADDR_RET_reg[1]_0 ,
    CS_RX,
    CS_H_INTERNAL,
    CS_H00_out,
    \MEM_DECODE_GEN[0].cs_out_i_reg[0] ,
    CS_H0,
    \ADDR_RET_reg[2]_0 ,
    E,
    \s_axi_wdata[7] ,
    \TRR_i_reg[12] ,
    \ADDR_RET_reg[12]_5 ,
    \RX_FIFO_IERBUF.IC_REG_IER_I_reg[18] ,
    \ADDR_RET_reg[8]_5 ,
    \IC_REG_RXFP_I2_reg[4] ,
    \IC_REG_F_BTR_SJW_I_reg[1] ,
    \IC_REG_F_BTR_SJW_I_reg[0] ,
    \IC_REG_N_BTR_SJW_I_reg[2] ,
    \IC_REG_N_BTR_TS1_I_reg[1] ,
    \IC_REG_N_BTR_TS1_I_reg[0] ,
    \IC_REG_N_BTR_SJW_I_reg[0] ,
    \RX_FIFO_AFR.IC_REG_AFR_I_reg[7] ,
    \RX_FIFO_AFR.IC_REG_AFR_I_reg[6] ,
    \RX_FIFO_AFR.IC_REG_AFR_I_reg[5] ,
    \RX_FIFO_AFR.IC_REG_AFR_I_reg[4] ,
    \RX_FIFO_AFR.IC_REG_AFR_I_reg[3] ,
    \RX_FIFO_AFR.IC_REG_AFR_I_reg[2] ,
    \TCR_i_reg[30] ,
    \IC_REG_F_BRPR_I_reg[18] ,
    \RX_FIFO_IERBUF.IC_REG_IER_I_reg[19] ,
    \ADDR_RET_reg[8]_6 ,
    \s_axi_wdata[23] ,
    \s_axi_wdata[7]_0 ,
    \ADDR_RET_reg[12]_6 ,
    IC_IPSIG_WRITE_I_reg_0,
    \ADDR_RET_reg[8]_7 ,
    IC_IPSIG_WRITE_I_reg_1,
    TRR_REG_WRITE_PULSE0,
    IC_REG_SRR_CEN_I_reg,
    IC_REG_SRR_CEN_I_reg_0,
    IC_REG_SRR_CEN_I_reg_1,
    p_51_in,
    \ADDR_RET_reg[8]_8 ,
    \ADDR_RET_reg[8]_9 ,
    p_71_in,
    IC_IPSIG_WRITE_I_reg_2,
    \ADDR_RET_reg[12]_7 ,
    \ADDR_RET_reg[11]_4 ,
    \ADDR_RET_reg[8]_10 ,
    CS_RX_T,
    CS_H_INTERNAL_0,
    s_axi_wready,
    s_axi_arready,
    \RD_DATA_RET_reg[0]_0 ,
    ACK_RET_reg_0,
    s_axi_aclk,
    ACK_TX_WR,
    ACK_TX_RD,
    ACK_CR,
    ACK_RX,
    ACK_RX_T,
    s_axi_wdata,
    \RD_DATA_RET_reg[24]_0 ,
    IC_REG_MSR_SLEEP_I_reg,
    D,
    Q,
    \RD_DATA_RET_reg[31]_0 ,
    \RD_DATA_RET_reg[30]_0 ,
    \RD_DATA_RET_reg[31]_1 ,
    IC_REG_SRR_SRST,
    \RD_DATA_RET_reg[31]_2 ,
    \RD_DATA_RET_reg[16]_0 ,
    \IC_REG_F_BRPR_I_reg[15] ,
    \RD_DATA_RET_reg[30]_1 ,
    \RD_DATA_RET_reg[26]_0 ,
    \RD_DATA_RET_reg[24]_1 ,
    \RD_DATA_RET_reg[25]_0 ,
    \RD_DATA_RET_reg[25]_1 ,
    \RD_DATA_RET_reg[24]_2 ,
    \RD_DATA_RET_reg[26]_1 ,
    \RD_DATA_RET_reg[26]_2 ,
    \RD_DATA_RET_reg[23]_0 ,
    \RD_DATA_RET_reg[16]_1 ,
    \RD_DATA_RET_reg[22]_0 ,
    \RD_DATA_RET_reg[21]_0 ,
    \RD_DATA_RET_reg[20]_0 ,
    \RD_DATA_RET_reg[27]_0 ,
    \RD_DATA_RET_reg[27]_1 ,
    \RD_DATA_RET_reg[21]_1 ,
    \RD_DATA_RET[20]_i_3_0 ,
    \RD_DATA_RET_reg[0]_1 ,
    p_13_in,
    \RD_DATA_RET_reg[17]_0 ,
    \RD_DATA_RET_reg[16]_2 ,
    \RD_DATA_RET_reg[16]_3 ,
    \RD_DATA_RET_reg[14]_0 ,
    \RD_DATA_RET_reg[10]_0 ,
    \RD_DATA_RET[9]_i_3_0 ,
    \RD_DATA_RET_reg[0]_2 ,
    \RD_DATA_RET_reg[8]_0 ,
    doutb,
    \RD_DATA_RET_reg[8]_1 ,
    IC_REG_TRR_I,
    \RD_DATA_RET[1]_i_3_0 ,
    IC_REG_TCR_I,
    \RD_DATA_RET[1]_i_3_1 ,
    \RD_DATA_RET[1]_i_3_2 ,
    \RD_DATA_RET_reg[0]_3 ,
    \RD_DATA_RET_reg[0]_4 ,
    Bus2IP_CS,
    ACK_RET_reg_1,
    CS_H_D1,
    Bus2IP_RNW,
    \IC_REG_IECRS_I_reg[0] ,
    \RD_INDEX_reg[5] ,
    \RD_DATA_RET[20]_i_3_1 ,
    \RD_DATA_RET[20]_i_4_0 ,
    \RD_DATA_RET_reg[19]_0 ,
    \RD_DATA_RET[19]_i_4_0 ,
    \RD_DATA_RET_reg[18]_0 ,
    \RD_DATA_RET_reg[18]_1 ,
    \RD_DATA_RET[26]_i_5_0 ,
    \RD_DATA_RET[31]_i_2_0 ,
    \RD_DATA_RET[30]_i_2_0 ,
    \RD_DATA_RET[29]_i_2_0 ,
    \RD_DATA_RET[28]_i_2_0 ,
    \RD_DATA_RET[27]_i_3_0 ,
    IC_REG_SR_BBSY_I,
    \RD_DATA_RET[24]_i_2 ,
    \RD_DATA_RET[21]_i_3_0 ,
    \RD_DATA_RET[23]_i_3_0 ,
    \RD_DATA_RET[22]_i_3_0 ,
    \RD_DATA_RET[21]_i_3_1 ,
    \RD_DATA_RET[11]_i_3_0 ,
    \RD_DATA_RET_reg[9]_0 ,
    \RD_DATA_RET_reg[12]_0 ,
    \RD_DATA_RET_reg[10]_1 ,
    \RD_DATA_RET[11]_i_3_1 ,
    \RD_DATA_RET[26]_i_7_0 ,
    \RD_DATA_RET[24]_i_2_0 ,
    \RD_DATA_RET[17]_i_2_0 ,
    \RD_DATA_RET[21]_i_5_0 ,
    \RD_DATA_RET_reg[9]_1 ,
    \RD_DATA_RET[15]_i_4_0 ,
    \RD_DATA_RET[1]_i_6_0 ,
    \RD_DATA_RET_reg[18]_2 ,
    \RD_DATA_RET[24]_i_4_0 ,
    \RD_DATA_RET[14]_i_4_0 ,
    \RD_DATA_RET[13]_i_3_0 ,
    \RD_DATA_RET[12]_i_4_0 ,
    \RD_DATA_RET[11]_i_3_2 ,
    \RD_DATA_RET[9]_i_3_1 ,
    \RD_DATA_RET[15]_i_4_1 ,
    IC_REG_ESR_F_BERR_I,
    IC_REG_SR_ERRWRN_I,
    \RD_DATA_RET[19]_i_3_0 ,
    \RD_DATA_RET[17]_i_2_1 ,
    \RD_DATA_RET_reg[10]_2 ,
    CS_H_D1_1,
    \ADDR_RET_reg[0]_0 );
  output E_DATA_ACK;
  output ACK_H_reg;
  output E_RST_I_reg;
  output IC_IPSIG_WRITE_I_reg;
  output \ADDR_RET_reg[11]_0 ;
  output \ADDR_RET_reg[11]_1 ;
  output \ADDR_RET_reg[11]_2 ;
  output \ADDR_RET_reg[11]_3 ;
  output \RD_INDEX_reg[3] ;
  output \RD_INDEX_reg[2] ;
  output \RD_INDEX_reg[1] ;
  output \ADDR_RET_reg[8]_0 ;
  output \ADDR_RET_reg[12]_0 ;
  output \ADDR_RET_reg[8]_1 ;
  output \ADDR_RET_reg[8]_2 ;
  output \ADDR_RET_reg[8]_3 ;
  output \ADDR_RET_reg[12]_1 ;
  output \ADDR_RET_reg[12]_2 ;
  output \ADDR_RET_reg[12]_3 ;
  output \ADDR_RET_reg[12]_4 ;
  output \ADDR_RET_reg[8]_4 ;
  output \ADDR_RET_reg[1]_0 ;
  output CS_RX;
  output CS_H_INTERNAL;
  output CS_H00_out;
  output \MEM_DECODE_GEN[0].cs_out_i_reg[0] ;
  output CS_H0;
  output [10:0]\ADDR_RET_reg[2]_0 ;
  output [0:0]E;
  output [0:0]\s_axi_wdata[7] ;
  output \TRR_i_reg[12] ;
  output \ADDR_RET_reg[12]_5 ;
  output \RX_FIFO_IERBUF.IC_REG_IER_I_reg[18] ;
  output \ADDR_RET_reg[8]_5 ;
  output \IC_REG_RXFP_I2_reg[4] ;
  output \IC_REG_F_BTR_SJW_I_reg[1] ;
  output \IC_REG_F_BTR_SJW_I_reg[0] ;
  output \IC_REG_N_BTR_SJW_I_reg[2] ;
  output \IC_REG_N_BTR_TS1_I_reg[1] ;
  output \IC_REG_N_BTR_TS1_I_reg[0] ;
  output \IC_REG_N_BTR_SJW_I_reg[0] ;
  output \RX_FIFO_AFR.IC_REG_AFR_I_reg[7] ;
  output \RX_FIFO_AFR.IC_REG_AFR_I_reg[6] ;
  output \RX_FIFO_AFR.IC_REG_AFR_I_reg[5] ;
  output \RX_FIFO_AFR.IC_REG_AFR_I_reg[4] ;
  output \RX_FIFO_AFR.IC_REG_AFR_I_reg[3] ;
  output \RX_FIFO_AFR.IC_REG_AFR_I_reg[2] ;
  output \TCR_i_reg[30] ;
  output \IC_REG_F_BRPR_I_reg[18] ;
  output \RX_FIFO_IERBUF.IC_REG_IER_I_reg[19] ;
  output \ADDR_RET_reg[8]_6 ;
  output \s_axi_wdata[23] ;
  output \s_axi_wdata[7]_0 ;
  output [0:0]\ADDR_RET_reg[12]_6 ;
  output [0:0]IC_IPSIG_WRITE_I_reg_0;
  output \ADDR_RET_reg[8]_7 ;
  output [0:0]IC_IPSIG_WRITE_I_reg_1;
  output TRR_REG_WRITE_PULSE0;
  output [0:0]IC_REG_SRR_CEN_I_reg;
  output [0:0]IC_REG_SRR_CEN_I_reg_0;
  output [0:0]IC_REG_SRR_CEN_I_reg_1;
  output p_51_in;
  output \ADDR_RET_reg[8]_8 ;
  output [0:0]\ADDR_RET_reg[8]_9 ;
  output p_71_in;
  output [0:0]IC_IPSIG_WRITE_I_reg_2;
  output [0:0]\ADDR_RET_reg[12]_7 ;
  output [0:0]\ADDR_RET_reg[11]_4 ;
  output \ADDR_RET_reg[8]_10 ;
  output CS_RX_T;
  output CS_H_INTERNAL_0;
  output s_axi_wready;
  output s_axi_arready;
  output [31:0]\RD_DATA_RET_reg[0]_0 ;
  input ACK_RET_reg_0;
  input s_axi_aclk;
  input ACK_TX_WR;
  input ACK_TX_RD;
  input ACK_CR;
  input ACK_RX;
  input ACK_RX_T;
  input [2:0]s_axi_wdata;
  input [1:0]\RD_DATA_RET_reg[24]_0 ;
  input IC_REG_MSR_SLEEP_I_reg;
  input [16:0]D;
  input [1:0]Q;
  input \RD_DATA_RET_reg[31]_0 ;
  input \RD_DATA_RET_reg[30]_0 ;
  input \RD_DATA_RET_reg[31]_1 ;
  input IC_REG_SRR_SRST;
  input \RD_DATA_RET_reg[31]_2 ;
  input [11:0]\RD_DATA_RET_reg[16]_0 ;
  input \IC_REG_F_BRPR_I_reg[15] ;
  input \RD_DATA_RET_reg[30]_1 ;
  input \RD_DATA_RET_reg[26]_0 ;
  input [1:0]\RD_DATA_RET_reg[24]_1 ;
  input \RD_DATA_RET_reg[25]_0 ;
  input [0:0]\RD_DATA_RET_reg[25]_1 ;
  input \RD_DATA_RET_reg[24]_2 ;
  input \RD_DATA_RET_reg[26]_1 ;
  input \RD_DATA_RET_reg[26]_2 ;
  input \RD_DATA_RET_reg[23]_0 ;
  input [7:0]\RD_DATA_RET_reg[16]_1 ;
  input \RD_DATA_RET_reg[22]_0 ;
  input \RD_DATA_RET_reg[21]_0 ;
  input \RD_DATA_RET_reg[20]_0 ;
  input [4:0]\RD_DATA_RET_reg[27]_0 ;
  input [4:0]\RD_DATA_RET_reg[27]_1 ;
  input [2:0]\RD_DATA_RET_reg[21]_1 ;
  input [3:0]\RD_DATA_RET[20]_i_3_0 ;
  input [9:0]\RD_DATA_RET_reg[0]_1 ;
  input [10:0]p_13_in;
  input \RD_DATA_RET_reg[17]_0 ;
  input \RD_DATA_RET_reg[16]_2 ;
  input \RD_DATA_RET_reg[16]_3 ;
  input \RD_DATA_RET_reg[14]_0 ;
  input \RD_DATA_RET_reg[10]_0 ;
  input [4:0]\RD_DATA_RET[9]_i_3_0 ;
  input [12:0]\RD_DATA_RET_reg[0]_2 ;
  input \RD_DATA_RET_reg[8]_0 ;
  input [0:0]doutb;
  input \RD_DATA_RET_reg[8]_1 ;
  input [21:0]IC_REG_TRR_I;
  input [21:0]\RD_DATA_RET[1]_i_3_0 ;
  input [27:0]IC_REG_TCR_I;
  input [12:0]\RD_DATA_RET[1]_i_3_1 ;
  input [13:0]\RD_DATA_RET[1]_i_3_2 ;
  input \RD_DATA_RET_reg[0]_3 ;
  input \RD_DATA_RET_reg[0]_4 ;
  input Bus2IP_CS;
  input ACK_RET_reg_1;
  input CS_H_D1;
  input Bus2IP_RNW;
  input \IC_REG_IECRS_I_reg[0] ;
  input \RD_INDEX_reg[5] ;
  input \RD_DATA_RET[20]_i_3_1 ;
  input \RD_DATA_RET[20]_i_4_0 ;
  input \RD_DATA_RET_reg[19]_0 ;
  input \RD_DATA_RET[19]_i_4_0 ;
  input \RD_DATA_RET_reg[18]_0 ;
  input [11:0]\RD_DATA_RET_reg[18]_1 ;
  input [5:0]\RD_DATA_RET[26]_i_5_0 ;
  input \RD_DATA_RET[31]_i_2_0 ;
  input \RD_DATA_RET[30]_i_2_0 ;
  input \RD_DATA_RET[29]_i_2_0 ;
  input \RD_DATA_RET[28]_i_2_0 ;
  input \RD_DATA_RET[27]_i_3_0 ;
  input IC_REG_SR_BBSY_I;
  input [7:0]\RD_DATA_RET[24]_i_2 ;
  input [2:0]\RD_DATA_RET[21]_i_3_0 ;
  input \RD_DATA_RET[23]_i_3_0 ;
  input \RD_DATA_RET[22]_i_3_0 ;
  input \RD_DATA_RET[21]_i_3_1 ;
  input [4:0]\RD_DATA_RET[11]_i_3_0 ;
  input [5:0]\RD_DATA_RET_reg[9]_0 ;
  input [2:0]\RD_DATA_RET_reg[12]_0 ;
  input [5:0]\RD_DATA_RET_reg[10]_1 ;
  input \RD_DATA_RET[11]_i_3_1 ;
  input [5:0]\RD_DATA_RET[26]_i_7_0 ;
  input \RD_DATA_RET[24]_i_2_0 ;
  input [3:0]\RD_DATA_RET[17]_i_2_0 ;
  input [2:0]\RD_DATA_RET[21]_i_5_0 ;
  input \RD_DATA_RET_reg[9]_1 ;
  input \RD_DATA_RET[15]_i_4_0 ;
  input [6:0]\RD_DATA_RET[1]_i_6_0 ;
  input \RD_DATA_RET_reg[18]_2 ;
  input \RD_DATA_RET[24]_i_4_0 ;
  input \RD_DATA_RET[14]_i_4_0 ;
  input \RD_DATA_RET[13]_i_3_0 ;
  input \RD_DATA_RET[12]_i_4_0 ;
  input \RD_DATA_RET[11]_i_3_2 ;
  input \RD_DATA_RET[9]_i_3_1 ;
  input \RD_DATA_RET[15]_i_4_1 ;
  input IC_REG_ESR_F_BERR_I;
  input IC_REG_SR_ERRWRN_I;
  input \RD_DATA_RET[19]_i_3_0 ;
  input \RD_DATA_RET[17]_i_2_1 ;
  input \RD_DATA_RET_reg[10]_2 ;
  input CS_H_D1_1;
  input [12:0]\ADDR_RET_reg[0]_0 ;

  wire ACK_CR;
  wire ACK_H_reg;
  wire ACK_RET_i_1_n_0;
  wire ACK_RET_reg_0;
  wire ACK_RET_reg_1;
  wire ACK_RX;
  wire ACK_RX_T;
  wire ACK_TX_RD;
  wire ACK_TX_WR;
  wire [12:0]\ADDR_RET_reg[0]_0 ;
  wire \ADDR_RET_reg[11]_0 ;
  wire \ADDR_RET_reg[11]_1 ;
  wire \ADDR_RET_reg[11]_2 ;
  wire \ADDR_RET_reg[11]_3 ;
  wire [0:0]\ADDR_RET_reg[11]_4 ;
  wire \ADDR_RET_reg[12]_0 ;
  wire \ADDR_RET_reg[12]_1 ;
  wire \ADDR_RET_reg[12]_2 ;
  wire \ADDR_RET_reg[12]_3 ;
  wire \ADDR_RET_reg[12]_4 ;
  wire \ADDR_RET_reg[12]_5 ;
  wire [0:0]\ADDR_RET_reg[12]_6 ;
  wire [0:0]\ADDR_RET_reg[12]_7 ;
  wire \ADDR_RET_reg[1]_0 ;
  wire [10:0]\ADDR_RET_reg[2]_0 ;
  wire \ADDR_RET_reg[8]_0 ;
  wire \ADDR_RET_reg[8]_1 ;
  wire \ADDR_RET_reg[8]_10 ;
  wire \ADDR_RET_reg[8]_2 ;
  wire \ADDR_RET_reg[8]_3 ;
  wire \ADDR_RET_reg[8]_4 ;
  wire \ADDR_RET_reg[8]_5 ;
  wire \ADDR_RET_reg[8]_6 ;
  wire \ADDR_RET_reg[8]_7 ;
  wire \ADDR_RET_reg[8]_8 ;
  wire [0:0]\ADDR_RET_reg[8]_9 ;
  wire [0:1]ADDR_TX;
  wire [3:0]BRAM_SEL;
  wire Bus2IP_CS;
  wire Bus2IP_RNW;
  wire CS_H0;
  wire CS_H00_out;
  wire CS_H_D1;
  wire CS_H_D1_1;
  wire CS_H_INTERNAL;
  wire CS_H_INTERNAL_0;
  wire CS_RX;
  wire CS_RX_T;
  wire [16:0]D;
  wire [0:0]E;
  wire E_DATA_ACK;
  wire E_RST_I_reg;
  wire IC_IPSIG_WRITE_I_reg;
  wire [0:0]IC_IPSIG_WRITE_I_reg_0;
  wire [0:0]IC_IPSIG_WRITE_I_reg_1;
  wire [0:0]IC_IPSIG_WRITE_I_reg_2;
  wire IC_REG_ESR_F_BERR_I;
  wire \IC_REG_F_BRPR_I[15]_i_2_n_0 ;
  wire \IC_REG_F_BRPR_I_reg[15] ;
  wire \IC_REG_F_BRPR_I_reg[18] ;
  wire \IC_REG_F_BTR_SJW_I_reg[0] ;
  wire \IC_REG_F_BTR_SJW_I_reg[1] ;
  wire \IC_REG_IECRS_I[0]_i_2_n_0 ;
  wire \IC_REG_IECRS_I_reg[0] ;
  wire \IC_REG_IETRS_I[0]_i_2_n_0 ;
  wire IC_REG_MSR_SLEEP_I_reg;
  wire \IC_REG_N_BTR_SJW_I_reg[0] ;
  wire \IC_REG_N_BTR_SJW_I_reg[2] ;
  wire \IC_REG_N_BTR_TS1_I_reg[0] ;
  wire \IC_REG_N_BTR_TS1_I_reg[1] ;
  wire \IC_REG_RXFP_I2_reg[4] ;
  wire [0:0]IC_REG_SRR_CEN_I_reg;
  wire [0:0]IC_REG_SRR_CEN_I_reg_0;
  wire [0:0]IC_REG_SRR_CEN_I_reg_1;
  wire IC_REG_SRR_SRST;
  wire IC_REG_SR_BBSY_I;
  wire IC_REG_SR_ERRWRN_I;
  wire [27:0]IC_REG_TCR_I;
  wire [21:0]IC_REG_TRR_I;
  wire \IC_REG_WMR_I2[0]_i_2__0_n_0 ;
  wire \IC_REG_WMR_I2[0]_i_2_n_0 ;
  wire \MEM_DECODE_GEN[0].cs_out_i_reg[0] ;
  wire [1:0]Q;
  wire \RD_DATA_RET[0]_i_12_n_0 ;
  wire \RD_DATA_RET[0]_i_2_n_0 ;
  wire \RD_DATA_RET[0]_i_3_n_0 ;
  wire \RD_DATA_RET[0]_i_8_n_0 ;
  wire \RD_DATA_RET[10]_i_2_n_0 ;
  wire \RD_DATA_RET[10]_i_3_n_0 ;
  wire \RD_DATA_RET[10]_i_4_n_0 ;
  wire \RD_DATA_RET[10]_i_7_n_0 ;
  wire \RD_DATA_RET[10]_i_8_n_0 ;
  wire [4:0]\RD_DATA_RET[11]_i_3_0 ;
  wire \RD_DATA_RET[11]_i_3_1 ;
  wire \RD_DATA_RET[11]_i_3_2 ;
  wire \RD_DATA_RET[11]_i_4_n_0 ;
  wire \RD_DATA_RET[11]_i_5_n_0 ;
  wire \RD_DATA_RET[12]_i_10_n_0 ;
  wire \RD_DATA_RET[12]_i_4_0 ;
  wire \RD_DATA_RET[12]_i_5_n_0 ;
  wire \RD_DATA_RET[12]_i_6_n_0 ;
  wire \RD_DATA_RET[12]_i_7_n_0 ;
  wire \RD_DATA_RET[12]_i_8_n_0 ;
  wire \RD_DATA_RET[13]_i_3_0 ;
  wire \RD_DATA_RET[13]_i_4_n_0 ;
  wire \RD_DATA_RET[13]_i_5_n_0 ;
  wire \RD_DATA_RET[13]_i_7_n_0 ;
  wire \RD_DATA_RET[14]_i_10_n_0 ;
  wire \RD_DATA_RET[14]_i_3_n_0 ;
  wire \RD_DATA_RET[14]_i_4_0 ;
  wire \RD_DATA_RET[14]_i_4_n_0 ;
  wire \RD_DATA_RET[14]_i_5_n_0 ;
  wire \RD_DATA_RET[14]_i_6_n_0 ;
  wire \RD_DATA_RET[14]_i_7_n_0 ;
  wire \RD_DATA_RET[14]_i_8_n_0 ;
  wire \RD_DATA_RET[15]_i_10_n_0 ;
  wire \RD_DATA_RET[15]_i_4_0 ;
  wire \RD_DATA_RET[15]_i_4_1 ;
  wire \RD_DATA_RET[15]_i_5_n_0 ;
  wire \RD_DATA_RET[15]_i_6_n_0 ;
  wire \RD_DATA_RET[15]_i_8_n_0 ;
  wire \RD_DATA_RET[16]_i_10_n_0 ;
  wire \RD_DATA_RET[16]_i_2_n_0 ;
  wire \RD_DATA_RET[16]_i_5_n_0 ;
  wire \RD_DATA_RET[16]_i_8_n_0 ;
  wire \RD_DATA_RET[16]_i_9_n_0 ;
  wire [3:0]\RD_DATA_RET[17]_i_2_0 ;
  wire \RD_DATA_RET[17]_i_2_1 ;
  wire \RD_DATA_RET[17]_i_2_n_0 ;
  wire \RD_DATA_RET[17]_i_3_n_0 ;
  wire \RD_DATA_RET[17]_i_4_n_0 ;
  wire \RD_DATA_RET[17]_i_6_n_0 ;
  wire \RD_DATA_RET[18]_i_10_n_0 ;
  wire \RD_DATA_RET[18]_i_13_n_0 ;
  wire \RD_DATA_RET[18]_i_14_n_0 ;
  wire \RD_DATA_RET[18]_i_7_n_0 ;
  wire \RD_DATA_RET[18]_i_9_n_0 ;
  wire \RD_DATA_RET[19]_i_3_0 ;
  wire \RD_DATA_RET[19]_i_4_0 ;
  wire \RD_DATA_RET[19]_i_5_n_0 ;
  wire \RD_DATA_RET[19]_i_6_n_0 ;
  wire \RD_DATA_RET[19]_i_8_n_0 ;
  wire [21:0]\RD_DATA_RET[1]_i_3_0 ;
  wire [12:0]\RD_DATA_RET[1]_i_3_1 ;
  wire [13:0]\RD_DATA_RET[1]_i_3_2 ;
  wire \RD_DATA_RET[1]_i_4_n_0 ;
  wire \RD_DATA_RET[1]_i_5_n_0 ;
  wire [6:0]\RD_DATA_RET[1]_i_6_0 ;
  wire \RD_DATA_RET[1]_i_6_n_0 ;
  wire \RD_DATA_RET[1]_i_7_n_0 ;
  wire [3:0]\RD_DATA_RET[20]_i_3_0 ;
  wire \RD_DATA_RET[20]_i_3_1 ;
  wire \RD_DATA_RET[20]_i_3_n_0 ;
  wire \RD_DATA_RET[20]_i_4_0 ;
  wire \RD_DATA_RET[20]_i_4_n_0 ;
  wire \RD_DATA_RET[20]_i_6_n_0 ;
  wire \RD_DATA_RET[20]_i_7_n_0 ;
  wire \RD_DATA_RET[20]_i_8_n_0 ;
  wire [2:0]\RD_DATA_RET[21]_i_3_0 ;
  wire \RD_DATA_RET[21]_i_3_1 ;
  wire \RD_DATA_RET[21]_i_3_n_0 ;
  wire \RD_DATA_RET[21]_i_4_n_0 ;
  wire [2:0]\RD_DATA_RET[21]_i_5_0 ;
  wire \RD_DATA_RET[21]_i_5_n_0 ;
  wire \RD_DATA_RET[21]_i_6_n_0 ;
  wire \RD_DATA_RET[21]_i_8_n_0 ;
  wire \RD_DATA_RET[22]_i_3_0 ;
  wire \RD_DATA_RET[22]_i_3_n_0 ;
  wire \RD_DATA_RET[22]_i_4_n_0 ;
  wire \RD_DATA_RET[22]_i_5_n_0 ;
  wire \RD_DATA_RET[22]_i_7_n_0 ;
  wire \RD_DATA_RET[23]_i_3_0 ;
  wire \RD_DATA_RET[23]_i_3_n_0 ;
  wire \RD_DATA_RET[23]_i_4_n_0 ;
  wire \RD_DATA_RET[23]_i_5_n_0 ;
  wire \RD_DATA_RET[23]_i_7_n_0 ;
  wire [7:0]\RD_DATA_RET[24]_i_2 ;
  wire \RD_DATA_RET[24]_i_2_0 ;
  wire \RD_DATA_RET[24]_i_4_0 ;
  wire \RD_DATA_RET[24]_i_7_n_0 ;
  wire \RD_DATA_RET[25]_i_5_n_0 ;
  wire \RD_DATA_RET[25]_i_6_n_0 ;
  wire \RD_DATA_RET[25]_i_7_n_0 ;
  wire \RD_DATA_RET[25]_i_8_n_0 ;
  wire \RD_DATA_RET[26]_i_2_n_0 ;
  wire \RD_DATA_RET[26]_i_3_n_0 ;
  wire [5:0]\RD_DATA_RET[26]_i_5_0 ;
  wire \RD_DATA_RET[26]_i_5_n_0 ;
  wire \RD_DATA_RET[26]_i_6_n_0 ;
  wire [5:0]\RD_DATA_RET[26]_i_7_0 ;
  wire \RD_DATA_RET[26]_i_7_n_0 ;
  wire \RD_DATA_RET[26]_i_8_n_0 ;
  wire \RD_DATA_RET[26]_i_9_n_0 ;
  wire \RD_DATA_RET[27]_i_11_n_0 ;
  wire \RD_DATA_RET[27]_i_3_0 ;
  wire \RD_DATA_RET[27]_i_6_n_0 ;
  wire \RD_DATA_RET[27]_i_7_n_0 ;
  wire \RD_DATA_RET[27]_i_9_n_0 ;
  wire \RD_DATA_RET[28]_i_2_0 ;
  wire \RD_DATA_RET[28]_i_5_n_0 ;
  wire \RD_DATA_RET[28]_i_7_n_0 ;
  wire \RD_DATA_RET[28]_i_9_n_0 ;
  wire \RD_DATA_RET[29]_i_2_0 ;
  wire \RD_DATA_RET[29]_i_5_n_0 ;
  wire \RD_DATA_RET[29]_i_7_n_0 ;
  wire \RD_DATA_RET[29]_i_9_n_0 ;
  wire \RD_DATA_RET[2]_i_4_n_0 ;
  wire \RD_DATA_RET[2]_i_6_n_0 ;
  wire \RD_DATA_RET[2]_i_7_n_0 ;
  wire \RD_DATA_RET[30]_i_10_n_0 ;
  wire \RD_DATA_RET[30]_i_2_0 ;
  wire \RD_DATA_RET[30]_i_2_n_0 ;
  wire \RD_DATA_RET[30]_i_4_n_0 ;
  wire \RD_DATA_RET[30]_i_5_n_0 ;
  wire \RD_DATA_RET[30]_i_6_n_0 ;
  wire \RD_DATA_RET[30]_i_8_n_0 ;
  wire \RD_DATA_RET[31]_i_2_0 ;
  wire \RD_DATA_RET[31]_i_2_n_0 ;
  wire \RD_DATA_RET[31]_i_4_n_0 ;
  wire \RD_DATA_RET[31]_i_5_n_0 ;
  wire \RD_DATA_RET[31]_i_7_n_0 ;
  wire \RD_DATA_RET[31]_i_9_n_0 ;
  wire \RD_DATA_RET[3]_i_4_n_0 ;
  wire \RD_DATA_RET[3]_i_5_n_0 ;
  wire \RD_DATA_RET[4]_i_4_n_0 ;
  wire \RD_DATA_RET[4]_i_5_n_0 ;
  wire \RD_DATA_RET[5]_i_4_n_0 ;
  wire \RD_DATA_RET[5]_i_5_n_0 ;
  wire \RD_DATA_RET[6]_i_4_n_0 ;
  wire \RD_DATA_RET[6]_i_5_n_0 ;
  wire \RD_DATA_RET[7]_i_4_n_0 ;
  wire \RD_DATA_RET[7]_i_5_n_0 ;
  wire \RD_DATA_RET[8]_i_2_n_0 ;
  wire \RD_DATA_RET[8]_i_3_n_0 ;
  wire \RD_DATA_RET[8]_i_6_n_0 ;
  wire [4:0]\RD_DATA_RET[9]_i_3_0 ;
  wire \RD_DATA_RET[9]_i_3_1 ;
  wire \RD_DATA_RET[9]_i_5_n_0 ;
  wire \RD_DATA_RET[9]_i_6_n_0 ;
  wire [31:0]\RD_DATA_RET_reg[0]_0 ;
  wire [9:0]\RD_DATA_RET_reg[0]_1 ;
  wire [12:0]\RD_DATA_RET_reg[0]_2 ;
  wire \RD_DATA_RET_reg[0]_3 ;
  wire \RD_DATA_RET_reg[0]_4 ;
  wire \RD_DATA_RET_reg[10]_0 ;
  wire [5:0]\RD_DATA_RET_reg[10]_1 ;
  wire \RD_DATA_RET_reg[10]_2 ;
  wire [2:0]\RD_DATA_RET_reg[12]_0 ;
  wire \RD_DATA_RET_reg[14]_0 ;
  wire [11:0]\RD_DATA_RET_reg[16]_0 ;
  wire [7:0]\RD_DATA_RET_reg[16]_1 ;
  wire \RD_DATA_RET_reg[16]_2 ;
  wire \RD_DATA_RET_reg[16]_3 ;
  wire \RD_DATA_RET_reg[17]_0 ;
  wire \RD_DATA_RET_reg[18]_0 ;
  wire [11:0]\RD_DATA_RET_reg[18]_1 ;
  wire \RD_DATA_RET_reg[18]_2 ;
  wire \RD_DATA_RET_reg[19]_0 ;
  wire \RD_DATA_RET_reg[20]_0 ;
  wire \RD_DATA_RET_reg[21]_0 ;
  wire [2:0]\RD_DATA_RET_reg[21]_1 ;
  wire \RD_DATA_RET_reg[22]_0 ;
  wire \RD_DATA_RET_reg[23]_0 ;
  wire [1:0]\RD_DATA_RET_reg[24]_0 ;
  wire [1:0]\RD_DATA_RET_reg[24]_1 ;
  wire \RD_DATA_RET_reg[24]_2 ;
  wire \RD_DATA_RET_reg[25]_0 ;
  wire [0:0]\RD_DATA_RET_reg[25]_1 ;
  wire \RD_DATA_RET_reg[26]_0 ;
  wire \RD_DATA_RET_reg[26]_1 ;
  wire \RD_DATA_RET_reg[26]_2 ;
  wire [4:0]\RD_DATA_RET_reg[27]_0 ;
  wire [4:0]\RD_DATA_RET_reg[27]_1 ;
  wire \RD_DATA_RET_reg[30]_0 ;
  wire \RD_DATA_RET_reg[30]_1 ;
  wire \RD_DATA_RET_reg[31]_0 ;
  wire \RD_DATA_RET_reg[31]_1 ;
  wire \RD_DATA_RET_reg[31]_2 ;
  wire \RD_DATA_RET_reg[8]_0 ;
  wire \RD_DATA_RET_reg[8]_1 ;
  wire [5:0]\RD_DATA_RET_reg[9]_0 ;
  wire \RD_DATA_RET_reg[9]_1 ;
  wire [0:31]RD_DATA__0;
  wire \RD_INDEX[0]_i_3_n_0 ;
  wire \RD_INDEX_reg[1] ;
  wire \RD_INDEX_reg[2] ;
  wire \RD_INDEX_reg[3] ;
  wire \RD_INDEX_reg[5] ;
  wire RES_ACK_SIG_D1;
  wire RES_ACK_SIG_D1_i_3_n_0;
  wire \RX_FIFO_AFR.IC_REG_AFR_I_reg[2] ;
  wire \RX_FIFO_AFR.IC_REG_AFR_I_reg[3] ;
  wire \RX_FIFO_AFR.IC_REG_AFR_I_reg[4] ;
  wire \RX_FIFO_AFR.IC_REG_AFR_I_reg[5] ;
  wire \RX_FIFO_AFR.IC_REG_AFR_I_reg[6] ;
  wire \RX_FIFO_AFR.IC_REG_AFR_I_reg[7] ;
  wire \RX_FIFO_IERBUF.IC_REG_IER_I_reg[18] ;
  wire \RX_FIFO_IERBUF.IC_REG_IER_I_reg[19] ;
  wire \TCR_i[31]_i_3_n_0 ;
  wire \TCR_i_reg[30] ;
  wire TRR_REG_WRITE_PULSE0;
  wire TRR_REG_WRITE_PULSE_i_2_n_0;
  wire \TRR_i_reg[12] ;
  wire [0:0]doutb;
  wire [10:0]p_13_in;
  wire p_1_in;
  wire p_51_in;
  wire p_71_in;
  wire s_axi_aclk;
  wire s_axi_arready;
  wire [2:0]s_axi_wdata;
  wire \s_axi_wdata[23] ;
  wire [0:0]\s_axi_wdata[7] ;
  wire \s_axi_wdata[7]_0 ;
  wire s_axi_wready;

  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF40)) 
    ACK_RET_i_1
       (.I0(RES_ACK_SIG_D1),
        .I1(Bus2IP_CS),
        .I2(BRAM_SEL[3]),
        .I3(ACK_RX),
        .I4(ACK_CR),
        .I5(ACK_RET_reg_1),
        .O(ACK_RET_i_1_n_0));
  FDRE ACK_RET_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ACK_RET_i_1_n_0),
        .Q(E_DATA_ACK),
        .R(ACK_RET_reg_0));
  FDRE \ADDR_RET_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ADDR_RET_reg[0]_0 [12]),
        .Q(ADDR_TX[0]),
        .R(ACK_RET_reg_0));
  FDRE \ADDR_RET_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ADDR_RET_reg[0]_0 [2]),
        .Q(\ADDR_RET_reg[2]_0 [2]),
        .R(ACK_RET_reg_0));
  FDRE \ADDR_RET_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ADDR_RET_reg[0]_0 [1]),
        .Q(\ADDR_RET_reg[2]_0 [1]),
        .R(ACK_RET_reg_0));
  FDRE \ADDR_RET_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ADDR_RET_reg[0]_0 [0]),
        .Q(\ADDR_RET_reg[2]_0 [0]),
        .R(ACK_RET_reg_0));
  FDRE \ADDR_RET_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ADDR_RET_reg[0]_0 [11]),
        .Q(ADDR_TX[1]),
        .R(ACK_RET_reg_0));
  FDRE \ADDR_RET_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ADDR_RET_reg[0]_0 [10]),
        .Q(\ADDR_RET_reg[2]_0 [10]),
        .R(ACK_RET_reg_0));
  FDRE \ADDR_RET_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ADDR_RET_reg[0]_0 [9]),
        .Q(\ADDR_RET_reg[2]_0 [9]),
        .R(ACK_RET_reg_0));
  FDRE \ADDR_RET_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ADDR_RET_reg[0]_0 [8]),
        .Q(\ADDR_RET_reg[2]_0 [8]),
        .R(ACK_RET_reg_0));
  FDRE \ADDR_RET_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ADDR_RET_reg[0]_0 [7]),
        .Q(\ADDR_RET_reg[2]_0 [7]),
        .R(ACK_RET_reg_0));
  FDRE \ADDR_RET_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ADDR_RET_reg[0]_0 [6]),
        .Q(\ADDR_RET_reg[2]_0 [6]),
        .R(ACK_RET_reg_0));
  FDRE \ADDR_RET_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ADDR_RET_reg[0]_0 [5]),
        .Q(\ADDR_RET_reg[2]_0 [5]),
        .R(ACK_RET_reg_0));
  FDRE \ADDR_RET_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ADDR_RET_reg[0]_0 [4]),
        .Q(\ADDR_RET_reg[2]_0 [4]),
        .R(ACK_RET_reg_0));
  FDRE \ADDR_RET_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ADDR_RET_reg[0]_0 [3]),
        .Q(\ADDR_RET_reg[2]_0 [3]),
        .R(ACK_RET_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT5 #(
    .INIT(32'h00000020)) 
    CS_H_D1_i_1
       (.I0(Bus2IP_CS),
        .I1(BRAM_SEL[0]),
        .I2(ADDR_TX[1]),
        .I3(ADDR_TX[0]),
        .I4(BRAM_SEL[3]),
        .O(CS_RX));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h8)) 
    CS_H_D1_i_1__0
       (.I0(\MEM_DECODE_GEN[0].cs_out_i_reg[0] ),
        .I1(Bus2IP_RNW),
        .O(CS_H00_out));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h2)) 
    CS_H_D1_i_1__1
       (.I0(\MEM_DECODE_GEN[0].cs_out_i_reg[0] ),
        .I1(Bus2IP_RNW),
        .O(CS_H0));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'h0200)) 
    CS_H_D1_i_1__2
       (.I0(Bus2IP_CS),
        .I1(BRAM_SEL[0]),
        .I2(BRAM_SEL[3]),
        .I3(ADDR_TX[0]),
        .O(CS_RX_T));
  LUT6 #(
    .INIT(64'h0000FFFF0000FFFE)) 
    CS_H_D1_i_2
       (.I0(\ADDR_RET_reg[2]_0 [7]),
        .I1(\ADDR_RET_reg[2]_0 [8]),
        .I2(\ADDR_RET_reg[2]_0 [9]),
        .I3(\ADDR_RET_reg[2]_0 [6]),
        .I4(RES_ACK_SIG_D1_i_3_n_0),
        .I5(\ADDR_RET_reg[2]_0 [10]),
        .O(BRAM_SEL[0]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT4 #(
    .INIT(16'h555E)) 
    \IC_IPIC_COUNTER_I[1]_i_2 
       (.I0(BRAM_SEL[0]),
        .I1(BRAM_SEL[3]),
        .I2(ADDR_TX[1]),
        .I3(ADDR_TX[0]),
        .O(\ADDR_RET_reg[1]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    \IC_REG_BRPR_I[0]_i_1 
       (.I0(\IC_REG_F_BRPR_I_reg[15] ),
        .I1(\ADDR_RET_reg[2]_0 [1]),
        .I2(\ADDR_RET_reg[2]_0 [0]),
        .I3(IC_IPSIG_WRITE_I_reg),
        .O(IC_REG_SRR_CEN_I_reg_0));
  LUT6 #(
    .INIT(64'h0000000000000400)) 
    IC_REG_ESR_CRCER_I_i_2
       (.I0(\IC_REG_IETRS_I[0]_i_2_n_0 ),
        .I1(\ADDR_RET_reg[2]_0 [2]),
        .I2(\ADDR_RET_reg[2]_0 [5]),
        .I3(\IC_REG_IECRS_I_reg[0] ),
        .I4(\ADDR_RET_reg[2]_0 [3]),
        .I5(\ADDR_RET_reg[2]_0 [4]),
        .O(p_71_in));
  LUT6 #(
    .INIT(64'h0000020000000000)) 
    \IC_REG_F_BRPR_I[15]_i_1 
       (.I0(\ADDR_RET_reg[2]_0 [1]),
        .I1(\ADDR_RET_reg[2]_0 [0]),
        .I2(\ADDR_RET_reg[2]_0 [2]),
        .I3(\ADDR_RET_reg[2]_0 [5]),
        .I4(\IC_REG_F_BRPR_I_reg[15] ),
        .I5(\IC_REG_F_BRPR_I[15]_i_2_n_0 ),
        .O(\ADDR_RET_reg[11]_4 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \IC_REG_F_BRPR_I[15]_i_2 
       (.I0(\ADDR_RET_reg[2]_0 [4]),
        .I1(\ADDR_RET_reg[2]_0 [3]),
        .I2(\IC_REG_IECRS_I_reg[0] ),
        .O(\IC_REG_F_BRPR_I[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000080000000000)) 
    \IC_REG_F_BTR_TS1_I[0]_i_1 
       (.I0(\ADDR_RET_reg[2]_0 [0]),
        .I1(\ADDR_RET_reg[2]_0 [1]),
        .I2(\ADDR_RET_reg[2]_0 [2]),
        .I3(\ADDR_RET_reg[2]_0 [5]),
        .I4(\IC_REG_F_BRPR_I_reg[15] ),
        .I5(\IC_REG_F_BRPR_I[15]_i_2_n_0 ),
        .O(\ADDR_RET_reg[12]_7 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \IC_REG_IECRS_I[0]_i_1 
       (.I0(\IC_REG_IECRS_I[0]_i_2_n_0 ),
        .I1(\IC_REG_IECRS_I_reg[0] ),
        .I2(\ADDR_RET_reg[2]_0 [2]),
        .I3(\ADDR_RET_reg[2]_0 [5]),
        .I4(\ADDR_RET_reg[2]_0 [1]),
        .I5(\ADDR_RET_reg[2]_0 [0]),
        .O(IC_IPSIG_WRITE_I_reg_2));
  LUT2 #(
    .INIT(4'h1)) 
    \IC_REG_IECRS_I[0]_i_2 
       (.I0(\ADDR_RET_reg[2]_0 [3]),
        .I1(\ADDR_RET_reg[2]_0 [4]),
        .O(\IC_REG_IECRS_I[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000010000000)) 
    \IC_REG_IETRS_I[0]_i_1 
       (.I0(\ADDR_RET_reg[2]_0 [4]),
        .I1(\ADDR_RET_reg[2]_0 [3]),
        .I2(\IC_REG_IECRS_I_reg[0] ),
        .I3(\ADDR_RET_reg[2]_0 [2]),
        .I4(\ADDR_RET_reg[2]_0 [5]),
        .I5(\IC_REG_IETRS_I[0]_i_2_n_0 ),
        .O(\ADDR_RET_reg[8]_9 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \IC_REG_IETRS_I[0]_i_2 
       (.I0(\ADDR_RET_reg[2]_0 [1]),
        .I1(\ADDR_RET_reg[2]_0 [0]),
        .O(\IC_REG_IETRS_I[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000040000)) 
    IC_REG_ISR_ARBLST_I_i_2
       (.I0(\IC_REG_IETRS_I[0]_i_2_n_0 ),
        .I1(\IC_REG_IECRS_I_reg[0] ),
        .I2(\ADDR_RET_reg[2]_0 [2]),
        .I3(\ADDR_RET_reg[2]_0 [5]),
        .I4(\ADDR_RET_reg[2]_0 [3]),
        .I5(\ADDR_RET_reg[2]_0 [4]),
        .O(p_51_in));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    IC_REG_MSR_LBACK_I_i_1
       (.I0(\IC_REG_F_BRPR_I_reg[15] ),
        .I1(\ADDR_RET_reg[2]_0 [1]),
        .I2(\ADDR_RET_reg[2]_0 [0]),
        .I3(IC_IPSIG_WRITE_I_reg),
        .O(IC_REG_SRR_CEN_I_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT5 #(
    .INIT(32'h00000002)) 
    IC_REG_MSR_LBACK_I_i_2
       (.I0(\IC_REG_IECRS_I_reg[0] ),
        .I1(\ADDR_RET_reg[2]_0 [3]),
        .I2(\ADDR_RET_reg[2]_0 [4]),
        .I3(\ADDR_RET_reg[2]_0 [5]),
        .I4(\ADDR_RET_reg[2]_0 [2]),
        .O(IC_IPSIG_WRITE_I_reg));
  LUT6 #(
    .INIT(64'h5545004000000000)) 
    IC_REG_MSR_SLEEP_I_i_1
       (.I0(ACK_RET_reg_0),
        .I1(s_axi_wdata[0]),
        .I2(IC_IPSIG_WRITE_I_reg),
        .I3(\IC_REG_IETRS_I[0]_i_2_n_0 ),
        .I4(\RD_DATA_RET_reg[24]_0 [0]),
        .I5(IC_REG_MSR_SLEEP_I_reg),
        .O(E_RST_I_reg));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \IC_REG_N_BTR_TS1_I[0]_i_1 
       (.I0(\IC_REG_F_BRPR_I_reg[15] ),
        .I1(\ADDR_RET_reg[2]_0 [0]),
        .I2(\ADDR_RET_reg[2]_0 [1]),
        .I3(IC_IPSIG_WRITE_I_reg),
        .O(IC_REG_SRR_CEN_I_reg));
  LUT6 #(
    .INIT(64'h0000040000000000)) 
    \IC_REG_WMR_I2[0]_i_1 
       (.I0(\ADDR_RET_reg[2]_0 [1]),
        .I1(\ADDR_RET_reg[2]_0 [0]),
        .I2(\ADDR_RET_reg[2]_0 [4]),
        .I3(\IC_REG_IECRS_I_reg[0] ),
        .I4(\IC_REG_F_BRPR_I_reg[15] ),
        .I5(\IC_REG_WMR_I2[0]_i_2__0_n_0 ),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    \IC_REG_WMR_I2[0]_i_1__0 
       (.I0(\ADDR_RET_reg[2]_0 [0]),
        .I1(\ADDR_RET_reg[2]_0 [1]),
        .I2(\IC_REG_IECRS_I_reg[0] ),
        .I3(\IC_REG_F_BRPR_I_reg[15] ),
        .I4(\IC_REG_WMR_I2[0]_i_2_n_0 ),
        .O(\ADDR_RET_reg[12]_6 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \IC_REG_WMR_I2[0]_i_2 
       (.I0(\ADDR_RET_reg[2]_0 [2]),
        .I1(\ADDR_RET_reg[2]_0 [3]),
        .I2(\ADDR_RET_reg[2]_0 [5]),
        .I3(\ADDR_RET_reg[2]_0 [4]),
        .O(\IC_REG_WMR_I2[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \IC_REG_WMR_I2[0]_i_2__0 
       (.I0(\ADDR_RET_reg[2]_0 [5]),
        .I1(\ADDR_RET_reg[2]_0 [3]),
        .I2(\ADDR_RET_reg[2]_0 [2]),
        .O(\IC_REG_WMR_I2[0]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    IC_TIMESTAMP_RST_i_2
       (.I0(\ADDR_RET_reg[2]_0 [4]),
        .I1(\ADDR_RET_reg[2]_0 [3]),
        .I2(\ADDR_RET_reg[2]_0 [5]),
        .I3(\ADDR_RET_reg[2]_0 [2]),
        .O(\ADDR_RET_reg[8]_8 ));
  LUT5 #(
    .INIT(32'h0001011E)) 
    RD_DATA
       (.I0(ACK_TX_WR),
        .I1(ACK_TX_RD),
        .I2(ACK_CR),
        .I3(ACK_RX),
        .I4(ACK_RX_T),
        .O(ACK_H_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEEEEEEE)) 
    \RD_DATA_RET[0]_i_1 
       (.I0(\RD_DATA_RET[0]_i_2_n_0 ),
        .I1(\RD_DATA_RET[0]_i_3_n_0 ),
        .I2(IC_REG_TRR_I[21]),
        .I3(\ADDR_RET_reg[8]_3 ),
        .I4(\RD_DATA_RET_reg[26]_0 ),
        .I5(\RD_DATA_RET_reg[0]_3 ),
        .O(RD_DATA__0[0]));
  LUT6 #(
    .INIT(64'h0000000000100000)) 
    \RD_DATA_RET[0]_i_10 
       (.I0(\ADDR_RET_reg[2]_0 [4]),
        .I1(\ADDR_RET_reg[2]_0 [5]),
        .I2(\ADDR_RET_reg[2]_0 [3]),
        .I3(\ADDR_RET_reg[2]_0 [2]),
        .I4(\ADDR_RET_reg[2]_0 [1]),
        .I5(\ADDR_RET_reg[2]_0 [0]),
        .O(\ADDR_RET_reg[8]_2 ));
  LUT6 #(
    .INIT(64'h0400040004002000)) 
    \RD_DATA_RET[0]_i_12 
       (.I0(\ADDR_RET_reg[2]_0 [4]),
        .I1(\ADDR_RET_reg[2]_0 [2]),
        .I2(\ADDR_RET_reg[2]_0 [3]),
        .I3(\ADDR_RET_reg[2]_0 [5]),
        .I4(\ADDR_RET_reg[2]_0 [1]),
        .I5(\ADDR_RET_reg[2]_0 [0]),
        .O(\RD_DATA_RET[0]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0FFF12EF3FAF7)) 
    \RD_DATA_RET[0]_i_13 
       (.I0(\ADDR_RET_reg[2]_0 [0]),
        .I1(\ADDR_RET_reg[2]_0 [1]),
        .I2(\ADDR_RET_reg[2]_0 [4]),
        .I3(\ADDR_RET_reg[2]_0 [3]),
        .I4(\ADDR_RET_reg[2]_0 [5]),
        .I5(\ADDR_RET_reg[2]_0 [2]),
        .O(\ADDR_RET_reg[12]_5 ));
  LUT6 #(
    .INIT(64'h0081000005040490)) 
    \RD_DATA_RET[0]_i_15 
       (.I0(\ADDR_RET_reg[2]_0 [4]),
        .I1(\ADDR_RET_reg[2]_0 [5]),
        .I2(\ADDR_RET_reg[2]_0 [3]),
        .I3(\ADDR_RET_reg[2]_0 [2]),
        .I4(\ADDR_RET_reg[2]_0 [1]),
        .I5(\ADDR_RET_reg[2]_0 [0]),
        .O(\ADDR_RET_reg[8]_7 ));
  LUT6 #(
    .INIT(64'h1001100C10001004)) 
    \RD_DATA_RET[0]_i_16 
       (.I0(\ADDR_RET_reg[2]_0 [4]),
        .I1(\ADDR_RET_reg[2]_0 [3]),
        .I2(\ADDR_RET_reg[2]_0 [1]),
        .I3(\ADDR_RET_reg[2]_0 [0]),
        .I4(\ADDR_RET_reg[2]_0 [2]),
        .I5(\ADDR_RET_reg[2]_0 [5]),
        .O(\ADDR_RET_reg[8]_6 ));
  LUT6 #(
    .INIT(64'hF080000080800000)) 
    \RD_DATA_RET[0]_i_2 
       (.I0(\ADDR_RET_reg[12]_4 ),
        .I1(\RD_DATA_RET_reg[0]_1 [9]),
        .I2(\RD_DATA_RET_reg[26]_0 ),
        .I3(\RD_DATA_RET[0]_i_8_n_0 ),
        .I4(\ADDR_RET_reg[8]_4 ),
        .I5(p_13_in[10]),
        .O(\RD_DATA_RET[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \RD_DATA_RET[0]_i_3 
       (.I0(\ADDR_RET_reg[8]_2 ),
        .I1(\RD_DATA_RET_reg[0]_2 [12]),
        .I2(\RD_DATA_RET_reg[26]_0 ),
        .I3(\RD_DATA_RET_reg[0]_4 ),
        .I4(\RD_DATA_RET[0]_i_12_n_0 ),
        .O(\RD_DATA_RET[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000400)) 
    \RD_DATA_RET[0]_i_4 
       (.I0(\ADDR_RET_reg[2]_0 [4]),
        .I1(\ADDR_RET_reg[2]_0 [5]),
        .I2(\ADDR_RET_reg[2]_0 [3]),
        .I3(\ADDR_RET_reg[2]_0 [2]),
        .I4(\ADDR_RET_reg[2]_0 [1]),
        .I5(\ADDR_RET_reg[2]_0 [0]),
        .O(\ADDR_RET_reg[8]_3 ));
  LUT6 #(
    .INIT(64'h0100000000100108)) 
    \RD_DATA_RET[0]_i_7 
       (.I0(\ADDR_RET_reg[2]_0 [0]),
        .I1(\ADDR_RET_reg[2]_0 [1]),
        .I2(\ADDR_RET_reg[2]_0 [2]),
        .I3(\ADDR_RET_reg[2]_0 [3]),
        .I4(\ADDR_RET_reg[2]_0 [5]),
        .I5(\ADDR_RET_reg[2]_0 [4]),
        .O(\ADDR_RET_reg[12]_4 ));
  LUT6 #(
    .INIT(64'h0000000001880080)) 
    \RD_DATA_RET[0]_i_8 
       (.I0(\ADDR_RET_reg[2]_0 [0]),
        .I1(\ADDR_RET_reg[2]_0 [1]),
        .I2(\ADDR_RET_reg[2]_0 [2]),
        .I3(\ADDR_RET_reg[2]_0 [3]),
        .I4(\ADDR_RET_reg[2]_0 [5]),
        .I5(\ADDR_RET_reg[2]_0 [4]),
        .O(\RD_DATA_RET[0]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hDAFEFBFFDAEFCBFF)) 
    \RD_DATA_RET[0]_i_9 
       (.I0(\ADDR_RET_reg[2]_0 [4]),
        .I1(\ADDR_RET_reg[2]_0 [2]),
        .I2(\ADDR_RET_reg[2]_0 [3]),
        .I3(\ADDR_RET_reg[2]_0 [5]),
        .I4(\ADDR_RET_reg[2]_0 [1]),
        .I5(\ADDR_RET_reg[2]_0 [0]),
        .O(\ADDR_RET_reg[8]_4 ));
  LUT5 #(
    .INIT(32'hFFFFFF80)) 
    \RD_DATA_RET[10]_i_1 
       (.I0(\RD_DATA_RET[10]_i_2_n_0 ),
        .I1(\RD_DATA_RET_reg[26]_0 ),
        .I2(\RD_DATA_RET[10]_i_3_n_0 ),
        .I3(\RD_DATA_RET[10]_i_4_n_0 ),
        .I4(\RD_DATA_RET_reg[10]_0 ),
        .O(RD_DATA__0[10]));
  LUT6 #(
    .INIT(64'h4000404021202040)) 
    \RD_DATA_RET[10]_i_2 
       (.I0(\ADDR_RET_reg[2]_0 [2]),
        .I1(\ADDR_RET_reg[2]_0 [3]),
        .I2(\ADDR_RET_reg[2]_0 [5]),
        .I3(\ADDR_RET_reg[2]_0 [1]),
        .I4(\ADDR_RET_reg[2]_0 [0]),
        .I5(\ADDR_RET_reg[2]_0 [4]),
        .O(\RD_DATA_RET[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFB080)) 
    \RD_DATA_RET[10]_i_3 
       (.I0(\RD_DATA_RET_reg[10]_1 [5]),
        .I1(\ADDR_RET_reg[12]_0 ),
        .I2(\RD_DATA_RET[10]_i_7_n_0 ),
        .I3(\RD_DATA_RET[1]_i_3_2 [5]),
        .I4(\RD_DATA_RET[10]_i_8_n_0 ),
        .I5(\RD_DATA_RET_reg[10]_2 ),
        .O(\RD_DATA_RET[10]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \RD_DATA_RET[10]_i_4 
       (.I0(\ADDR_RET_reg[8]_1 ),
        .I1(\RD_DATA_RET[9]_i_3_0 [3]),
        .I2(\RD_DATA_RET_reg[26]_0 ),
        .I3(\ADDR_RET_reg[8]_2 ),
        .I4(\RD_DATA_RET_reg[0]_2 [3]),
        .O(\RD_DATA_RET[10]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000C000001014C8)) 
    \RD_DATA_RET[10]_i_6 
       (.I0(\ADDR_RET_reg[2]_0 [0]),
        .I1(\ADDR_RET_reg[2]_0 [1]),
        .I2(\ADDR_RET_reg[2]_0 [5]),
        .I3(\ADDR_RET_reg[2]_0 [3]),
        .I4(\ADDR_RET_reg[2]_0 [2]),
        .I5(\ADDR_RET_reg[2]_0 [4]),
        .O(\ADDR_RET_reg[12]_0 ));
  LUT6 #(
    .INIT(64'hF6FFFFFFFE23FE37)) 
    \RD_DATA_RET[10]_i_7 
       (.I0(\ADDR_RET_reg[2]_0 [0]),
        .I1(\ADDR_RET_reg[2]_0 [1]),
        .I2(\ADDR_RET_reg[2]_0 [2]),
        .I3(\ADDR_RET_reg[2]_0 [3]),
        .I4(\ADDR_RET_reg[2]_0 [5]),
        .I5(\ADDR_RET_reg[2]_0 [4]),
        .O(\RD_DATA_RET[10]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h0000F888)) 
    \RD_DATA_RET[10]_i_8 
       (.I0(\RD_DATA_RET[14]_i_6_n_0 ),
        .I1(IC_REG_TCR_I[18]),
        .I2(\RD_DATA_RET[1]_i_3_1 [4]),
        .I3(\RD_DATA_RET[0]_i_8_n_0 ),
        .I4(\ADDR_RET_reg[12]_0 ),
        .O(\RD_DATA_RET[10]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \RD_DATA_RET[11]_i_3 
       (.I0(\RD_DATA_RET_reg[9]_0 [4]),
        .I1(\RD_DATA_RET[9]_i_5_n_0 ),
        .I2(IC_REG_TRR_I[11]),
        .I3(\ADDR_RET_reg[8]_3 ),
        .I4(\RD_DATA_RET[11]_i_4_n_0 ),
        .I5(\RD_DATA_RET[11]_i_5_n_0 ),
        .O(\IC_REG_N_BTR_SJW_I_reg[2] ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \RD_DATA_RET[11]_i_4 
       (.I0(\ADDR_RET_reg[8]_1 ),
        .I1(\RD_DATA_RET[9]_i_3_0 [2]),
        .I2(\RD_DATA_RET[1]_i_4_n_0 ),
        .I3(IC_REG_TCR_I[17]),
        .I4(\RD_DATA_RET[11]_i_3_2 ),
        .O(\RD_DATA_RET[11]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \RD_DATA_RET[11]_i_5 
       (.I0(\RD_DATA_RET[2]_i_7_n_0 ),
        .I1(\RD_DATA_RET_reg[10]_1 [4]),
        .I2(\RD_DATA_RET[12]_i_6_n_0 ),
        .I3(\RD_DATA_RET[11]_i_3_0 [4]),
        .I4(\RD_DATA_RET[11]_i_3_1 ),
        .O(\RD_DATA_RET[11]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[12]_i_10 
       (.I0(\RD_DATA_RET_reg[10]_1 [3]),
        .I1(\RD_DATA_RET[2]_i_7_n_0 ),
        .I2(\RD_DATA_RET[1]_i_3_0 [13]),
        .I3(\ADDR_RET_reg[12]_1 ),
        .O(\RD_DATA_RET[12]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000100000)) 
    \RD_DATA_RET[12]_i_3 
       (.I0(\ADDR_RET_reg[2]_0 [4]),
        .I1(\ADDR_RET_reg[2]_0 [3]),
        .I2(\ADDR_RET_reg[2]_0 [1]),
        .I3(\ADDR_RET_reg[2]_0 [0]),
        .I4(\ADDR_RET_reg[2]_0 [2]),
        .I5(\ADDR_RET_reg[2]_0 [5]),
        .O(\ADDR_RET_reg[8]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \RD_DATA_RET[12]_i_4 
       (.I0(\RD_DATA_RET_reg[12]_0 [2]),
        .I1(\RD_DATA_RET[12]_i_5_n_0 ),
        .I2(\RD_DATA_RET[11]_i_3_0 [3]),
        .I3(\RD_DATA_RET[12]_i_6_n_0 ),
        .I4(\RD_DATA_RET[12]_i_7_n_0 ),
        .I5(\RD_DATA_RET[12]_i_8_n_0 ),
        .O(\IC_REG_F_BTR_SJW_I_reg[0] ));
  LUT6 #(
    .INIT(64'h0004000000000000)) 
    \RD_DATA_RET[12]_i_5 
       (.I0(\ADDR_RET_reg[2]_0 [4]),
        .I1(\ADDR_RET_reg[2]_0 [5]),
        .I2(\ADDR_RET_reg[2]_0 [3]),
        .I3(\ADDR_RET_reg[2]_0 [2]),
        .I4(\ADDR_RET_reg[2]_0 [1]),
        .I5(\ADDR_RET_reg[2]_0 [0]),
        .O(\RD_DATA_RET[12]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    \RD_DATA_RET[12]_i_6 
       (.I0(\ADDR_RET_reg[2]_0 [4]),
        .I1(\ADDR_RET_reg[2]_0 [3]),
        .I2(\ADDR_RET_reg[2]_0 [1]),
        .I3(\ADDR_RET_reg[2]_0 [0]),
        .I4(\ADDR_RET_reg[2]_0 [2]),
        .I5(\ADDR_RET_reg[2]_0 [5]),
        .O(\RD_DATA_RET[12]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \RD_DATA_RET[12]_i_7 
       (.I0(\ADDR_RET_reg[8]_3 ),
        .I1(IC_REG_TRR_I[10]),
        .I2(\RD_DATA_RET[1]_i_4_n_0 ),
        .I3(IC_REG_TCR_I[16]),
        .I4(\RD_DATA_RET[12]_i_4_0 ),
        .O(\RD_DATA_RET[12]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \RD_DATA_RET[12]_i_8 
       (.I0(\RD_DATA_RET[9]_i_5_n_0 ),
        .I1(\RD_DATA_RET_reg[9]_0 [3]),
        .I2(\ADDR_RET_reg[8]_2 ),
        .I3(\RD_DATA_RET_reg[0]_2 [2]),
        .I4(\RD_DATA_RET[12]_i_10_n_0 ),
        .O(\RD_DATA_RET[12]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \RD_DATA_RET[13]_i_3 
       (.I0(\RD_DATA_RET_reg[12]_0 [1]),
        .I1(\RD_DATA_RET[12]_i_5_n_0 ),
        .I2(\RD_DATA_RET[11]_i_3_0 [2]),
        .I3(\RD_DATA_RET[12]_i_6_n_0 ),
        .I4(\RD_DATA_RET[13]_i_4_n_0 ),
        .I5(\RD_DATA_RET[13]_i_5_n_0 ),
        .O(\IC_REG_F_BTR_SJW_I_reg[1] ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \RD_DATA_RET[13]_i_4 
       (.I0(\ADDR_RET_reg[8]_3 ),
        .I1(IC_REG_TRR_I[9]),
        .I2(\RD_DATA_RET[1]_i_4_n_0 ),
        .I3(IC_REG_TCR_I[15]),
        .I4(\RD_DATA_RET[13]_i_3_0 ),
        .O(\RD_DATA_RET[13]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \RD_DATA_RET[13]_i_5 
       (.I0(\RD_DATA_RET[9]_i_5_n_0 ),
        .I1(\RD_DATA_RET_reg[9]_0 [2]),
        .I2(\ADDR_RET_reg[8]_2 ),
        .I3(\RD_DATA_RET_reg[0]_2 [1]),
        .I4(\RD_DATA_RET[13]_i_7_n_0 ),
        .O(\RD_DATA_RET[13]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[13]_i_7 
       (.I0(\RD_DATA_RET_reg[10]_1 [2]),
        .I1(\RD_DATA_RET[2]_i_7_n_0 ),
        .I2(\RD_DATA_RET[1]_i_3_0 [12]),
        .I3(\ADDR_RET_reg[12]_1 ),
        .O(\RD_DATA_RET[13]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFEFEFEAAAAAAAA)) 
    \RD_DATA_RET[14]_i_1 
       (.I0(\RD_DATA_RET_reg[14]_0 ),
        .I1(\RD_DATA_RET[14]_i_3_n_0 ),
        .I2(\RD_DATA_RET[14]_i_4_n_0 ),
        .I3(\RD_DATA_RET[14]_i_5_n_0 ),
        .I4(p_13_in[8]),
        .I5(\RD_DATA_RET_reg[26]_0 ),
        .O(RD_DATA__0[14]));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[14]_i_10 
       (.I0(\RD_DATA_RET_reg[10]_1 [1]),
        .I1(\RD_DATA_RET[2]_i_7_n_0 ),
        .I2(\RD_DATA_RET[1]_i_3_0 [11]),
        .I3(\ADDR_RET_reg[12]_1 ),
        .O(\RD_DATA_RET[14]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hF8008800)) 
    \RD_DATA_RET[14]_i_3 
       (.I0(\RD_DATA_RET_reg[0]_1 [7]),
        .I1(\ADDR_RET_reg[12]_4 ),
        .I2(\RD_DATA_RET[9]_i_3_0 [1]),
        .I3(\ADDR_RET_reg[8]_4 ),
        .I4(\RD_DATA_RET[14]_i_6_n_0 ),
        .O(\RD_DATA_RET[14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \RD_DATA_RET[14]_i_4 
       (.I0(\RD_DATA_RET_reg[12]_0 [0]),
        .I1(\RD_DATA_RET[12]_i_5_n_0 ),
        .I2(\RD_DATA_RET[11]_i_3_0 [1]),
        .I3(\RD_DATA_RET[12]_i_6_n_0 ),
        .I4(\RD_DATA_RET[14]_i_7_n_0 ),
        .I5(\RD_DATA_RET[14]_i_8_n_0 ),
        .O(\RD_DATA_RET[14]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    \RD_DATA_RET[14]_i_5 
       (.I0(\ADDR_RET_reg[2]_0 [4]),
        .I1(\ADDR_RET_reg[2]_0 [5]),
        .I2(\ADDR_RET_reg[2]_0 [3]),
        .I3(\ADDR_RET_reg[2]_0 [2]),
        .I4(\ADDR_RET_reg[2]_0 [1]),
        .I5(\ADDR_RET_reg[2]_0 [0]),
        .O(\RD_DATA_RET[14]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h2000000000000E00)) 
    \RD_DATA_RET[14]_i_6 
       (.I0(\ADDR_RET_reg[2]_0 [5]),
        .I1(\ADDR_RET_reg[2]_0 [2]),
        .I2(\ADDR_RET_reg[2]_0 [0]),
        .I3(\ADDR_RET_reg[2]_0 [1]),
        .I4(\ADDR_RET_reg[2]_0 [3]),
        .I5(\ADDR_RET_reg[2]_0 [4]),
        .O(\RD_DATA_RET[14]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \RD_DATA_RET[14]_i_7 
       (.I0(\ADDR_RET_reg[8]_3 ),
        .I1(IC_REG_TRR_I[8]),
        .I2(\RD_DATA_RET[1]_i_4_n_0 ),
        .I3(IC_REG_TCR_I[14]),
        .I4(\RD_DATA_RET[14]_i_4_0 ),
        .O(\RD_DATA_RET[14]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \RD_DATA_RET[14]_i_8 
       (.I0(\RD_DATA_RET[9]_i_5_n_0 ),
        .I1(\RD_DATA_RET_reg[9]_0 [1]),
        .I2(\ADDR_RET_reg[8]_2 ),
        .I3(\RD_DATA_RET_reg[0]_2 [0]),
        .I4(\RD_DATA_RET[14]_i_10_n_0 ),
        .O(\RD_DATA_RET[14]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0000010000105000)) 
    \RD_DATA_RET[15]_i_10 
       (.I0(\ADDR_RET_reg[2]_0 [4]),
        .I1(\ADDR_RET_reg[2]_0 [0]),
        .I2(\ADDR_RET_reg[2]_0 [1]),
        .I3(\ADDR_RET_reg[2]_0 [5]),
        .I4(\ADDR_RET_reg[2]_0 [3]),
        .I5(\ADDR_RET_reg[2]_0 [2]),
        .O(\RD_DATA_RET[15]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \RD_DATA_RET[15]_i_3 
       (.I0(\ADDR_RET_reg[2]_0 [4]),
        .I1(\ADDR_RET_reg[2]_0 [5]),
        .I2(\ADDR_RET_reg[2]_0 [3]),
        .I3(\ADDR_RET_reg[2]_0 [2]),
        .I4(\ADDR_RET_reg[2]_0 [1]),
        .I5(\ADDR_RET_reg[2]_0 [0]),
        .O(\ADDR_RET_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEEEFEEEFEEE)) 
    \RD_DATA_RET[15]_i_4 
       (.I0(\RD_DATA_RET[15]_i_5_n_0 ),
        .I1(\RD_DATA_RET[15]_i_6_n_0 ),
        .I2(\RD_DATA_RET[11]_i_3_0 [0]),
        .I3(\RD_DATA_RET[12]_i_6_n_0 ),
        .I4(\RD_DATA_RET_reg[9]_0 [0]),
        .I5(\RD_DATA_RET[9]_i_5_n_0 ),
        .O(\IC_REG_RXFP_I2_reg[4] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \RD_DATA_RET[15]_i_5 
       (.I0(\RD_DATA_RET[15]_i_4_0 ),
        .I1(\RD_DATA_RET_reg[10]_1 [0]),
        .I2(\RD_DATA_RET[2]_i_7_n_0 ),
        .I3(\RD_DATA_RET[1]_i_3_0 [10]),
        .I4(\ADDR_RET_reg[12]_1 ),
        .I5(\RD_DATA_RET[15]_i_8_n_0 ),
        .O(\RD_DATA_RET[15]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[15]_i_6 
       (.I0(IC_REG_TCR_I[13]),
        .I1(\RD_DATA_RET[1]_i_4_n_0 ),
        .I2(\RD_DATA_RET[15]_i_4_1 ),
        .I3(\RD_DATA_RET[15]_i_10_n_0 ),
        .O(\RD_DATA_RET[15]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hF8008800)) 
    \RD_DATA_RET[15]_i_8 
       (.I0(p_13_in[7]),
        .I1(\RD_DATA_RET[0]_i_8_n_0 ),
        .I2(\RD_DATA_RET[9]_i_3_0 [0]),
        .I3(\ADDR_RET_reg[8]_4 ),
        .I4(\RD_DATA_RET[14]_i_6_n_0 ),
        .O(\RD_DATA_RET[15]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \RD_DATA_RET[16]_i_1 
       (.I0(\RD_DATA_RET[16]_i_2_n_0 ),
        .I1(\ADDR_RET_reg[11]_3 ),
        .I2(\RD_DATA_RET_reg[16]_1 [7]),
        .I3(\ADDR_RET_reg[11]_1 ),
        .I4(\RD_DATA_RET_reg[16]_0 [11]),
        .O(RD_DATA__0[16]));
  LUT6 #(
    .INIT(64'h0000000100000100)) 
    \RD_DATA_RET[16]_i_10 
       (.I0(\ADDR_RET_reg[2]_0 [3]),
        .I1(\ADDR_RET_reg[2]_0 [4]),
        .I2(\ADDR_RET_reg[2]_0 [0]),
        .I3(\ADDR_RET_reg[2]_0 [1]),
        .I4(\ADDR_RET_reg[2]_0 [5]),
        .I5(\ADDR_RET_reg[2]_0 [2]),
        .O(\RD_DATA_RET[16]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF40E04040)) 
    \RD_DATA_RET[16]_i_2 
       (.I0(\RD_DATA_RET[10]_i_2_n_0 ),
        .I1(\RD_DATA_RET[16]_i_5_n_0 ),
        .I2(\RD_DATA_RET_reg[26]_0 ),
        .I3(\ADDR_RET_reg[12]_0 ),
        .I4(\RD_DATA_RET_reg[16]_2 ),
        .I5(\RD_DATA_RET_reg[16]_3 ),
        .O(\RD_DATA_RET[16]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \RD_DATA_RET[16]_i_3 
       (.I0(\RD_DATA_RET[16]_i_8_n_0 ),
        .I1(\RD_DATA_RET[16]_i_9_n_0 ),
        .I2(\RD_DATA_RET_reg[31]_1 ),
        .I3(\RD_DATA_RET[16]_i_10_n_0 ),
        .O(\ADDR_RET_reg[11]_3 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \RD_DATA_RET[16]_i_4 
       (.I0(\RD_DATA_RET[16]_i_8_n_0 ),
        .I1(\RD_DATA_RET[16]_i_9_n_0 ),
        .I2(\RD_DATA_RET_reg[31]_1 ),
        .I3(\RD_DATA_RET[16]_i_10_n_0 ),
        .O(\ADDR_RET_reg[11]_1 ));
  LUT6 #(
    .INIT(64'hFF000000F8F88888)) 
    \RD_DATA_RET[16]_i_5 
       (.I0(\RD_DATA_RET[0]_i_8_n_0 ),
        .I1(p_13_in[6]),
        .I2(\RD_DATA_RET_reg[0]_1 [6]),
        .I3(IC_REG_TRR_I[7]),
        .I4(\ADDR_RET_reg[12]_4 ),
        .I5(\ADDR_RET_reg[12]_0 ),
        .O(\RD_DATA_RET[16]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFEFFFFFFFFFFFFFC)) 
    \RD_DATA_RET[16]_i_8 
       (.I0(\ADDR_RET_reg[2]_0 [1]),
        .I1(\ADDR_RET_reg[2]_0 [2]),
        .I2(\ADDR_RET_reg[2]_0 [4]),
        .I3(\ADDR_RET_reg[2]_0 [3]),
        .I4(\ADDR_RET_reg[2]_0 [5]),
        .I5(\ADDR_RET_reg[2]_0 [0]),
        .O(\RD_DATA_RET[16]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000113)) 
    \RD_DATA_RET[16]_i_9 
       (.I0(\ADDR_RET_reg[2]_0 [2]),
        .I1(\ADDR_RET_reg[2]_0 [5]),
        .I2(\ADDR_RET_reg[2]_0 [1]),
        .I3(\ADDR_RET_reg[2]_0 [0]),
        .I4(\ADDR_RET_reg[2]_0 [4]),
        .I5(\ADDR_RET_reg[2]_0 [3]),
        .O(\RD_DATA_RET[16]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \RD_DATA_RET[17]_i_1 
       (.I0(\RD_DATA_RET[17]_i_2_n_0 ),
        .I1(\ADDR_RET_reg[11]_3 ),
        .I2(\RD_DATA_RET_reg[16]_1 [6]),
        .I3(\ADDR_RET_reg[11]_1 ),
        .I4(\RD_DATA_RET_reg[16]_0 [10]),
        .O(RD_DATA__0[17]));
  LUT5 #(
    .INIT(32'hFFFFE040)) 
    \RD_DATA_RET[17]_i_2 
       (.I0(\RD_DATA_RET[10]_i_2_n_0 ),
        .I1(\RD_DATA_RET[17]_i_3_n_0 ),
        .I2(\RD_DATA_RET_reg[26]_0 ),
        .I3(\RD_DATA_RET[17]_i_4_n_0 ),
        .I4(\RD_DATA_RET_reg[17]_0 ),
        .O(\RD_DATA_RET[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFF000000F8F88888)) 
    \RD_DATA_RET[17]_i_3 
       (.I0(\RD_DATA_RET[0]_i_8_n_0 ),
        .I1(p_13_in[5]),
        .I2(\RD_DATA_RET_reg[0]_1 [5]),
        .I3(IC_REG_TRR_I[6]),
        .I4(\ADDR_RET_reg[12]_4 ),
        .I5(\ADDR_RET_reg[12]_0 ),
        .O(\RD_DATA_RET[17]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFB080)) 
    \RD_DATA_RET[17]_i_4 
       (.I0(\RD_DATA_RET[17]_i_2_0 [3]),
        .I1(\ADDR_RET_reg[12]_0 ),
        .I2(\RD_DATA_RET[10]_i_7_n_0 ),
        .I3(\RD_DATA_RET[1]_i_3_2 [4]),
        .I4(\RD_DATA_RET[17]_i_6_n_0 ),
        .I5(\RD_DATA_RET[17]_i_2_1 ),
        .O(\RD_DATA_RET[17]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h0000F888)) 
    \RD_DATA_RET[17]_i_6 
       (.I0(\RD_DATA_RET[14]_i_6_n_0 ),
        .I1(IC_REG_TCR_I[12]),
        .I2(\RD_DATA_RET[1]_i_3_1 [3]),
        .I3(\RD_DATA_RET[0]_i_8_n_0 ),
        .I4(\ADDR_RET_reg[12]_0 ),
        .O(\RD_DATA_RET[17]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hF0F0F0F0FFF8F8F8)) 
    \RD_DATA_RET[18]_i_10 
       (.I0(p_13_in[4]),
        .I1(\RD_DATA_RET[14]_i_5_n_0 ),
        .I2(\RD_DATA_RET[18]_i_14_n_0 ),
        .I3(\ADDR_RET_reg[8]_3 ),
        .I4(IC_REG_TRR_I[5]),
        .I5(\ADDR_RET_reg[12]_5 ),
        .O(\RD_DATA_RET[18]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0000001000000000)) 
    \RD_DATA_RET[18]_i_12 
       (.I0(\ADDR_RET_reg[2]_0 [4]),
        .I1(\ADDR_RET_reg[2]_0 [3]),
        .I2(\ADDR_RET_reg[2]_0 [1]),
        .I3(\ADDR_RET_reg[2]_0 [0]),
        .I4(\ADDR_RET_reg[2]_0 [2]),
        .I5(\ADDR_RET_reg[2]_0 [5]),
        .O(\ADDR_RET_reg[8]_5 ));
  LUT6 #(
    .INIT(64'h0000000000010002)) 
    \RD_DATA_RET[18]_i_13 
       (.I0(\ADDR_RET_reg[2]_0 [0]),
        .I1(\ADDR_RET_reg[2]_0 [5]),
        .I2(\ADDR_RET_reg[2]_0 [3]),
        .I3(\ADDR_RET_reg[2]_0 [4]),
        .I4(\ADDR_RET_reg[2]_0 [2]),
        .I5(\ADDR_RET_reg[2]_0 [1]),
        .O(\RD_DATA_RET[18]_i_13_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \RD_DATA_RET[18]_i_14 
       (.I0(\RD_DATA_RET[16]_i_10_n_0 ),
        .I1(\RD_DATA_RET_reg[16]_1 [5]),
        .I2(\RD_DATA_RET[18]_i_13_n_0 ),
        .O(\RD_DATA_RET[18]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAFFEAEAEA)) 
    \RD_DATA_RET[18]_i_4 
       (.I0(\RD_DATA_RET[18]_i_7_n_0 ),
        .I1(\RD_DATA_RET_reg[0]_1 [4]),
        .I2(\ADDR_RET_reg[8]_0 ),
        .I3(\RD_DATA_RET_reg[18]_0 ),
        .I4(\RD_DATA_RET[18]_i_9_n_0 ),
        .I5(\ADDR_RET_reg[12]_5 ),
        .O(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[18] ));
  LUT6 #(
    .INIT(64'hBBBBBAAABAAABAAA)) 
    \RD_DATA_RET[18]_i_5 
       (.I0(\RD_DATA_RET[18]_i_10_n_0 ),
        .I1(\ADDR_RET_reg[12]_5 ),
        .I2(\RD_DATA_RET[0]_i_12_n_0 ),
        .I3(\RD_DATA_RET_reg[18]_2 ),
        .I4(\RD_DATA_RET_reg[18]_1 [11]),
        .I5(\ADDR_RET_reg[8]_5 ),
        .O(\IC_REG_F_BRPR_I_reg[18] ));
  LUT3 #(
    .INIT(8'h80)) 
    \RD_DATA_RET[18]_i_7 
       (.I0(\RD_DATA_RET_reg[16]_0 [9]),
        .I1(\RD_DATA_RET[16]_i_10_n_0 ),
        .I2(\RD_DATA_RET[18]_i_13_n_0 ),
        .O(\RD_DATA_RET[18]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h2001000020001000)) 
    \RD_DATA_RET[18]_i_9 
       (.I0(\ADDR_RET_reg[2]_0 [4]),
        .I1(\ADDR_RET_reg[2]_0 [2]),
        .I2(\ADDR_RET_reg[2]_0 [3]),
        .I3(\ADDR_RET_reg[2]_0 [5]),
        .I4(\ADDR_RET_reg[2]_0 [1]),
        .I5(\ADDR_RET_reg[2]_0 [0]),
        .O(\RD_DATA_RET[18]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF55404040)) 
    \RD_DATA_RET[19]_i_3 
       (.I0(\ADDR_RET_reg[12]_5 ),
        .I1(\RD_DATA_RET_reg[0]_1 [3]),
        .I2(\ADDR_RET_reg[8]_0 ),
        .I3(\RD_DATA_RET_reg[18]_1 [10]),
        .I4(\ADDR_RET_reg[8]_5 ),
        .I5(\RD_DATA_RET[19]_i_5_n_0 ),
        .O(\RX_FIFO_IERBUF.IC_REG_IER_I_reg[19] ));
  LUT6 #(
    .INIT(64'hBBBBBAAABAAABAAA)) 
    \RD_DATA_RET[19]_i_4 
       (.I0(\RD_DATA_RET[19]_i_6_n_0 ),
        .I1(\ADDR_RET_reg[12]_5 ),
        .I2(\RD_DATA_RET[0]_i_12_n_0 ),
        .I3(\RD_DATA_RET_reg[19]_0 ),
        .I4(IC_REG_TRR_I[4]),
        .I5(\ADDR_RET_reg[8]_3 ),
        .O(\TRR_i_reg[12] ));
  LUT6 #(
    .INIT(64'hFF08080808080808)) 
    \RD_DATA_RET[19]_i_5 
       (.I0(\ADDR_RET_reg[8]_1 ),
        .I1(\RD_DATA_RET[19]_i_3_0 ),
        .I2(\ADDR_RET_reg[12]_5 ),
        .I3(\RD_DATA_RET[18]_i_13_n_0 ),
        .I4(\RD_DATA_RET[16]_i_10_n_0 ),
        .I5(\RD_DATA_RET_reg[16]_0 [8]),
        .O(\RD_DATA_RET[19]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hF0F0F0F0FFF8F8F8)) 
    \RD_DATA_RET[19]_i_6 
       (.I0(p_13_in[3]),
        .I1(\RD_DATA_RET[14]_i_5_n_0 ),
        .I2(\RD_DATA_RET[19]_i_8_n_0 ),
        .I3(\RD_DATA_RET[19]_i_4_0 ),
        .I4(\RD_DATA_RET[18]_i_9_n_0 ),
        .I5(\ADDR_RET_reg[12]_5 ),
        .O(\RD_DATA_RET[19]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \RD_DATA_RET[19]_i_8 
       (.I0(\RD_DATA_RET[16]_i_10_n_0 ),
        .I1(\RD_DATA_RET_reg[16]_1 [4]),
        .I2(\RD_DATA_RET[18]_i_13_n_0 ),
        .O(\RD_DATA_RET[19]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \RD_DATA_RET[1]_i_3 
       (.I0(IC_REG_TCR_I[27]),
        .I1(\RD_DATA_RET[1]_i_4_n_0 ),
        .I2(IC_REG_TRR_I[20]),
        .I3(\ADDR_RET_reg[8]_3 ),
        .I4(\RD_DATA_RET[1]_i_5_n_0 ),
        .I5(\RD_DATA_RET[1]_i_6_n_0 ),
        .O(\TCR_i_reg[30] ));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    \RD_DATA_RET[1]_i_4 
       (.I0(\ADDR_RET_reg[2]_0 [0]),
        .I1(\ADDR_RET_reg[2]_0 [1]),
        .I2(\ADDR_RET_reg[2]_0 [5]),
        .I3(\ADDR_RET_reg[2]_0 [3]),
        .I4(\ADDR_RET_reg[2]_0 [2]),
        .I5(\ADDR_RET_reg[2]_0 [4]),
        .O(\RD_DATA_RET[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \RD_DATA_RET[1]_i_5 
       (.I0(\ADDR_RET_reg[12]_3 ),
        .I1(\RD_DATA_RET[1]_i_3_2 [13]),
        .I2(\ADDR_RET_reg[8]_2 ),
        .I3(\RD_DATA_RET_reg[0]_2 [11]),
        .I4(\RD_DATA_RET[1]_i_3_0 [21]),
        .I5(\ADDR_RET_reg[12]_1 ),
        .O(\RD_DATA_RET[1]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \RD_DATA_RET[1]_i_6 
       (.I0(\ADDR_RET_reg[12]_2 ),
        .I1(\RD_DATA_RET[1]_i_3_1 [12]),
        .I2(\ADDR_RET_reg[8]_0 ),
        .I3(\RD_DATA_RET_reg[0]_1 [8]),
        .I4(\RD_DATA_RET[1]_i_7_n_0 ),
        .O(\RD_DATA_RET[1]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[1]_i_7 
       (.I0(p_13_in[9]),
        .I1(\RD_DATA_RET[14]_i_5_n_0 ),
        .I2(\RD_DATA_RET[1]_i_6_0 [6]),
        .I3(\RD_DATA_RET[2]_i_7_n_0 ),
        .O(\RD_DATA_RET[1]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFF8FFF8FFF8)) 
    \RD_DATA_RET[20]_i_1 
       (.I0(\ADDR_RET_reg[11]_1 ),
        .I1(\RD_DATA_RET_reg[16]_0 [7]),
        .I2(\RD_DATA_RET_reg[20]_0 ),
        .I3(\RD_DATA_RET[20]_i_3_n_0 ),
        .I4(\ADDR_RET_reg[11]_3 ),
        .I5(\RD_DATA_RET_reg[16]_1 [3]),
        .O(RD_DATA__0[20]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA808080)) 
    \RD_DATA_RET[20]_i_3 
       (.I0(\RD_DATA_RET_reg[26]_0 ),
        .I1(\ADDR_RET_reg[8]_0 ),
        .I2(\RD_DATA_RET_reg[0]_1 [2]),
        .I3(p_13_in[2]),
        .I4(\RD_DATA_RET[14]_i_5_n_0 ),
        .I5(\RD_DATA_RET[20]_i_4_n_0 ),
        .O(\RD_DATA_RET[20]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFEEE)) 
    \RD_DATA_RET[20]_i_4 
       (.I0(\RD_DATA_RET[20]_i_3_1 ),
        .I1(\RD_DATA_RET[20]_i_6_n_0 ),
        .I2(\RD_DATA_RET[20]_i_3_0 [3]),
        .I3(\RD_DATA_RET[12]_i_5_n_0 ),
        .I4(\RD_DATA_RET[20]_i_7_n_0 ),
        .O(\RD_DATA_RET[20]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hF8888888)) 
    \RD_DATA_RET[20]_i_6 
       (.I0(IC_REG_TRR_I[3]),
        .I1(\ADDR_RET_reg[8]_3 ),
        .I2(\ADDR_RET_reg[8]_4 ),
        .I3(\RD_DATA_RET[10]_i_7_n_0 ),
        .I4(IC_REG_ESR_F_BERR_I),
        .O(\RD_DATA_RET[20]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \RD_DATA_RET[20]_i_7 
       (.I0(\RD_DATA_RET[20]_i_8_n_0 ),
        .I1(\RD_DATA_RET[18]_i_9_n_0 ),
        .I2(\RD_DATA_RET[20]_i_4_0 ),
        .I3(\ADDR_RET_reg[12]_2 ),
        .I4(\RD_DATA_RET[1]_i_3_1 [2]),
        .O(\RD_DATA_RET[20]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[20]_i_8 
       (.I0(IC_REG_TCR_I[11]),
        .I1(\RD_DATA_RET[1]_i_4_n_0 ),
        .I2(\RD_DATA_RET[1]_i_3_2 [3]),
        .I3(\ADDR_RET_reg[12]_3 ),
        .O(\RD_DATA_RET[20]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFF8FFF8FFF8)) 
    \RD_DATA_RET[21]_i_1 
       (.I0(\ADDR_RET_reg[11]_1 ),
        .I1(\RD_DATA_RET_reg[16]_0 [6]),
        .I2(\RD_DATA_RET_reg[21]_0 ),
        .I3(\RD_DATA_RET[21]_i_3_n_0 ),
        .I4(\ADDR_RET_reg[11]_3 ),
        .I5(\RD_DATA_RET_reg[16]_1 [2]),
        .O(RD_DATA__0[21]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA808080)) 
    \RD_DATA_RET[21]_i_3 
       (.I0(\RD_DATA_RET_reg[26]_0 ),
        .I1(\RD_DATA_RET[21]_i_4_n_0 ),
        .I2(\RD_DATA_RET_reg[21]_1 [2]),
        .I3(\RD_DATA_RET[20]_i_3_0 [2]),
        .I4(\RD_DATA_RET[12]_i_5_n_0 ),
        .I5(\RD_DATA_RET[21]_i_5_n_0 ),
        .O(\RD_DATA_RET[21]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000040)) 
    \RD_DATA_RET[21]_i_4 
       (.I0(\ADDR_RET_reg[2]_0 [4]),
        .I1(\ADDR_RET_reg[2]_0 [5]),
        .I2(\ADDR_RET_reg[2]_0 [3]),
        .I3(\ADDR_RET_reg[2]_0 [2]),
        .I4(\ADDR_RET_reg[2]_0 [1]),
        .I5(\ADDR_RET_reg[2]_0 [0]),
        .O(\RD_DATA_RET[21]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \RD_DATA_RET[21]_i_5 
       (.I0(\RD_DATA_RET_reg[18]_1 [9]),
        .I1(\ADDR_RET_reg[8]_5 ),
        .I2(\RD_DATA_RET[21]_i_3_0 [2]),
        .I3(\RD_DATA_RET[12]_i_6_n_0 ),
        .I4(\RD_DATA_RET[21]_i_6_n_0 ),
        .I5(\RD_DATA_RET[21]_i_3_1 ),
        .O(\RD_DATA_RET[21]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \RD_DATA_RET[21]_i_6 
       (.I0(\RD_DATA_RET[2]_i_7_n_0 ),
        .I1(\RD_DATA_RET[17]_i_2_0 [2]),
        .I2(\RD_DATA_RET[9]_i_5_n_0 ),
        .I3(\RD_DATA_RET[21]_i_5_0 [2]),
        .I4(\RD_DATA_RET[21]_i_8_n_0 ),
        .O(\RD_DATA_RET[21]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[21]_i_8 
       (.I0(\RD_DATA_RET[1]_i_3_0 [9]),
        .I1(\ADDR_RET_reg[12]_1 ),
        .I2(IC_REG_TCR_I[10]),
        .I3(\RD_DATA_RET[1]_i_4_n_0 ),
        .O(\RD_DATA_RET[21]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFF8FFF8FFF8)) 
    \RD_DATA_RET[22]_i_1 
       (.I0(\ADDR_RET_reg[11]_1 ),
        .I1(\RD_DATA_RET_reg[16]_0 [5]),
        .I2(\RD_DATA_RET_reg[22]_0 ),
        .I3(\RD_DATA_RET[22]_i_3_n_0 ),
        .I4(\ADDR_RET_reg[11]_3 ),
        .I5(\RD_DATA_RET_reg[16]_1 [1]),
        .O(RD_DATA__0[22]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA808080)) 
    \RD_DATA_RET[22]_i_3 
       (.I0(\RD_DATA_RET_reg[26]_0 ),
        .I1(\RD_DATA_RET[21]_i_4_n_0 ),
        .I2(\RD_DATA_RET_reg[21]_1 [1]),
        .I3(\RD_DATA_RET[20]_i_3_0 [1]),
        .I4(\RD_DATA_RET[12]_i_5_n_0 ),
        .I5(\RD_DATA_RET[22]_i_4_n_0 ),
        .O(\RD_DATA_RET[22]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \RD_DATA_RET[22]_i_4 
       (.I0(\RD_DATA_RET_reg[18]_1 [8]),
        .I1(\ADDR_RET_reg[8]_5 ),
        .I2(\RD_DATA_RET[21]_i_3_0 [1]),
        .I3(\RD_DATA_RET[12]_i_6_n_0 ),
        .I4(\RD_DATA_RET[22]_i_5_n_0 ),
        .I5(\RD_DATA_RET[22]_i_3_0 ),
        .O(\RD_DATA_RET[22]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \RD_DATA_RET[22]_i_5 
       (.I0(\RD_DATA_RET[2]_i_7_n_0 ),
        .I1(\RD_DATA_RET[17]_i_2_0 [1]),
        .I2(\RD_DATA_RET[9]_i_5_n_0 ),
        .I3(\RD_DATA_RET[21]_i_5_0 [1]),
        .I4(\RD_DATA_RET[22]_i_7_n_0 ),
        .O(\RD_DATA_RET[22]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[22]_i_7 
       (.I0(\RD_DATA_RET[1]_i_3_0 [8]),
        .I1(\ADDR_RET_reg[12]_1 ),
        .I2(IC_REG_TCR_I[9]),
        .I3(\RD_DATA_RET[1]_i_4_n_0 ),
        .O(\RD_DATA_RET[22]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFF8FFF8FFF8)) 
    \RD_DATA_RET[23]_i_1 
       (.I0(\ADDR_RET_reg[11]_1 ),
        .I1(\RD_DATA_RET_reg[16]_0 [4]),
        .I2(\RD_DATA_RET_reg[23]_0 ),
        .I3(\RD_DATA_RET[23]_i_3_n_0 ),
        .I4(\ADDR_RET_reg[11]_3 ),
        .I5(\RD_DATA_RET_reg[16]_1 [0]),
        .O(RD_DATA__0[23]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA808080)) 
    \RD_DATA_RET[23]_i_3 
       (.I0(\RD_DATA_RET_reg[26]_0 ),
        .I1(\RD_DATA_RET[21]_i_4_n_0 ),
        .I2(\RD_DATA_RET_reg[21]_1 [0]),
        .I3(\RD_DATA_RET[20]_i_3_0 [0]),
        .I4(\RD_DATA_RET[12]_i_5_n_0 ),
        .I5(\RD_DATA_RET[23]_i_4_n_0 ),
        .O(\RD_DATA_RET[23]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \RD_DATA_RET[23]_i_4 
       (.I0(\RD_DATA_RET_reg[18]_1 [7]),
        .I1(\ADDR_RET_reg[8]_5 ),
        .I2(\RD_DATA_RET[21]_i_3_0 [0]),
        .I3(\RD_DATA_RET[12]_i_6_n_0 ),
        .I4(\RD_DATA_RET[23]_i_5_n_0 ),
        .I5(\RD_DATA_RET[23]_i_3_0 ),
        .O(\RD_DATA_RET[23]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \RD_DATA_RET[23]_i_5 
       (.I0(\RD_DATA_RET[2]_i_7_n_0 ),
        .I1(\RD_DATA_RET[17]_i_2_0 [0]),
        .I2(\RD_DATA_RET[9]_i_5_n_0 ),
        .I3(\RD_DATA_RET[21]_i_5_0 [0]),
        .I4(\RD_DATA_RET[23]_i_7_n_0 ),
        .O(\RD_DATA_RET[23]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[23]_i_7 
       (.I0(\RD_DATA_RET[1]_i_3_0 [7]),
        .I1(\ADDR_RET_reg[12]_1 ),
        .I2(IC_REG_TCR_I[8]),
        .I3(\RD_DATA_RET[1]_i_4_n_0 ),
        .O(\RD_DATA_RET[23]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \RD_DATA_RET[24]_i_1 
       (.I0(\RD_DATA_RET_reg[24]_2 ),
        .I1(\ADDR_RET_reg[11]_2 ),
        .I2(\RD_DATA_RET_reg[24]_1 [1]),
        .I3(\ADDR_RET_reg[11]_3 ),
        .I4(\RD_DATA_RET_reg[24]_0 [1]),
        .O(RD_DATA__0[24]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \RD_DATA_RET[24]_i_3 
       (.I0(\RD_DATA_RET[16]_i_8_n_0 ),
        .I1(\RD_DATA_RET[16]_i_9_n_0 ),
        .I2(\RD_DATA_RET_reg[31]_1 ),
        .I3(\RD_DATA_RET[16]_i_10_n_0 ),
        .O(\ADDR_RET_reg[11]_2 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \RD_DATA_RET[24]_i_4 
       (.I0(\RD_DATA_RET[24]_i_2_0 ),
        .I1(\RD_DATA_RET[24]_i_2 [7]),
        .I2(\RD_DATA_RET[9]_i_5_n_0 ),
        .I3(IC_REG_TRR_I[2]),
        .I4(\ADDR_RET_reg[8]_3 ),
        .I5(\RD_DATA_RET[24]_i_7_n_0 ),
        .O(\IC_REG_N_BTR_TS1_I_reg[0] ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \RD_DATA_RET[24]_i_7 
       (.I0(\ADDR_RET_reg[12]_3 ),
        .I1(\RD_DATA_RET[1]_i_3_2 [2]),
        .I2(\RD_DATA_RET[1]_i_4_n_0 ),
        .I3(IC_REG_TCR_I[7]),
        .I4(\RD_DATA_RET[24]_i_4_0 ),
        .O(\RD_DATA_RET[24]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \RD_DATA_RET[25]_i_1 
       (.I0(\RD_DATA_RET_reg[25]_0 ),
        .I1(\ADDR_RET_reg[11]_3 ),
        .I2(\RD_DATA_RET_reg[25]_1 ),
        .I3(\ADDR_RET_reg[11]_1 ),
        .I4(\RD_DATA_RET_reg[16]_0 [3]),
        .O(RD_DATA__0[25]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \RD_DATA_RET[25]_i_3 
       (.I0(\RD_DATA_RET[24]_i_2 [6]),
        .I1(\RD_DATA_RET[9]_i_5_n_0 ),
        .I2(\RD_DATA_RET[1]_i_3_0 [6]),
        .I3(\ADDR_RET_reg[12]_1 ),
        .I4(\RD_DATA_RET[25]_i_5_n_0 ),
        .I5(\RD_DATA_RET[25]_i_6_n_0 ),
        .O(\IC_REG_N_BTR_TS1_I_reg[1] ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \RD_DATA_RET[25]_i_5 
       (.I0(\RD_DATA_RET[25]_i_7_n_0 ),
        .I1(\ADDR_RET_reg[8]_1 ),
        .I2(IC_REG_SR_ERRWRN_I),
        .I3(\ADDR_RET_reg[8]_5 ),
        .I4(\RD_DATA_RET_reg[18]_1 [6]),
        .O(\RD_DATA_RET[25]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \RD_DATA_RET[25]_i_6 
       (.I0(\ADDR_RET_reg[12]_2 ),
        .I1(\RD_DATA_RET[1]_i_3_1 [1]),
        .I2(\RD_DATA_RET[1]_i_4_n_0 ),
        .I3(IC_REG_TCR_I[6]),
        .I4(\RD_DATA_RET[25]_i_8_n_0 ),
        .O(\RD_DATA_RET[25]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hF8008800)) 
    \RD_DATA_RET[25]_i_7 
       (.I0(\RD_DATA_RET_reg[0]_1 [1]),
        .I1(\ADDR_RET_reg[12]_4 ),
        .I2(p_13_in[1]),
        .I3(\ADDR_RET_reg[8]_4 ),
        .I4(\RD_DATA_RET[0]_i_8_n_0 ),
        .O(\RD_DATA_RET[25]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[25]_i_8 
       (.I0(\RD_DATA_RET[1]_i_3_2 [1]),
        .I1(\ADDR_RET_reg[12]_3 ),
        .I2(IC_REG_TRR_I[1]),
        .I3(\ADDR_RET_reg[8]_3 ),
        .O(\RD_DATA_RET[25]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \RD_DATA_RET[26]_i_1 
       (.I0(\RD_DATA_RET[26]_i_2_n_0 ),
        .I1(\RD_DATA_RET_reg[26]_0 ),
        .I2(\RD_DATA_RET[26]_i_3_n_0 ),
        .I3(\ADDR_RET_reg[11]_2 ),
        .I4(\RD_DATA_RET_reg[24]_1 [0]),
        .O(RD_DATA__0[26]));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \RD_DATA_RET[26]_i_2 
       (.I0(\ADDR_RET_reg[11]_3 ),
        .I1(\RD_DATA_RET_reg[26]_1 ),
        .I2(\ADDR_RET_reg[11]_1 ),
        .I3(\RD_DATA_RET_reg[16]_0 [2]),
        .I4(\RD_DATA_RET_reg[26]_2 ),
        .O(\RD_DATA_RET[26]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFEAAAAAEAEAAAAA)) 
    \RD_DATA_RET[26]_i_3 
       (.I0(\RD_DATA_RET[26]_i_5_n_0 ),
        .I1(\RD_DATA_RET[0]_i_8_n_0 ),
        .I2(p_13_in[0]),
        .I3(\RD_DATA_RET_reg[0]_1 [0]),
        .I4(\ADDR_RET_reg[8]_4 ),
        .I5(\ADDR_RET_reg[12]_4 ),
        .O(\RD_DATA_RET[26]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \RD_DATA_RET[26]_i_5 
       (.I0(IC_REG_SR_BBSY_I),
        .I1(\ADDR_RET_reg[8]_1 ),
        .I2(\RD_DATA_RET_reg[18]_1 [5]),
        .I3(\ADDR_RET_reg[8]_5 ),
        .I4(\RD_DATA_RET[26]_i_6_n_0 ),
        .I5(\RD_DATA_RET[26]_i_7_n_0 ),
        .O(\RD_DATA_RET[26]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \RD_DATA_RET[26]_i_6 
       (.I0(\ADDR_RET_reg[12]_2 ),
        .I1(\RD_DATA_RET[1]_i_3_1 [0]),
        .I2(\RD_DATA_RET[1]_i_4_n_0 ),
        .I3(IC_REG_TCR_I[5]),
        .I4(\RD_DATA_RET[26]_i_8_n_0 ),
        .O(\RD_DATA_RET[26]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \RD_DATA_RET[26]_i_7 
       (.I0(\RD_DATA_RET[9]_i_5_n_0 ),
        .I1(\RD_DATA_RET[24]_i_2 [5]),
        .I2(\RD_DATA_RET[12]_i_6_n_0 ),
        .I3(\RD_DATA_RET[26]_i_5_0 [5]),
        .I4(\RD_DATA_RET[26]_i_9_n_0 ),
        .O(\RD_DATA_RET[26]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[26]_i_8 
       (.I0(IC_REG_TRR_I[0]),
        .I1(\ADDR_RET_reg[8]_3 ),
        .I2(\RD_DATA_RET[1]_i_3_2 [0]),
        .I3(\ADDR_RET_reg[12]_3 ),
        .O(\RD_DATA_RET[26]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[26]_i_9 
       (.I0(\RD_DATA_RET[26]_i_7_0 [5]),
        .I1(\RD_DATA_RET[2]_i_7_n_0 ),
        .I2(\RD_DATA_RET[1]_i_3_0 [5]),
        .I3(\ADDR_RET_reg[12]_1 ),
        .O(\RD_DATA_RET[26]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[27]_i_11 
       (.I0(\RD_DATA_RET[1]_i_3_0 [4]),
        .I1(\ADDR_RET_reg[12]_1 ),
        .I2(IC_REG_TCR_I[4]),
        .I3(\RD_DATA_RET[1]_i_4_n_0 ),
        .O(\RD_DATA_RET[27]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h0100)) 
    \RD_DATA_RET[27]_i_2 
       (.I0(\RD_DATA_RET[27]_i_6_n_0 ),
        .I1(\RD_DATA_RET[16]_i_10_n_0 ),
        .I2(\RD_DATA_RET[16]_i_8_n_0 ),
        .I3(\RD_DATA_RET_reg[31]_1 ),
        .O(\ADDR_RET_reg[11]_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA808080)) 
    \RD_DATA_RET[27]_i_3 
       (.I0(\RD_DATA_RET_reg[26]_0 ),
        .I1(\RD_DATA_RET[21]_i_4_n_0 ),
        .I2(\RD_DATA_RET_reg[27]_0 [4]),
        .I3(\RD_DATA_RET_reg[27]_1 [4]),
        .I4(\RD_DATA_RET[12]_i_5_n_0 ),
        .I5(\RD_DATA_RET[27]_i_7_n_0 ),
        .O(\RD_INDEX_reg[1] ));
  LUT6 #(
    .INIT(64'h0000000000000107)) 
    \RD_DATA_RET[27]_i_6 
       (.I0(\ADDR_RET_reg[2]_0 [1]),
        .I1(\ADDR_RET_reg[2]_0 [0]),
        .I2(\ADDR_RET_reg[2]_0 [5]),
        .I3(\ADDR_RET_reg[2]_0 [2]),
        .I4(\ADDR_RET_reg[2]_0 [4]),
        .I5(\ADDR_RET_reg[2]_0 [3]),
        .O(\RD_DATA_RET[27]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \RD_DATA_RET[27]_i_7 
       (.I0(\RD_DATA_RET_reg[18]_1 [4]),
        .I1(\ADDR_RET_reg[8]_5 ),
        .I2(\RD_DATA_RET[26]_i_5_0 [4]),
        .I3(\RD_DATA_RET[12]_i_6_n_0 ),
        .I4(\RD_DATA_RET[27]_i_9_n_0 ),
        .I5(\RD_DATA_RET[27]_i_3_0 ),
        .O(\RD_DATA_RET[27]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \RD_DATA_RET[27]_i_9 
       (.I0(\RD_DATA_RET[2]_i_7_n_0 ),
        .I1(\RD_DATA_RET[26]_i_7_0 [4]),
        .I2(\RD_DATA_RET[9]_i_5_n_0 ),
        .I3(\RD_DATA_RET[24]_i_2 [4]),
        .I4(\RD_DATA_RET[27]_i_11_n_0 ),
        .O(\RD_DATA_RET[27]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA808080)) 
    \RD_DATA_RET[28]_i_2 
       (.I0(\RD_DATA_RET_reg[26]_0 ),
        .I1(\RD_DATA_RET[21]_i_4_n_0 ),
        .I2(\RD_DATA_RET_reg[27]_0 [3]),
        .I3(\RD_DATA_RET_reg[27]_1 [3]),
        .I4(\RD_DATA_RET[12]_i_5_n_0 ),
        .I5(\RD_DATA_RET[28]_i_5_n_0 ),
        .O(\RD_INDEX_reg[2] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \RD_DATA_RET[28]_i_5 
       (.I0(\RD_DATA_RET_reg[18]_1 [3]),
        .I1(\ADDR_RET_reg[8]_5 ),
        .I2(\RD_DATA_RET[26]_i_5_0 [3]),
        .I3(\RD_DATA_RET[12]_i_6_n_0 ),
        .I4(\RD_DATA_RET[28]_i_7_n_0 ),
        .I5(\RD_DATA_RET[28]_i_2_0 ),
        .O(\RD_DATA_RET[28]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \RD_DATA_RET[28]_i_7 
       (.I0(\RD_DATA_RET[2]_i_7_n_0 ),
        .I1(\RD_DATA_RET[26]_i_7_0 [3]),
        .I2(\RD_DATA_RET[9]_i_5_n_0 ),
        .I3(\RD_DATA_RET[24]_i_2 [3]),
        .I4(\RD_DATA_RET[28]_i_9_n_0 ),
        .O(\RD_DATA_RET[28]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[28]_i_9 
       (.I0(\RD_DATA_RET[1]_i_3_0 [3]),
        .I1(\ADDR_RET_reg[12]_1 ),
        .I2(IC_REG_TCR_I[3]),
        .I3(\RD_DATA_RET[1]_i_4_n_0 ),
        .O(\RD_DATA_RET[28]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA808080)) 
    \RD_DATA_RET[29]_i_2 
       (.I0(\RD_DATA_RET_reg[26]_0 ),
        .I1(\RD_DATA_RET[21]_i_4_n_0 ),
        .I2(\RD_DATA_RET_reg[27]_0 [2]),
        .I3(\RD_DATA_RET_reg[27]_1 [2]),
        .I4(\RD_DATA_RET[12]_i_5_n_0 ),
        .I5(\RD_DATA_RET[29]_i_5_n_0 ),
        .O(\RD_INDEX_reg[3] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \RD_DATA_RET[29]_i_5 
       (.I0(\RD_DATA_RET_reg[18]_1 [2]),
        .I1(\ADDR_RET_reg[8]_5 ),
        .I2(\RD_DATA_RET[26]_i_5_0 [2]),
        .I3(\RD_DATA_RET[12]_i_6_n_0 ),
        .I4(\RD_DATA_RET[29]_i_7_n_0 ),
        .I5(\RD_DATA_RET[29]_i_2_0 ),
        .O(\RD_DATA_RET[29]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \RD_DATA_RET[29]_i_7 
       (.I0(\RD_DATA_RET[2]_i_7_n_0 ),
        .I1(\RD_DATA_RET[26]_i_7_0 [2]),
        .I2(\RD_DATA_RET[9]_i_5_n_0 ),
        .I3(\RD_DATA_RET[24]_i_2 [2]),
        .I4(\RD_DATA_RET[29]_i_9_n_0 ),
        .O(\RD_DATA_RET[29]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[29]_i_9 
       (.I0(\RD_DATA_RET[1]_i_3_0 [2]),
        .I1(\ADDR_RET_reg[12]_1 ),
        .I2(IC_REG_TCR_I[2]),
        .I3(\RD_DATA_RET[1]_i_4_n_0 ),
        .O(\RD_DATA_RET[29]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \RD_DATA_RET[2]_i_3 
       (.I0(\RD_DATA_RET[2]_i_4_n_0 ),
        .I1(\RD_DATA_RET[1]_i_3_0 [20]),
        .I2(\ADDR_RET_reg[12]_1 ),
        .I3(IC_REG_TCR_I[26]),
        .I4(\RD_DATA_RET[1]_i_4_n_0 ),
        .I5(\RD_DATA_RET[2]_i_6_n_0 ),
        .O(\RX_FIFO_AFR.IC_REG_AFR_I_reg[2] ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[2]_i_4 
       (.I0(\RD_DATA_RET[1]_i_6_0 [5]),
        .I1(\RD_DATA_RET[2]_i_7_n_0 ),
        .I2(\RD_DATA_RET_reg[0]_2 [10]),
        .I3(\ADDR_RET_reg[8]_2 ),
        .O(\RD_DATA_RET[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000100000000000)) 
    \RD_DATA_RET[2]_i_5 
       (.I0(\ADDR_RET_reg[2]_0 [0]),
        .I1(\ADDR_RET_reg[2]_0 [1]),
        .I2(\ADDR_RET_reg[2]_0 [5]),
        .I3(\ADDR_RET_reg[2]_0 [3]),
        .I4(\ADDR_RET_reg[2]_0 [2]),
        .I5(\ADDR_RET_reg[2]_0 [4]),
        .O(\ADDR_RET_reg[12]_1 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \RD_DATA_RET[2]_i_6 
       (.I0(\ADDR_RET_reg[12]_3 ),
        .I1(\RD_DATA_RET[1]_i_3_2 [12]),
        .I2(\ADDR_RET_reg[12]_2 ),
        .I3(\RD_DATA_RET[1]_i_3_1 [11]),
        .I4(IC_REG_TRR_I[19]),
        .I5(\ADDR_RET_reg[8]_3 ),
        .O(\RD_DATA_RET[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000800000)) 
    \RD_DATA_RET[2]_i_7 
       (.I0(\ADDR_RET_reg[2]_0 [4]),
        .I1(\ADDR_RET_reg[2]_0 [5]),
        .I2(\ADDR_RET_reg[2]_0 [3]),
        .I3(\ADDR_RET_reg[2]_0 [2]),
        .I4(\ADDR_RET_reg[2]_0 [1]),
        .I5(\ADDR_RET_reg[2]_0 [0]),
        .O(\RD_DATA_RET[2]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFF8)) 
    \RD_DATA_RET[30]_i_1 
       (.I0(Q[1]),
        .I1(\ADDR_RET_reg[11]_0 ),
        .I2(\RD_DATA_RET[30]_i_2_n_0 ),
        .I3(\RD_DATA_RET_reg[30]_0 ),
        .I4(\RD_DATA_RET[30]_i_4_n_0 ),
        .O(RD_DATA__0[30]));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[30]_i_10 
       (.I0(\RD_DATA_RET[1]_i_3_0 [1]),
        .I1(\ADDR_RET_reg[12]_1 ),
        .I2(IC_REG_TCR_I[1]),
        .I3(\RD_DATA_RET[1]_i_4_n_0 ),
        .O(\RD_DATA_RET[30]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA808080)) 
    \RD_DATA_RET[30]_i_2 
       (.I0(\RD_DATA_RET_reg[26]_0 ),
        .I1(\RD_DATA_RET[21]_i_4_n_0 ),
        .I2(\RD_DATA_RET_reg[27]_0 [1]),
        .I3(\RD_DATA_RET_reg[27]_1 [1]),
        .I4(\RD_DATA_RET[12]_i_5_n_0 ),
        .I5(\RD_DATA_RET[30]_i_5_n_0 ),
        .O(\RD_DATA_RET[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF40FF40FF40)) 
    \RD_DATA_RET[30]_i_4 
       (.I0(\RD_DATA_RET[16]_i_10_n_0 ),
        .I1(\IC_REG_F_BRPR_I_reg[15] ),
        .I2(\RD_DATA_RET[30]_i_6_n_0 ),
        .I3(\RD_DATA_RET_reg[30]_1 ),
        .I4(\RD_DATA_RET_reg[16]_0 [1]),
        .I5(\ADDR_RET_reg[11]_1 ),
        .O(\RD_DATA_RET[30]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \RD_DATA_RET[30]_i_5 
       (.I0(\RD_DATA_RET_reg[18]_1 [1]),
        .I1(\ADDR_RET_reg[8]_5 ),
        .I2(\RD_DATA_RET[26]_i_5_0 [1]),
        .I3(\RD_DATA_RET[12]_i_6_n_0 ),
        .I4(\RD_DATA_RET[30]_i_8_n_0 ),
        .I5(\RD_DATA_RET[30]_i_2_0 ),
        .O(\RD_DATA_RET[30]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \RD_DATA_RET[30]_i_6 
       (.I0(\RD_DATA_RET_reg[31]_1 ),
        .I1(\RD_DATA_RET[16]_i_9_n_0 ),
        .I2(\RD_DATA_RET[16]_i_8_n_0 ),
        .O(\RD_DATA_RET[30]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \RD_DATA_RET[30]_i_8 
       (.I0(\RD_DATA_RET[2]_i_7_n_0 ),
        .I1(\RD_DATA_RET[26]_i_7_0 [1]),
        .I2(\RD_DATA_RET[9]_i_5_n_0 ),
        .I3(\RD_DATA_RET[24]_i_2 [1]),
        .I4(\RD_DATA_RET[30]_i_10_n_0 ),
        .O(\RD_DATA_RET[30]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFF8)) 
    \RD_DATA_RET[31]_i_1 
       (.I0(Q[0]),
        .I1(\ADDR_RET_reg[11]_0 ),
        .I2(\RD_DATA_RET[31]_i_2_n_0 ),
        .I3(\RD_DATA_RET_reg[31]_0 ),
        .I4(\RD_DATA_RET[31]_i_4_n_0 ),
        .O(RD_DATA__0[31]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA808080)) 
    \RD_DATA_RET[31]_i_2 
       (.I0(\RD_DATA_RET_reg[26]_0 ),
        .I1(\RD_DATA_RET[21]_i_4_n_0 ),
        .I2(\RD_DATA_RET_reg[27]_0 [0]),
        .I3(\RD_DATA_RET_reg[27]_1 [0]),
        .I4(\RD_DATA_RET[12]_i_5_n_0 ),
        .I5(\RD_DATA_RET[31]_i_5_n_0 ),
        .O(\RD_DATA_RET[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF40FF40FF40)) 
    \RD_DATA_RET[31]_i_4 
       (.I0(\RD_DATA_RET[16]_i_10_n_0 ),
        .I1(IC_REG_SRR_SRST),
        .I2(\RD_DATA_RET[30]_i_6_n_0 ),
        .I3(\RD_DATA_RET_reg[31]_2 ),
        .I4(\RD_DATA_RET_reg[16]_0 [0]),
        .I5(\ADDR_RET_reg[11]_1 ),
        .O(\RD_DATA_RET[31]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \RD_DATA_RET[31]_i_5 
       (.I0(\RD_DATA_RET_reg[18]_1 [0]),
        .I1(\ADDR_RET_reg[8]_5 ),
        .I2(\RD_DATA_RET[26]_i_5_0 [0]),
        .I3(\RD_DATA_RET[12]_i_6_n_0 ),
        .I4(\RD_DATA_RET[31]_i_7_n_0 ),
        .I5(\RD_DATA_RET[31]_i_2_0 ),
        .O(\RD_DATA_RET[31]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \RD_DATA_RET[31]_i_7 
       (.I0(\RD_DATA_RET[2]_i_7_n_0 ),
        .I1(\RD_DATA_RET[26]_i_7_0 [0]),
        .I2(\RD_DATA_RET[9]_i_5_n_0 ),
        .I3(\RD_DATA_RET[24]_i_2 [0]),
        .I4(\RD_DATA_RET[31]_i_9_n_0 ),
        .O(\RD_DATA_RET[31]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[31]_i_9 
       (.I0(\RD_DATA_RET[1]_i_3_0 [0]),
        .I1(\ADDR_RET_reg[12]_1 ),
        .I2(IC_REG_TCR_I[0]),
        .I3(\RD_DATA_RET[1]_i_4_n_0 ),
        .O(\RD_DATA_RET[31]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \RD_DATA_RET[3]_i_3 
       (.I0(\RD_DATA_RET[3]_i_4_n_0 ),
        .I1(\RD_DATA_RET[1]_i_3_0 [19]),
        .I2(\ADDR_RET_reg[12]_1 ),
        .I3(IC_REG_TCR_I[25]),
        .I4(\RD_DATA_RET[1]_i_4_n_0 ),
        .I5(\RD_DATA_RET[3]_i_5_n_0 ),
        .O(\RX_FIFO_AFR.IC_REG_AFR_I_reg[3] ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[3]_i_4 
       (.I0(\RD_DATA_RET[1]_i_6_0 [4]),
        .I1(\RD_DATA_RET[2]_i_7_n_0 ),
        .I2(\RD_DATA_RET_reg[0]_2 [9]),
        .I3(\ADDR_RET_reg[8]_2 ),
        .O(\RD_DATA_RET[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \RD_DATA_RET[3]_i_5 
       (.I0(\ADDR_RET_reg[12]_3 ),
        .I1(\RD_DATA_RET[1]_i_3_2 [11]),
        .I2(\ADDR_RET_reg[12]_2 ),
        .I3(\RD_DATA_RET[1]_i_3_1 [10]),
        .I4(IC_REG_TRR_I[18]),
        .I5(\ADDR_RET_reg[8]_3 ),
        .O(\RD_DATA_RET[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \RD_DATA_RET[4]_i_3 
       (.I0(\RD_DATA_RET[4]_i_4_n_0 ),
        .I1(\RD_DATA_RET[1]_i_3_0 [18]),
        .I2(\ADDR_RET_reg[12]_1 ),
        .I3(IC_REG_TCR_I[24]),
        .I4(\RD_DATA_RET[1]_i_4_n_0 ),
        .I5(\RD_DATA_RET[4]_i_5_n_0 ),
        .O(\RX_FIFO_AFR.IC_REG_AFR_I_reg[4] ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[4]_i_4 
       (.I0(\RD_DATA_RET[1]_i_6_0 [3]),
        .I1(\RD_DATA_RET[2]_i_7_n_0 ),
        .I2(\RD_DATA_RET_reg[0]_2 [8]),
        .I3(\ADDR_RET_reg[8]_2 ),
        .O(\RD_DATA_RET[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \RD_DATA_RET[4]_i_5 
       (.I0(\ADDR_RET_reg[12]_3 ),
        .I1(\RD_DATA_RET[1]_i_3_2 [10]),
        .I2(\ADDR_RET_reg[12]_2 ),
        .I3(\RD_DATA_RET[1]_i_3_1 [9]),
        .I4(IC_REG_TRR_I[17]),
        .I5(\ADDR_RET_reg[8]_3 ),
        .O(\RD_DATA_RET[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \RD_DATA_RET[5]_i_3 
       (.I0(\RD_DATA_RET[5]_i_4_n_0 ),
        .I1(\RD_DATA_RET[1]_i_3_0 [17]),
        .I2(\ADDR_RET_reg[12]_1 ),
        .I3(IC_REG_TCR_I[23]),
        .I4(\RD_DATA_RET[1]_i_4_n_0 ),
        .I5(\RD_DATA_RET[5]_i_5_n_0 ),
        .O(\RX_FIFO_AFR.IC_REG_AFR_I_reg[5] ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[5]_i_4 
       (.I0(\RD_DATA_RET[1]_i_6_0 [2]),
        .I1(\RD_DATA_RET[2]_i_7_n_0 ),
        .I2(\RD_DATA_RET_reg[0]_2 [7]),
        .I3(\ADDR_RET_reg[8]_2 ),
        .O(\RD_DATA_RET[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \RD_DATA_RET[5]_i_5 
       (.I0(\ADDR_RET_reg[12]_3 ),
        .I1(\RD_DATA_RET[1]_i_3_2 [9]),
        .I2(\ADDR_RET_reg[12]_2 ),
        .I3(\RD_DATA_RET[1]_i_3_1 [8]),
        .I4(IC_REG_TRR_I[16]),
        .I5(\ADDR_RET_reg[8]_3 ),
        .O(\RD_DATA_RET[5]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \RD_DATA_RET[6]_i_3 
       (.I0(\RD_DATA_RET[6]_i_4_n_0 ),
        .I1(\RD_DATA_RET[1]_i_3_0 [16]),
        .I2(\ADDR_RET_reg[12]_1 ),
        .I3(IC_REG_TCR_I[22]),
        .I4(\RD_DATA_RET[1]_i_4_n_0 ),
        .I5(\RD_DATA_RET[6]_i_5_n_0 ),
        .O(\RX_FIFO_AFR.IC_REG_AFR_I_reg[6] ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[6]_i_4 
       (.I0(\RD_DATA_RET[1]_i_6_0 [1]),
        .I1(\RD_DATA_RET[2]_i_7_n_0 ),
        .I2(\RD_DATA_RET_reg[0]_2 [6]),
        .I3(\ADDR_RET_reg[8]_2 ),
        .O(\RD_DATA_RET[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \RD_DATA_RET[6]_i_5 
       (.I0(\ADDR_RET_reg[12]_3 ),
        .I1(\RD_DATA_RET[1]_i_3_2 [8]),
        .I2(\ADDR_RET_reg[12]_2 ),
        .I3(\RD_DATA_RET[1]_i_3_1 [7]),
        .I4(IC_REG_TRR_I[15]),
        .I5(\ADDR_RET_reg[8]_3 ),
        .O(\RD_DATA_RET[6]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \RD_DATA_RET[7]_i_3 
       (.I0(\RD_DATA_RET[7]_i_4_n_0 ),
        .I1(\RD_DATA_RET[1]_i_3_0 [15]),
        .I2(\ADDR_RET_reg[12]_1 ),
        .I3(IC_REG_TCR_I[21]),
        .I4(\RD_DATA_RET[1]_i_4_n_0 ),
        .I5(\RD_DATA_RET[7]_i_5_n_0 ),
        .O(\RX_FIFO_AFR.IC_REG_AFR_I_reg[7] ));
  LUT4 #(
    .INIT(16'hF888)) 
    \RD_DATA_RET[7]_i_4 
       (.I0(\RD_DATA_RET[1]_i_6_0 [0]),
        .I1(\RD_DATA_RET[2]_i_7_n_0 ),
        .I2(\RD_DATA_RET_reg[0]_2 [5]),
        .I3(\ADDR_RET_reg[8]_2 ),
        .O(\RD_DATA_RET[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \RD_DATA_RET[7]_i_5 
       (.I0(\ADDR_RET_reg[12]_3 ),
        .I1(\RD_DATA_RET[1]_i_3_2 [7]),
        .I2(\ADDR_RET_reg[12]_2 ),
        .I3(\RD_DATA_RET[1]_i_3_1 [6]),
        .I4(IC_REG_TRR_I[14]),
        .I5(\ADDR_RET_reg[8]_3 ),
        .O(\RD_DATA_RET[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \RD_DATA_RET[8]_i_1 
       (.I0(\RD_DATA_RET[8]_i_2_n_0 ),
        .I1(\RD_DATA_RET[8]_i_3_n_0 ),
        .I2(\RD_DATA_RET_reg[8]_0 ),
        .I3(doutb),
        .I4(\RD_DATA_RET_reg[8]_1 ),
        .I5(\RD_DATA_RET[8]_i_6_n_0 ),
        .O(RD_DATA__0[8]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \RD_DATA_RET[8]_i_2 
       (.I0(\RD_DATA_RET[1]_i_4_n_0 ),
        .I1(IC_REG_TCR_I[20]),
        .I2(\RD_DATA_RET_reg[26]_0 ),
        .I3(\ADDR_RET_reg[12]_2 ),
        .I4(\RD_DATA_RET[1]_i_3_1 [5]),
        .O(\RD_DATA_RET[8]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \RD_DATA_RET[8]_i_3 
       (.I0(\ADDR_RET_reg[8]_3 ),
        .I1(IC_REG_TRR_I[13]),
        .I2(\RD_DATA_RET_reg[26]_0 ),
        .I3(\ADDR_RET_reg[12]_1 ),
        .I4(\RD_DATA_RET[1]_i_3_0 [14]),
        .O(\RD_DATA_RET[8]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \RD_DATA_RET[8]_i_6 
       (.I0(\ADDR_RET_reg[8]_2 ),
        .I1(\RD_DATA_RET_reg[0]_2 [4]),
        .I2(\RD_DATA_RET_reg[26]_0 ),
        .I3(\ADDR_RET_reg[12]_3 ),
        .I4(\RD_DATA_RET[1]_i_3_2 [6]),
        .O(\RD_DATA_RET[8]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000800000)) 
    \RD_DATA_RET[8]_i_7 
       (.I0(\ADDR_RET_reg[2]_0 [0]),
        .I1(\ADDR_RET_reg[2]_0 [1]),
        .I2(\ADDR_RET_reg[2]_0 [5]),
        .I3(\ADDR_RET_reg[2]_0 [3]),
        .I4(\ADDR_RET_reg[2]_0 [2]),
        .I5(\ADDR_RET_reg[2]_0 [4]),
        .O(\ADDR_RET_reg[12]_2 ));
  LUT6 #(
    .INIT(64'h0000000000200000)) 
    \RD_DATA_RET[8]_i_8 
       (.I0(\ADDR_RET_reg[2]_0 [0]),
        .I1(\ADDR_RET_reg[2]_0 [1]),
        .I2(\ADDR_RET_reg[2]_0 [5]),
        .I3(\ADDR_RET_reg[2]_0 [3]),
        .I4(\ADDR_RET_reg[2]_0 [2]),
        .I5(\ADDR_RET_reg[2]_0 [4]),
        .O(\ADDR_RET_reg[12]_3 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \RD_DATA_RET[9]_i_3 
       (.I0(\RD_DATA_RET_reg[9]_1 ),
        .I1(\RD_DATA_RET_reg[9]_0 [5]),
        .I2(\RD_DATA_RET[9]_i_5_n_0 ),
        .I3(IC_REG_TRR_I[12]),
        .I4(\ADDR_RET_reg[8]_3 ),
        .I5(\RD_DATA_RET[9]_i_6_n_0 ),
        .O(\IC_REG_N_BTR_SJW_I_reg[0] ));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \RD_DATA_RET[9]_i_5 
       (.I0(\ADDR_RET_reg[2]_0 [4]),
        .I1(\ADDR_RET_reg[2]_0 [5]),
        .I2(\ADDR_RET_reg[2]_0 [3]),
        .I3(\ADDR_RET_reg[2]_0 [2]),
        .I4(\ADDR_RET_reg[2]_0 [1]),
        .I5(\ADDR_RET_reg[2]_0 [0]),
        .O(\RD_DATA_RET[9]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \RD_DATA_RET[9]_i_6 
       (.I0(\ADDR_RET_reg[8]_1 ),
        .I1(\RD_DATA_RET[9]_i_3_0 [4]),
        .I2(\RD_DATA_RET[1]_i_4_n_0 ),
        .I3(IC_REG_TCR_I[19]),
        .I4(\RD_DATA_RET[9]_i_3_1 ),
        .O(\RD_DATA_RET[9]_i_6_n_0 ));
  FDRE \RD_DATA_RET_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(RD_DATA__0[0]),
        .Q(\RD_DATA_RET_reg[0]_0 [31]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(RD_DATA__0[10]),
        .Q(\RD_DATA_RET_reg[0]_0 [21]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[8]),
        .Q(\RD_DATA_RET_reg[0]_0 [20]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\RD_DATA_RET_reg[0]_0 [19]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\RD_DATA_RET_reg[0]_0 [18]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(RD_DATA__0[14]),
        .Q(\RD_DATA_RET_reg[0]_0 [17]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\RD_DATA_RET_reg[0]_0 [16]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(RD_DATA__0[16]),
        .Q(\RD_DATA_RET_reg[0]_0 [15]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(RD_DATA__0[17]),
        .Q(\RD_DATA_RET_reg[0]_0 [14]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[18] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\RD_DATA_RET_reg[0]_0 [13]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[19] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\RD_DATA_RET_reg[0]_0 [12]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[16]),
        .Q(\RD_DATA_RET_reg[0]_0 [30]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[20] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(RD_DATA__0[20]),
        .Q(\RD_DATA_RET_reg[0]_0 [11]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[21] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(RD_DATA__0[21]),
        .Q(\RD_DATA_RET_reg[0]_0 [10]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[22] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(RD_DATA__0[22]),
        .Q(\RD_DATA_RET_reg[0]_0 [9]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[23] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(RD_DATA__0[23]),
        .Q(\RD_DATA_RET_reg[0]_0 [8]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[24] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(RD_DATA__0[24]),
        .Q(\RD_DATA_RET_reg[0]_0 [7]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[25] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(RD_DATA__0[25]),
        .Q(\RD_DATA_RET_reg[0]_0 [6]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[26] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(RD_DATA__0[26]),
        .Q(\RD_DATA_RET_reg[0]_0 [5]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[27] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\RD_DATA_RET_reg[0]_0 [4]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[28] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\RD_DATA_RET_reg[0]_0 [3]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[29] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\RD_DATA_RET_reg[0]_0 [2]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[15]),
        .Q(\RD_DATA_RET_reg[0]_0 [29]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[30] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(RD_DATA__0[30]),
        .Q(\RD_DATA_RET_reg[0]_0 [1]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[31] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(RD_DATA__0[31]),
        .Q(\RD_DATA_RET_reg[0]_0 [0]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[14]),
        .Q(\RD_DATA_RET_reg[0]_0 [28]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[13]),
        .Q(\RD_DATA_RET_reg[0]_0 [27]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[12]),
        .Q(\RD_DATA_RET_reg[0]_0 [26]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[11]),
        .Q(\RD_DATA_RET_reg[0]_0 [25]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[10]),
        .Q(\RD_DATA_RET_reg[0]_0 [24]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(RD_DATA__0[8]),
        .Q(\RD_DATA_RET_reg[0]_0 [23]),
        .R(ACK_RET_reg_0));
  FDRE \RD_DATA_RET_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[9]),
        .Q(\RD_DATA_RET_reg[0]_0 [22]),
        .R(ACK_RET_reg_0));
  LUT5 #(
    .INIT(32'h00000800)) 
    \RD_INDEX[0]_i_1 
       (.I0(\RD_INDEX[0]_i_3_n_0 ),
        .I1(s_axi_wdata[1]),
        .I2(\ADDR_RET_reg[2]_0 [4]),
        .I3(\IC_REG_IECRS_I_reg[0] ),
        .I4(\RD_INDEX_reg[5] ),
        .O(\s_axi_wdata[7] ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT5 #(
    .INIT(32'h00000040)) 
    \RD_INDEX[0]_i_3 
       (.I0(\ADDR_RET_reg[2]_0 [2]),
        .I1(\ADDR_RET_reg[2]_0 [3]),
        .I2(\ADDR_RET_reg[2]_0 [5]),
        .I3(\ADDR_RET_reg[2]_0 [1]),
        .I4(\ADDR_RET_reg[2]_0 [0]),
        .O(\RD_INDEX[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \RD_INDEX[0]_i_3__0 
       (.I0(s_axi_wdata[2]),
        .I1(\TCR_i[31]_i_3_n_0 ),
        .I2(\ADDR_RET_reg[2]_0 [4]),
        .I3(\ADDR_RET_reg[2]_0 [5]),
        .I4(\ADDR_RET_reg[2]_0 [3]),
        .I5(\ADDR_RET_reg[2]_0 [2]),
        .O(\s_axi_wdata[23] ));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \RD_INDEX[0]_i_3__1 
       (.I0(s_axi_wdata[1]),
        .I1(\TCR_i[31]_i_3_n_0 ),
        .I2(\ADDR_RET_reg[2]_0 [4]),
        .I3(\ADDR_RET_reg[2]_0 [5]),
        .I4(\ADDR_RET_reg[2]_0 [3]),
        .I5(\ADDR_RET_reg[2]_0 [2]),
        .O(\s_axi_wdata[7]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    RES_ACK_SIG_D1_i_1
       (.I0(BRAM_SEL[3]),
        .I1(Bus2IP_CS),
        .O(p_1_in));
  LUT6 #(
    .INIT(64'h00000000FEAAFAAA)) 
    RES_ACK_SIG_D1_i_2
       (.I0(\ADDR_RET_reg[2]_0 [10]),
        .I1(\ADDR_RET_reg[2]_0 [7]),
        .I2(\ADDR_RET_reg[2]_0 [8]),
        .I3(\ADDR_RET_reg[2]_0 [9]),
        .I4(\ADDR_RET_reg[2]_0 [6]),
        .I5(RES_ACK_SIG_D1_i_3_n_0),
        .O(BRAM_SEL[3]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'hE)) 
    RES_ACK_SIG_D1_i_3
       (.I0(ADDR_TX[1]),
        .I1(ADDR_TX[0]),
        .O(RES_ACK_SIG_D1_i_3_n_0));
  FDRE RES_ACK_SIG_D1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in),
        .Q(RES_ACK_SIG_D1),
        .R(ACK_RET_reg_0));
  LUT6 #(
    .INIT(64'h0000000040000000)) 
    \RX_FIFO_AFR.IC_REG_AFR_I[0]_i_1 
       (.I0(TRR_REG_WRITE_PULSE_i_2_n_0),
        .I1(\IC_REG_IECRS_I_reg[0] ),
        .I2(\ADDR_RET_reg[2]_0 [4]),
        .I3(\ADDR_RET_reg[2]_0 [5]),
        .I4(\ADDR_RET_reg[2]_0 [3]),
        .I5(\ADDR_RET_reg[2]_0 [2]),
        .O(IC_IPSIG_WRITE_I_reg_0));
  LUT6 #(
    .INIT(64'h0000000000040000)) 
    \RX_FIFO_IERBUF.IC_REG_IER_I[0]_i_1 
       (.I0(TRR_REG_WRITE_PULSE_i_2_n_0),
        .I1(\IC_REG_IECRS_I_reg[0] ),
        .I2(\ADDR_RET_reg[2]_0 [2]),
        .I3(\ADDR_RET_reg[2]_0 [5]),
        .I4(\ADDR_RET_reg[2]_0 [3]),
        .I5(\ADDR_RET_reg[2]_0 [4]),
        .O(IC_IPSIG_WRITE_I_reg_1));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    \TCR_i[31]_i_2 
       (.I0(\ADDR_RET_reg[2]_0 [4]),
        .I1(\ADDR_RET_reg[2]_0 [3]),
        .I2(\IC_REG_IECRS_I_reg[0] ),
        .I3(\ADDR_RET_reg[2]_0 [2]),
        .I4(\ADDR_RET_reg[2]_0 [5]),
        .I5(\TCR_i[31]_i_3_n_0 ),
        .O(\ADDR_RET_reg[8]_10 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \TCR_i[31]_i_3 
       (.I0(\ADDR_RET_reg[2]_0 [1]),
        .I1(\ADDR_RET_reg[2]_0 [0]),
        .O(\TCR_i[31]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000010000000)) 
    TRR_REG_WRITE_PULSE_i_1
       (.I0(\ADDR_RET_reg[2]_0 [4]),
        .I1(\ADDR_RET_reg[2]_0 [3]),
        .I2(\IC_REG_IECRS_I_reg[0] ),
        .I3(\ADDR_RET_reg[2]_0 [2]),
        .I4(\ADDR_RET_reg[2]_0 [5]),
        .I5(TRR_REG_WRITE_PULSE_i_2_n_0),
        .O(TRR_REG_WRITE_PULSE0));
  LUT2 #(
    .INIT(4'hE)) 
    TRR_REG_WRITE_PULSE_i_2
       (.I0(\ADDR_RET_reg[2]_0 [0]),
        .I1(\ADDR_RET_reg[2]_0 [1]),
        .O(TRR_REG_WRITE_PULSE_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    host_req_i_1
       (.I0(Bus2IP_CS),
        .I1(BRAM_SEL[0]),
        .I2(ADDR_TX[0]),
        .I3(ADDR_TX[1]),
        .I4(CS_H_D1),
        .I5(BRAM_SEL[3]),
        .O(CS_H_INTERNAL));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT5 #(
    .INIT(32'h00020000)) 
    host_req_i_1__1
       (.I0(Bus2IP_CS),
        .I1(BRAM_SEL[0]),
        .I2(CS_H_D1_1),
        .I3(BRAM_SEL[3]),
        .I4(ADDR_TX[0]),
        .O(CS_H_INTERNAL_0));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT5 #(
    .INIT(32'h00000008)) 
    pr2_rd_req_i_2
       (.I0(BRAM_SEL[0]),
        .I1(Bus2IP_CS),
        .I2(ADDR_TX[0]),
        .I3(ADDR_TX[1]),
        .I4(BRAM_SEL[3]),
        .O(\MEM_DECODE_GEN[0].cs_out_i_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h8)) 
    s_axi_arready_INST_0
       (.I0(E_DATA_ACK),
        .I1(Bus2IP_RNW),
        .O(s_axi_arready));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h2)) 
    s_axi_wready_INST_0
       (.I0(E_DATA_ACK),
        .I1(Bus2IP_RNW),
        .O(s_axi_wready));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_glue
   (dest_arst,
    \arststages_ff_reg[1] ,
    out,
    \SINGLE_BIT.s_level_out_d4_reg ,
    \SINGLE_BIT.s_level_out_d4_reg_0 ,
    \SINGLE_BIT.s_level_out_d4_reg_1 ,
    E_RST_I_reg_0,
    \syncstages_ff_reg[3] ,
    BSP_IN_IFSPACE_OL,
    ID_MATCH_EN_FS_D1,
    E_RST_I_reg_1,
    ID_MATCH_EN_FS_D1_reg_0,
    ID_MATCH_EN_OL,
    E_RST_I_reg_2,
    E_RST_I_reg_3,
    SR,
    \SINGLE_BIT.s_level_out_d4_reg_2 ,
    E_RST_I_reg_4,
    can_phy_rx_0,
    \arststages_ff_reg[1]_0 ,
    addr_location_incr_count,
    \arststages_ff_reg[1]_1 ,
    addr_location_incr_count_0,
    \arststages_ff_reg[1]_2 ,
    sync_tl_rst_n_d2_reg_0,
    \arststages_ff_reg[1]_3 ,
    S,
    src_arst,
    can_clk,
    CANCEL_OR_INVALIDATE_CONFIRMED_TL2OL,
    s_axi_aclk,
    BSP_IN_IFSPACE,
    BSP_IN_EOF,
    ID_MATCH_EN,
    MSG_ON_CAN_BUS,
    IC_REG_SRR_SRST,
    SYNC_RST_TL,
    G_RST_SRST_CEN_I0,
    RXF_FULL_AXI,
    RXMNF_SET,
    RXF_FULL_AXI_1,
    RXF_FULL_AXI_2,
    IC_REG_SRR_CEN_I,
    MSG_ON_CAN_BUS_AXI,
    MSG_ON_CAN_BUS_OL_D1,
    \TRR_i_reg[0] ,
    dest_rst,
    can_phy_rx,
    RXE_FDF_I,
    RXE_RXMSG_INVAL_F1,
    TS_RX_WEN_F1,
    RXE_MSGVAL_EARLY_F1,
    RXE_RXMSG_INVAL_F0,
    TS_RX_WEN,
    RXE_MSGVAL_EARLY_F0,
    CO);
  output dest_arst;
  output \arststages_ff_reg[1] ;
  output out;
  output \SINGLE_BIT.s_level_out_d4_reg ;
  output \SINGLE_BIT.s_level_out_d4_reg_0 ;
  output \SINGLE_BIT.s_level_out_d4_reg_1 ;
  output E_RST_I_reg_0;
  output \syncstages_ff_reg[3] ;
  output BSP_IN_IFSPACE_OL;
  output ID_MATCH_EN_FS_D1;
  output [0:0]E_RST_I_reg_1;
  output ID_MATCH_EN_FS_D1_reg_0;
  output ID_MATCH_EN_OL;
  output [0:0]E_RST_I_reg_2;
  output [0:0]E_RST_I_reg_3;
  output [0:0]SR;
  output \SINGLE_BIT.s_level_out_d4_reg_2 ;
  output E_RST_I_reg_4;
  output can_phy_rx_0;
  output \arststages_ff_reg[1]_0 ;
  output [0:0]addr_location_incr_count;
  output \arststages_ff_reg[1]_1 ;
  output [0:0]addr_location_incr_count_0;
  output \arststages_ff_reg[1]_2 ;
  output sync_tl_rst_n_d2_reg_0;
  output [0:0]\arststages_ff_reg[1]_3 ;
  output [0:0]S;
  input src_arst;
  input can_clk;
  input CANCEL_OR_INVALIDATE_CONFIRMED_TL2OL;
  input s_axi_aclk;
  input BSP_IN_IFSPACE;
  input BSP_IN_EOF;
  input ID_MATCH_EN;
  input MSG_ON_CAN_BUS;
  input IC_REG_SRR_SRST;
  input SYNC_RST_TL;
  input G_RST_SRST_CEN_I0;
  input RXF_FULL_AXI;
  input RXMNF_SET;
  input RXF_FULL_AXI_1;
  input RXF_FULL_AXI_2;
  input IC_REG_SRR_CEN_I;
  input MSG_ON_CAN_BUS_AXI;
  input MSG_ON_CAN_BUS_OL_D1;
  input \TRR_i_reg[0] ;
  input dest_rst;
  input can_phy_rx;
  input RXE_FDF_I;
  input RXE_RXMSG_INVAL_F1;
  input TS_RX_WEN_F1;
  input RXE_MSGVAL_EARLY_F1;
  input RXE_RXMSG_INVAL_F0;
  input TS_RX_WEN;
  input RXE_MSGVAL_EARLY_F0;
  input [0:0]CO;

  wire BSP_IN_EOF;
  wire BSP_IN_IFSPACE;
  wire BSP_IN_IFSPACE_D1;
  wire BSP_IN_IFSPACE_OL;
  wire BSP_IN_IFSPACE_SYNCED;
  wire CANCEL_OR_INVALIDATE_CONFIRMED_TL2OL;
  wire [0:0]CO;
  wire E_RST_I_reg_0;
  wire [0:0]E_RST_I_reg_1;
  wire [0:0]E_RST_I_reg_2;
  wire [0:0]E_RST_I_reg_3;
  wire E_RST_I_reg_4;
  wire E_RST_REG;
  wire G_RST_SRST_CEN;
  wire G_RST_SRST_CEN_I;
  wire G_RST_SRST_CEN_I0;
  wire IC_REG_SRR_CEN_I;
  wire IC_REG_SRR_SRST;
  wire ID_MATCH_EN;
  wire ID_MATCH_EN_FS_D1;
  wire ID_MATCH_EN_FS_D1_reg_0;
  wire ID_MATCH_EN_OL;
  wire MSG_ON_CAN_BUS;
  wire MSG_ON_CAN_BUS_AXI;
  wire MSG_ON_CAN_BUS_OL_D1;
  wire RXE_FDF_I;
  wire RXE_MSGVAL_EARLY_F0;
  wire RXE_MSGVAL_EARLY_F1;
  wire RXE_RXMSG_INVAL_F0;
  wire RXE_RXMSG_INVAL_F1;
  wire RXF_FULL_AXI;
  wire RXF_FULL_AXI_1;
  wire RXF_FULL_AXI_2;
  wire RXMNF_SET;
  wire [0:0]S;
  wire \SINGLE_BIT.s_level_out_d4_reg ;
  wire \SINGLE_BIT.s_level_out_d4_reg_0 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_1 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_2 ;
  wire [0:0]SR;
  wire SYNC_RST_TL;
  wire \TRR_i_reg[0] ;
  wire TS_RX_WEN;
  wire TS_RX_WEN_F1;
  wire [0:0]addr_location_incr_count;
  wire [0:0]addr_location_incr_count_0;
  wire \arststages_ff_reg[1] ;
  wire \arststages_ff_reg[1]_0 ;
  wire \arststages_ff_reg[1]_1 ;
  wire \arststages_ff_reg[1]_2 ;
  wire [0:0]\arststages_ff_reg[1]_3 ;
  wire can_clk;
  wire can_phy_rx;
  wire can_phy_rx_0;
  wire dest_arst;
  wire dest_rst;
  wire out;
  wire s_axi_aclk;
  wire src_arst;
  wire src_arst0_n_0;
  wire sync_tl_rst_n_d1;
  wire sync_tl_rst_n_d2;
  wire sync_tl_rst_n_d2_reg_0;
  wire \syncstages_ff_reg[3] ;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4 BSP_IN_EOF_2S_CDC_TO
       (.BSP_IN_EOF(BSP_IN_EOF),
        .\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 (E_RST_I_reg_0),
        .\SINGLE_BIT.s_level_out_d4_reg_0 (\SINGLE_BIT.s_level_out_d4_reg ),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_0 BSP_IN_IFSPACE_2S_CDC_TO
       (.BSP_IN_IFSPACE(BSP_IN_IFSPACE),
        .\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 (E_RST_I_reg_0),
        .out(BSP_IN_IFSPACE_SYNCED),
        .s_axi_aclk(s_axi_aclk));
  FDRE BSP_IN_IFSPACE_D1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(BSP_IN_IFSPACE_SYNCED),
        .Q(BSP_IN_IFSPACE_D1),
        .R(E_RST_I_reg_0));
  FDRE BSP_IN_IFSPACE_D2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(BSP_IN_IFSPACE_D1),
        .Q(BSP_IN_IFSPACE_OL),
        .R(E_RST_I_reg_0));
  LUT2 #(
    .INIT(4'h7)) 
    BTL_COUNTER_I17_carry_i_19
       (.I0(\arststages_ff_reg[1] ),
        .I1(CO),
        .O(S));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_1 CANCEL_CONFIRMED_2S_CDC_TO
       (.CANCEL_OR_INVALIDATE_CONFIRMED_TL2OL(CANCEL_OR_INVALIDATE_CONFIRMED_TL2OL),
        .MSG_ON_CAN_BUS_AXI(MSG_ON_CAN_BUS_AXI),
        .MSG_ON_CAN_BUS_AXI_reg(\SINGLE_BIT.s_level_out_d4_reg_1 ),
        .MSG_ON_CAN_BUS_OL_D1(MSG_ON_CAN_BUS_OL_D1),
        .\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 (E_RST_I_reg_0),
        .\SINGLE_BIT.s_level_out_d4_reg_0 (\SINGLE_BIT.s_level_out_d4_reg_2 ),
        .out(out),
        .s_axi_aclk(s_axi_aclk));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT2 #(
    .INIT(4'hB)) 
    CAN_PHY_RX_I_NEG_FLOP_X2_i_1
       (.I0(can_phy_rx),
        .I1(\arststages_ff_reg[1] ),
        .O(can_phy_rx_0));
  FDSE E_RST_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(E_RST_REG),
        .Q(E_RST_I_reg_0),
        .S(\syncstages_ff_reg[3] ));
  LUT1 #(
    .INIT(2'h1)) 
    E_RST_REG_i_1
       (.I0(dest_rst),
        .O(\syncstages_ff_reg[3] ));
  FDSE E_RST_REG_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_REG_SRR_SRST),
        .Q(E_RST_REG),
        .S(\syncstages_ff_reg[3] ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \FILL_LEVEL[4]_i_1 
       (.I0(E_RST_I_reg_0),
        .I1(RXF_FULL_AXI),
        .O(E_RST_I_reg_1));
  LUT2 #(
    .INIT(4'hE)) 
    \FILL_LEVEL[5]_i_1 
       (.I0(E_RST_I_reg_0),
        .I1(RXF_FULL_AXI_1),
        .O(E_RST_I_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \FILL_LEVEL[5]_i_1__0 
       (.I0(E_RST_I_reg_0),
        .I1(RXF_FULL_AXI_2),
        .O(E_RST_I_reg_3));
  FDSE G_RST_SRST_CEN_I_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(G_RST_SRST_CEN_I0),
        .Q(G_RST_SRST_CEN_I),
        .S(\syncstages_ff_reg[3] ));
  FDSE G_RST_SRST_CEN_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(G_RST_SRST_CEN_I),
        .Q(G_RST_SRST_CEN),
        .S(\syncstages_ff_reg[3] ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \IC_REG_ECR_I[0]_i_1 
       (.I0(E_RST_I_reg_0),
        .I1(IC_REG_SRR_CEN_I),
        .O(SR));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_2 ID_MATCH_EN_2S_CDC_TO
       (.ID_MATCH_EN(ID_MATCH_EN),
        .ID_MATCH_EN_FS_D1(ID_MATCH_EN_FS_D1),
        .ID_MATCH_EN_FS_D1_reg(ID_MATCH_EN_FS_D1_reg_0),
        .ID_MATCH_EN_OL(ID_MATCH_EN_OL),
        .RXMNF_SET(RXMNF_SET),
        .\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 (E_RST_I_reg_0),
        .out(\SINGLE_BIT.s_level_out_d4_reg_0 ),
        .s_axi_aclk(s_axi_aclk));
  FDRE ID_MATCH_EN_FS_D1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\SINGLE_BIT.s_level_out_d4_reg_0 ),
        .Q(ID_MATCH_EN_FS_D1),
        .R(E_RST_I_reg_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_3 MSG_ON_CAN_BUS_2S_CDC_TO
       (.MSG_ON_CAN_BUS(MSG_ON_CAN_BUS),
        .\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 (E_RST_I_reg_0),
        .\SINGLE_BIT.s_level_out_d4_reg_0 (\SINGLE_BIT.s_level_out_d4_reg_1 ),
        .s_axi_aclk(s_axi_aclk));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT2 #(
    .INIT(4'h7)) 
    RXE_ESI_I_i_2
       (.I0(\arststages_ff_reg[1] ),
        .I1(RXE_FDF_I),
        .O(\arststages_ff_reg[1]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT4 #(
    .INIT(16'hFF5D)) 
    RXF_FULL_AT_MSG_BOUNDARY_i_2
       (.I0(dest_arst),
        .I1(sync_tl_rst_n_d1),
        .I2(sync_tl_rst_n_d2),
        .I3(RXE_RXMSG_INVAL_F1),
        .O(\arststages_ff_reg[1]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT4 #(
    .INIT(16'hFF5D)) 
    RXF_FULL_AT_MSG_BOUNDARY_i_2__0
       (.I0(dest_arst),
        .I1(sync_tl_rst_n_d1),
        .I2(sync_tl_rst_n_d2),
        .I3(RXE_RXMSG_INVAL_F0),
        .O(\arststages_ff_reg[1]_2 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \TRR_i[31]_i_2 
       (.I0(E_RST_I_reg_0),
        .I1(\TRR_i_reg[0] ),
        .O(E_RST_I_reg_4));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \addr_location_incr_count[0]_i_4 
       (.I0(sync_tl_rst_n_d2),
        .I1(sync_tl_rst_n_d1),
        .I2(dest_arst),
        .O(sync_tl_rst_n_d2_reg_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF5D)) 
    \addr_location_incr_count[4]_i_1 
       (.I0(dest_arst),
        .I1(sync_tl_rst_n_d1),
        .I2(sync_tl_rst_n_d2),
        .I3(RXE_RXMSG_INVAL_F1),
        .I4(TS_RX_WEN_F1),
        .I5(RXE_MSGVAL_EARLY_F1),
        .O(addr_location_incr_count));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF5D)) 
    \addr_location_incr_count[4]_i_1__0 
       (.I0(dest_arst),
        .I1(sync_tl_rst_n_d1),
        .I2(sync_tl_rst_n_d2),
        .I3(RXE_RXMSG_INVAL_F0),
        .I4(TS_RX_WEN),
        .I5(RXE_MSGVAL_EARLY_F0),
        .O(addr_location_incr_count_0));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \locked_id_loc_sig_fs2_d1[0]_i_1 
       (.I0(dest_arst),
        .O(\arststages_ff_reg[1]_3 ));
  LUT1 #(
    .INIT(2'h1)) 
    src_arst0
       (.I0(G_RST_SRST_CEN),
        .O(src_arst0_n_0));
  FDRE sync_tl_rst_n_d1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(sync_tl_rst_n_d1),
        .R(SYNC_RST_TL));
  FDRE sync_tl_rst_n_d2_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(sync_tl_rst_n_d1),
        .Q(sync_tl_rst_n_d2),
        .R(SYNC_RST_TL));
  (* DEF_VAL = "1'b1" *) 
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* INV_DEF_VAL = "1'b0" *) 
  (* RST_ACTIVE_HIGH = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst__1 xpm_cdc_async_rst_inst_1
       (.dest_arst(dest_arst),
        .dest_clk(can_clk),
        .src_arst(src_arst));
  (* DEF_VAL = "1'b1" *) 
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* INV_DEF_VAL = "1'b0" *) 
  (* RST_ACTIVE_HIGH = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_async_rst xpm_cdc_async_rst_inst_2
       (.dest_arst(\arststages_ff_reg[1] ),
        .dest_clk(can_clk),
        .src_arst(src_arst0_n_0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_imm
   (MATCH_RUNNING_SIG_reg_0,
    ID_MATCH_EN_D2_reg_0,
    RXMNF_SET,
    ack_s_gate_toggle_reg_0,
    MATCH_RESULT_SIG_reg_0,
    pr1_rd_req0,
    VALID_S_SIG_IMM,
    D,
    \FSM_sequential_imm_cs_reg[1]_0 ,
    \FSM_sequential_imm_cs_reg[0]_0 ,
    ID_MATCH_EN_D2_reg_1,
    Q,
    \FSM_sequential_imm_cs_reg[1]_1 ,
    \RUNNING_FIFO_ID_LOC_reg_reg[5]_0 ,
    \RUNNING_FIFO_ID_LOC_reg_reg[3]_0 ,
    \RUNNING_FIFO_ID_LOC_reg_reg[1]_0 ,
    addrb,
    \num_reg_reg[4]_0 ,
    \num_reg_reg[3]_0 ,
    ACF_VAL_I,
    \MATCHED_FILTER_INDEX_reg[4]_0 ,
    out,
    \MATCHED_FILTER_INDEX_reg[0]_0 ,
    s_axi_aclk,
    ID_MATCH_EN_OL,
    ack_s_gate_toggle_reg_1,
    MATCH_RESULT_SIG_reg_1,
    MATCH_RUNNING_SIG_reg_1,
    pr1_rd_req_reg,
    Bus2IP_RNW,
    CS_H_D1_4,
    \gen_wr_a.gen_word_narrow.mem_reg ,
    \gen_wr_a.gen_word_narrow.mem_reg_0 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1 ,
    \FSM_sequential_imm_cs_reg[0]_1 ,
    \FSM_sequential_imm_cs_reg[0]_2 ,
    \FSM_sequential_imm_cs_reg[0]_3 ,
    \FSM_sequential_imm_cs[0]_i_2_0 ,
    \MATCHED_FILTER_INDEX_reg[0]_1 ,
    num5_carry__0_0,
    \FSM_sequential_imm_cs_reg[0]_4 ,
    \FILTER_ID_DATA_reg[0]_0 );
  output MATCH_RUNNING_SIG_reg_0;
  output ID_MATCH_EN_D2_reg_0;
  output RXMNF_SET;
  output ack_s_gate_toggle_reg_0;
  output MATCH_RESULT_SIG_reg_0;
  output pr1_rd_req0;
  output VALID_S_SIG_IMM;
  output [3:0]D;
  output \FSM_sequential_imm_cs_reg[1]_0 ;
  output \FSM_sequential_imm_cs_reg[0]_0 ;
  output ID_MATCH_EN_D2_reg_1;
  output [3:0]Q;
  output \FSM_sequential_imm_cs_reg[1]_1 ;
  output \RUNNING_FIFO_ID_LOC_reg_reg[5]_0 ;
  output \RUNNING_FIFO_ID_LOC_reg_reg[3]_0 ;
  output \RUNNING_FIFO_ID_LOC_reg_reg[1]_0 ;
  output [1:0]addrb;
  output [4:0]\num_reg_reg[4]_0 ;
  output \num_reg_reg[3]_0 ;
  output ACF_VAL_I;
  output [4:0]\MATCHED_FILTER_INDEX_reg[4]_0 ;
  input out;
  input \MATCHED_FILTER_INDEX_reg[0]_0 ;
  input s_axi_aclk;
  input ID_MATCH_EN_OL;
  input ack_s_gate_toggle_reg_1;
  input MATCH_RESULT_SIG_reg_1;
  input MATCH_RUNNING_SIG_reg_1;
  input pr1_rd_req_reg;
  input Bus2IP_RNW;
  input CS_H_D1_4;
  input \gen_wr_a.gen_word_narrow.mem_reg ;
  input \gen_wr_a.gen_word_narrow.mem_reg_0 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_1 ;
  input \FSM_sequential_imm_cs_reg[0]_1 ;
  input \FSM_sequential_imm_cs_reg[0]_2 ;
  input \FSM_sequential_imm_cs_reg[0]_3 ;
  input [0:0]\FSM_sequential_imm_cs[0]_i_2_0 ;
  input \MATCHED_FILTER_INDEX_reg[0]_1 ;
  input [31:0]num5_carry__0_0;
  input \FSM_sequential_imm_cs_reg[0]_4 ;
  input [31:0]\FILTER_ID_DATA_reg[0]_0 ;

  wire ACF_CMP_HIGH;
  wire ACF_CMP_LOW;
  wire ACF_MASK_I0;
  wire \ACF_MASK_I_reg_n_0_[13] ;
  wire \ACF_MASK_I_reg_n_0_[14] ;
  wire \ACF_MASK_I_reg_n_0_[15] ;
  wire \ACF_MASK_I_reg_n_0_[16] ;
  wire \ACF_MASK_I_reg_n_0_[17] ;
  wire \ACF_MASK_I_reg_n_0_[18] ;
  wire \ACF_MASK_I_reg_n_0_[19] ;
  wire \ACF_MASK_I_reg_n_0_[20] ;
  wire \ACF_MASK_I_reg_n_0_[21] ;
  wire \ACF_MASK_I_reg_n_0_[22] ;
  wire \ACF_MASK_I_reg_n_0_[23] ;
  wire \ACF_MASK_I_reg_n_0_[24] ;
  wire \ACF_MASK_I_reg_n_0_[25] ;
  wire \ACF_MASK_I_reg_n_0_[26] ;
  wire \ACF_MASK_I_reg_n_0_[27] ;
  wire \ACF_MASK_I_reg_n_0_[28] ;
  wire \ACF_MASK_I_reg_n_0_[29] ;
  wire \ACF_MASK_I_reg_n_0_[30] ;
  wire \ACF_MASK_I_reg_n_0_[31] ;
  wire ACF_VAL_I;
  wire [3:8]ADDR_S_SIG_IMM;
  wire BSP_IN_EOF_D1;
  wire Bus2IP_RNW;
  wire CS_H_D1_4;
  wire [3:0]D;
  wire [31:0]\FILTER_ID_DATA_reg[0]_0 ;
  wire \FILTER_ID_DATA_reg_n_0_[0] ;
  wire \FILTER_ID_DATA_reg_n_0_[10] ;
  wire \FILTER_ID_DATA_reg_n_0_[11] ;
  wire \FILTER_ID_DATA_reg_n_0_[13] ;
  wire \FILTER_ID_DATA_reg_n_0_[14] ;
  wire \FILTER_ID_DATA_reg_n_0_[15] ;
  wire \FILTER_ID_DATA_reg_n_0_[16] ;
  wire \FILTER_ID_DATA_reg_n_0_[17] ;
  wire \FILTER_ID_DATA_reg_n_0_[18] ;
  wire \FILTER_ID_DATA_reg_n_0_[19] ;
  wire \FILTER_ID_DATA_reg_n_0_[1] ;
  wire \FILTER_ID_DATA_reg_n_0_[20] ;
  wire \FILTER_ID_DATA_reg_n_0_[21] ;
  wire \FILTER_ID_DATA_reg_n_0_[22] ;
  wire \FILTER_ID_DATA_reg_n_0_[23] ;
  wire \FILTER_ID_DATA_reg_n_0_[24] ;
  wire \FILTER_ID_DATA_reg_n_0_[25] ;
  wire \FILTER_ID_DATA_reg_n_0_[26] ;
  wire \FILTER_ID_DATA_reg_n_0_[27] ;
  wire \FILTER_ID_DATA_reg_n_0_[28] ;
  wire \FILTER_ID_DATA_reg_n_0_[29] ;
  wire \FILTER_ID_DATA_reg_n_0_[2] ;
  wire \FILTER_ID_DATA_reg_n_0_[30] ;
  wire \FILTER_ID_DATA_reg_n_0_[31] ;
  wire \FILTER_ID_DATA_reg_n_0_[3] ;
  wire \FILTER_ID_DATA_reg_n_0_[4] ;
  wire \FILTER_ID_DATA_reg_n_0_[5] ;
  wire \FILTER_ID_DATA_reg_n_0_[6] ;
  wire \FILTER_ID_DATA_reg_n_0_[7] ;
  wire \FILTER_ID_DATA_reg_n_0_[8] ;
  wire \FILTER_ID_DATA_reg_n_0_[9] ;
  wire \FSM_sequential_imm_cs[0]_i_1_n_0 ;
  wire [0:0]\FSM_sequential_imm_cs[0]_i_2_0 ;
  wire \FSM_sequential_imm_cs[0]_i_2_n_0 ;
  wire \FSM_sequential_imm_cs[0]_i_3_n_0 ;
  wire \FSM_sequential_imm_cs[0]_i_4_n_0 ;
  wire \FSM_sequential_imm_cs[1]_i_1_n_0 ;
  wire \FSM_sequential_imm_cs[1]_i_2_n_0 ;
  wire \FSM_sequential_imm_cs[1]_i_3_n_0 ;
  wire \FSM_sequential_imm_cs[1]_i_5_n_0 ;
  wire \FSM_sequential_imm_cs_reg[0]_0 ;
  wire \FSM_sequential_imm_cs_reg[0]_1 ;
  wire \FSM_sequential_imm_cs_reg[0]_2 ;
  wire \FSM_sequential_imm_cs_reg[0]_3 ;
  wire \FSM_sequential_imm_cs_reg[0]_4 ;
  wire \FSM_sequential_imm_cs_reg[1]_0 ;
  wire \FSM_sequential_imm_cs_reg[1]_1 ;
  wire ID_MATCH_EN_D1;
  wire ID_MATCH_EN_D2_reg_0;
  wire ID_MATCH_EN_D2_reg_1;
  wire ID_MATCH_EN_OL;
  wire LAST_ENTRY_FLAG_i_1_n_0;
  wire LAST_ENTRY_FLAG_i_2_n_0;
  wire LAST_ENTRY_FLAG_reg_n_0;
  wire \MATCHED_FILTER_INDEX_reg[0]_0 ;
  wire \MATCHED_FILTER_INDEX_reg[0]_1 ;
  wire [4:0]\MATCHED_FILTER_INDEX_reg[4]_0 ;
  wire MATCH_RESULT_SIG_reg_0;
  wire MATCH_RESULT_SIG_reg_1;
  wire MATCH_RUNNING_SIG_reg_0;
  wire MATCH_RUNNING_SIG_reg_1;
  wire [3:0]Q;
  wire [0:9]RUNNING_FIFO_ID_LOC_reg;
  wire \RUNNING_FIFO_ID_LOC_reg[0]_i_2_n_0 ;
  wire \RUNNING_FIFO_ID_LOC_reg[0]_i_3_n_0 ;
  wire \RUNNING_FIFO_ID_LOC_reg[0]_i_4_n_0 ;
  wire \RUNNING_FIFO_ID_LOC_reg[0]_i_5_n_0 ;
  wire \RUNNING_FIFO_ID_LOC_reg[0]_i_6_n_0 ;
  wire \RUNNING_FIFO_ID_LOC_reg[0]_i_7_n_0 ;
  wire \RUNNING_FIFO_ID_LOC_reg[2]_i_2_n_0 ;
  wire \RUNNING_FIFO_ID_LOC_reg[6]_i_2_n_0 ;
  wire \RUNNING_FIFO_ID_LOC_reg[6]_i_3_n_0 ;
  wire \RUNNING_FIFO_ID_LOC_reg[6]_i_4_n_0 ;
  wire \RUNNING_FIFO_ID_LOC_reg[6]_i_5_n_0 ;
  wire \RUNNING_FIFO_ID_LOC_reg[9]_i_2_n_0 ;
  wire \RUNNING_FIFO_ID_LOC_reg_reg[1]_0 ;
  wire \RUNNING_FIFO_ID_LOC_reg_reg[3]_0 ;
  wire \RUNNING_FIFO_ID_LOC_reg_reg[5]_0 ;
  wire RXMNF_SET;
  wire VALID_S_SIG_IMM;
  wire ack_s_gate_toggle_reg_0;
  wire ack_s_gate_toggle_reg_1;
  wire [1:0]addrb;
  wire count;
  wire count_reg;
  wire \gen_wr_a.gen_word_narrow.mem_reg ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1 ;
  wire i__carry__0_i_1_n_0;
  wire i__carry__0_i_2_n_0;
  wire i__carry__0_i_3_n_0;
  wire i__carry__0_i_4_n_0;
  wire i__carry__0_i_5_n_0;
  wire i__carry_i_1_n_0;
  wire i__carry_i_2_n_0;
  wire i__carry_i_3_n_0;
  wire i__carry_i_4_n_0;
  wire i__carry_i_5_n_0;
  wire i__carry_i_6_n_0;
  wire i__carry_i_7_n_0;
  wire i__carry_i_8_n_0;
  wire match_not_finished_pulse0__0;
  wire num;
  wire num1__0;
  wire [31:0]num5_carry__0_0;
  wire num5_carry__0_i_1_n_0;
  wire num5_carry_i_1_n_0;
  wire num5_carry_i_2_n_0;
  wire num5_carry_i_3_n_0;
  wire num5_carry_i_4_n_0;
  wire num5_carry_i_5_n_0;
  wire num5_carry_i_6_n_0;
  wire num5_carry_i_7_n_0;
  wire num5_carry_i_8_n_0;
  wire num5_carry_n_0;
  wire num5_carry_n_1;
  wire num5_carry_n_2;
  wire num5_carry_n_3;
  wire \num5_inferred__0/i__carry__0_n_2 ;
  wire \num5_inferred__0/i__carry__0_n_3 ;
  wire \num5_inferred__0/i__carry_n_0 ;
  wire \num5_inferred__0/i__carry_n_1 ;
  wire \num5_inferred__0/i__carry_n_2 ;
  wire \num5_inferred__0/i__carry_n_3 ;
  wire \num_reg[0]_i_1__0_n_0 ;
  wire \num_reg[1]_i_1__0_n_0 ;
  wire \num_reg[2]_i_1__0_n_0 ;
  wire \num_reg[3]_i_1__0_n_0 ;
  wire \num_reg[4]_i_2__0_n_0 ;
  wire \num_reg[4]_i_3__0_n_0 ;
  wire \num_reg_reg[3]_0 ;
  wire [4:0]\num_reg_reg[4]_0 ;
  wire out;
  wire [12:0]p_1_in;
  wire p_1_in9_in;
  wire pair_rd_valid;
  wire pair_rd_valid_d1;
  wire pr1_rd_req0;
  wire pr1_rd_req_reg;
  wire s_axi_aclk;
  wire u_txxpm_2_i_13_n_0;
  wire u_txxpm_2_i_14_n_0;
  wire u_txxpm_2_i_19_n_0;
  wire u_txxpm_2_i_20_n_0;
  wire u_txxpm_2_i_26_n_0;
  wire u_txxpm_2_i_27_n_0;
  wire u_txxpm_2_i_28_n_0;
  wire u_txxpm_2_i_29_n_0;
  wire u_txxpm_2_i_30_n_0;
  wire [3:0]NLW_num5_carry_O_UNCONNECTED;
  wire [3:1]NLW_num5_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_num5_carry__0_O_UNCONNECTED;
  wire [3:0]\NLW_num5_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:3]\NLW_num5_inferred__0/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_num5_inferred__0/i__carry__0_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h00002000)) 
    \ACF_MASK_I[0]_i_1 
       (.I0(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I1(\FSM_sequential_imm_cs_reg[0]_0 ),
        .I2(ack_s_gate_toggle_reg_0),
        .I3(\MATCHED_FILTER_INDEX_reg[0]_1 ),
        .I4(count_reg),
        .O(ACF_MASK_I0));
  FDRE \ACF_MASK_I_reg[0] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [31]),
        .Q(p_1_in[12]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[10] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [21]),
        .Q(p_1_in[2]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[11] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [20]),
        .Q(p_1_in[1]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[12] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [19]),
        .Q(p_1_in[0]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[13] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [18]),
        .Q(\ACF_MASK_I_reg_n_0_[13] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[14] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [17]),
        .Q(\ACF_MASK_I_reg_n_0_[14] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[15] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [16]),
        .Q(\ACF_MASK_I_reg_n_0_[15] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[16] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [15]),
        .Q(\ACF_MASK_I_reg_n_0_[16] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[17] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [14]),
        .Q(\ACF_MASK_I_reg_n_0_[17] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[18] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [13]),
        .Q(\ACF_MASK_I_reg_n_0_[18] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[19] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [12]),
        .Q(\ACF_MASK_I_reg_n_0_[19] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[1] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [30]),
        .Q(p_1_in[11]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[20] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [11]),
        .Q(\ACF_MASK_I_reg_n_0_[20] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[21] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [10]),
        .Q(\ACF_MASK_I_reg_n_0_[21] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[22] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [9]),
        .Q(\ACF_MASK_I_reg_n_0_[22] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[23] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [8]),
        .Q(\ACF_MASK_I_reg_n_0_[23] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[24] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [7]),
        .Q(\ACF_MASK_I_reg_n_0_[24] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[25] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [6]),
        .Q(\ACF_MASK_I_reg_n_0_[25] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[26] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [5]),
        .Q(\ACF_MASK_I_reg_n_0_[26] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[27] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [4]),
        .Q(\ACF_MASK_I_reg_n_0_[27] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[28] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [3]),
        .Q(\ACF_MASK_I_reg_n_0_[28] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[29] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [2]),
        .Q(\ACF_MASK_I_reg_n_0_[29] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[2] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [29]),
        .Q(p_1_in[10]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[30] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [1]),
        .Q(\ACF_MASK_I_reg_n_0_[30] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[31] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [0]),
        .Q(\ACF_MASK_I_reg_n_0_[31] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[3] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [28]),
        .Q(p_1_in[9]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[4] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [27]),
        .Q(p_1_in[8]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[5] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [26]),
        .Q(p_1_in[7]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[6] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [25]),
        .Q(p_1_in[6]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[7] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [24]),
        .Q(p_1_in[5]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[8] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [23]),
        .Q(p_1_in[4]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \ACF_MASK_I_reg[9] 
       (.C(s_axi_aclk),
        .CE(ACF_MASK_I0),
        .D(\FILTER_ID_DATA_reg[0]_0 [22]),
        .Q(p_1_in[3]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE BSP_IN_EOF_D1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(out),
        .Q(BSP_IN_EOF_D1),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  LUT5 #(
    .INIT(32'h40000000)) 
    \FILTER_ID_DATA[0]_i_1 
       (.I0(\FSM_sequential_imm_cs_reg[0]_0 ),
        .I1(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I2(count_reg),
        .I3(\MATCHED_FILTER_INDEX_reg[0]_1 ),
        .I4(ack_s_gate_toggle_reg_0),
        .O(pair_rd_valid));
  FDRE \FILTER_ID_DATA_reg[0] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [31]),
        .Q(\FILTER_ID_DATA_reg_n_0_[0] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[10] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [21]),
        .Q(\FILTER_ID_DATA_reg_n_0_[10] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[11] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [20]),
        .Q(\FILTER_ID_DATA_reg_n_0_[11] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[12] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [19]),
        .Q(p_1_in9_in),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[13] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [18]),
        .Q(\FILTER_ID_DATA_reg_n_0_[13] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[14] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [17]),
        .Q(\FILTER_ID_DATA_reg_n_0_[14] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[15] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [16]),
        .Q(\FILTER_ID_DATA_reg_n_0_[15] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[16] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [15]),
        .Q(\FILTER_ID_DATA_reg_n_0_[16] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[17] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [14]),
        .Q(\FILTER_ID_DATA_reg_n_0_[17] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[18] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [13]),
        .Q(\FILTER_ID_DATA_reg_n_0_[18] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[19] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [12]),
        .Q(\FILTER_ID_DATA_reg_n_0_[19] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[1] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [30]),
        .Q(\FILTER_ID_DATA_reg_n_0_[1] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[20] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [11]),
        .Q(\FILTER_ID_DATA_reg_n_0_[20] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[21] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [10]),
        .Q(\FILTER_ID_DATA_reg_n_0_[21] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[22] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [9]),
        .Q(\FILTER_ID_DATA_reg_n_0_[22] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[23] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [8]),
        .Q(\FILTER_ID_DATA_reg_n_0_[23] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[24] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [7]),
        .Q(\FILTER_ID_DATA_reg_n_0_[24] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[25] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [6]),
        .Q(\FILTER_ID_DATA_reg_n_0_[25] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[26] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [5]),
        .Q(\FILTER_ID_DATA_reg_n_0_[26] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[27] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [4]),
        .Q(\FILTER_ID_DATA_reg_n_0_[27] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[28] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [3]),
        .Q(\FILTER_ID_DATA_reg_n_0_[28] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[29] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [2]),
        .Q(\FILTER_ID_DATA_reg_n_0_[29] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[2] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [29]),
        .Q(\FILTER_ID_DATA_reg_n_0_[2] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[30] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [1]),
        .Q(\FILTER_ID_DATA_reg_n_0_[30] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[31] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [0]),
        .Q(\FILTER_ID_DATA_reg_n_0_[31] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[3] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [28]),
        .Q(\FILTER_ID_DATA_reg_n_0_[3] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[4] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [27]),
        .Q(\FILTER_ID_DATA_reg_n_0_[4] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[5] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [26]),
        .Q(\FILTER_ID_DATA_reg_n_0_[5] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[6] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [25]),
        .Q(\FILTER_ID_DATA_reg_n_0_[6] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[7] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [24]),
        .Q(\FILTER_ID_DATA_reg_n_0_[7] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[8] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [23]),
        .Q(\FILTER_ID_DATA_reg_n_0_[8] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \FILTER_ID_DATA_reg[9] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\FILTER_ID_DATA_reg[0]_0 [22]),
        .Q(\FILTER_ID_DATA_reg_n_0_[9] ),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFFFF04)) 
    \FSM_sequential_imm_cs[0]_i_1 
       (.I0(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I1(\FSM_sequential_imm_cs_reg[0]_0 ),
        .I2(\FSM_sequential_imm_cs[0]_i_2_n_0 ),
        .I3(pair_rd_valid),
        .I4(\FSM_sequential_imm_cs[0]_i_3_n_0 ),
        .I5(\FSM_sequential_imm_cs_reg[0]_4 ),
        .O(\FSM_sequential_imm_cs[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \FSM_sequential_imm_cs[0]_i_10 
       (.I0(\num_reg_reg[4]_0 [3]),
        .I1(\num_reg_reg[4]_0 [4]),
        .I2(\num_reg_reg[4]_0 [2]),
        .O(\num_reg_reg[3]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFAAEA)) 
    \FSM_sequential_imm_cs[0]_i_2 
       (.I0(\FSM_sequential_imm_cs[0]_i_4_n_0 ),
        .I1(\FSM_sequential_imm_cs_reg[0]_1 ),
        .I2(\num_reg_reg[4]_0 [3]),
        .I3(\num_reg_reg[4]_0 [4]),
        .I4(\FSM_sequential_imm_cs_reg[0]_2 ),
        .I5(\FSM_sequential_imm_cs_reg[0]_3 ),
        .O(\FSM_sequential_imm_cs[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT4 #(
    .INIT(16'h00E2)) 
    \FSM_sequential_imm_cs[0]_i_3 
       (.I0(ID_MATCH_EN_D2_reg_0),
        .I1(\FSM_sequential_imm_cs_reg[0]_0 ),
        .I2(num1__0),
        .I3(\FSM_sequential_imm_cs_reg[1]_0 ),
        .O(\FSM_sequential_imm_cs[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \FSM_sequential_imm_cs[0]_i_4 
       (.I0(\FSM_sequential_imm_cs[0]_i_2_0 ),
        .I1(\num_reg_reg[4]_0 [1]),
        .I2(\num_reg_reg[4]_0 [0]),
        .I3(\num_reg_reg[4]_0 [2]),
        .I4(\num_reg_reg[4]_0 [4]),
        .I5(\num_reg_reg[4]_0 [3]),
        .O(\FSM_sequential_imm_cs[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000033308888)) 
    \FSM_sequential_imm_cs[1]_i_1 
       (.I0(\FSM_sequential_imm_cs[1]_i_2_n_0 ),
        .I1(\FSM_sequential_imm_cs_reg[0]_0 ),
        .I2(LAST_ENTRY_FLAG_reg_n_0),
        .I3(\FSM_sequential_imm_cs[1]_i_3_n_0 ),
        .I4(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I5(\FSM_sequential_imm_cs_reg[0]_4 ),
        .O(\FSM_sequential_imm_cs[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_sequential_imm_cs[1]_i_2 
       (.I0(\FSM_sequential_imm_cs[1]_i_5_n_0 ),
        .I1(num1__0),
        .O(\FSM_sequential_imm_cs[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \FSM_sequential_imm_cs[1]_i_3 
       (.I0(ack_s_gate_toggle_reg_0),
        .I1(\MATCHED_FILTER_INDEX_reg[0]_1 ),
        .I2(count_reg),
        .O(\FSM_sequential_imm_cs[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF80000000)) 
    \FSM_sequential_imm_cs[1]_i_5 
       (.I0(\num_reg_reg[4]_0 [0]),
        .I1(\num_reg_reg[4]_0 [1]),
        .I2(\num_reg_reg[4]_0 [2]),
        .I3(\num_reg_reg[4]_0 [4]),
        .I4(\num_reg_reg[4]_0 [3]),
        .I5(\FSM_sequential_imm_cs[0]_i_2_n_0 ),
        .O(\FSM_sequential_imm_cs[1]_i_5_n_0 ));
  (* FSM_ENCODED_STATES = "IDLE:00,PROCESSING:10,LOOPING:01,ROUND_FINISH:11" *) 
  FDRE \FSM_sequential_imm_cs_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_sequential_imm_cs[0]_i_1_n_0 ),
        .Q(\FSM_sequential_imm_cs_reg[0]_0 ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "IDLE:00,PROCESSING:10,LOOPING:01,ROUND_FINISH:11" *) 
  FDRE \FSM_sequential_imm_cs_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_sequential_imm_cs[1]_i_1_n_0 ),
        .Q(\FSM_sequential_imm_cs_reg[1]_0 ),
        .R(1'b0));
  FDRE ID_MATCH_EN_D1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ID_MATCH_EN_OL),
        .Q(ID_MATCH_EN_D1),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE ID_MATCH_EN_D2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ID_MATCH_EN_D1),
        .Q(ID_MATCH_EN_D2_reg_0),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT5 #(
    .INIT(32'h50545000)) 
    LAST_ENTRY_FLAG_i_1
       (.I0(\MATCHED_FILTER_INDEX_reg[0]_0 ),
        .I1(LAST_ENTRY_FLAG_i_2_n_0),
        .I2(LAST_ENTRY_FLAG_reg_n_0),
        .I3(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I4(\FSM_sequential_imm_cs_reg[0]_0 ),
        .O(LAST_ENTRY_FLAG_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    LAST_ENTRY_FLAG_i_2
       (.I0(\num_reg_reg[4]_0 [3]),
        .I1(\num_reg_reg[4]_0 [4]),
        .I2(\num_reg_reg[4]_0 [2]),
        .I3(\num_reg_reg[4]_0 [1]),
        .I4(\num_reg_reg[4]_0 [0]),
        .O(LAST_ENTRY_FLAG_i_2_n_0));
  FDRE LAST_ENTRY_FLAG_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(LAST_ENTRY_FLAG_i_1_n_0),
        .Q(LAST_ENTRY_FLAG_reg_n_0),
        .R(1'b0));
  FDRE \MATCHED_FILTER_INDEX_reg[0] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\num_reg_reg[4]_0 [0]),
        .Q(\MATCHED_FILTER_INDEX_reg[4]_0 [0]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \MATCHED_FILTER_INDEX_reg[1] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\num_reg_reg[4]_0 [1]),
        .Q(\MATCHED_FILTER_INDEX_reg[4]_0 [1]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \MATCHED_FILTER_INDEX_reg[2] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\num_reg_reg[4]_0 [2]),
        .Q(\MATCHED_FILTER_INDEX_reg[4]_0 [2]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \MATCHED_FILTER_INDEX_reg[3] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\num_reg_reg[4]_0 [3]),
        .Q(\MATCHED_FILTER_INDEX_reg[4]_0 [3]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \MATCHED_FILTER_INDEX_reg[4] 
       (.C(s_axi_aclk),
        .CE(pair_rd_valid),
        .D(\num_reg_reg[4]_0 [4]),
        .Q(\MATCHED_FILTER_INDEX_reg[4]_0 [4]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  LUT5 #(
    .INIT(32'h80888888)) 
    MATCH_RESULT_SIG_i_2
       (.I0(ACF_CMP_LOW),
        .I1(pair_rd_valid_d1),
        .I2(ACF_CMP_HIGH),
        .I3(p_1_in[0]),
        .I4(p_1_in9_in),
        .O(ACF_VAL_I));
  FDRE MATCH_RESULT_SIG_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(MATCH_RESULT_SIG_reg_1),
        .Q(MATCH_RESULT_SIG_reg_0),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE MATCH_RUNNING_SIG_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(MATCH_RUNNING_SIG_reg_1),
        .Q(MATCH_RUNNING_SIG_reg_0),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF40FFBBFF40)) 
    \RUNNING_FIFO_ID_LOC_reg[0]_i_1 
       (.I0(\RUNNING_FIFO_ID_LOC_reg[0]_i_2_n_0 ),
        .I1(Q[3]),
        .I2(\RUNNING_FIFO_ID_LOC_reg[0]_i_3_n_0 ),
        .I3(\RUNNING_FIFO_ID_LOC_reg[0]_i_4_n_0 ),
        .I4(RUNNING_FIFO_ID_LOC_reg[0]),
        .I5(\RUNNING_FIFO_ID_LOC_reg[0]_i_5_n_0 ),
        .O(ADDR_S_SIG_IMM[3]));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \RUNNING_FIFO_ID_LOC_reg[0]_i_2 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(RUNNING_FIFO_ID_LOC_reg[2]),
        .O(\RUNNING_FIFO_ID_LOC_reg[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT5 #(
    .INIT(32'hFF080808)) 
    \RUNNING_FIFO_ID_LOC_reg[0]_i_3 
       (.I0(\RUNNING_FIFO_ID_LOC_reg[0]_i_6_n_0 ),
        .I1(\FSM_sequential_imm_cs_reg[0]_0 ),
        .I2(num1__0),
        .I3(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I4(\RUNNING_FIFO_ID_LOC_reg[0]_i_7_n_0 ),
        .O(\RUNNING_FIFO_ID_LOC_reg[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT3 #(
    .INIT(8'hC1)) 
    \RUNNING_FIFO_ID_LOC_reg[0]_i_4 
       (.I0(ID_MATCH_EN_D2_reg_0),
        .I1(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I2(\FSM_sequential_imm_cs_reg[0]_0 ),
        .O(\RUNNING_FIFO_ID_LOC_reg[0]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT5 #(
    .INIT(32'hF3F355FF)) 
    \RUNNING_FIFO_ID_LOC_reg[0]_i_5 
       (.I0(\RUNNING_FIFO_ID_LOC_reg[0]_i_7_n_0 ),
        .I1(\RUNNING_FIFO_ID_LOC_reg[0]_i_6_n_0 ),
        .I2(num1__0),
        .I3(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I4(\FSM_sequential_imm_cs_reg[0]_0 ),
        .O(\RUNNING_FIFO_ID_LOC_reg[0]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \RUNNING_FIFO_ID_LOC_reg[0]_i_6 
       (.I0(RUNNING_FIFO_ID_LOC_reg[7]),
        .I1(RUNNING_FIFO_ID_LOC_reg[8]),
        .I2(RUNNING_FIFO_ID_LOC_reg[6]),
        .I3(\FSM_sequential_imm_cs[1]_i_5_n_0 ),
        .O(\RUNNING_FIFO_ID_LOC_reg[0]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \RUNNING_FIFO_ID_LOC_reg[0]_i_7 
       (.I0(RUNNING_FIFO_ID_LOC_reg[7]),
        .I1(RUNNING_FIFO_ID_LOC_reg[8]),
        .I2(RUNNING_FIFO_ID_LOC_reg[9]),
        .I3(RUNNING_FIFO_ID_LOC_reg[6]),
        .I4(\RUNNING_FIFO_ID_LOC_reg[9]_i_2_n_0 ),
        .O(\RUNNING_FIFO_ID_LOC_reg[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF44440AA04444)) 
    \RUNNING_FIFO_ID_LOC_reg[1]_i_1 
       (.I0(\RUNNING_FIFO_ID_LOC_reg[0]_i_2_n_0 ),
        .I1(\FSM_sequential_imm_cs_reg[1]_1 ),
        .I2(\FSM_sequential_imm_cs_reg[0]_0 ),
        .I3(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I4(Q[3]),
        .I5(ID_MATCH_EN_D2_reg_1),
        .O(ADDR_S_SIG_IMM[4]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT5 #(
    .INIT(32'h0022F000)) 
    \RUNNING_FIFO_ID_LOC_reg[1]_i_2 
       (.I0(\RUNNING_FIFO_ID_LOC_reg[0]_i_6_n_0 ),
        .I1(num1__0),
        .I2(\RUNNING_FIFO_ID_LOC_reg[0]_i_7_n_0 ),
        .I3(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I4(\FSM_sequential_imm_cs_reg[0]_0 ),
        .O(\FSM_sequential_imm_cs_reg[1]_1 ));
  LUT6 #(
    .INIT(64'h00AC0FAC00FC0FFC)) 
    \RUNNING_FIFO_ID_LOC_reg[1]_i_3 
       (.I0(num1__0),
        .I1(ID_MATCH_EN_D2_reg_0),
        .I2(\FSM_sequential_imm_cs_reg[0]_0 ),
        .I3(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I4(\RUNNING_FIFO_ID_LOC_reg[0]_i_7_n_0 ),
        .I5(\RUNNING_FIFO_ID_LOC_reg[0]_i_6_n_0 ),
        .O(ID_MATCH_EN_D2_reg_1));
  LUT5 #(
    .INIT(32'hFFFAF0FC)) 
    \RUNNING_FIFO_ID_LOC_reg[2]_i_1 
       (.I0(\RUNNING_FIFO_ID_LOC_reg[0]_i_5_n_0 ),
        .I1(\RUNNING_FIFO_ID_LOC_reg[0]_i_3_n_0 ),
        .I2(\RUNNING_FIFO_ID_LOC_reg[0]_i_4_n_0 ),
        .I3(\RUNNING_FIFO_ID_LOC_reg[2]_i_2_n_0 ),
        .I4(RUNNING_FIFO_ID_LOC_reg[2]),
        .O(ADDR_S_SIG_IMM[5]));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \RUNNING_FIFO_ID_LOC_reg[2]_i_2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\RUNNING_FIFO_ID_LOC_reg[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF808077008080)) 
    \RUNNING_FIFO_ID_LOC_reg[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\FSM_sequential_imm_cs_reg[1]_1 ),
        .I3(\num_reg[4]_i_3__0_n_0 ),
        .I4(Q[2]),
        .I5(ID_MATCH_EN_D2_reg_1),
        .O(ADDR_S_SIG_IMM[6]));
  LUT6 #(
    .INIT(64'hFFFF888805508888)) 
    \RUNNING_FIFO_ID_LOC_reg[4]_i_1 
       (.I0(Q[0]),
        .I1(\FSM_sequential_imm_cs_reg[1]_1 ),
        .I2(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I3(\FSM_sequential_imm_cs_reg[0]_0 ),
        .I4(Q[1]),
        .I5(ID_MATCH_EN_D2_reg_1),
        .O(ADDR_S_SIG_IMM[7]));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \RUNNING_FIFO_ID_LOC_reg[5]_i_1 
       (.I0(ID_MATCH_EN_D2_reg_1),
        .I1(Q[0]),
        .I2(\FSM_sequential_imm_cs_reg[1]_1 ),
        .O(ADDR_S_SIG_IMM[8]));
  LUT6 #(
    .INIT(64'hAAEEEEEEF0000000)) 
    \RUNNING_FIFO_ID_LOC_reg[6]_i_1 
       (.I0(\RUNNING_FIFO_ID_LOC_reg[6]_i_2_n_0 ),
        .I1(\num_reg[4]_i_3__0_n_0 ),
        .I2(\RUNNING_FIFO_ID_LOC_reg[6]_i_3_n_0 ),
        .I3(RUNNING_FIFO_ID_LOC_reg[8]),
        .I4(RUNNING_FIFO_ID_LOC_reg[7]),
        .I5(RUNNING_FIFO_ID_LOC_reg[6]),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hABFAAFFAABAAAFAA)) 
    \RUNNING_FIFO_ID_LOC_reg[6]_i_2 
       (.I0(\FSM_sequential_imm_cs[0]_i_3_n_0 ),
        .I1(RUNNING_FIFO_ID_LOC_reg[9]),
        .I2(\FSM_sequential_imm_cs_reg[0]_0 ),
        .I3(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I4(\RUNNING_FIFO_ID_LOC_reg[9]_i_2_n_0 ),
        .I5(\FSM_sequential_imm_cs[1]_i_5_n_0 ),
        .O(\RUNNING_FIFO_ID_LOC_reg[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000010)) 
    \RUNNING_FIFO_ID_LOC_reg[6]_i_3 
       (.I0(\FSM_sequential_imm_cs[0]_i_2_n_0 ),
        .I1(LAST_ENTRY_FLAG_i_2_n_0),
        .I2(\FSM_sequential_imm_cs_reg[0]_0 ),
        .I3(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I4(num1__0),
        .I5(\RUNNING_FIFO_ID_LOC_reg[6]_i_4_n_0 ),
        .O(\RUNNING_FIFO_ID_LOC_reg[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000800080008000)) 
    \RUNNING_FIFO_ID_LOC_reg[6]_i_4 
       (.I0(RUNNING_FIFO_ID_LOC_reg[9]),
        .I1(\RUNNING_FIFO_ID_LOC_reg[6]_i_5_n_0 ),
        .I2(ack_s_gate_toggle_reg_0),
        .I3(\MATCHED_FILTER_INDEX_reg[0]_1 ),
        .I4(count_reg),
        .I5(LAST_ENTRY_FLAG_reg_n_0),
        .O(\RUNNING_FIFO_ID_LOC_reg[6]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \RUNNING_FIFO_ID_LOC_reg[6]_i_5 
       (.I0(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I1(\FSM_sequential_imm_cs_reg[0]_0 ),
        .O(\RUNNING_FIFO_ID_LOC_reg[6]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hF0F0F6F6FF000000)) 
    \RUNNING_FIFO_ID_LOC_reg[7]_i_1 
       (.I0(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I1(\FSM_sequential_imm_cs_reg[0]_0 ),
        .I2(\RUNNING_FIFO_ID_LOC_reg[6]_i_2_n_0 ),
        .I3(\RUNNING_FIFO_ID_LOC_reg[6]_i_3_n_0 ),
        .I4(RUNNING_FIFO_ID_LOC_reg[8]),
        .I5(RUNNING_FIFO_ID_LOC_reg[7]),
        .O(D[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    \RUNNING_FIFO_ID_LOC_reg[8]_i_1 
       (.I0(\RUNNING_FIFO_ID_LOC_reg[6]_i_2_n_0 ),
        .I1(RUNNING_FIFO_ID_LOC_reg[8]),
        .I2(\RUNNING_FIFO_ID_LOC_reg[6]_i_3_n_0 ),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT5 #(
    .INIT(32'h320C3E00)) 
    \RUNNING_FIFO_ID_LOC_reg[9]_i_1 
       (.I0(ID_MATCH_EN_D2_reg_0),
        .I1(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I2(\FSM_sequential_imm_cs_reg[0]_0 ),
        .I3(RUNNING_FIFO_ID_LOC_reg[9]),
        .I4(\RUNNING_FIFO_ID_LOC_reg[9]_i_2_n_0 ),
        .O(D[0]));
  LUT4 #(
    .INIT(16'h7000)) 
    \RUNNING_FIFO_ID_LOC_reg[9]_i_2 
       (.I0(LAST_ENTRY_FLAG_reg_n_0),
        .I1(count_reg),
        .I2(\MATCHED_FILTER_INDEX_reg[0]_1 ),
        .I3(ack_s_gate_toggle_reg_0),
        .O(\RUNNING_FIFO_ID_LOC_reg[9]_i_2_n_0 ));
  FDSE \RUNNING_FIFO_ID_LOC_reg_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ADDR_S_SIG_IMM[3]),
        .Q(RUNNING_FIFO_ID_LOC_reg[0]),
        .S(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \RUNNING_FIFO_ID_LOC_reg_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ADDR_S_SIG_IMM[4]),
        .Q(Q[3]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDSE \RUNNING_FIFO_ID_LOC_reg_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ADDR_S_SIG_IMM[5]),
        .Q(RUNNING_FIFO_ID_LOC_reg[2]),
        .S(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \RUNNING_FIFO_ID_LOC_reg_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ADDR_S_SIG_IMM[6]),
        .Q(Q[2]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \RUNNING_FIFO_ID_LOC_reg_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ADDR_S_SIG_IMM[7]),
        .Q(Q[1]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \RUNNING_FIFO_ID_LOC_reg_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ADDR_S_SIG_IMM[8]),
        .Q(Q[0]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \RUNNING_FIFO_ID_LOC_reg_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[3]),
        .Q(RUNNING_FIFO_ID_LOC_reg[6]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \RUNNING_FIFO_ID_LOC_reg_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[2]),
        .Q(RUNNING_FIFO_ID_LOC_reg[7]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \RUNNING_FIFO_ID_LOC_reg_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[1]),
        .Q(RUNNING_FIFO_ID_LOC_reg[8]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \RUNNING_FIFO_ID_LOC_reg_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[0]),
        .Q(RUNNING_FIFO_ID_LOC_reg[9]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDSE ack_s_gate_toggle_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ack_s_gate_toggle_reg_1),
        .Q(ack_s_gate_toggle_reg_0),
        .S(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT5 #(
    .INIT(32'h00780000)) 
    count_reg_i_1
       (.I0(ack_s_gate_toggle_reg_0),
        .I1(\MATCHED_FILTER_INDEX_reg[0]_1 ),
        .I2(count_reg),
        .I3(\FSM_sequential_imm_cs_reg[0]_0 ),
        .I4(\FSM_sequential_imm_cs_reg[1]_0 ),
        .O(count));
  FDRE count_reg_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(count),
        .Q(count_reg),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  LUT3 #(
    .INIT(8'h9F)) 
    i__carry__0_i_1
       (.I0(\FILTER_ID_DATA_reg_n_0_[13] ),
        .I1(num5_carry__0_0[18]),
        .I2(\ACF_MASK_I_reg_n_0_[13] ),
        .O(i__carry__0_i_1_n_0));
  LUT4 #(
    .INIT(16'hA22A)) 
    i__carry__0_i_2
       (.I0(i__carry__0_i_4_n_0),
        .I1(\ACF_MASK_I_reg_n_0_[14] ),
        .I2(num5_carry__0_0[17]),
        .I3(\FILTER_ID_DATA_reg_n_0_[14] ),
        .O(i__carry__0_i_2_n_0));
  LUT4 #(
    .INIT(16'hA22A)) 
    i__carry__0_i_3
       (.I0(i__carry__0_i_5_n_0),
        .I1(\ACF_MASK_I_reg_n_0_[17] ),
        .I2(num5_carry__0_0[14]),
        .I3(\FILTER_ID_DATA_reg_n_0_[17] ),
        .O(i__carry__0_i_3_n_0));
  LUT6 #(
    .INIT(64'hD7D700D700D7D7D7)) 
    i__carry__0_i_4
       (.I0(\ACF_MASK_I_reg_n_0_[15] ),
        .I1(num5_carry__0_0[16]),
        .I2(\FILTER_ID_DATA_reg_n_0_[15] ),
        .I3(\ACF_MASK_I_reg_n_0_[16] ),
        .I4(num5_carry__0_0[15]),
        .I5(\FILTER_ID_DATA_reg_n_0_[16] ),
        .O(i__carry__0_i_4_n_0));
  LUT6 #(
    .INIT(64'hD7D700D700D7D7D7)) 
    i__carry__0_i_5
       (.I0(\ACF_MASK_I_reg_n_0_[18] ),
        .I1(num5_carry__0_0[13]),
        .I2(\FILTER_ID_DATA_reg_n_0_[18] ),
        .I3(\ACF_MASK_I_reg_n_0_[19] ),
        .I4(num5_carry__0_0[12]),
        .I5(\FILTER_ID_DATA_reg_n_0_[19] ),
        .O(i__carry__0_i_5_n_0));
  LUT4 #(
    .INIT(16'hA22A)) 
    i__carry_i_1
       (.I0(i__carry_i_5_n_0),
        .I1(\ACF_MASK_I_reg_n_0_[20] ),
        .I2(num5_carry__0_0[11]),
        .I3(\FILTER_ID_DATA_reg_n_0_[20] ),
        .O(i__carry_i_1_n_0));
  LUT4 #(
    .INIT(16'hA22A)) 
    i__carry_i_2
       (.I0(i__carry_i_6_n_0),
        .I1(\ACF_MASK_I_reg_n_0_[23] ),
        .I2(num5_carry__0_0[8]),
        .I3(\FILTER_ID_DATA_reg_n_0_[23] ),
        .O(i__carry_i_2_n_0));
  LUT4 #(
    .INIT(16'hA22A)) 
    i__carry_i_3
       (.I0(i__carry_i_7_n_0),
        .I1(\ACF_MASK_I_reg_n_0_[26] ),
        .I2(num5_carry__0_0[5]),
        .I3(\FILTER_ID_DATA_reg_n_0_[26] ),
        .O(i__carry_i_3_n_0));
  LUT4 #(
    .INIT(16'hA22A)) 
    i__carry_i_4
       (.I0(i__carry_i_8_n_0),
        .I1(\ACF_MASK_I_reg_n_0_[29] ),
        .I2(num5_carry__0_0[2]),
        .I3(\FILTER_ID_DATA_reg_n_0_[29] ),
        .O(i__carry_i_4_n_0));
  LUT6 #(
    .INIT(64'hD7D700D700D7D7D7)) 
    i__carry_i_5
       (.I0(\ACF_MASK_I_reg_n_0_[21] ),
        .I1(num5_carry__0_0[10]),
        .I2(\FILTER_ID_DATA_reg_n_0_[21] ),
        .I3(\ACF_MASK_I_reg_n_0_[22] ),
        .I4(num5_carry__0_0[9]),
        .I5(\FILTER_ID_DATA_reg_n_0_[22] ),
        .O(i__carry_i_5_n_0));
  LUT6 #(
    .INIT(64'hD7D700D700D7D7D7)) 
    i__carry_i_6
       (.I0(\ACF_MASK_I_reg_n_0_[24] ),
        .I1(num5_carry__0_0[7]),
        .I2(\FILTER_ID_DATA_reg_n_0_[24] ),
        .I3(\ACF_MASK_I_reg_n_0_[25] ),
        .I4(num5_carry__0_0[6]),
        .I5(\FILTER_ID_DATA_reg_n_0_[25] ),
        .O(i__carry_i_6_n_0));
  LUT6 #(
    .INIT(64'hD7D700D700D7D7D7)) 
    i__carry_i_7
       (.I0(\ACF_MASK_I_reg_n_0_[27] ),
        .I1(num5_carry__0_0[4]),
        .I2(\FILTER_ID_DATA_reg_n_0_[27] ),
        .I3(\ACF_MASK_I_reg_n_0_[28] ),
        .I4(num5_carry__0_0[3]),
        .I5(\FILTER_ID_DATA_reg_n_0_[28] ),
        .O(i__carry_i_7_n_0));
  LUT6 #(
    .INIT(64'hD7D700D700D7D7D7)) 
    i__carry_i_8
       (.I0(\ACF_MASK_I_reg_n_0_[30] ),
        .I1(num5_carry__0_0[1]),
        .I2(\FILTER_ID_DATA_reg_n_0_[30] ),
        .I3(\ACF_MASK_I_reg_n_0_[31] ),
        .I4(num5_carry__0_0[0]),
        .I5(\FILTER_ID_DATA_reg_n_0_[31] ),
        .O(i__carry_i_8_n_0));
  LUT3 #(
    .INIT(8'h20)) 
    match_not_finished_pulse0
       (.I0(MATCH_RUNNING_SIG_reg_0),
        .I1(BSP_IN_EOF_D1),
        .I2(out),
        .O(match_not_finished_pulse0__0));
  FDRE match_not_finished_pulse_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(match_not_finished_pulse0__0),
        .Q(RXMNF_SET),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  CARRY4 num5_carry
       (.CI(1'b0),
        .CO({num5_carry_n_0,num5_carry_n_1,num5_carry_n_2,num5_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_num5_carry_O_UNCONNECTED[3:0]),
        .S({num5_carry_i_1_n_0,num5_carry_i_2_n_0,num5_carry_i_3_n_0,num5_carry_i_4_n_0}));
  CARRY4 num5_carry__0
       (.CI(num5_carry_n_0),
        .CO({NLW_num5_carry__0_CO_UNCONNECTED[3:1],ACF_CMP_LOW}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_num5_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,num5_carry__0_i_1_n_0}));
  LUT3 #(
    .INIT(8'h9F)) 
    num5_carry__0_i_1
       (.I0(\FILTER_ID_DATA_reg_n_0_[0] ),
        .I1(num5_carry__0_0[31]),
        .I2(p_1_in[12]),
        .O(num5_carry__0_i_1_n_0));
  LUT4 #(
    .INIT(16'hA22A)) 
    num5_carry_i_1
       (.I0(num5_carry_i_5_n_0),
        .I1(p_1_in[11]),
        .I2(num5_carry__0_0[30]),
        .I3(\FILTER_ID_DATA_reg_n_0_[1] ),
        .O(num5_carry_i_1_n_0));
  LUT4 #(
    .INIT(16'hA22A)) 
    num5_carry_i_2
       (.I0(num5_carry_i_6_n_0),
        .I1(p_1_in[8]),
        .I2(num5_carry__0_0[27]),
        .I3(\FILTER_ID_DATA_reg_n_0_[4] ),
        .O(num5_carry_i_2_n_0));
  LUT4 #(
    .INIT(16'hA22A)) 
    num5_carry_i_3
       (.I0(num5_carry_i_7_n_0),
        .I1(p_1_in[5]),
        .I2(num5_carry__0_0[24]),
        .I3(\FILTER_ID_DATA_reg_n_0_[7] ),
        .O(num5_carry_i_3_n_0));
  LUT4 #(
    .INIT(16'hA22A)) 
    num5_carry_i_4
       (.I0(num5_carry_i_8_n_0),
        .I1(p_1_in[2]),
        .I2(num5_carry__0_0[21]),
        .I3(\FILTER_ID_DATA_reg_n_0_[10] ),
        .O(num5_carry_i_4_n_0));
  LUT6 #(
    .INIT(64'hD7D700D700D7D7D7)) 
    num5_carry_i_5
       (.I0(p_1_in[10]),
        .I1(num5_carry__0_0[29]),
        .I2(\FILTER_ID_DATA_reg_n_0_[2] ),
        .I3(p_1_in[9]),
        .I4(num5_carry__0_0[28]),
        .I5(\FILTER_ID_DATA_reg_n_0_[3] ),
        .O(num5_carry_i_5_n_0));
  LUT6 #(
    .INIT(64'hD7D700D700D7D7D7)) 
    num5_carry_i_6
       (.I0(p_1_in[7]),
        .I1(num5_carry__0_0[26]),
        .I2(\FILTER_ID_DATA_reg_n_0_[5] ),
        .I3(p_1_in[6]),
        .I4(num5_carry__0_0[25]),
        .I5(\FILTER_ID_DATA_reg_n_0_[6] ),
        .O(num5_carry_i_6_n_0));
  LUT6 #(
    .INIT(64'hD7D700D700D7D7D7)) 
    num5_carry_i_7
       (.I0(p_1_in[4]),
        .I1(num5_carry__0_0[23]),
        .I2(\FILTER_ID_DATA_reg_n_0_[8] ),
        .I3(p_1_in[3]),
        .I4(num5_carry__0_0[22]),
        .I5(\FILTER_ID_DATA_reg_n_0_[9] ),
        .O(num5_carry_i_7_n_0));
  LUT6 #(
    .INIT(64'hD7D700D700D7D7D7)) 
    num5_carry_i_8
       (.I0(p_1_in[1]),
        .I1(num5_carry__0_0[20]),
        .I2(\FILTER_ID_DATA_reg_n_0_[11] ),
        .I3(p_1_in[0]),
        .I4(num5_carry__0_0[19]),
        .I5(p_1_in9_in),
        .O(num5_carry_i_8_n_0));
  CARRY4 \num5_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\num5_inferred__0/i__carry_n_0 ,\num5_inferred__0/i__carry_n_1 ,\num5_inferred__0/i__carry_n_2 ,\num5_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_num5_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_1_n_0,i__carry_i_2_n_0,i__carry_i_3_n_0,i__carry_i_4_n_0}));
  CARRY4 \num5_inferred__0/i__carry__0 
       (.CI(\num5_inferred__0/i__carry_n_0 ),
        .CO({\NLW_num5_inferred__0/i__carry__0_CO_UNCONNECTED [3],ACF_CMP_HIGH,\num5_inferred__0/i__carry__0_n_2 ,\num5_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_num5_inferred__0/i__carry__0_O_UNCONNECTED [3:0]),
        .S({1'b0,i__carry__0_i_1_n_0,i__carry__0_i_2_n_0,i__carry__0_i_3_n_0}));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \num_reg[0]_i_1__0 
       (.I0(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I1(\FSM_sequential_imm_cs_reg[0]_0 ),
        .I2(\num_reg_reg[4]_0 [0]),
        .O(\num_reg[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT4 #(
    .INIT(16'h0660)) 
    \num_reg[1]_i_1__0 
       (.I0(\FSM_sequential_imm_cs_reg[0]_0 ),
        .I1(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I2(\num_reg_reg[4]_0 [0]),
        .I3(\num_reg_reg[4]_0 [1]),
        .O(\num_reg[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT5 #(
    .INIT(32'h06666000)) 
    \num_reg[2]_i_1__0 
       (.I0(\FSM_sequential_imm_cs_reg[0]_0 ),
        .I1(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I2(\num_reg_reg[4]_0 [0]),
        .I3(\num_reg_reg[4]_0 [1]),
        .I4(\num_reg_reg[4]_0 [2]),
        .O(\num_reg[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0666666660000000)) 
    \num_reg[3]_i_1__0 
       (.I0(\FSM_sequential_imm_cs_reg[0]_0 ),
        .I1(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I2(\num_reg_reg[4]_0 [2]),
        .I3(\num_reg_reg[4]_0 [1]),
        .I4(\num_reg_reg[4]_0 [0]),
        .I5(\num_reg_reg[4]_0 [3]),
        .O(\num_reg[3]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hCCCCFFFF111D111D)) 
    \num_reg[4]_i_1__0 
       (.I0(ID_MATCH_EN_D2_reg_0),
        .I1(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I2(LAST_ENTRY_FLAG_reg_n_0),
        .I3(\FSM_sequential_imm_cs[1]_i_3_n_0 ),
        .I4(\FSM_sequential_imm_cs[1]_i_2_n_0 ),
        .I5(\FSM_sequential_imm_cs_reg[0]_0 ),
        .O(num));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \num_reg[4]_i_2__0 
       (.I0(\num_reg_reg[4]_0 [2]),
        .I1(\num_reg_reg[4]_0 [1]),
        .I2(\num_reg_reg[4]_0 [0]),
        .I3(\num_reg_reg[4]_0 [3]),
        .I4(\num_reg[4]_i_3__0_n_0 ),
        .I5(\num_reg_reg[4]_0 [4]),
        .O(\num_reg[4]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \num_reg[4]_i_3__0 
       (.I0(\FSM_sequential_imm_cs_reg[0]_0 ),
        .I1(\FSM_sequential_imm_cs_reg[1]_0 ),
        .O(\num_reg[4]_i_3__0_n_0 ));
  FDRE \num_reg_reg[0] 
       (.C(s_axi_aclk),
        .CE(num),
        .D(\num_reg[0]_i_1__0_n_0 ),
        .Q(\num_reg_reg[4]_0 [0]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \num_reg_reg[1] 
       (.C(s_axi_aclk),
        .CE(num),
        .D(\num_reg[1]_i_1__0_n_0 ),
        .Q(\num_reg_reg[4]_0 [1]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \num_reg_reg[2] 
       (.C(s_axi_aclk),
        .CE(num),
        .D(\num_reg[2]_i_1__0_n_0 ),
        .Q(\num_reg_reg[4]_0 [2]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \num_reg_reg[3] 
       (.C(s_axi_aclk),
        .CE(num),
        .D(\num_reg[3]_i_1__0_n_0 ),
        .Q(\num_reg_reg[4]_0 [3]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE \num_reg_reg[4] 
       (.C(s_axi_aclk),
        .CE(num),
        .D(\num_reg[4]_i_2__0_n_0 ),
        .Q(\num_reg_reg[4]_0 [4]),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  FDRE pair_rd_valid_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pair_rd_valid),
        .Q(pair_rd_valid_d1),
        .R(\MATCHED_FILTER_INDEX_reg[0]_0 ));
  LUT4 #(
    .INIT(16'hAA2A)) 
    pr1_rd_req_i_1
       (.I0(VALID_S_SIG_IMM),
        .I1(pr1_rd_req_reg),
        .I2(Bus2IP_RNW),
        .I3(CS_H_D1_4),
        .O(pr1_rd_req0));
  LUT6 #(
    .INIT(64'h0000BB0000F0BB00)) 
    pr2_rd_req_i_3
       (.I0(ack_s_gate_toggle_reg_1),
        .I1(count_reg),
        .I2(\FSM_sequential_imm_cs[0]_i_2_n_0 ),
        .I3(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I4(\FSM_sequential_imm_cs_reg[0]_0 ),
        .I5(num1__0),
        .O(VALID_S_SIG_IMM));
  LUT6 #(
    .INIT(64'hFFFFFFFFF7000000)) 
    pr2_rd_req_i_4
       (.I0(p_1_in9_in),
        .I1(p_1_in[0]),
        .I2(ACF_CMP_HIGH),
        .I3(pair_rd_valid_d1),
        .I4(ACF_CMP_LOW),
        .I5(MATCH_RESULT_SIG_reg_0),
        .O(num1__0));
  LUT6 #(
    .INIT(64'h80AA808080808080)) 
    u_txxpm_2_i_13
       (.I0(u_txxpm_2_i_26_n_0),
        .I1(\RUNNING_FIFO_ID_LOC_reg[0]_i_7_n_0 ),
        .I2(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I3(num1__0),
        .I4(\FSM_sequential_imm_cs_reg[0]_0 ),
        .I5(\RUNNING_FIFO_ID_LOC_reg[0]_i_6_n_0 ),
        .O(u_txxpm_2_i_13_n_0));
  LUT6 #(
    .INIT(64'hFF8A8A8AFF8A8AFF)) 
    u_txxpm_2_i_14
       (.I0(RUNNING_FIFO_ID_LOC_reg[0]),
        .I1(\RUNNING_FIFO_ID_LOC_reg[0]_i_2_n_0 ),
        .I2(Q[3]),
        .I3(\FSM_sequential_imm_cs_reg[0]_0 ),
        .I4(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I5(ID_MATCH_EN_D2_reg_0),
        .O(u_txxpm_2_i_14_n_0));
  LUT6 #(
    .INIT(64'hAAAA00000000FFC0)) 
    u_txxpm_2_i_17
       (.I0(\num_reg[4]_i_3__0_n_0 ),
        .I1(\RUNNING_FIFO_ID_LOC_reg[0]_i_6_n_0 ),
        .I2(u_txxpm_2_i_27_n_0),
        .I3(u_txxpm_2_i_28_n_0),
        .I4(\RUNNING_FIFO_ID_LOC_reg[0]_i_2_n_0 ),
        .I5(Q[3]),
        .O(\RUNNING_FIFO_ID_LOC_reg_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h80AA808080808080)) 
    u_txxpm_2_i_19
       (.I0(u_txxpm_2_i_29_n_0),
        .I1(\RUNNING_FIFO_ID_LOC_reg[0]_i_7_n_0 ),
        .I2(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I3(num1__0),
        .I4(\FSM_sequential_imm_cs_reg[0]_0 ),
        .I5(\RUNNING_FIFO_ID_LOC_reg[0]_i_6_n_0 ),
        .O(u_txxpm_2_i_19_n_0));
  LUT6 #(
    .INIT(64'hFFFEFEFEAAAAAAAA)) 
    u_txxpm_2_i_2
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1 ),
        .I1(u_txxpm_2_i_13_n_0),
        .I2(u_txxpm_2_i_14_n_0),
        .I3(RUNNING_FIFO_ID_LOC_reg[0]),
        .I4(\RUNNING_FIFO_ID_LOC_reg[0]_i_5_n_0 ),
        .I5(\gen_wr_a.gen_word_narrow.mem_reg_0 ),
        .O(addrb[1]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT5 #(
    .INIT(32'hFFFF2AAA)) 
    u_txxpm_2_i_20
       (.I0(RUNNING_FIFO_ID_LOC_reg[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(\RUNNING_FIFO_ID_LOC_reg[0]_i_4_n_0 ),
        .O(u_txxpm_2_i_20_n_0));
  LUT6 #(
    .INIT(64'hAAAA00000000FFC0)) 
    u_txxpm_2_i_22
       (.I0(\num_reg[4]_i_3__0_n_0 ),
        .I1(\RUNNING_FIFO_ID_LOC_reg[0]_i_6_n_0 ),
        .I2(u_txxpm_2_i_27_n_0),
        .I3(u_txxpm_2_i_28_n_0),
        .I4(u_txxpm_2_i_30_n_0),
        .I5(Q[2]),
        .O(\RUNNING_FIFO_ID_LOC_reg_reg[3]_0 ));
  LUT6 #(
    .INIT(64'h0000AAAAFFC00000)) 
    u_txxpm_2_i_24
       (.I0(\num_reg[4]_i_3__0_n_0 ),
        .I1(\RUNNING_FIFO_ID_LOC_reg[0]_i_6_n_0 ),
        .I2(u_txxpm_2_i_27_n_0),
        .I3(u_txxpm_2_i_28_n_0),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\RUNNING_FIFO_ID_LOC_reg_reg[5]_0 ));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    u_txxpm_2_i_26
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(RUNNING_FIFO_ID_LOC_reg[2]),
        .I5(RUNNING_FIFO_ID_LOC_reg[0]),
        .O(u_txxpm_2_i_26_n_0));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'h04)) 
    u_txxpm_2_i_27
       (.I0(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I1(\FSM_sequential_imm_cs_reg[0]_0 ),
        .I2(num1__0),
        .O(u_txxpm_2_i_27_n_0));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'h40)) 
    u_txxpm_2_i_28
       (.I0(\FSM_sequential_imm_cs_reg[0]_0 ),
        .I1(\FSM_sequential_imm_cs_reg[1]_0 ),
        .I2(\RUNNING_FIFO_ID_LOC_reg[0]_i_7_n_0 ),
        .O(u_txxpm_2_i_28_n_0));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    u_txxpm_2_i_29
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(RUNNING_FIFO_ID_LOC_reg[2]),
        .O(u_txxpm_2_i_29_n_0));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT2 #(
    .INIT(4'h7)) 
    u_txxpm_2_i_30
       (.I0(Q[1]),
        .I1(Q[0]),
        .O(u_txxpm_2_i_30_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFEAAAAAAAAA)) 
    u_txxpm_2_i_4
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg ),
        .I1(\RUNNING_FIFO_ID_LOC_reg[0]_i_5_n_0 ),
        .I2(RUNNING_FIFO_ID_LOC_reg[2]),
        .I3(u_txxpm_2_i_19_n_0),
        .I4(u_txxpm_2_i_20_n_0),
        .I5(\gen_wr_a.gen_word_narrow.mem_reg_0 ),
        .O(addrb[0]));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_nrh
   (postpone_flag,
    postpone_flag_2_reg_0,
    invalidate_buffer_i,
    trigger_next_round0,
    postpone_flag_2_reg_1,
    passed_trig_reg_0,
    s_axi_aclk,
    passed_trig0,
    postpone_flag_reg_0,
    postpone_flag_2_reg_2,
    invalidate_buffer_reg_0,
    trig_pulse_1,
    trig_pulse_2,
    trigger_next_round_reg,
    trigger_next_round_reg_0,
    TRR_REG_WRITE_PULSE);
  output postpone_flag;
  output postpone_flag_2_reg_0;
  output invalidate_buffer_i;
  output trigger_next_round0;
  output postpone_flag_2_reg_1;
  input passed_trig_reg_0;
  input s_axi_aclk;
  input passed_trig0;
  input postpone_flag_reg_0;
  input postpone_flag_2_reg_2;
  input invalidate_buffer_reg_0;
  input trig_pulse_1;
  input trig_pulse_2;
  input trigger_next_round_reg;
  input trigger_next_round_reg_0;
  input TRR_REG_WRITE_PULSE;

  wire TRR_REG_WRITE_PULSE;
  wire invalidate_buffer_i;
  wire invalidate_buffer_reg_0;
  wire passed_trig;
  wire passed_trig0;
  wire passed_trig_reg_0;
  wire postpone_flag;
  wire postpone_flag_2_d1;
  wire postpone_flag_2_reg_0;
  wire postpone_flag_2_reg_1;
  wire postpone_flag_2_reg_2;
  wire postpone_flag_d1;
  wire postpone_flag_reg_0;
  wire s_axi_aclk;
  wire trig_pulse_1;
  wire trig_pulse_2;
  wire trigger_next_round0;
  wire trigger_next_round_i_2_n_0;
  wire trigger_next_round_reg;
  wire trigger_next_round_reg_0;

  LUT3 #(
    .INIT(8'hF4)) 
    invalidate_buffer_i_2
       (.I0(postpone_flag_2_reg_0),
        .I1(postpone_flag_2_d1),
        .I2(TRR_REG_WRITE_PULSE),
        .O(postpone_flag_2_reg_1));
  FDRE invalidate_buffer_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(invalidate_buffer_reg_0),
        .Q(invalidate_buffer_i),
        .R(passed_trig_reg_0));
  FDRE passed_trig_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(passed_trig0),
        .Q(passed_trig),
        .R(passed_trig_reg_0));
  FDRE postpone_flag_2_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(postpone_flag_2_reg_0),
        .Q(postpone_flag_2_d1),
        .R(passed_trig_reg_0));
  FDRE postpone_flag_2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(postpone_flag_2_reg_2),
        .Q(postpone_flag_2_reg_0),
        .R(passed_trig_reg_0));
  FDRE postpone_flag_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(postpone_flag),
        .Q(postpone_flag_d1),
        .R(passed_trig_reg_0));
  FDRE postpone_flag_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(postpone_flag_reg_0),
        .Q(postpone_flag),
        .R(passed_trig_reg_0));
  LUT4 #(
    .INIT(16'hEEFE)) 
    trigger_next_round_i_1
       (.I0(trigger_next_round_i_2_n_0),
        .I1(trig_pulse_1),
        .I2(postpone_flag_d1),
        .I3(postpone_flag),
        .O(trigger_next_round0));
  LUT6 #(
    .INIT(64'hEEEEEEEEFEFFEEEE)) 
    trigger_next_round_i_2
       (.I0(passed_trig),
        .I1(trig_pulse_2),
        .I2(trigger_next_round_reg),
        .I3(trigger_next_round_reg_0),
        .I4(postpone_flag_2_d1),
        .I5(postpone_flag_2_reg_0),
        .O(trigger_next_round_i_2_n_0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_rbmm
   (MATCH_RUNNING_SIG_reg,
    ID_MATCH_EN_D2_reg,
    RXMNF_SET,
    RXF_FULL_AXI,
    RXWM_SET,
    RXF_FULL_I_reg,
    \addr_location_incr_count_reg[1] ,
    RXF_FULL_AXI_0,
    RXWM_SET_F1,
    RXF_FULL_I_reg_0,
    CS_H_D1,
    enb,
    ACK_RX,
    CS_H_D1_1,
    host_req_reg,
    ACK_RX_T,
    Q,
    \FILL_LEVEL_reg[6] ,
    ack_s_gate_toggle_reg,
    MATCH_RESULT_SIG_reg,
    RXF_FULL_AT_MSG_BOUNDARY_reg,
    \wr_index_id_loc_reg[0] ,
    RXF_FULL_AT_MSG_BOUNDARY_reg_0,
    \addr_location_incr_count_reg[0] ,
    pr1_rd_req0,
    VALID_S_SIG_IMM,
    \IC_REG_WMR_I2_reg[2] ,
    \IC_REG_WMR_I2_reg[3] ,
    \IC_REG_WMR_I2_reg[1] ,
    \IC_REG_WMR_I2_reg[0] ,
    \gen_wr_a.gen_word_narrow.mem_reg_0 ,
    \gen_wr_a.gen_word_narrow.mem_reg_0_0 ,
    D,
    \RUNNING_FIFO_ID_LOC_reg_reg[1] ,
    \FSM_sequential_imm_cs_reg[1] ,
    \FSM_sequential_imm_cs_reg[0] ,
    ID_MATCH_EN_D2_reg_0,
    \FSM_sequential_imm_cs_reg[1]_0 ,
    \RUNNING_FIFO_ID_LOC_reg_reg[5] ,
    \RUNNING_FIFO_ID_LOC_reg_reg[3] ,
    \RUNNING_FIFO_ID_LOC_reg_reg[1]_0 ,
    addrb,
    \num_reg_reg[4] ,
    \num_reg_reg[3] ,
    ACF_VAL_I,
    \RD_INDEX_reg[1] ,
    \RD_INDEX_reg[1]_0 ,
    \IC_REG_WMR_I2_reg[0]_0 ,
    \wr_index_i_reg[6] ,
    \wr_index_i_reg[6]_0 ,
    \wr_index_id_loc_reg[9] ,
    RX_ADDR_M_CC_F1,
    MATCH_RESULT_TO_BSP0,
    \MATCHED_FILTER_INDEX_reg[4] ,
    \RXE_DATA_STORED_AT_DLC_reg[0] ,
    \IC_REG_RXFP_I2_reg[0] ,
    \RXE_DATA_STORED_AT_DLC_reg[0]_0 ,
    out,
    ACK_H_reg,
    s_axi_aclk,
    ID_MATCH_EN_OL,
    SR,
    can_clk,
    addr_location_incr_count,
    addr_location_incr_count_2,
    CS_RX,
    CS_H_INTERNAL,
    CS_RX_T,
    CS_H_INTERNAL_3,
    ack_s_gate_toggle_reg_0,
    MATCH_RESULT_SIG_reg_0,
    MATCH_RUNNING_SIG_reg_0,
    pr1_rd_req_reg,
    Bus2IP_RNW,
    CS_H_D1_4,
    \RD_DATA_RET[18]_i_4 ,
    \RD_DATA_RET[20]_i_7 ,
    \RD_DATA_RET[20]_i_7_0 ,
    \RD_DATA_RET[18]_i_4_0 ,
    \RD_INDEX_reg[6] ,
    \RD_INDEX_reg[6]_0 ,
    \RD_INDEX_reg[6]_1 ,
    doutb,
    \RD_DATA_RET_reg[18] ,
    \RD_DATA_RET_reg[18]_0 ,
    \gen_wr_a.gen_word_narrow.mem_reg ,
    \gen_wr_a.gen_word_narrow.mem_reg_1 ,
    \gen_wr_a.gen_word_narrow.mem_reg_2 ,
    \FSM_sequential_imm_cs_reg[0]_0 ,
    \FSM_sequential_imm_cs_reg[0]_1 ,
    \FSM_sequential_imm_cs_reg[0]_2 ,
    \FSM_sequential_imm_cs[0]_i_2 ,
    \MATCHED_FILTER_INDEX_reg[0] ,
    num5_carry__0,
    TS_RX_WEN,
    RXE_MSGVAL_EARLY_F0,
    RXF_FULL_AT_MSG_BOUNDARY_reg_1,
    TS_RX_WEN_F1,
    RXE_MSGVAL_EARLY_F1,
    RXF_FULL_AT_MSG_BOUNDARY_reg_2,
    RXE_RXFIFO_WEN_FD2,
    RXE_RXFIFO_WEN_FD1,
    \wr_index_i_reg[1] ,
    RXE_RXMSG_VAL_F0,
    dest_arst,
    \wr_index_i_reg[1]_0 ,
    RXE_RXMSG_VAL_F1,
    RXE_RXFIFO_WEN,
    MATCH_RESULT_TO_BSP_reg,
    MATCH_RESULT_FS2_D1,
    \FSM_sequential_imm_cs_reg[0]_3 ,
    \FILTER_ID_DATA_reg[0] ,
    \FILL_LEVEL_reg[5] ,
    E,
    s_axi_wdata,
    \RXE_DATA_STORED_AT_DLC_reg[0]_1 ,
    \FILL_LEVEL_reg[5]_0 ,
    \wr_index_i_reg[6]_1 ,
    \wr_index_i_reg[6]_2 );
  output MATCH_RUNNING_SIG_reg;
  output ID_MATCH_EN_D2_reg;
  output RXMNF_SET;
  output RXF_FULL_AXI;
  output RXWM_SET;
  output RXF_FULL_I_reg;
  output \addr_location_incr_count_reg[1] ;
  output RXF_FULL_AXI_0;
  output RXWM_SET_F1;
  output RXF_FULL_I_reg_0;
  output CS_H_D1;
  output enb;
  output ACK_RX;
  output CS_H_D1_1;
  output host_req_reg;
  output ACK_RX_T;
  output [3:0]Q;
  output [6:0]\FILL_LEVEL_reg[6] ;
  output ack_s_gate_toggle_reg;
  output MATCH_RESULT_SIG_reg;
  output RXF_FULL_AT_MSG_BOUNDARY_reg;
  output [9:0]\wr_index_id_loc_reg[0] ;
  output RXF_FULL_AT_MSG_BOUNDARY_reg_0;
  output \addr_location_incr_count_reg[0] ;
  output pr1_rd_req0;
  output VALID_S_SIG_IMM;
  output \IC_REG_WMR_I2_reg[2] ;
  output [2:0]\IC_REG_WMR_I2_reg[3] ;
  output \IC_REG_WMR_I2_reg[1] ;
  output \IC_REG_WMR_I2_reg[0] ;
  output \gen_wr_a.gen_word_narrow.mem_reg_0 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_0_0 ;
  output [3:0]D;
  output [3:0]\RUNNING_FIFO_ID_LOC_reg_reg[1] ;
  output \FSM_sequential_imm_cs_reg[1] ;
  output \FSM_sequential_imm_cs_reg[0] ;
  output ID_MATCH_EN_D2_reg_0;
  output \FSM_sequential_imm_cs_reg[1]_0 ;
  output \RUNNING_FIFO_ID_LOC_reg_reg[5] ;
  output \RUNNING_FIFO_ID_LOC_reg_reg[3] ;
  output \RUNNING_FIFO_ID_LOC_reg_reg[1]_0 ;
  output [1:0]addrb;
  output [4:0]\num_reg_reg[4] ;
  output \num_reg_reg[3] ;
  output ACF_VAL_I;
  output [5:0]\RD_INDEX_reg[1] ;
  output [5:0]\RD_INDEX_reg[1]_0 ;
  output [5:0]\IC_REG_WMR_I2_reg[0]_0 ;
  output [0:0]\wr_index_i_reg[6] ;
  output [0:0]\wr_index_i_reg[6]_0 ;
  output [0:0]\wr_index_id_loc_reg[9] ;
  output [9:0]RX_ADDR_M_CC_F1;
  output MATCH_RESULT_TO_BSP0;
  output [4:0]\MATCHED_FILTER_INDEX_reg[4] ;
  output [10:0]\RXE_DATA_STORED_AT_DLC_reg[0] ;
  output [4:0]\IC_REG_RXFP_I2_reg[0] ;
  output [10:0]\RXE_DATA_STORED_AT_DLC_reg[0]_0 ;
  input out;
  input ACK_H_reg;
  input s_axi_aclk;
  input ID_MATCH_EN_OL;
  input [0:0]SR;
  input can_clk;
  input [0:0]addr_location_incr_count;
  input [0:0]addr_location_incr_count_2;
  input CS_RX;
  input CS_H_INTERNAL;
  input CS_RX_T;
  input CS_H_INTERNAL_3;
  input ack_s_gate_toggle_reg_0;
  input MATCH_RESULT_SIG_reg_0;
  input MATCH_RUNNING_SIG_reg_0;
  input pr1_rd_req_reg;
  input Bus2IP_RNW;
  input CS_H_D1_4;
  input [2:0]\RD_DATA_RET[18]_i_4 ;
  input \RD_DATA_RET[20]_i_7 ;
  input \RD_DATA_RET[20]_i_7_0 ;
  input [2:0]\RD_DATA_RET[18]_i_4_0 ;
  input \RD_INDEX_reg[6] ;
  input \RD_INDEX_reg[6]_0 ;
  input \RD_INDEX_reg[6]_1 ;
  input [1:0]doutb;
  input [1:0]\RD_DATA_RET_reg[18] ;
  input \RD_DATA_RET_reg[18]_0 ;
  input \gen_wr_a.gen_word_narrow.mem_reg ;
  input \gen_wr_a.gen_word_narrow.mem_reg_1 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_2 ;
  input \FSM_sequential_imm_cs_reg[0]_0 ;
  input \FSM_sequential_imm_cs_reg[0]_1 ;
  input \FSM_sequential_imm_cs_reg[0]_2 ;
  input [0:0]\FSM_sequential_imm_cs[0]_i_2 ;
  input \MATCHED_FILTER_INDEX_reg[0] ;
  input [31:0]num5_carry__0;
  input TS_RX_WEN;
  input RXE_MSGVAL_EARLY_F0;
  input RXF_FULL_AT_MSG_BOUNDARY_reg_1;
  input TS_RX_WEN_F1;
  input RXE_MSGVAL_EARLY_F1;
  input RXF_FULL_AT_MSG_BOUNDARY_reg_2;
  input RXE_RXFIFO_WEN_FD2;
  input RXE_RXFIFO_WEN_FD1;
  input \wr_index_i_reg[1] ;
  input RXE_RXMSG_VAL_F0;
  input dest_arst;
  input \wr_index_i_reg[1]_0 ;
  input RXE_RXMSG_VAL_F1;
  input RXE_RXFIFO_WEN;
  input MATCH_RESULT_TO_BSP_reg;
  input MATCH_RESULT_FS2_D1;
  input \FSM_sequential_imm_cs_reg[0]_3 ;
  input [31:0]\FILTER_ID_DATA_reg[0] ;
  input [0:0]\FILL_LEVEL_reg[5] ;
  input [0:0]E;
  input [16:0]s_axi_wdata;
  input [10:0]\RXE_DATA_STORED_AT_DLC_reg[0]_1 ;
  input [0:0]\FILL_LEVEL_reg[5]_0 ;
  input [0:0]\wr_index_i_reg[6]_1 ;
  input [0:0]\wr_index_i_reg[6]_2 ;

  wire ACF_VAL_I;
  wire ACK_H_reg;
  wire ACK_RX;
  wire ACK_RX_T;
  wire Bus2IP_RNW;
  wire CS_H_D1;
  wire CS_H_D1_1;
  wire CS_H_D1_4;
  wire CS_H_INTERNAL;
  wire CS_H_INTERNAL_3;
  wire CS_RX;
  wire CS_RX_T;
  wire [3:0]D;
  wire [0:0]E;
  wire [0:0]\FILL_LEVEL_reg[5] ;
  wire [0:0]\FILL_LEVEL_reg[5]_0 ;
  wire [6:0]\FILL_LEVEL_reg[6] ;
  wire [31:0]\FILTER_ID_DATA_reg[0] ;
  wire [0:0]\FSM_sequential_imm_cs[0]_i_2 ;
  wire \FSM_sequential_imm_cs_reg[0] ;
  wire \FSM_sequential_imm_cs_reg[0]_0 ;
  wire \FSM_sequential_imm_cs_reg[0]_1 ;
  wire \FSM_sequential_imm_cs_reg[0]_2 ;
  wire \FSM_sequential_imm_cs_reg[0]_3 ;
  wire \FSM_sequential_imm_cs_reg[1] ;
  wire \FSM_sequential_imm_cs_reg[1]_0 ;
  wire [3:5]IC_REG_FSR_I;
  wire [4:0]\IC_REG_RXFP_I2_reg[0] ;
  wire \IC_REG_WMR_I2_reg[0] ;
  wire [5:0]\IC_REG_WMR_I2_reg[0]_0 ;
  wire \IC_REG_WMR_I2_reg[1] ;
  wire \IC_REG_WMR_I2_reg[2] ;
  wire [2:0]\IC_REG_WMR_I2_reg[3] ;
  wire ID_MATCH_EN_D2_reg;
  wire ID_MATCH_EN_D2_reg_0;
  wire ID_MATCH_EN_OL;
  wire \MATCHED_FILTER_INDEX_reg[0] ;
  wire [4:0]\MATCHED_FILTER_INDEX_reg[4] ;
  wire MATCH_RESULT_FS2_D1;
  wire MATCH_RESULT_SIG_reg;
  wire MATCH_RESULT_SIG_reg_0;
  wire MATCH_RESULT_TO_BSP0;
  wire MATCH_RESULT_TO_BSP_reg;
  wire MATCH_RUNNING_SIG_reg;
  wire MATCH_RUNNING_SIG_reg_0;
  wire [3:0]Q;
  wire [2:0]\RD_DATA_RET[18]_i_4 ;
  wire [2:0]\RD_DATA_RET[18]_i_4_0 ;
  wire \RD_DATA_RET[20]_i_7 ;
  wire \RD_DATA_RET[20]_i_7_0 ;
  wire [1:0]\RD_DATA_RET_reg[18] ;
  wire \RD_DATA_RET_reg[18]_0 ;
  wire [5:0]\RD_INDEX_reg[1] ;
  wire [5:0]\RD_INDEX_reg[1]_0 ;
  wire \RD_INDEX_reg[6] ;
  wire \RD_INDEX_reg[6]_0 ;
  wire \RD_INDEX_reg[6]_1 ;
  wire [3:0]\RUNNING_FIFO_ID_LOC_reg_reg[1] ;
  wire \RUNNING_FIFO_ID_LOC_reg_reg[1]_0 ;
  wire \RUNNING_FIFO_ID_LOC_reg_reg[3] ;
  wire \RUNNING_FIFO_ID_LOC_reg_reg[5] ;
  wire [10:0]\RXE_DATA_STORED_AT_DLC_reg[0] ;
  wire [10:0]\RXE_DATA_STORED_AT_DLC_reg[0]_0 ;
  wire [10:0]\RXE_DATA_STORED_AT_DLC_reg[0]_1 ;
  wire RXE_MSGVAL_EARLY_F0;
  wire RXE_MSGVAL_EARLY_F1;
  wire RXE_RXFIFO_WEN;
  wire RXE_RXFIFO_WEN_FD1;
  wire RXE_RXFIFO_WEN_FD2;
  wire RXE_RXMSG_VAL_F0;
  wire RXE_RXMSG_VAL_F1;
  wire RXF_FULL_AT_MSG_BOUNDARY_reg;
  wire RXF_FULL_AT_MSG_BOUNDARY_reg_0;
  wire RXF_FULL_AT_MSG_BOUNDARY_reg_1;
  wire RXF_FULL_AT_MSG_BOUNDARY_reg_2;
  wire RXF_FULL_AXI;
  wire RXF_FULL_AXI_0;
  wire RXF_FULL_I_reg;
  wire RXF_FULL_I_reg_0;
  wire RXMNF_SET;
  wire RXWM_SET;
  wire RXWM_SET_F1;
  wire [9:0]RX_ADDR_M_CC_F1;
  wire [0:0]SR;
  wire TS_RX_WEN;
  wire TS_RX_WEN_F1;
  wire VALID_S_SIG_IMM;
  wire ack_s_gate_toggle_reg;
  wire ack_s_gate_toggle_reg_0;
  wire [0:0]addr_location_incr_count;
  wire [0:0]addr_location_incr_count_2;
  wire \addr_location_incr_count_reg[0] ;
  wire \addr_location_incr_count_reg[1] ;
  wire [1:0]addrb;
  wire can_clk;
  wire dest_arst;
  wire [1:0]doutb;
  wire enb;
  wire \gen_wr_a.gen_word_narrow.mem_reg ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_2 ;
  wire host_req_reg;
  wire [31:0]num5_carry__0;
  wire \num_reg_reg[3] ;
  wire [4:0]\num_reg_reg[4] ;
  wire out;
  wire pr1_rd_req0;
  wire pr1_rd_req_reg;
  wire s_axi_aclk;
  wire [16:0]s_axi_wdata;
  wire \wr_index_i_reg[1] ;
  wire \wr_index_i_reg[1]_0 ;
  wire [0:0]\wr_index_i_reg[6] ;
  wire [0:0]\wr_index_i_reg[6]_0 ;
  wire [0:0]\wr_index_i_reg[6]_1 ;
  wire [0:0]\wr_index_i_reg[6]_2 ;
  wire [9:0]\wr_index_id_loc_reg[0] ;
  wire [0:0]\wr_index_id_loc_reg[9] ;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_rxmsg_fifo_cntl__parameterized0 \GEN_FIFO_1_CNTL.rxmsg_fifo_cntl_1 
       (.E(E),
        .\FILL_LEVEL_reg[5]_0 (\FILL_LEVEL_reg[5]_0 ),
        .\IC_REG_RXFP_I2_reg[0]_0 (\IC_REG_RXFP_I2_reg[0] ),
        .\IC_REG_WMR_I2_reg[0]_0 (\IC_REG_WMR_I2_reg[0] ),
        .\IC_REG_WMR_I2_reg[1]_0 (\IC_REG_WMR_I2_reg[1] ),
        .\IC_REG_WMR_I2_reg[2]_0 (\IC_REG_WMR_I2_reg[2] ),
        .\IC_REG_WMR_I2_reg[3]_0 (\IC_REG_WMR_I2_reg[3] ),
        .\MULTI_BIT.s_level_out_bus_d5_reg[0] (ACK_H_reg),
        .Q(\FILL_LEVEL_reg[6] ),
        .\RD_DATA_RET[18]_i_4 (\RD_DATA_RET[18]_i_4 ),
        .\RD_DATA_RET[18]_i_4_0 ({IC_REG_FSR_I[3],IC_REG_FSR_I[4],IC_REG_FSR_I[5]}),
        .\RD_DATA_RET[18]_i_4_1 (\RD_DATA_RET[18]_i_4_0 ),
        .\RD_DATA_RET[20]_i_7 (\RD_DATA_RET[20]_i_7 ),
        .\RD_DATA_RET[20]_i_7_0 (\RD_DATA_RET[20]_i_7_0 ),
        .\RD_INDEX_reg[1]_0 (\RD_INDEX_reg[1]_0 ),
        .\RD_INDEX_reg[6]_0 (\RD_INDEX_reg[6] ),
        .\RD_INDEX_reg[6]_1 (\RD_INDEX_reg[6]_0 ),
        .\RXE_DATA_STORED_AT_DLC_reg[0]_0 (\RXE_DATA_STORED_AT_DLC_reg[0]_0 ),
        .\RXE_DATA_STORED_AT_DLC_reg[0]_1 (\RXE_DATA_STORED_AT_DLC_reg[0]_1 ),
        .RXE_MSGVAL_EARLY_F1(RXE_MSGVAL_EARLY_F1),
        .RXE_RXFIFO_WEN(RXE_RXFIFO_WEN),
        .RXE_RXFIFO_WEN_FD1(RXE_RXFIFO_WEN_FD1),
        .RXE_RXFIFO_WEN_FD2(RXE_RXFIFO_WEN_FD2),
        .RXE_RXMSG_VAL_F1(RXE_RXMSG_VAL_F1),
        .RXF_FULL_AT_MSG_BOUNDARY_reg_0(RXF_FULL_AT_MSG_BOUNDARY_reg_0),
        .RXF_FULL_AT_MSG_BOUNDARY_reg_1(RXF_FULL_AT_MSG_BOUNDARY_reg_2),
        .RXF_FULL_AXI_0(RXF_FULL_AXI_0),
        .RXF_FULL_I_reg_0(RXF_FULL_I_reg_0),
        .RXWM_SET_F1(RXWM_SET_F1),
        .RX_ADDR_M_CC_F1(RX_ADDR_M_CC_F1),
        .SR(SR),
        .TS_RX_WEN_F1(TS_RX_WEN_F1),
        .addr_location_incr_count_2(addr_location_incr_count_2),
        .\addr_location_incr_count_reg[0]_0 (\addr_location_incr_count_reg[0] ),
        .can_clk(can_clk),
        .dest_arst(dest_arst),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_wdata(s_axi_wdata[16:6]),
        .\wr_index_i_reg[1]_0 (\wr_index_i_reg[1]_0 ),
        .\wr_index_i_reg[6]_0 (\wr_index_i_reg[6]_0 ),
        .\wr_index_i_reg[6]_1 (\wr_index_i_reg[6]_2 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_rxmsg_fifo_cntl \GEN_FIFO_CNTL.rxmsg_fifo_cntl 
       (.E(E),
        .\FILL_LEVEL_reg[5]_0 (\FILL_LEVEL_reg[5] ),
        .\IC_REG_WMR_I2_reg[0]_0 (\IC_REG_WMR_I2_reg[0]_0 ),
        .MATCH_RESULT_FS2_D1(MATCH_RESULT_FS2_D1),
        .MATCH_RESULT_TO_BSP0(MATCH_RESULT_TO_BSP0),
        .MATCH_RESULT_TO_BSP_reg(MATCH_RESULT_TO_BSP_reg),
        .MATCH_RESULT_TO_BSP_reg_0(RXF_FULL_I_reg_0),
        .MATCH_RESULT_TO_BSP_reg_1(RXF_FULL_AT_MSG_BOUNDARY_reg_0),
        .\MULTI_BIT.s_level_out_bus_d5_reg[0] (ACK_H_reg),
        .Q({Q[3],IC_REG_FSR_I[3],IC_REG_FSR_I[4],IC_REG_FSR_I[5],Q[2:0]}),
        .\RD_INDEX_reg[1]_0 (\RD_INDEX_reg[1] ),
        .\RD_INDEX_reg[6]_0 (\RD_INDEX_reg[6]_1 ),
        .\RD_INDEX_reg[6]_1 (\RD_INDEX_reg[6]_0 ),
        .\RXE_DATA_STORED_AT_DLC_reg[0]_0 (\RXE_DATA_STORED_AT_DLC_reg[0] ),
        .\RXE_DATA_STORED_AT_DLC_reg[0]_1 (\RXE_DATA_STORED_AT_DLC_reg[0]_1 ),
        .RXE_MSGVAL_EARLY_F0(RXE_MSGVAL_EARLY_F0),
        .RXE_RXFIFO_WEN(RXE_RXFIFO_WEN),
        .RXE_RXFIFO_WEN_FD1(RXE_RXFIFO_WEN_FD1),
        .RXE_RXFIFO_WEN_FD2(RXE_RXFIFO_WEN_FD2),
        .RXE_RXMSG_VAL_F0(RXE_RXMSG_VAL_F0),
        .RXF_FULL_AT_MSG_BOUNDARY_reg_0(RXF_FULL_AT_MSG_BOUNDARY_reg),
        .RXF_FULL_AT_MSG_BOUNDARY_reg_1(RXF_FULL_AT_MSG_BOUNDARY_reg_1),
        .RXF_FULL_AXI(RXF_FULL_AXI),
        .RXF_FULL_I_reg_0(RXF_FULL_I_reg),
        .RXWM_SET(RXWM_SET),
        .SR(SR),
        .TS_RX_WEN(TS_RX_WEN),
        .addr_location_incr_count(addr_location_incr_count),
        .\addr_location_incr_count_reg[0]_0 (\wr_index_id_loc_reg[0] [0]),
        .\addr_location_incr_count_reg[1]_0 (\addr_location_incr_count_reg[1] ),
        .can_clk(can_clk),
        .dest_arst(dest_arst),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_wdata(s_axi_wdata[5:0]),
        .\wr_index_i_reg[1]_0 (\wr_index_i_reg[1] ),
        .\wr_index_i_reg[6]_0 (\wr_index_i_reg[6] ),
        .\wr_index_i_reg[6]_1 (\wr_index_i_reg[6]_1 ),
        .\wr_index_id_loc_reg[0]_0 (\wr_index_id_loc_reg[0] [9:1]),
        .\wr_index_id_loc_reg[9]_0 (\wr_index_id_loc_reg[9] ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_imm \GEN_IMM.ol_imm 
       (.ACF_VAL_I(ACF_VAL_I),
        .Bus2IP_RNW(Bus2IP_RNW),
        .CS_H_D1_4(CS_H_D1_4),
        .D(D),
        .\FILTER_ID_DATA_reg[0]_0 (\FILTER_ID_DATA_reg[0] ),
        .\FSM_sequential_imm_cs[0]_i_2_0 (\FSM_sequential_imm_cs[0]_i_2 ),
        .\FSM_sequential_imm_cs_reg[0]_0 (\FSM_sequential_imm_cs_reg[0] ),
        .\FSM_sequential_imm_cs_reg[0]_1 (\FSM_sequential_imm_cs_reg[0]_0 ),
        .\FSM_sequential_imm_cs_reg[0]_2 (\FSM_sequential_imm_cs_reg[0]_1 ),
        .\FSM_sequential_imm_cs_reg[0]_3 (\FSM_sequential_imm_cs_reg[0]_2 ),
        .\FSM_sequential_imm_cs_reg[0]_4 (\FSM_sequential_imm_cs_reg[0]_3 ),
        .\FSM_sequential_imm_cs_reg[1]_0 (\FSM_sequential_imm_cs_reg[1] ),
        .\FSM_sequential_imm_cs_reg[1]_1 (\FSM_sequential_imm_cs_reg[1]_0 ),
        .ID_MATCH_EN_D2_reg_0(ID_MATCH_EN_D2_reg),
        .ID_MATCH_EN_D2_reg_1(ID_MATCH_EN_D2_reg_0),
        .ID_MATCH_EN_OL(ID_MATCH_EN_OL),
        .\MATCHED_FILTER_INDEX_reg[0]_0 (ACK_H_reg),
        .\MATCHED_FILTER_INDEX_reg[0]_1 (\MATCHED_FILTER_INDEX_reg[0] ),
        .\MATCHED_FILTER_INDEX_reg[4]_0 (\MATCHED_FILTER_INDEX_reg[4] ),
        .MATCH_RESULT_SIG_reg_0(MATCH_RESULT_SIG_reg),
        .MATCH_RESULT_SIG_reg_1(MATCH_RESULT_SIG_reg_0),
        .MATCH_RUNNING_SIG_reg_0(MATCH_RUNNING_SIG_reg),
        .MATCH_RUNNING_SIG_reg_1(MATCH_RUNNING_SIG_reg_0),
        .Q(\RUNNING_FIFO_ID_LOC_reg_reg[1] ),
        .\RUNNING_FIFO_ID_LOC_reg_reg[1]_0 (\RUNNING_FIFO_ID_LOC_reg_reg[1]_0 ),
        .\RUNNING_FIFO_ID_LOC_reg_reg[3]_0 (\RUNNING_FIFO_ID_LOC_reg_reg[3] ),
        .\RUNNING_FIFO_ID_LOC_reg_reg[5]_0 (\RUNNING_FIFO_ID_LOC_reg_reg[5] ),
        .RXMNF_SET(RXMNF_SET),
        .VALID_S_SIG_IMM(VALID_S_SIG_IMM),
        .ack_s_gate_toggle_reg_0(ack_s_gate_toggle_reg),
        .ack_s_gate_toggle_reg_1(ack_s_gate_toggle_reg_0),
        .addrb(addrb),
        .\gen_wr_a.gen_word_narrow.mem_reg (\gen_wr_a.gen_word_narrow.mem_reg ),
        .\gen_wr_a.gen_word_narrow.mem_reg_0 (\gen_wr_a.gen_word_narrow.mem_reg_1 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_1 (\gen_wr_a.gen_word_narrow.mem_reg_2 ),
        .num5_carry__0_0(num5_carry__0),
        .\num_reg_reg[3]_0 (\num_reg_reg[3] ),
        .\num_reg_reg[4]_0 (\num_reg_reg[4] ),
        .out(out),
        .pr1_rd_req0(pr1_rd_req0),
        .pr1_rd_req_reg(pr1_rd_req_reg),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_tac_6 ol_tac
       (.ACK_H_reg_0(ACK_H_reg),
        .ACK_RX(ACK_RX),
        .CS_H_D1(CS_H_D1),
        .CS_H_INTERNAL(CS_H_INTERNAL),
        .CS_RX(CS_RX),
        .enb(enb),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_tac_7 ol_tac_nf
       (.ACK_H_reg_0(ACK_H_reg),
        .ACK_RX(ACK_RX),
        .ACK_RX_T(ACK_RX_T),
        .CS_H_D1_1(CS_H_D1_1),
        .CS_H_INTERNAL_3(CS_H_INTERNAL_3),
        .CS_RX_T(CS_RX_T),
        .\RD_DATA_RET_reg[18] (\RD_DATA_RET_reg[18] ),
        .\RD_DATA_RET_reg[18]_0 (\RD_DATA_RET_reg[18]_0 ),
        .doutb(doutb),
        .\gen_wr_a.gen_word_narrow.mem_reg_0 (\gen_wr_a.gen_word_narrow.mem_reg_0 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_0_0 (\gen_wr_a.gen_word_narrow.mem_reg_0_0 ),
        .host_req_reg_0(host_req_reg),
        .s_axi_aclk(s_axi_aclk));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_tac
   (ACK_S_SIG,
    CS_H_D1,
    ACK_H_reg_0,
    ACK_S_SIG_IMM,
    ACK_H_reg_1,
    addrb,
    pr1_rd_req_reg_0,
    pr1_rd_req_reg_1,
    \RUNNING_ID_LOC_reg_reg[2] ,
    \RUNNING_ID_LOC_reg_reg[0] ,
    pr1_rd_req_reg_2,
    s_axi_aclk,
    CS_H00_out,
    pr1_rd_req0,
    Bus2IP_RNW,
    host_req_reg_0,
    VALID_S_SIG_IMM,
    pr2_rd_req_reg_0,
    ACK_RX_T,
    ACK_RET_reg,
    \gen_wr_a.gen_word_narrow.mem_reg ,
    Q,
    \gen_wr_a.gen_word_narrow.mem_reg_0 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1 ,
    \gen_wr_a.gen_word_narrow.mem_reg_2 ,
    \gen_wr_a.gen_word_narrow.mem_reg_3 ,
    \gen_wr_a.gen_word_narrow.mem_reg_4 ,
    \gen_wr_a.gen_word_narrow.mem_reg_5 ,
    \gen_wr_a.gen_word_narrow.mem_reg_6 );
  output ACK_S_SIG;
  output CS_H_D1;
  output ACK_H_reg_0;
  output ACK_S_SIG_IMM;
  output ACK_H_reg_1;
  output [7:0]addrb;
  output pr1_rd_req_reg_0;
  output pr1_rd_req_reg_1;
  output \RUNNING_ID_LOC_reg_reg[2] ;
  output \RUNNING_ID_LOC_reg_reg[0] ;
  input pr1_rd_req_reg_2;
  input s_axi_aclk;
  input CS_H00_out;
  input pr1_rd_req0;
  input Bus2IP_RNW;
  input host_req_reg_0;
  input VALID_S_SIG_IMM;
  input pr2_rd_req_reg_0;
  input ACK_RX_T;
  input ACK_RET_reg;
  input [9:0]\gen_wr_a.gen_word_narrow.mem_reg ;
  input [8:0]Q;
  input [3:0]\gen_wr_a.gen_word_narrow.mem_reg_0 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_1 ;
  input [3:0]\gen_wr_a.gen_word_narrow.mem_reg_2 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_3 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_4 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_5 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_6 ;

  wire ACK_H_reg_0;
  wire ACK_H_reg_1;
  wire ACK_RET_reg;
  wire ACK_RX_T;
  wire ACK_S_SIG;
  wire ACK_S_SIG_IMM;
  wire Bus2IP_RNW;
  wire CS_H00_out;
  wire CS_H_D1;
  wire CS_H_INTERNAL;
  wire [8:0]Q;
  wire \RUNNING_ID_LOC_reg_reg[0] ;
  wire \RUNNING_ID_LOC_reg_reg[2] ;
  wire VALID_S_SIG_IMM;
  wire [1:0]addr_select;
  wire [7:0]addrb;
  wire [9:0]\gen_wr_a.gen_word_narrow.mem_reg ;
  wire [3:0]\gen_wr_a.gen_word_narrow.mem_reg_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1 ;
  wire [3:0]\gen_wr_a.gen_word_narrow.mem_reg_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_3 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_4 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_5 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_6 ;
  wire host_req;
  wire host_req_reg_0;
  wire pr1_rd_req0;
  wire pr1_rd_req_reg_0;
  wire pr1_rd_req_reg_1;
  wire pr1_rd_req_reg_2;
  wire pr2_rd_req0;
  wire pr2_rd_req_reg_0;
  wire s_axi_aclk;
  wire u_txxpm_2_i_16_n_0;
  wire u_txxpm_2_i_21_n_0;
  wire u_txxpm_2_i_23_n_0;
  wire u_txxpm_2_i_25_n_0;

  FDRE ACK_H_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(host_req),
        .Q(ACK_H_reg_0),
        .R(pr1_rd_req_reg_2));
  LUT3 #(
    .INIT(8'hFE)) 
    ACK_RET_i_2
       (.I0(ACK_RX_T),
        .I1(ACK_H_reg_0),
        .I2(ACK_RET_reg),
        .O(ACK_H_reg_1));
  FDRE ACK_S_T_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(addr_select[0]),
        .Q(ACK_S_SIG),
        .R(pr1_rd_req_reg_2));
  FDRE ACK_S_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(addr_select[1]),
        .Q(ACK_S_SIG_IMM),
        .R(pr1_rd_req_reg_2));
  FDRE CS_H_D1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(CS_H00_out),
        .Q(CS_H_D1),
        .R(pr1_rd_req_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'h40)) 
    host_req_i_1__0
       (.I0(CS_H_D1),
        .I1(Bus2IP_RNW),
        .I2(host_req_reg_0),
        .O(CS_H_INTERNAL));
  FDRE host_req_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(CS_H_INTERNAL),
        .Q(host_req),
        .R(pr1_rd_req_reg_2));
  FDRE pr1_rd_req_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pr1_rd_req0),
        .Q(addr_select[1]),
        .R(pr1_rd_req_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT5 #(
    .INIT(32'h00BF0000)) 
    pr2_rd_req_i_1
       (.I0(CS_H_D1),
        .I1(Bus2IP_RNW),
        .I2(host_req_reg_0),
        .I3(VALID_S_SIG_IMM),
        .I4(pr2_rd_req_reg_0),
        .O(pr2_rd_req0));
  FDRE pr2_rd_req_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pr2_rd_req0),
        .Q(addr_select[0]),
        .R(pr1_rd_req_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    u_txxpm_2_i_1
       (.I0(addr_select[1]),
        .I1(addr_select[0]),
        .I2(host_req),
        .O(pr1_rd_req_reg_0));
  LUT5 #(
    .INIT(32'hAACCF0AA)) 
    u_txxpm_2_i_10
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg [1]),
        .I1(Q[0]),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_0 [1]),
        .I3(addr_select[1]),
        .I4(addr_select[0]),
        .O(addrb[1]));
  LUT4 #(
    .INIT(16'hCA0C)) 
    u_txxpm_2_i_11
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_0 [0]),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg [0]),
        .I2(addr_select[0]),
        .I3(addr_select[1]),
        .O(addrb[0]));
  LUT4 #(
    .INIT(16'hC0AC)) 
    u_txxpm_2_i_12
       (.I0(Q[8]),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg [9]),
        .I2(addr_select[0]),
        .I3(addr_select[1]),
        .O(\RUNNING_ID_LOC_reg_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT2 #(
    .INIT(4'h2)) 
    u_txxpm_2_i_15
       (.I0(addr_select[1]),
        .I1(addr_select[0]),
        .O(pr1_rd_req_reg_1));
  LUT4 #(
    .INIT(16'hC0AC)) 
    u_txxpm_2_i_16
       (.I0(Q[7]),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg [8]),
        .I2(addr_select[0]),
        .I3(addr_select[1]),
        .O(u_txxpm_2_i_16_n_0));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT4 #(
    .INIT(16'hC0AC)) 
    u_txxpm_2_i_18
       (.I0(Q[6]),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg [7]),
        .I2(addr_select[0]),
        .I3(addr_select[1]),
        .O(\RUNNING_ID_LOC_reg_reg[2] ));
  LUT4 #(
    .INIT(16'hC0AC)) 
    u_txxpm_2_i_21
       (.I0(Q[5]),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg [6]),
        .I2(addr_select[0]),
        .I3(addr_select[1]),
        .O(u_txxpm_2_i_21_n_0));
  LUT4 #(
    .INIT(16'hC0AC)) 
    u_txxpm_2_i_23
       (.I0(Q[4]),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg [5]),
        .I2(addr_select[0]),
        .I3(addr_select[1]),
        .O(u_txxpm_2_i_23_n_0));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT4 #(
    .INIT(16'hC0AC)) 
    u_txxpm_2_i_25
       (.I0(Q[3]),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg [4]),
        .I2(addr_select[0]),
        .I3(addr_select[1]),
        .O(u_txxpm_2_i_25_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAAAFEEEAAAA)) 
    u_txxpm_2_i_3
       (.I0(u_txxpm_2_i_16_n_0),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg_6 ),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_2 [3]),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1 ),
        .I4(addr_select[1]),
        .I5(addr_select[0]),
        .O(addrb[7]));
  LUT6 #(
    .INIT(64'hAAAAAAAAFEEEAAAA)) 
    u_txxpm_2_i_5
       (.I0(u_txxpm_2_i_21_n_0),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg_5 ),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_2 [2]),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1 ),
        .I4(addr_select[1]),
        .I5(addr_select[0]),
        .O(addrb[6]));
  LUT6 #(
    .INIT(64'hAAAAAAAAFEEEAAAA)) 
    u_txxpm_2_i_6
       (.I0(u_txxpm_2_i_23_n_0),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg_4 ),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_2 [1]),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1 ),
        .I4(addr_select[1]),
        .I5(addr_select[0]),
        .O(addrb[5]));
  LUT6 #(
    .INIT(64'hAEAAAEAEAEAAAAAA)) 
    u_txxpm_2_i_7
       (.I0(u_txxpm_2_i_25_n_0),
        .I1(addr_select[1]),
        .I2(addr_select[0]),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1 ),
        .I4(\gen_wr_a.gen_word_narrow.mem_reg_2 [0]),
        .I5(\gen_wr_a.gen_word_narrow.mem_reg_3 ),
        .O(addrb[4]));
  LUT5 #(
    .INIT(32'hAACCF0AA)) 
    u_txxpm_2_i_8
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg [3]),
        .I1(Q[2]),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_0 [3]),
        .I3(addr_select[1]),
        .I4(addr_select[0]),
        .O(addrb[3]));
  LUT5 #(
    .INIT(32'hAACCF0AA)) 
    u_txxpm_2_i_9
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg [2]),
        .I1(Q[1]),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_0 [2]),
        .I3(addr_select[1]),
        .I4(addr_select[0]),
        .O(addrb[2]));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_can_ol_tac" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_tac_4
   (ACK_H_reg_0,
    wea,
    D,
    ACK_H_reg_1,
    \IC_REG_BRPR_I_reg[1] ,
    \ADDR_RET_reg[12] ,
    ACK_H_reg_2,
    ACK_H_reg_3,
    ACK_H_reg_4,
    \IC_REG_ECR_I_reg[8] ,
    \gen_wr_a.gen_word_narrow.mem_reg_1 ,
    ACK_H_reg_5,
    \gen_wr_a.gen_word_narrow.mem_reg ,
    \gen_wr_a.gen_word_narrow.mem_reg_0 ,
    \gen_wr_a.gen_word_narrow.mem_reg_2 ,
    \gen_wr_a.gen_word_narrow.mem_reg_3 ,
    \gen_wr_a.gen_word_narrow.mem_reg_4 ,
    \gen_wr_a.gen_word_narrow.mem_reg_5 ,
    \gen_wr_a.gen_word_narrow.mem_reg_6 ,
    \gen_wr_a.gen_word_narrow.mem_reg_7 ,
    \gen_wr_a.gen_word_narrow.mem_reg_8 ,
    \gen_wr_a.gen_word_narrow.mem_reg_9 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1_0 ,
    \gen_wr_a.gen_word_narrow.mem_reg_10 ,
    host_wr_req_reg_0,
    CS_H0,
    s_axi_aclk,
    \RD_DATA_RET_reg[19] ,
    \RD_DATA_RET_reg[19]_0 ,
    \RD_DATA_RET_reg[19]_1 ,
    \RD_DATA_RET_reg[0] ,
    \RD_DATA_RET_reg[18] ,
    \RD_DATA_RET_reg[18]_0 ,
    \RD_DATA_RET_reg[18]_1 ,
    \RD_DATA_RET_reg[25] ,
    \RD_DATA_RET_reg[25]_0 ,
    \RD_DATA_RET_reg[25]_1 ,
    ACK_RX_T,
    \RD_DATA_RET_reg[1] ,
    doutb,
    \RD_DATA_RET_reg[24] ,
    \RD_DATA_RET_reg[24]_0 ,
    \RD_DATA_RET_reg[24]_1 ,
    \RD_DATA_RET_reg[15] ,
    \RD_DATA_RET_reg[15]_0 ,
    \RD_DATA_RET_reg[15]_1 ,
    \RD_DATA_RET_reg[12] ,
    \RD_DATA_RET_reg[12]_0 ,
    \RD_DATA_RET_reg[13] ,
    \RD_DATA_RET_reg[12]_1 ,
    \RD_DATA_RET_reg[11] ,
    \RD_DATA_RET_reg[10] ,
    IC_REG_TRR_I,
    \RD_DATA_RET_reg[9] ,
    \RD_DATA_RET_reg[7] ,
    \RD_DATA_RET_reg[6] ,
    \RD_DATA_RET_reg[5] ,
    \RD_DATA_RET_reg[4] ,
    \RD_DATA_RET_reg[3] ,
    \RD_DATA_RET_reg[2] ,
    \RD_DATA_RET_reg[1]_0 ,
    \RD_DATA_RET_reg[1]_1 ,
    ACK_CR,
    Bus2IP_RNW,
    host_wr_req_reg_1,
    \RD_DATA_RET_reg[0]_0 ,
    ACK_RX,
    \RD_DATA_RET_reg[18]_2 );
  output ACK_H_reg_0;
  output [0:0]wea;
  output [13:0]D;
  output ACK_H_reg_1;
  output \IC_REG_BRPR_I_reg[1] ;
  output \ADDR_RET_reg[12] ;
  output ACK_H_reg_2;
  output ACK_H_reg_3;
  output ACK_H_reg_4;
  output \IC_REG_ECR_I_reg[8] ;
  output \gen_wr_a.gen_word_narrow.mem_reg_1 ;
  output ACK_H_reg_5;
  output \gen_wr_a.gen_word_narrow.mem_reg ;
  output \gen_wr_a.gen_word_narrow.mem_reg_0 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_2 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_3 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_4 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_5 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_6 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_7 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_8 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_9 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_1_0 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_10 ;
  input host_wr_req_reg_0;
  input CS_H0;
  input s_axi_aclk;
  input \RD_DATA_RET_reg[19] ;
  input \RD_DATA_RET_reg[19]_0 ;
  input \RD_DATA_RET_reg[19]_1 ;
  input [31:0]\RD_DATA_RET_reg[0] ;
  input \RD_DATA_RET_reg[18] ;
  input \RD_DATA_RET_reg[18]_0 ;
  input \RD_DATA_RET_reg[18]_1 ;
  input \RD_DATA_RET_reg[25] ;
  input \RD_DATA_RET_reg[25]_0 ;
  input [0:0]\RD_DATA_RET_reg[25]_1 ;
  input ACK_RX_T;
  input \RD_DATA_RET_reg[1] ;
  input [28:0]doutb;
  input [3:0]\RD_DATA_RET_reg[24] ;
  input \RD_DATA_RET_reg[24]_0 ;
  input \RD_DATA_RET_reg[24]_1 ;
  input [0:0]\RD_DATA_RET_reg[15] ;
  input \RD_DATA_RET_reg[15]_0 ;
  input \RD_DATA_RET_reg[15]_1 ;
  input [1:0]\RD_DATA_RET_reg[12] ;
  input \RD_DATA_RET_reg[12]_0 ;
  input \RD_DATA_RET_reg[13] ;
  input \RD_DATA_RET_reg[12]_1 ;
  input \RD_DATA_RET_reg[11] ;
  input \RD_DATA_RET_reg[10] ;
  input [0:0]IC_REG_TRR_I;
  input \RD_DATA_RET_reg[9] ;
  input \RD_DATA_RET_reg[7] ;
  input \RD_DATA_RET_reg[6] ;
  input \RD_DATA_RET_reg[5] ;
  input \RD_DATA_RET_reg[4] ;
  input \RD_DATA_RET_reg[3] ;
  input \RD_DATA_RET_reg[2] ;
  input \RD_DATA_RET_reg[1]_0 ;
  input \RD_DATA_RET_reg[1]_1 ;
  input ACK_CR;
  input Bus2IP_RNW;
  input host_wr_req_reg_1;
  input [29:0]\RD_DATA_RET_reg[0]_0 ;
  input ACK_RX;
  input \RD_DATA_RET_reg[18]_2 ;

  wire ACK_CR;
  wire ACK_H_reg_0;
  wire ACK_H_reg_1;
  wire ACK_H_reg_2;
  wire ACK_H_reg_3;
  wire ACK_H_reg_4;
  wire ACK_H_reg_5;
  wire ACK_RX;
  wire ACK_RX_T;
  wire \ADDR_RET_reg[12] ;
  wire Bus2IP_RNW;
  wire CS_H0;
  wire CS_H_D1;
  wire CS_H_INTERNAL;
  wire [13:0]D;
  wire \IC_REG_BRPR_I_reg[1] ;
  wire \IC_REG_ECR_I_reg[8] ;
  wire [0:0]IC_REG_TRR_I;
  wire \RD_DATA_RET[0]_i_14_n_0 ;
  wire \RD_DATA_RET[10]_i_10_n_0 ;
  wire \RD_DATA_RET[11]_i_2_n_0 ;
  wire \RD_DATA_RET[12]_i_2_n_0 ;
  wire \RD_DATA_RET[13]_i_2_n_0 ;
  wire \RD_DATA_RET[15]_i_2_n_0 ;
  wire \RD_DATA_RET[18]_i_6_n_0 ;
  wire \RD_DATA_RET[1]_i_2_n_0 ;
  wire \RD_DATA_RET[24]_i_5_n_0 ;
  wire \RD_DATA_RET[25]_i_4_n_0 ;
  wire \RD_DATA_RET[27]_i_8_n_0 ;
  wire \RD_DATA_RET[28]_i_6_n_0 ;
  wire \RD_DATA_RET[29]_i_6_n_0 ;
  wire \RD_DATA_RET[2]_i_2_n_0 ;
  wire \RD_DATA_RET[3]_i_2_n_0 ;
  wire \RD_DATA_RET[4]_i_2_n_0 ;
  wire \RD_DATA_RET[5]_i_2_n_0 ;
  wire \RD_DATA_RET[6]_i_2_n_0 ;
  wire \RD_DATA_RET[7]_i_2_n_0 ;
  wire \RD_DATA_RET[9]_i_2_n_0 ;
  wire [31:0]\RD_DATA_RET_reg[0] ;
  wire [29:0]\RD_DATA_RET_reg[0]_0 ;
  wire \RD_DATA_RET_reg[10] ;
  wire \RD_DATA_RET_reg[11] ;
  wire [1:0]\RD_DATA_RET_reg[12] ;
  wire \RD_DATA_RET_reg[12]_0 ;
  wire \RD_DATA_RET_reg[12]_1 ;
  wire \RD_DATA_RET_reg[13] ;
  wire [0:0]\RD_DATA_RET_reg[15] ;
  wire \RD_DATA_RET_reg[15]_0 ;
  wire \RD_DATA_RET_reg[15]_1 ;
  wire \RD_DATA_RET_reg[18] ;
  wire \RD_DATA_RET_reg[18]_0 ;
  wire \RD_DATA_RET_reg[18]_1 ;
  wire \RD_DATA_RET_reg[18]_2 ;
  wire \RD_DATA_RET_reg[19] ;
  wire \RD_DATA_RET_reg[19]_0 ;
  wire \RD_DATA_RET_reg[19]_1 ;
  wire \RD_DATA_RET_reg[1] ;
  wire \RD_DATA_RET_reg[1]_0 ;
  wire \RD_DATA_RET_reg[1]_1 ;
  wire [3:0]\RD_DATA_RET_reg[24] ;
  wire \RD_DATA_RET_reg[24]_0 ;
  wire \RD_DATA_RET_reg[24]_1 ;
  wire \RD_DATA_RET_reg[25] ;
  wire \RD_DATA_RET_reg[25]_0 ;
  wire [0:0]\RD_DATA_RET_reg[25]_1 ;
  wire \RD_DATA_RET_reg[2] ;
  wire \RD_DATA_RET_reg[3] ;
  wire \RD_DATA_RET_reg[4] ;
  wire \RD_DATA_RET_reg[5] ;
  wire \RD_DATA_RET_reg[6] ;
  wire \RD_DATA_RET_reg[7] ;
  wire \RD_DATA_RET_reg[9] ;
  wire [28:0]doutb;
  wire \gen_wr_a.gen_word_narrow.mem_reg ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_10 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_3 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_4 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_5 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_6 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_7 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_8 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_9 ;
  wire host_wr_req_reg_0;
  wire host_wr_req_reg_1;
  wire s_axi_aclk;
  wire [0:0]wea;

  FDRE ACK_H_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wea),
        .Q(ACK_H_reg_0),
        .R(host_wr_req_reg_0));
  FDRE CS_H_D1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(CS_H0),
        .Q(CS_H_D1),
        .R(host_wr_req_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \RD_DATA_RET[0]_i_14 
       (.I0(\RD_DATA_RET_reg[1] ),
        .I1(ACK_RX),
        .O(\RD_DATA_RET[0]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \RD_DATA_RET[0]_i_5 
       (.I0(ACK_H_reg_1),
        .I1(\RD_DATA_RET_reg[1]_1 ),
        .O(\ADDR_RET_reg[12] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \RD_DATA_RET[0]_i_6 
       (.I0(\RD_DATA_RET[18]_i_6_n_0 ),
        .I1(\RD_DATA_RET_reg[0] [31]),
        .I2(\RD_DATA_RET[0]_i_14_n_0 ),
        .I3(\RD_DATA_RET_reg[0]_0 [29]),
        .I4(doutb[28]),
        .I5(ACK_H_reg_5),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_10 ));
  LUT6 #(
    .INIT(64'hF800F800F8008800)) 
    \RD_DATA_RET[10]_i_10 
       (.I0(\RD_DATA_RET_reg[0]_0 [19]),
        .I1(ACK_RX),
        .I2(\RD_DATA_RET_reg[0] [21]),
        .I3(\RD_DATA_RET_reg[1] ),
        .I4(\RD_DATA_RET_reg[18]_2 ),
        .I5(ACK_H_reg_0),
        .O(\RD_DATA_RET[10]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFFF8F8F8F8F8F8F8)) 
    \RD_DATA_RET[10]_i_5 
       (.I0(ACK_H_reg_5),
        .I1(doutb[19]),
        .I2(\RD_DATA_RET[10]_i_10_n_0 ),
        .I3(\ADDR_RET_reg[12] ),
        .I4(\RD_DATA_RET_reg[10] ),
        .I5(IC_REG_TRR_I),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_1 ));
  LUT6 #(
    .INIT(64'hFFFFFF80FF80FF80)) 
    \RD_DATA_RET[11]_i_1 
       (.I0(ACK_RX_T),
        .I1(\RD_DATA_RET_reg[1] ),
        .I2(doutb[18]),
        .I3(\RD_DATA_RET[11]_i_2_n_0 ),
        .I4(\RD_DATA_RET_reg[11] ),
        .I5(\ADDR_RET_reg[12] ),
        .O(D[5]));
  LUT6 #(
    .INIT(64'hF800F800F8008800)) 
    \RD_DATA_RET[11]_i_2 
       (.I0(\RD_DATA_RET_reg[0]_0 [18]),
        .I1(ACK_RX),
        .I2(\RD_DATA_RET_reg[0] [20]),
        .I3(\RD_DATA_RET_reg[1] ),
        .I4(\RD_DATA_RET_reg[18]_2 ),
        .I5(ACK_H_reg_0),
        .O(\RD_DATA_RET[11]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAAAAA)) 
    \RD_DATA_RET[12]_i_1 
       (.I0(\RD_DATA_RET[12]_i_2_n_0 ),
        .I1(\RD_DATA_RET_reg[12] [1]),
        .I2(\RD_DATA_RET_reg[12]_0 ),
        .I3(\RD_DATA_RET_reg[12]_1 ),
        .I4(\ADDR_RET_reg[12] ),
        .O(D[4]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \RD_DATA_RET[12]_i_2 
       (.I0(\RD_DATA_RET[18]_i_6_n_0 ),
        .I1(\RD_DATA_RET_reg[0] [19]),
        .I2(\RD_DATA_RET[0]_i_14_n_0 ),
        .I3(\RD_DATA_RET_reg[0]_0 [17]),
        .I4(doutb[17]),
        .I5(ACK_H_reg_5),
        .O(\RD_DATA_RET[12]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAAAAA)) 
    \RD_DATA_RET[13]_i_1 
       (.I0(\RD_DATA_RET[13]_i_2_n_0 ),
        .I1(\RD_DATA_RET_reg[12] [0]),
        .I2(\RD_DATA_RET_reg[12]_0 ),
        .I3(\RD_DATA_RET_reg[13] ),
        .I4(\ADDR_RET_reg[12] ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \RD_DATA_RET[13]_i_2 
       (.I0(\RD_DATA_RET[18]_i_6_n_0 ),
        .I1(\RD_DATA_RET_reg[0] [18]),
        .I2(\RD_DATA_RET[0]_i_14_n_0 ),
        .I3(\RD_DATA_RET_reg[0]_0 [16]),
        .I4(doutb[16]),
        .I5(ACK_H_reg_5),
        .O(\RD_DATA_RET[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \RD_DATA_RET[14]_i_2 
       (.I0(\RD_DATA_RET[18]_i_6_n_0 ),
        .I1(\RD_DATA_RET_reg[0] [17]),
        .I2(\RD_DATA_RET[0]_i_14_n_0 ),
        .I3(\RD_DATA_RET_reg[0]_0 [15]),
        .I4(doutb[15]),
        .I5(ACK_H_reg_5),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_9 ));
  LUT5 #(
    .INIT(32'hFFEAAAAA)) 
    \RD_DATA_RET[15]_i_1 
       (.I0(\RD_DATA_RET[15]_i_2_n_0 ),
        .I1(\RD_DATA_RET_reg[15] ),
        .I2(\RD_DATA_RET_reg[15]_0 ),
        .I3(\RD_DATA_RET_reg[15]_1 ),
        .I4(\ADDR_RET_reg[12] ),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \RD_DATA_RET[15]_i_2 
       (.I0(\RD_DATA_RET[18]_i_6_n_0 ),
        .I1(\RD_DATA_RET_reg[0] [16]),
        .I2(\RD_DATA_RET[0]_i_14_n_0 ),
        .I3(\RD_DATA_RET_reg[0]_0 [14]),
        .I4(doutb[14]),
        .I5(ACK_H_reg_5),
        .O(\RD_DATA_RET[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \RD_DATA_RET[16]_i_7 
       (.I0(\RD_DATA_RET[18]_i_6_n_0 ),
        .I1(\RD_DATA_RET_reg[0] [15]),
        .I2(\RD_DATA_RET[0]_i_14_n_0 ),
        .I3(\RD_DATA_RET_reg[0]_0 [13]),
        .I4(doutb[13]),
        .I5(ACK_H_reg_5),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_8 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \RD_DATA_RET[17]_i_5 
       (.I0(\RD_DATA_RET[18]_i_6_n_0 ),
        .I1(\RD_DATA_RET_reg[0] [14]),
        .I2(\RD_DATA_RET[0]_i_14_n_0 ),
        .I3(\RD_DATA_RET_reg[0]_0 [12]),
        .I4(doutb[12]),
        .I5(ACK_H_reg_5),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_7 ));
  LUT6 #(
    .INIT(64'hFFFFEEEAEEEAEEEA)) 
    \RD_DATA_RET[18]_i_1 
       (.I0(\RD_DATA_RET_reg[18] ),
        .I1(ACK_H_reg_1),
        .I2(\RD_DATA_RET_reg[18]_0 ),
        .I3(\RD_DATA_RET_reg[18]_1 ),
        .I4(\RD_DATA_RET[18]_i_6_n_0 ),
        .I5(\RD_DATA_RET_reg[0] [13]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \RD_DATA_RET[18]_i_3 
       (.I0(\RD_DATA_RET_reg[1] ),
        .I1(ACK_CR),
        .O(ACK_H_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \RD_DATA_RET[18]_i_6 
       (.I0(\RD_DATA_RET_reg[1] ),
        .I1(\RD_DATA_RET_reg[18]_2 ),
        .I2(ACK_H_reg_0),
        .O(\RD_DATA_RET[18]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFEEEAEEEAEEEA)) 
    \RD_DATA_RET[19]_i_1 
       (.I0(\RD_DATA_RET_reg[19] ),
        .I1(ACK_H_reg_1),
        .I2(\RD_DATA_RET_reg[19]_0 ),
        .I3(\RD_DATA_RET_reg[19]_1 ),
        .I4(\RD_DATA_RET[18]_i_6_n_0 ),
        .I5(\RD_DATA_RET_reg[0] [12]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFFFF80FF80FF80)) 
    \RD_DATA_RET[1]_i_1 
       (.I0(ACK_RX_T),
        .I1(\RD_DATA_RET_reg[1] ),
        .I2(doutb[27]),
        .I3(\RD_DATA_RET[1]_i_2_n_0 ),
        .I4(\RD_DATA_RET_reg[1]_0 ),
        .I5(\ADDR_RET_reg[12] ),
        .O(D[13]));
  LUT6 #(
    .INIT(64'hF800F800F8008800)) 
    \RD_DATA_RET[1]_i_2 
       (.I0(\RD_DATA_RET_reg[0]_0 [28]),
        .I1(ACK_RX),
        .I2(\RD_DATA_RET_reg[0] [30]),
        .I3(\RD_DATA_RET_reg[1] ),
        .I4(\RD_DATA_RET_reg[18]_2 ),
        .I5(ACK_H_reg_0),
        .O(\RD_DATA_RET[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \RD_DATA_RET[20]_i_2 
       (.I0(\RD_DATA_RET[18]_i_6_n_0 ),
        .I1(\RD_DATA_RET_reg[0] [11]),
        .I2(\RD_DATA_RET[0]_i_14_n_0 ),
        .I3(\RD_DATA_RET_reg[0]_0 [11]),
        .I4(doutb[11]),
        .I5(ACK_H_reg_5),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_6 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \RD_DATA_RET[21]_i_2 
       (.I0(\RD_DATA_RET[18]_i_6_n_0 ),
        .I1(\RD_DATA_RET_reg[0] [10]),
        .I2(\RD_DATA_RET[0]_i_14_n_0 ),
        .I3(\RD_DATA_RET_reg[0]_0 [10]),
        .I4(doutb[10]),
        .I5(ACK_H_reg_5),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_5 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \RD_DATA_RET[22]_i_2 
       (.I0(\RD_DATA_RET[18]_i_6_n_0 ),
        .I1(\RD_DATA_RET_reg[0] [9]),
        .I2(\RD_DATA_RET[0]_i_14_n_0 ),
        .I3(\RD_DATA_RET_reg[0]_0 [9]),
        .I4(doutb[9]),
        .I5(ACK_H_reg_5),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_4 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \RD_DATA_RET[23]_i_2 
       (.I0(\RD_DATA_RET[18]_i_6_n_0 ),
        .I1(\RD_DATA_RET_reg[0] [8]),
        .I2(\RD_DATA_RET[0]_i_14_n_0 ),
        .I3(\RD_DATA_RET_reg[0]_0 [8]),
        .I4(doutb[8]),
        .I5(ACK_H_reg_5),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_3 ));
  LUT5 #(
    .INIT(32'hFFF8F8F8)) 
    \RD_DATA_RET[24]_i_2 
       (.I0(\ADDR_RET_reg[12] ),
        .I1(\RD_DATA_RET_reg[24]_1 ),
        .I2(\RD_DATA_RET[24]_i_5_n_0 ),
        .I3(\RD_DATA_RET_reg[24] [3]),
        .I4(\RD_DATA_RET_reg[24]_0 ),
        .O(\IC_REG_ECR_I_reg[8] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \RD_DATA_RET[24]_i_5 
       (.I0(\RD_DATA_RET[18]_i_6_n_0 ),
        .I1(\RD_DATA_RET_reg[0] [7]),
        .I2(\RD_DATA_RET[0]_i_14_n_0 ),
        .I3(\RD_DATA_RET_reg[0]_0 [7]),
        .I4(doutb[7]),
        .I5(ACK_H_reg_5),
        .O(\RD_DATA_RET[24]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \RD_DATA_RET[25]_i_2 
       (.I0(\ADDR_RET_reg[12] ),
        .I1(\RD_DATA_RET_reg[25] ),
        .I2(\RD_DATA_RET_reg[25]_0 ),
        .I3(\RD_DATA_RET_reg[25]_1 ),
        .I4(\RD_DATA_RET[25]_i_4_n_0 ),
        .O(\IC_REG_BRPR_I_reg[1] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \RD_DATA_RET[25]_i_4 
       (.I0(\RD_DATA_RET[18]_i_6_n_0 ),
        .I1(\RD_DATA_RET_reg[0] [6]),
        .I2(\RD_DATA_RET[0]_i_14_n_0 ),
        .I3(\RD_DATA_RET_reg[0]_0 [6]),
        .I4(doutb[6]),
        .I5(ACK_H_reg_5),
        .O(\RD_DATA_RET[25]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \RD_DATA_RET[26]_i_4 
       (.I0(\RD_DATA_RET[18]_i_6_n_0 ),
        .I1(\RD_DATA_RET_reg[0] [5]),
        .I2(\RD_DATA_RET[0]_i_14_n_0 ),
        .I3(\RD_DATA_RET_reg[0]_0 [5]),
        .I4(doutb[5]),
        .I5(ACK_H_reg_5),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_2 ));
  LUT6 #(
    .INIT(64'hFFFFFF80FF80FF80)) 
    \RD_DATA_RET[27]_i_5 
       (.I0(ACK_RX_T),
        .I1(\RD_DATA_RET_reg[1] ),
        .I2(doutb[4]),
        .I3(\RD_DATA_RET[27]_i_8_n_0 ),
        .I4(\RD_DATA_RET_reg[24] [2]),
        .I5(\RD_DATA_RET_reg[24]_0 ),
        .O(ACK_H_reg_4));
  LUT6 #(
    .INIT(64'hF800F800F8008800)) 
    \RD_DATA_RET[27]_i_8 
       (.I0(\RD_DATA_RET_reg[0]_0 [4]),
        .I1(ACK_RX),
        .I2(\RD_DATA_RET_reg[0] [4]),
        .I3(\RD_DATA_RET_reg[1] ),
        .I4(\RD_DATA_RET_reg[18]_2 ),
        .I5(ACK_H_reg_0),
        .O(\RD_DATA_RET[27]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF80FF80FF80)) 
    \RD_DATA_RET[28]_i_4 
       (.I0(ACK_RX_T),
        .I1(\RD_DATA_RET_reg[1] ),
        .I2(doutb[3]),
        .I3(\RD_DATA_RET[28]_i_6_n_0 ),
        .I4(\RD_DATA_RET_reg[24] [1]),
        .I5(\RD_DATA_RET_reg[24]_0 ),
        .O(ACK_H_reg_3));
  LUT6 #(
    .INIT(64'hF800F800F8008800)) 
    \RD_DATA_RET[28]_i_6 
       (.I0(\RD_DATA_RET_reg[0]_0 [3]),
        .I1(ACK_RX),
        .I2(\RD_DATA_RET_reg[0] [3]),
        .I3(\RD_DATA_RET_reg[1] ),
        .I4(\RD_DATA_RET_reg[18]_2 ),
        .I5(ACK_H_reg_0),
        .O(\RD_DATA_RET[28]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF80FF80FF80)) 
    \RD_DATA_RET[29]_i_4 
       (.I0(ACK_RX_T),
        .I1(\RD_DATA_RET_reg[1] ),
        .I2(doutb[2]),
        .I3(\RD_DATA_RET[29]_i_6_n_0 ),
        .I4(\RD_DATA_RET_reg[24] [0]),
        .I5(\RD_DATA_RET_reg[24]_0 ),
        .O(ACK_H_reg_2));
  LUT6 #(
    .INIT(64'hF800F800F8008800)) 
    \RD_DATA_RET[29]_i_6 
       (.I0(\RD_DATA_RET_reg[0]_0 [2]),
        .I1(ACK_RX),
        .I2(\RD_DATA_RET_reg[0] [2]),
        .I3(\RD_DATA_RET_reg[1] ),
        .I4(\RD_DATA_RET_reg[18]_2 ),
        .I5(ACK_H_reg_0),
        .O(\RD_DATA_RET[29]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF80FF80FF80)) 
    \RD_DATA_RET[2]_i_1 
       (.I0(ACK_RX_T),
        .I1(\RD_DATA_RET_reg[1] ),
        .I2(doutb[26]),
        .I3(\RD_DATA_RET[2]_i_2_n_0 ),
        .I4(\RD_DATA_RET_reg[2] ),
        .I5(\ADDR_RET_reg[12] ),
        .O(D[12]));
  LUT6 #(
    .INIT(64'hF800F800F8008800)) 
    \RD_DATA_RET[2]_i_2 
       (.I0(\RD_DATA_RET_reg[0]_0 [27]),
        .I1(ACK_RX),
        .I2(\RD_DATA_RET_reg[0] [29]),
        .I3(\RD_DATA_RET_reg[1] ),
        .I4(\RD_DATA_RET_reg[18]_2 ),
        .I5(ACK_H_reg_0),
        .O(\RD_DATA_RET[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \RD_DATA_RET[30]_i_7 
       (.I0(\RD_DATA_RET[18]_i_6_n_0 ),
        .I1(\RD_DATA_RET_reg[0] [1]),
        .I2(\RD_DATA_RET[0]_i_14_n_0 ),
        .I3(\RD_DATA_RET_reg[0]_0 [1]),
        .I4(doutb[1]),
        .I5(ACK_H_reg_5),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \RD_DATA_RET[31]_i_6 
       (.I0(\RD_DATA_RET[18]_i_6_n_0 ),
        .I1(\RD_DATA_RET_reg[0] [0]),
        .I2(\RD_DATA_RET[0]_i_14_n_0 ),
        .I3(\RD_DATA_RET_reg[0]_0 [0]),
        .I4(doutb[0]),
        .I5(ACK_H_reg_5),
        .O(\gen_wr_a.gen_word_narrow.mem_reg ));
  LUT6 #(
    .INIT(64'hFFFFFF80FF80FF80)) 
    \RD_DATA_RET[3]_i_1 
       (.I0(ACK_RX_T),
        .I1(\RD_DATA_RET_reg[1] ),
        .I2(doutb[25]),
        .I3(\RD_DATA_RET[3]_i_2_n_0 ),
        .I4(\RD_DATA_RET_reg[3] ),
        .I5(\ADDR_RET_reg[12] ),
        .O(D[11]));
  LUT6 #(
    .INIT(64'hF800F800F8008800)) 
    \RD_DATA_RET[3]_i_2 
       (.I0(\RD_DATA_RET_reg[0]_0 [26]),
        .I1(ACK_RX),
        .I2(\RD_DATA_RET_reg[0] [28]),
        .I3(\RD_DATA_RET_reg[1] ),
        .I4(\RD_DATA_RET_reg[18]_2 ),
        .I5(ACK_H_reg_0),
        .O(\RD_DATA_RET[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF80FF80FF80)) 
    \RD_DATA_RET[4]_i_1 
       (.I0(ACK_RX_T),
        .I1(\RD_DATA_RET_reg[1] ),
        .I2(doutb[24]),
        .I3(\RD_DATA_RET[4]_i_2_n_0 ),
        .I4(\RD_DATA_RET_reg[4] ),
        .I5(\ADDR_RET_reg[12] ),
        .O(D[10]));
  LUT6 #(
    .INIT(64'hF800F800F8008800)) 
    \RD_DATA_RET[4]_i_2 
       (.I0(\RD_DATA_RET_reg[0]_0 [25]),
        .I1(ACK_RX),
        .I2(\RD_DATA_RET_reg[0] [27]),
        .I3(\RD_DATA_RET_reg[1] ),
        .I4(\RD_DATA_RET_reg[18]_2 ),
        .I5(ACK_H_reg_0),
        .O(\RD_DATA_RET[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF80FF80FF80)) 
    \RD_DATA_RET[5]_i_1 
       (.I0(ACK_RX_T),
        .I1(\RD_DATA_RET_reg[1] ),
        .I2(doutb[23]),
        .I3(\RD_DATA_RET[5]_i_2_n_0 ),
        .I4(\RD_DATA_RET_reg[5] ),
        .I5(\ADDR_RET_reg[12] ),
        .O(D[9]));
  LUT6 #(
    .INIT(64'hF800F800F8008800)) 
    \RD_DATA_RET[5]_i_2 
       (.I0(\RD_DATA_RET_reg[0]_0 [24]),
        .I1(ACK_RX),
        .I2(\RD_DATA_RET_reg[0] [26]),
        .I3(\RD_DATA_RET_reg[1] ),
        .I4(\RD_DATA_RET_reg[18]_2 ),
        .I5(ACK_H_reg_0),
        .O(\RD_DATA_RET[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF80FF80FF80)) 
    \RD_DATA_RET[6]_i_1 
       (.I0(ACK_RX_T),
        .I1(\RD_DATA_RET_reg[1] ),
        .I2(doutb[22]),
        .I3(\RD_DATA_RET[6]_i_2_n_0 ),
        .I4(\RD_DATA_RET_reg[6] ),
        .I5(\ADDR_RET_reg[12] ),
        .O(D[8]));
  LUT6 #(
    .INIT(64'hF800F800F8008800)) 
    \RD_DATA_RET[6]_i_2 
       (.I0(\RD_DATA_RET_reg[0]_0 [23]),
        .I1(ACK_RX),
        .I2(\RD_DATA_RET_reg[0] [25]),
        .I3(\RD_DATA_RET_reg[1] ),
        .I4(\RD_DATA_RET_reg[18]_2 ),
        .I5(ACK_H_reg_0),
        .O(\RD_DATA_RET[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF80FF80FF80)) 
    \RD_DATA_RET[7]_i_1 
       (.I0(ACK_RX_T),
        .I1(\RD_DATA_RET_reg[1] ),
        .I2(doutb[21]),
        .I3(\RD_DATA_RET[7]_i_2_n_0 ),
        .I4(\RD_DATA_RET_reg[7] ),
        .I5(\ADDR_RET_reg[12] ),
        .O(D[7]));
  LUT6 #(
    .INIT(64'hF800F800F8008800)) 
    \RD_DATA_RET[7]_i_2 
       (.I0(\RD_DATA_RET_reg[0]_0 [22]),
        .I1(ACK_RX),
        .I2(\RD_DATA_RET_reg[0] [24]),
        .I3(\RD_DATA_RET_reg[1] ),
        .I4(\RD_DATA_RET_reg[18]_2 ),
        .I5(ACK_H_reg_0),
        .O(\RD_DATA_RET[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF800F800F8008800)) 
    \RD_DATA_RET[8]_i_4 
       (.I0(\RD_DATA_RET_reg[0]_0 [21]),
        .I1(ACK_RX),
        .I2(\RD_DATA_RET_reg[0] [23]),
        .I3(\RD_DATA_RET_reg[1] ),
        .I4(\RD_DATA_RET_reg[18]_2 ),
        .I5(ACK_H_reg_0),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_1_0 ));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \RD_DATA_RET[8]_i_5 
       (.I0(\RD_DATA_RET_reg[1] ),
        .I1(ACK_RX_T),
        .O(ACK_H_reg_5));
  LUT6 #(
    .INIT(64'hFFFFFF80FF80FF80)) 
    \RD_DATA_RET[9]_i_1 
       (.I0(ACK_RX_T),
        .I1(\RD_DATA_RET_reg[1] ),
        .I2(doutb[20]),
        .I3(\RD_DATA_RET[9]_i_2_n_0 ),
        .I4(\RD_DATA_RET_reg[9] ),
        .I5(\ADDR_RET_reg[12] ),
        .O(D[6]));
  LUT6 #(
    .INIT(64'hF800F800F8008800)) 
    \RD_DATA_RET[9]_i_2 
       (.I0(\RD_DATA_RET_reg[0]_0 [20]),
        .I1(ACK_RX),
        .I2(\RD_DATA_RET_reg[0] [22]),
        .I3(\RD_DATA_RET_reg[1] ),
        .I4(\RD_DATA_RET_reg[18]_2 ),
        .I5(ACK_H_reg_0),
        .O(\RD_DATA_RET[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h10)) 
    host_wr_req_i_1
       (.I0(CS_H_D1),
        .I1(Bus2IP_RNW),
        .I2(host_wr_req_reg_1),
        .O(CS_H_INTERNAL));
  FDRE host_wr_req_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(CS_H_INTERNAL),
        .Q(wea),
        .R(host_wr_req_reg_0));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_can_ol_tac" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_tac_6
   (CS_H_D1,
    enb,
    ACK_RX,
    ACK_H_reg_0,
    CS_RX,
    s_axi_aclk,
    CS_H_INTERNAL);
  output CS_H_D1;
  output enb;
  output ACK_RX;
  input ACK_H_reg_0;
  input CS_RX;
  input s_axi_aclk;
  input CS_H_INTERNAL;

  wire ACK_H_reg_0;
  wire ACK_RX;
  wire CS_H_D1;
  wire CS_H_INTERNAL;
  wire CS_RX;
  wire enb;
  wire s_axi_aclk;

  FDRE ACK_H_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(enb),
        .Q(ACK_RX),
        .R(ACK_H_reg_0));
  FDRE CS_H_D1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(CS_RX),
        .Q(CS_H_D1),
        .R(ACK_H_reg_0));
  FDRE host_req_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(CS_H_INTERNAL),
        .Q(enb),
        .R(ACK_H_reg_0));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_can_ol_tac" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_tac_7
   (CS_H_D1_1,
    host_req_reg_0,
    ACK_RX_T,
    \gen_wr_a.gen_word_narrow.mem_reg_0 ,
    \gen_wr_a.gen_word_narrow.mem_reg_0_0 ,
    ACK_H_reg_0,
    CS_RX_T,
    s_axi_aclk,
    CS_H_INTERNAL_3,
    doutb,
    \RD_DATA_RET_reg[18] ,
    \RD_DATA_RET_reg[18]_0 ,
    ACK_RX);
  output CS_H_D1_1;
  output host_req_reg_0;
  output ACK_RX_T;
  output \gen_wr_a.gen_word_narrow.mem_reg_0 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_0_0 ;
  input ACK_H_reg_0;
  input CS_RX_T;
  input s_axi_aclk;
  input CS_H_INTERNAL_3;
  input [1:0]doutb;
  input [1:0]\RD_DATA_RET_reg[18] ;
  input \RD_DATA_RET_reg[18]_0 ;
  input ACK_RX;

  wire ACK_H_reg_0;
  wire ACK_RX;
  wire ACK_RX_T;
  wire CS_H_D1_1;
  wire CS_H_INTERNAL_3;
  wire CS_RX_T;
  wire [1:0]\RD_DATA_RET_reg[18] ;
  wire \RD_DATA_RET_reg[18]_0 ;
  wire [1:0]doutb;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_0 ;
  wire host_req_reg_0;
  wire s_axi_aclk;

  FDRE ACK_H_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(host_req_reg_0),
        .Q(ACK_RX_T),
        .R(ACK_H_reg_0));
  FDRE CS_H_D1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(CS_RX_T),
        .Q(CS_H_D1_1),
        .R(ACK_H_reg_0));
  LUT5 #(
    .INIT(32'hF8008800)) 
    \RD_DATA_RET[18]_i_2 
       (.I0(doutb[1]),
        .I1(ACK_RX_T),
        .I2(\RD_DATA_RET_reg[18] [1]),
        .I3(\RD_DATA_RET_reg[18]_0 ),
        .I4(ACK_RX),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_0_0 ));
  LUT5 #(
    .INIT(32'hF8008800)) 
    \RD_DATA_RET[19]_i_2 
       (.I0(doutb[0]),
        .I1(ACK_RX_T),
        .I2(\RD_DATA_RET_reg[18] [0]),
        .I3(\RD_DATA_RET_reg[18]_0 ),
        .I4(ACK_RX),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_0 ));
  FDRE host_req_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(CS_H_INTERNAL_3),
        .Q(host_req_reg_0),
        .R(ACK_H_reg_0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_tbmm
   (postpone_flag,
    postpone_flag_2_reg,
    CANCEL_CONFIRMED_OL_D1_SIG_reg,
    INDEX_VALID_SIG_reg,
    src_in,
    winning_or_locked_index_cancel_req_reg,
    TRR_REG_WRITE_PULSE,
    \FSM_sequential_tbs_cs_reg[0] ,
    trigger_next_round,
    ACK_TX_WR,
    wea,
    CS_H_D1,
    ACK_TX_RD,
    ACK_S_SIG_IMM,
    TXE_MSGVAL_D2_reg,
    RXF_FULL_AXI,
    TXEWM_SET,
    RXF_FULL_I_reg,
    TXE_MSGVAL_D1_reg,
    invalidate_buffer_i,
    addr_location_incr_count_reg,
    IC_SYNC_ISR_MSGLST_TXE,
    D,
    Q,
    ACK_H_reg,
    \IC_REG_BRPR_I_reg[1] ,
    \ADDR_RET_reg[12] ,
    \IC_REG_ECR_I_reg[8] ,
    \gen_wr_a.gen_word_narrow.mem_reg_1 ,
    ACK_H_reg_0,
    \TRR_i_reg[31] ,
    \gen_wr_a.gen_word_narrow.mem_reg ,
    \gen_wr_a.gen_word_narrow.mem_reg_0 ,
    \gen_wr_a.gen_word_narrow.mem_reg_2 ,
    \gen_wr_a.gen_word_narrow.mem_reg_3 ,
    \gen_wr_a.gen_word_narrow.mem_reg_4 ,
    \gen_wr_a.gen_word_narrow.mem_reg_5 ,
    \gen_wr_a.gen_word_narrow.mem_reg_6 ,
    \gen_wr_a.gen_word_narrow.mem_reg_7 ,
    \gen_wr_a.gen_word_narrow.mem_reg_8 ,
    \gen_wr_a.gen_word_narrow.mem_reg_9 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1_0 ,
    \gen_wr_a.gen_word_narrow.mem_reg_10 ,
    ACK_H_reg_1,
    \FSM_sequential_tbs_cs_reg[1] ,
    IC_REG_TCR_I,
    postpone_flag_2_reg_0,
    addrb,
    \RD_INDEX_reg[1] ,
    \TRR_i_reg[13] ,
    \TRR_i_D1_reg[28] ,
    \TRR_i_D1_reg[23] ,
    \TRR_i_reg[13]_0 ,
    \IC_REG_IECRS_I_reg[3] ,
    \IC_REG_IECRS_I_reg[8] ,
    pr1_rd_req_reg,
    \FILL_LEVEL_reg[2] ,
    \FILL_LEVEL_reg[5] ,
    pr1_rd_req_reg_0,
    \RUNNING_ID_LOC_reg_reg[2] ,
    \RUNNING_ID_LOC_reg_reg[0] ,
    addra,
    \TXE_DATA_TS_reg[7] ,
    TXE_BRAM_WEN,
    ADDR_M_CC,
    dina,
    can_clk,
    \MULTI_BIT.s_level_out_bus_d5_reg[0] ,
    s_axi_aclk,
    out,
    BUFFER_LOCKED_D1_reg,
    TRR_REG_WRITE_PULSE0,
    CS_H0,
    CS_H00_out,
    pr1_rd_req0,
    SR,
    \SINGLE_BIT.s_level_out_d1_cdc_to_reg ,
    postpone_flag_reg,
    postpone_flag_2_reg_1,
    invalidate_buffer_reg,
    INDEX_VALID_SIG_reg_0,
    addr_location_incr_count_reg_0,
    IC_SYNC_ISR_MSGLST_reg,
    \RD_DATA_RET_reg[27] ,
    \RD_DATA_RET_reg[29] ,
    \RD_DATA_RET_reg[29]_0 ,
    \RD_DATA_RET_reg[28] ,
    \RD_DATA_RET_reg[28]_0 ,
    \RD_DATA_RET_reg[27]_0 ,
    \RD_DATA_RET_reg[27]_1 ,
    \RD_DATA_RET_reg[19] ,
    \RD_DATA_RET_reg[19]_0 ,
    \RD_DATA_RET_reg[19]_1 ,
    \RD_DATA_S_D1_reg[0] ,
    \RD_DATA_RET_reg[18] ,
    \RD_DATA_RET_reg[18]_0 ,
    \RD_DATA_RET_reg[18]_1 ,
    \RD_DATA_RET_reg[25] ,
    \RD_DATA_RET_reg[25]_0 ,
    \RD_DATA_RET_reg[25]_1 ,
    ACK_RX_T,
    \RD_DATA_RET_reg[1] ,
    doutb,
    \RD_DATA_RET_reg[24] ,
    \RD_DATA_RET_reg[24]_0 ,
    \RD_DATA_RET_reg[24]_1 ,
    \RD_DATA_RET_reg[15] ,
    \RD_DATA_RET_reg[15]_0 ,
    \RD_DATA_RET_reg[15]_1 ,
    \RD_DATA_RET_reg[12] ,
    \RD_DATA_RET_reg[12]_0 ,
    \RD_DATA_RET_reg[13] ,
    \RD_DATA_RET_reg[12]_1 ,
    \RD_DATA_RET_reg[11] ,
    \RD_DATA_RET_reg[10] ,
    \RD_DATA_RET_reg[9] ,
    \RD_DATA_RET_reg[7] ,
    \RD_DATA_RET_reg[6] ,
    \RD_DATA_RET_reg[5] ,
    \RD_DATA_RET_reg[4] ,
    \RD_DATA_RET_reg[3] ,
    \RD_DATA_RET_reg[2] ,
    \RD_DATA_RET_reg[1]_0 ,
    \RD_DATA_RET_reg[1]_1 ,
    ACK_CR,
    Bus2IP_RNW,
    host_wr_req_reg,
    VALID_S_SIG_IMM,
    \RD_DATA_RET_reg[0] ,
    ACK_RX,
    \TRR_i_reg[0] ,
    MSG_DONE_FROM_BSP,
    \gen_wr_a.gen_word_narrow.mem_reg_11 ,
    \gen_wr_a.gen_word_narrow.mem_reg_12 ,
    \gen_wr_a.gen_word_narrow.mem_reg_13 ,
    \gen_wr_a.gen_word_narrow.mem_reg_14 ,
    \gen_wr_a.gen_word_narrow.mem_reg_15 ,
    \gen_wr_a.gen_word_narrow.mem_reg_16 ,
    \gen_wr_a.gen_word_narrow.mem_reg_17 ,
    \gen_wr_a.gen_word_narrow.mem_reg_18 ,
    IC_REG_ISR_TXTRS_I_i_3,
    IC_REG_ISR_TXCRS_I_i_3,
    \gen_wr_a.gen_word_narrow.mem_reg_1_1 ,
    TXE_MSGVAL_FD2,
    TXE_MSGVAL_FD1,
    dest_arst,
    \addr_location_incr_count_reg[4] ,
    s_axi_wdata,
    \TCR_i_reg[0] ,
    \txe_id_data_i_reg[0] ,
    \FILL_LEVEL_reg[4] ,
    E,
    \RD_INDEX_reg[5] ,
    \addr_location_incr_count_reg[0] ,
    \gen_wr_a.gen_word_narrow.mem_reg_1_2 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1_3 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1_4 ,
    TS_RX_WEN,
    \gen_wr_a.gen_word_narrow.mem_reg_1_5 ,
    TS_RX_WDATA_F1);
  output postpone_flag;
  output postpone_flag_2_reg;
  output CANCEL_CONFIRMED_OL_D1_SIG_reg;
  output INDEX_VALID_SIG_reg;
  output src_in;
  output winning_or_locked_index_cancel_req_reg;
  output TRR_REG_WRITE_PULSE;
  output \FSM_sequential_tbs_cs_reg[0] ;
  output trigger_next_round;
  output ACK_TX_WR;
  output [0:0]wea;
  output CS_H_D1;
  output ACK_TX_RD;
  output ACK_S_SIG_IMM;
  output TXE_MSGVAL_D2_reg;
  output RXF_FULL_AXI;
  output TXEWM_SET;
  output RXF_FULL_I_reg;
  output TXE_MSGVAL_D1_reg;
  output invalidate_buffer_i;
  output [0:0]addr_location_incr_count_reg;
  output IC_SYNC_ISR_MSGLST_TXE;
  output [16:0]D;
  output [1:0]Q;
  output ACK_H_reg;
  output \IC_REG_BRPR_I_reg[1] ;
  output \ADDR_RET_reg[12] ;
  output \IC_REG_ECR_I_reg[8] ;
  output \gen_wr_a.gen_word_narrow.mem_reg_1 ;
  output ACK_H_reg_0;
  output [30:0]\TRR_i_reg[31] ;
  output \gen_wr_a.gen_word_narrow.mem_reg ;
  output \gen_wr_a.gen_word_narrow.mem_reg_0 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_2 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_3 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_4 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_5 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_6 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_7 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_8 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_9 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_1_0 ;
  output \gen_wr_a.gen_word_narrow.mem_reg_10 ;
  output ACK_H_reg_1;
  output [1:0]\FSM_sequential_tbs_cs_reg[1] ;
  output [0:31]IC_REG_TCR_I;
  output postpone_flag_2_reg_0;
  output [7:0]addrb;
  output [4:0]\RD_INDEX_reg[1] ;
  output \TRR_i_reg[13] ;
  output \TRR_i_D1_reg[28] ;
  output \TRR_i_D1_reg[23] ;
  output \TRR_i_reg[13]_0 ;
  output \IC_REG_IECRS_I_reg[3] ;
  output \IC_REG_IECRS_I_reg[8] ;
  output pr1_rd_req_reg;
  output \FILL_LEVEL_reg[2] ;
  output [5:0]\FILL_LEVEL_reg[5] ;
  output pr1_rd_req_reg_0;
  output \RUNNING_ID_LOC_reg_reg[2] ;
  output \RUNNING_ID_LOC_reg_reg[0] ;
  output [10:0]addra;
  output [0:0]\TXE_DATA_TS_reg[7] ;
  output TXE_BRAM_WEN;
  output [9:0]ADDR_M_CC;
  output [31:0]dina;
  input can_clk;
  input \MULTI_BIT.s_level_out_bus_d5_reg[0] ;
  input s_axi_aclk;
  input out;
  input BUFFER_LOCKED_D1_reg;
  input TRR_REG_WRITE_PULSE0;
  input CS_H0;
  input CS_H00_out;
  input pr1_rd_req0;
  input [0:0]SR;
  input \SINGLE_BIT.s_level_out_d1_cdc_to_reg ;
  input postpone_flag_reg;
  input postpone_flag_2_reg_1;
  input invalidate_buffer_reg;
  input INDEX_VALID_SIG_reg_0;
  input addr_location_incr_count_reg_0;
  input IC_SYNC_ISR_MSGLST_reg;
  input \RD_DATA_RET_reg[27] ;
  input \RD_DATA_RET_reg[29] ;
  input \RD_DATA_RET_reg[29]_0 ;
  input \RD_DATA_RET_reg[28] ;
  input \RD_DATA_RET_reg[28]_0 ;
  input \RD_DATA_RET_reg[27]_0 ;
  input \RD_DATA_RET_reg[27]_1 ;
  input \RD_DATA_RET_reg[19] ;
  input \RD_DATA_RET_reg[19]_0 ;
  input \RD_DATA_RET_reg[19]_1 ;
  input [31:0]\RD_DATA_S_D1_reg[0] ;
  input \RD_DATA_RET_reg[18] ;
  input \RD_DATA_RET_reg[18]_0 ;
  input \RD_DATA_RET_reg[18]_1 ;
  input \RD_DATA_RET_reg[25] ;
  input \RD_DATA_RET_reg[25]_0 ;
  input [0:0]\RD_DATA_RET_reg[25]_1 ;
  input ACK_RX_T;
  input \RD_DATA_RET_reg[1] ;
  input [28:0]doutb;
  input [3:0]\RD_DATA_RET_reg[24] ;
  input \RD_DATA_RET_reg[24]_0 ;
  input \RD_DATA_RET_reg[24]_1 ;
  input [0:0]\RD_DATA_RET_reg[15] ;
  input \RD_DATA_RET_reg[15]_0 ;
  input \RD_DATA_RET_reg[15]_1 ;
  input [1:0]\RD_DATA_RET_reg[12] ;
  input \RD_DATA_RET_reg[12]_0 ;
  input \RD_DATA_RET_reg[13] ;
  input \RD_DATA_RET_reg[12]_1 ;
  input \RD_DATA_RET_reg[11] ;
  input \RD_DATA_RET_reg[10] ;
  input \RD_DATA_RET_reg[9] ;
  input \RD_DATA_RET_reg[7] ;
  input \RD_DATA_RET_reg[6] ;
  input \RD_DATA_RET_reg[5] ;
  input \RD_DATA_RET_reg[4] ;
  input \RD_DATA_RET_reg[3] ;
  input \RD_DATA_RET_reg[2] ;
  input \RD_DATA_RET_reg[1]_0 ;
  input \RD_DATA_RET_reg[1]_1 ;
  input ACK_CR;
  input Bus2IP_RNW;
  input host_wr_req_reg;
  input VALID_S_SIG_IMM;
  input [29:0]\RD_DATA_RET_reg[0] ;
  input ACK_RX;
  input \TRR_i_reg[0] ;
  input MSG_DONE_FROM_BSP;
  input [9:0]\gen_wr_a.gen_word_narrow.mem_reg_11 ;
  input [3:0]\gen_wr_a.gen_word_narrow.mem_reg_12 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_13 ;
  input [3:0]\gen_wr_a.gen_word_narrow.mem_reg_14 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_15 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_16 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_17 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_18 ;
  input [31:0]IC_REG_ISR_TXTRS_I_i_3;
  input [31:0]IC_REG_ISR_TXCRS_I_i_3;
  input [9:0]\gen_wr_a.gen_word_narrow.mem_reg_1_1 ;
  input TXE_MSGVAL_FD2;
  input TXE_MSGVAL_FD1;
  input dest_arst;
  input \addr_location_incr_count_reg[4] ;
  input [31:0]s_axi_wdata;
  input \TCR_i_reg[0] ;
  input [31:0]\txe_id_data_i_reg[0] ;
  input [0:0]\FILL_LEVEL_reg[4] ;
  input [0:0]E;
  input [0:0]\RD_INDEX_reg[5] ;
  input [0:0]\addr_location_incr_count_reg[0] ;
  input [0:0]\gen_wr_a.gen_word_narrow.mem_reg_1_2 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_1_3 ;
  input [10:0]\gen_wr_a.gen_word_narrow.mem_reg_1_4 ;
  input TS_RX_WEN;
  input [31:0]\gen_wr_a.gen_word_narrow.mem_reg_1_5 ;
  input [20:0]TS_RX_WDATA_F1;

  wire ACK_CR;
  wire ACK_H_reg;
  wire ACK_H_reg_0;
  wire ACK_H_reg_1;
  wire ACK_RX;
  wire ACK_RX_T;
  wire ACK_S_SIG;
  wire ACK_S_SIG_IMM;
  wire ACK_TX_RD;
  wire ACK_TX_WR;
  wire [9:0]ADDR_M_CC;
  wire \ADDR_RET_reg[12] ;
  wire BUFFER_LOCKED_D1_reg;
  wire Bus2IP_RNW;
  wire CANCEL_CONFIRMED_OL_D1_SIG_reg;
  wire CS_H0;
  wire CS_H00_out;
  wire CS_H_D1;
  wire [16:0]D;
  wire [0:0]E;
  wire \FILL_LEVEL_reg[2] ;
  wire [0:0]\FILL_LEVEL_reg[4] ;
  wire [5:0]\FILL_LEVEL_reg[5] ;
  wire \FSM_sequential_tbs_cs_reg[0] ;
  wire [1:0]\FSM_sequential_tbs_cs_reg[1] ;
  wire \IC_REG_BRPR_I_reg[1] ;
  wire \IC_REG_ECR_I_reg[8] ;
  wire \IC_REG_IECRS_I_reg[3] ;
  wire \IC_REG_IECRS_I_reg[8] ;
  wire [31:0]IC_REG_ISR_TXCRS_I_i_3;
  wire [31:0]IC_REG_ISR_TXTRS_I_i_3;
  wire [0:31]IC_REG_TCR_I;
  wire [10:10]IC_REG_TRR_I;
  wire IC_SYNC_ISR_MSGLST_TXE;
  wire IC_SYNC_ISR_MSGLST_reg;
  wire INDEX_VALID_SIG_reg;
  wire INDEX_VALID_SIG_reg_0;
  wire MSG_DONE_FROM_BSP;
  wire \MULTI_BIT.s_level_out_bus_d5_reg[0] ;
  wire [1:0]Q;
  wire [29:0]\RD_DATA_RET_reg[0] ;
  wire \RD_DATA_RET_reg[10] ;
  wire \RD_DATA_RET_reg[11] ;
  wire [1:0]\RD_DATA_RET_reg[12] ;
  wire \RD_DATA_RET_reg[12]_0 ;
  wire \RD_DATA_RET_reg[12]_1 ;
  wire \RD_DATA_RET_reg[13] ;
  wire [0:0]\RD_DATA_RET_reg[15] ;
  wire \RD_DATA_RET_reg[15]_0 ;
  wire \RD_DATA_RET_reg[15]_1 ;
  wire \RD_DATA_RET_reg[18] ;
  wire \RD_DATA_RET_reg[18]_0 ;
  wire \RD_DATA_RET_reg[18]_1 ;
  wire \RD_DATA_RET_reg[19] ;
  wire \RD_DATA_RET_reg[19]_0 ;
  wire \RD_DATA_RET_reg[19]_1 ;
  wire \RD_DATA_RET_reg[1] ;
  wire \RD_DATA_RET_reg[1]_0 ;
  wire \RD_DATA_RET_reg[1]_1 ;
  wire [3:0]\RD_DATA_RET_reg[24] ;
  wire \RD_DATA_RET_reg[24]_0 ;
  wire \RD_DATA_RET_reg[24]_1 ;
  wire \RD_DATA_RET_reg[25] ;
  wire \RD_DATA_RET_reg[25]_0 ;
  wire [0:0]\RD_DATA_RET_reg[25]_1 ;
  wire \RD_DATA_RET_reg[27] ;
  wire \RD_DATA_RET_reg[27]_0 ;
  wire \RD_DATA_RET_reg[27]_1 ;
  wire \RD_DATA_RET_reg[28] ;
  wire \RD_DATA_RET_reg[28]_0 ;
  wire \RD_DATA_RET_reg[29] ;
  wire \RD_DATA_RET_reg[29]_0 ;
  wire \RD_DATA_RET_reg[2] ;
  wire \RD_DATA_RET_reg[3] ;
  wire \RD_DATA_RET_reg[4] ;
  wire \RD_DATA_RET_reg[5] ;
  wire \RD_DATA_RET_reg[6] ;
  wire \RD_DATA_RET_reg[7] ;
  wire \RD_DATA_RET_reg[9] ;
  wire [31:0]\RD_DATA_S_D1_reg[0] ;
  wire [4:0]\RD_INDEX_reg[1] ;
  wire [0:0]\RD_INDEX_reg[5] ;
  wire [0:8]RUNNING_ID_LOC_reg;
  wire \RUNNING_ID_LOC_reg_reg[0] ;
  wire \RUNNING_ID_LOC_reg_reg[2] ;
  wire RXF_FULL_AXI;
  wire RXF_FULL_I_reg;
  wire \SINGLE_BIT.s_level_out_d1_cdc_to_reg ;
  wire [0:0]SR;
  wire TBS_RUNNING_D1;
  wire \TCR_i_reg[0] ;
  wire TRR_REG_WRITE_PULSE;
  wire TRR_REG_WRITE_PULSE0;
  wire [24:24]TRR_TBS_SIG;
  wire TRR_TBS_i0;
  wire TRR_TBS_i0158_out;
  wire TRR_TBS_i0163_out;
  wire TRR_TBS_i0168_out;
  wire TRR_TBS_i0173_out;
  wire TRR_TBS_i0178_out;
  wire TRR_TBS_i0183_out;
  wire TRR_TBS_i0188_out;
  wire TRR_TBS_i0193_out;
  wire TRR_TBS_i0198_out;
  wire TRR_TBS_i0203_out;
  wire TRR_TBS_i0208_out;
  wire TRR_TBS_i0213_out;
  wire TRR_TBS_i0218_out;
  wire TRR_TBS_i0223_out;
  wire TRR_i2294_in;
  wire \TRR_i_D1_reg[23] ;
  wire \TRR_i_D1_reg[28] ;
  wire \TRR_i_reg[0] ;
  wire \TRR_i_reg[13] ;
  wire \TRR_i_reg[13]_0 ;
  wire [30:0]\TRR_i_reg[31] ;
  wire [20:0]TS_RX_WDATA_F1;
  wire TS_RX_WEN;
  wire TXEWM_SET;
  wire TXE_BRAM_WEN;
  wire [0:0]\TXE_DATA_TS_reg[7] ;
  wire TXE_MSGVAL_D1_reg;
  wire TXE_MSGVAL_D2_reg;
  wire TXE_MSGVAL_FD1;
  wire TXE_MSGVAL_FD2;
  wire VALID_S_SIG_IMM;
  wire [0:8]WINNING_ID_LOC_SIG;
  wire [0:0]addr_location_incr_count_reg;
  wire [0:0]\addr_location_incr_count_reg[0] ;
  wire \addr_location_incr_count_reg[4] ;
  wire addr_location_incr_count_reg_0;
  wire [10:0]addra;
  wire [7:0]addrb;
  wire can_clk;
  wire dest_arst;
  wire [31:0]dina;
  wire [28:0]doutb;
  wire \gen_wr_a.gen_word_narrow.mem_reg ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_10 ;
  wire [9:0]\gen_wr_a.gen_word_narrow.mem_reg_11 ;
  wire [3:0]\gen_wr_a.gen_word_narrow.mem_reg_12 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_13 ;
  wire [3:0]\gen_wr_a.gen_word_narrow.mem_reg_14 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_15 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_16 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_17 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_18 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1_0 ;
  wire [9:0]\gen_wr_a.gen_word_narrow.mem_reg_1_1 ;
  wire [0:0]\gen_wr_a.gen_word_narrow.mem_reg_1_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1_3 ;
  wire [10:0]\gen_wr_a.gen_word_narrow.mem_reg_1_4 ;
  wire [31:0]\gen_wr_a.gen_word_narrow.mem_reg_1_5 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_3 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_4 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_5 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_6 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_7 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_8 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_9 ;
  wire host_wr_req_reg;
  wire invalidate_buffer_i;
  wire invalidate_buffer_reg;
  wire [0:8]locked_id_loc_sig;
  wire [4:0]num_reg;
  wire ol_tac_wr_n_19;
  wire ol_tac_wr_n_20;
  wire ol_tac_wr_n_21;
  wire ol_tbs_n_15;
  wire ol_tbs_n_16;
  wire ol_tbs_n_32;
  wire ol_tbs_n_8;
  wire ol_tbs_n_9;
  wire ol_txreg_n_2;
  wire ol_txreg_n_74;
  wire ol_txreg_n_75;
  wire ol_txreg_n_76;
  wire ol_txreg_n_77;
  wire ol_txreg_n_78;
  wire ol_txreg_n_79;
  wire ol_txreg_n_80;
  wire ol_wrh_n_10;
  wire ol_wrh_n_11;
  wire ol_wrh_n_12;
  wire ol_wrh_n_13;
  wire ol_wrh_n_14;
  wire ol_wrh_n_15;
  wire ol_wrh_n_16;
  wire ol_wrh_n_17;
  wire ol_wrh_n_18;
  wire ol_wrh_n_19;
  wire ol_wrh_n_20;
  wire ol_wrh_n_21;
  wire ol_wrh_n_22;
  wire ol_wrh_n_23;
  wire ol_wrh_n_24;
  wire ol_wrh_n_25;
  wire ol_wrh_n_26;
  wire ol_wrh_n_27;
  wire ol_wrh_n_28;
  wire ol_wrh_n_29;
  wire ol_wrh_n_30;
  wire ol_wrh_n_31;
  wire ol_wrh_n_32;
  wire ol_wrh_n_33;
  wire ol_wrh_n_34;
  wire ol_wrh_n_35;
  wire ol_wrh_n_36;
  wire ol_wrh_n_37;
  wire ol_wrh_n_38;
  wire ol_wrh_n_39;
  wire ol_wrh_n_40;
  wire ol_wrh_n_41;
  wire ol_wrh_n_42;
  wire ol_wrh_n_43;
  wire ol_wrh_n_44;
  wire ol_wrh_n_45;
  wire ol_wrh_n_46;
  wire ol_wrh_n_47;
  wire ol_wrh_n_48;
  wire ol_wrh_n_49;
  wire ol_wrh_n_5;
  wire ol_wrh_n_50;
  wire ol_wrh_n_51;
  wire ol_wrh_n_52;
  wire ol_wrh_n_53;
  wire ol_wrh_n_54;
  wire ol_wrh_n_55;
  wire ol_wrh_n_56;
  wire ol_wrh_n_57;
  wire ol_wrh_n_58;
  wire ol_wrh_n_59;
  wire ol_wrh_n_6;
  wire ol_wrh_n_60;
  wire ol_wrh_n_61;
  wire ol_wrh_n_62;
  wire ol_wrh_n_63;
  wire ol_wrh_n_64;
  wire ol_wrh_n_65;
  wire ol_wrh_n_66;
  wire ol_wrh_n_67;
  wire ol_wrh_n_68;
  wire ol_wrh_n_69;
  wire ol_wrh_n_7;
  wire ol_wrh_n_70;
  wire ol_wrh_n_71;
  wire ol_wrh_n_72;
  wire ol_wrh_n_73;
  wire ol_wrh_n_74;
  wire ol_wrh_n_75;
  wire ol_wrh_n_76;
  wire ol_wrh_n_77;
  wire ol_wrh_n_78;
  wire ol_wrh_n_79;
  wire ol_wrh_n_8;
  wire ol_wrh_n_80;
  wire ol_wrh_n_81;
  wire ol_wrh_n_82;
  wire ol_wrh_n_83;
  wire ol_wrh_n_84;
  wire ol_wrh_n_85;
  wire ol_wrh_n_86;
  wire ol_wrh_n_87;
  wire ol_wrh_n_88;
  wire ol_wrh_n_89;
  wire ol_wrh_n_9;
  wire ol_wrh_n_90;
  wire out;
  wire passed_trig0;
  wire postpone_flag;
  wire postpone_flag_2_reg;
  wire postpone_flag_2_reg_0;
  wire postpone_flag_2_reg_1;
  wire postpone_flag_reg;
  wire pr1_rd_req0;
  wire pr1_rd_req_reg;
  wire pr1_rd_req_reg_0;
  wire s_axi_aclk;
  wire [31:0]s_axi_wdata;
  wire src_in;
  wire trig_pulse_1;
  wire trig_pulse_2;
  wire trig_pulse_20;
  wire trigger_next_round;
  wire trigger_next_round0;
  wire trigger_next_round_d1;
  wire [6:31]txe_id_data_i;
  wire [31:0]\txe_id_data_i_reg[0] ;
  wire txmsg_addr_gen_n_10;
  wire txmsg_addr_gen_n_28;
  wire txmsg_addr_gen_n_29;
  wire txmsg_addr_gen_n_30;
  wire txmsg_addr_gen_n_31;
  wire txmsg_addr_gen_n_32;
  wire txmsg_addr_gen_n_33;
  wire txmsg_addr_gen_n_35;
  wire txmsg_addr_gen_n_36;
  wire txmsg_addr_gen_n_37;
  wire txmsg_addr_gen_n_38;
  wire txmsg_addr_gen_n_39;
  wire txmsg_addr_gen_n_40;
  wire txmsg_addr_gen_n_41;
  wire txmsg_addr_gen_n_42;
  wire [0:0]wea;
  wire [4:0]winning_index_sig;
  wire winning_or_locked_index_cancel_req0;
  wire winning_or_locked_index_cancel_req_reg;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_nrh ol_nrh
       (.TRR_REG_WRITE_PULSE(TRR_REG_WRITE_PULSE),
        .invalidate_buffer_i(invalidate_buffer_i),
        .invalidate_buffer_reg_0(invalidate_buffer_reg),
        .passed_trig0(passed_trig0),
        .passed_trig_reg_0(\MULTI_BIT.s_level_out_bus_d5_reg[0] ),
        .postpone_flag(postpone_flag),
        .postpone_flag_2_reg_0(postpone_flag_2_reg),
        .postpone_flag_2_reg_1(postpone_flag_2_reg_0),
        .postpone_flag_2_reg_2(postpone_flag_2_reg_1),
        .postpone_flag_reg_0(postpone_flag_reg),
        .s_axi_aclk(s_axi_aclk),
        .trig_pulse_1(trig_pulse_1),
        .trig_pulse_2(trig_pulse_2),
        .trigger_next_round0(trigger_next_round0),
        .trigger_next_round_reg(BUFFER_LOCKED_D1_reg),
        .trigger_next_round_reg_0(INDEX_VALID_SIG_reg));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_tac ol_tac_rd
       (.ACK_H_reg_0(ACK_TX_RD),
        .ACK_H_reg_1(ACK_H_reg_1),
        .ACK_RET_reg(ACK_TX_WR),
        .ACK_RX_T(ACK_RX_T),
        .ACK_S_SIG(ACK_S_SIG),
        .ACK_S_SIG_IMM(ACK_S_SIG_IMM),
        .Bus2IP_RNW(Bus2IP_RNW),
        .CS_H00_out(CS_H00_out),
        .CS_H_D1(CS_H_D1),
        .Q({RUNNING_ID_LOC_reg[0],RUNNING_ID_LOC_reg[1],RUNNING_ID_LOC_reg[2],RUNNING_ID_LOC_reg[3],RUNNING_ID_LOC_reg[4],RUNNING_ID_LOC_reg[5],RUNNING_ID_LOC_reg[6],RUNNING_ID_LOC_reg[7],RUNNING_ID_LOC_reg[8]}),
        .\RUNNING_ID_LOC_reg_reg[0] (\RUNNING_ID_LOC_reg_reg[0] ),
        .\RUNNING_ID_LOC_reg_reg[2] (\RUNNING_ID_LOC_reg_reg[2] ),
        .VALID_S_SIG_IMM(VALID_S_SIG_IMM),
        .addrb(addrb),
        .\gen_wr_a.gen_word_narrow.mem_reg (\gen_wr_a.gen_word_narrow.mem_reg_11 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_0 (\gen_wr_a.gen_word_narrow.mem_reg_12 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_1 (\gen_wr_a.gen_word_narrow.mem_reg_13 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_2 (\gen_wr_a.gen_word_narrow.mem_reg_14 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_3 (\gen_wr_a.gen_word_narrow.mem_reg_15 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_4 (\gen_wr_a.gen_word_narrow.mem_reg_16 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_5 (\gen_wr_a.gen_word_narrow.mem_reg_17 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_6 (\gen_wr_a.gen_word_narrow.mem_reg_18 ),
        .host_req_reg_0(host_wr_req_reg),
        .pr1_rd_req0(pr1_rd_req0),
        .pr1_rd_req_reg_0(pr1_rd_req_reg),
        .pr1_rd_req_reg_1(pr1_rd_req_reg_0),
        .pr1_rd_req_reg_2(\MULTI_BIT.s_level_out_bus_d5_reg[0] ),
        .pr2_rd_req_reg_0(ol_tbs_n_16),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_tac_4 ol_tac_wr
       (.ACK_CR(ACK_CR),
        .ACK_H_reg_0(ACK_TX_WR),
        .ACK_H_reg_1(ACK_H_reg),
        .ACK_H_reg_2(ol_tac_wr_n_19),
        .ACK_H_reg_3(ol_tac_wr_n_20),
        .ACK_H_reg_4(ol_tac_wr_n_21),
        .ACK_H_reg_5(ACK_H_reg_0),
        .ACK_RX(ACK_RX),
        .ACK_RX_T(ACK_RX_T),
        .\ADDR_RET_reg[12] (\ADDR_RET_reg[12] ),
        .Bus2IP_RNW(Bus2IP_RNW),
        .CS_H0(CS_H0),
        .D(D[16:3]),
        .\IC_REG_BRPR_I_reg[1] (\IC_REG_BRPR_I_reg[1] ),
        .\IC_REG_ECR_I_reg[8] (\IC_REG_ECR_I_reg[8] ),
        .IC_REG_TRR_I(IC_REG_TRR_I),
        .\RD_DATA_RET_reg[0] (\RD_DATA_S_D1_reg[0] ),
        .\RD_DATA_RET_reg[0]_0 (\RD_DATA_RET_reg[0] ),
        .\RD_DATA_RET_reg[10] (\RD_DATA_RET_reg[10] ),
        .\RD_DATA_RET_reg[11] (\RD_DATA_RET_reg[11] ),
        .\RD_DATA_RET_reg[12] (\RD_DATA_RET_reg[12] ),
        .\RD_DATA_RET_reg[12]_0 (\RD_DATA_RET_reg[12]_0 ),
        .\RD_DATA_RET_reg[12]_1 (\RD_DATA_RET_reg[12]_1 ),
        .\RD_DATA_RET_reg[13] (\RD_DATA_RET_reg[13] ),
        .\RD_DATA_RET_reg[15] (\RD_DATA_RET_reg[15] ),
        .\RD_DATA_RET_reg[15]_0 (\RD_DATA_RET_reg[15]_0 ),
        .\RD_DATA_RET_reg[15]_1 (\RD_DATA_RET_reg[15]_1 ),
        .\RD_DATA_RET_reg[18] (\RD_DATA_RET_reg[18] ),
        .\RD_DATA_RET_reg[18]_0 (\RD_DATA_RET_reg[18]_0 ),
        .\RD_DATA_RET_reg[18]_1 (\RD_DATA_RET_reg[18]_1 ),
        .\RD_DATA_RET_reg[18]_2 (ACK_TX_RD),
        .\RD_DATA_RET_reg[19] (\RD_DATA_RET_reg[19] ),
        .\RD_DATA_RET_reg[19]_0 (\RD_DATA_RET_reg[19]_0 ),
        .\RD_DATA_RET_reg[19]_1 (\RD_DATA_RET_reg[19]_1 ),
        .\RD_DATA_RET_reg[1] (\RD_DATA_RET_reg[1] ),
        .\RD_DATA_RET_reg[1]_0 (\RD_DATA_RET_reg[1]_0 ),
        .\RD_DATA_RET_reg[1]_1 (\RD_DATA_RET_reg[1]_1 ),
        .\RD_DATA_RET_reg[24] (\RD_DATA_RET_reg[24] ),
        .\RD_DATA_RET_reg[24]_0 (\RD_DATA_RET_reg[24]_0 ),
        .\RD_DATA_RET_reg[24]_1 (\RD_DATA_RET_reg[24]_1 ),
        .\RD_DATA_RET_reg[25] (\RD_DATA_RET_reg[25] ),
        .\RD_DATA_RET_reg[25]_0 (\RD_DATA_RET_reg[25]_0 ),
        .\RD_DATA_RET_reg[25]_1 (\RD_DATA_RET_reg[25]_1 ),
        .\RD_DATA_RET_reg[2] (\RD_DATA_RET_reg[2] ),
        .\RD_DATA_RET_reg[3] (\RD_DATA_RET_reg[3] ),
        .\RD_DATA_RET_reg[4] (\RD_DATA_RET_reg[4] ),
        .\RD_DATA_RET_reg[5] (\RD_DATA_RET_reg[5] ),
        .\RD_DATA_RET_reg[6] (\RD_DATA_RET_reg[6] ),
        .\RD_DATA_RET_reg[7] (\RD_DATA_RET_reg[7] ),
        .\RD_DATA_RET_reg[9] (\RD_DATA_RET_reg[9] ),
        .doutb(doutb),
        .\gen_wr_a.gen_word_narrow.mem_reg (\gen_wr_a.gen_word_narrow.mem_reg ),
        .\gen_wr_a.gen_word_narrow.mem_reg_0 (\gen_wr_a.gen_word_narrow.mem_reg_0 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_1 (\gen_wr_a.gen_word_narrow.mem_reg_1 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_10 (\gen_wr_a.gen_word_narrow.mem_reg_10 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_0 (\gen_wr_a.gen_word_narrow.mem_reg_1_0 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_2 (\gen_wr_a.gen_word_narrow.mem_reg_2 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_3 (\gen_wr_a.gen_word_narrow.mem_reg_3 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_4 (\gen_wr_a.gen_word_narrow.mem_reg_4 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_5 (\gen_wr_a.gen_word_narrow.mem_reg_5 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_6 (\gen_wr_a.gen_word_narrow.mem_reg_6 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_7 (\gen_wr_a.gen_word_narrow.mem_reg_7 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_8 (\gen_wr_a.gen_word_narrow.mem_reg_8 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_9 (\gen_wr_a.gen_word_narrow.mem_reg_9 ),
        .host_wr_req_reg_0(\MULTI_BIT.s_level_out_bus_d5_reg[0] ),
        .host_wr_req_reg_1(host_wr_req_reg),
        .s_axi_aclk(s_axi_aclk),
        .wea(wea));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_tbs ol_tbs
       (.ACK_N_PROCESSING_D1_reg_0(\MULTI_BIT.s_level_out_bus_d5_reg[0] ),
        .ACK_S_SIG(ACK_S_SIG),
        .E_RST_I_reg(ol_tbs_n_15),
        .\FSM_sequential_tbs_cs[0]_i_3_0 (TRR_TBS_SIG),
        .\FSM_sequential_tbs_cs_reg[0]_0 (\FSM_sequential_tbs_cs_reg[0] ),
        .\FSM_sequential_tbs_cs_reg[0]_1 (ol_tbs_n_16),
        .\FSM_sequential_tbs_cs_reg[0]_2 (ol_txreg_n_79),
        .\FSM_sequential_tbs_cs_reg[0]_3 (ol_txreg_n_78),
        .\FSM_sequential_tbs_cs_reg[0]_4 (ol_txreg_n_80),
        .INDEX_VALID_SIG_reg_0(INDEX_VALID_SIG_reg),
        .INDEX_VALID_SIG_reg_1(ol_tbs_n_9),
        .INDEX_VALID_SIG_reg_2(INDEX_VALID_SIG_reg_0),
        .MSG_DONE_FROM_BSP(MSG_DONE_FROM_BSP),
        .Q(\FSM_sequential_tbs_cs_reg[1] ),
        .\RD_DATA_S_D1_reg[0]_0 (\RD_DATA_S_D1_reg[0] ),
        .\RUNNING_ID_LOC_reg_reg[0]_0 ({RUNNING_ID_LOC_reg[0],RUNNING_ID_LOC_reg[1],RUNNING_ID_LOC_reg[2],RUNNING_ID_LOC_reg[3],RUNNING_ID_LOC_reg[4],RUNNING_ID_LOC_reg[5],RUNNING_ID_LOC_reg[6],RUNNING_ID_LOC_reg[7],RUNNING_ID_LOC_reg[8]}),
        .\RUNNING_ID_LOC_reg_reg[8]_0 (ol_txreg_n_2),
        .TBS_RUNNING_D1(TBS_RUNNING_D1),
        .TRR_REG_WRITE_PULSE(TRR_REG_WRITE_PULSE),
        .TRR_i2294_in(TRR_i2294_in),
        .\WINNING_ID_LOC_SIG_reg[0]_0 ({WINNING_ID_LOC_SIG[0],WINNING_ID_LOC_SIG[1],WINNING_ID_LOC_SIG[2],WINNING_ID_LOC_SIG[3],WINNING_ID_LOC_SIG[4],WINNING_ID_LOC_SIG[5],WINNING_ID_LOC_SIG[6],WINNING_ID_LOC_SIG[7],WINNING_ID_LOC_SIG[8]}),
        .\WINNING_INDEX_SIG_reg[4]_0 (ol_tbs_n_8),
        .\WINNING_INDEX_SIG_reg[4]_1 (winning_index_sig),
        .\exclude_winning_or_locked_req_reg[31] (CANCEL_CONFIRMED_OL_D1_SIG_reg),
        .invalidate_buffer_i(invalidate_buffer_i),
        .\num_reg_reg[4]_0 (num_reg),
        .\num_reg_reg[4]_1 (ol_tbs_n_32),
        .passed_trig0(passed_trig0),
        .passed_trig_reg(BUFFER_LOCKED_D1_reg),
        .s_axi_aclk(s_axi_aclk),
        .trig_pulse_20(trig_pulse_20),
        .trig_pulse_2_i_3_0(IC_REG_TCR_I[31]),
        .trig_pulse_2_i_3_1(IC_REG_TCR_I[29]),
        .trig_pulse_2_i_3_2(IC_REG_TCR_I[19]),
        .trig_pulse_2_i_3_3(IC_REG_TCR_I[20]),
        .trig_pulse_2_i_3_4(ol_txreg_n_75),
        .trig_pulse_2_i_3_5(IC_REG_TCR_I[30]),
        .trig_pulse_2_i_3_6(IC_REG_TCR_I[16]),
        .trig_pulse_2_i_3_7(IC_REG_TCR_I[18]),
        .trig_pulse_2_i_6_0(IC_REG_TCR_I[23]),
        .trig_pulse_2_i_6_1(IC_REG_TCR_I[28]),
        .trig_pulse_2_i_7_0(IC_REG_TCR_I[22]),
        .trig_pulse_2_i_7_1(IC_REG_TCR_I[21]),
        .trigger_next_round(trigger_next_round),
        .trigger_next_round0(trigger_next_round0),
        .trigger_next_round_d1(trigger_next_round_d1),
        .winning_or_locked_index_cancel_req0(winning_or_locked_index_cancel_req0),
        .winning_or_locked_index_cancel_req_i_2_0(IC_REG_TCR_I[17]),
        .winning_or_locked_index_cancel_req_i_3_0(ol_txreg_n_74),
        .winning_or_locked_index_cancel_req_i_3_1(IC_REG_TCR_I[14]),
        .winning_or_locked_index_cancel_req_i_3_2(IC_REG_TCR_I[15]),
        .winning_or_locked_index_cancel_req_i_3_3(IC_REG_TCR_I[13]),
        .winning_or_locked_index_cancel_req_i_3_4(IC_REG_TCR_I[3]),
        .winning_or_locked_index_cancel_req_i_3_5(IC_REG_TCR_I[4]),
        .winning_or_locked_index_cancel_req_i_3_6(IC_REG_TCR_I[0]),
        .winning_or_locked_index_cancel_req_i_3_7(IC_REG_TCR_I[2]),
        .winning_or_locked_index_cancel_req_i_8_0(IC_REG_TCR_I[7]),
        .winning_or_locked_index_cancel_req_i_8_1(IC_REG_TCR_I[12]),
        .winning_or_locked_index_cancel_req_i_9_0(IC_REG_TCR_I[6]),
        .winning_or_locked_index_cancel_req_i_9_1(IC_REG_TCR_I[5]),
        .winning_or_locked_index_cancel_req_reg(ol_wrh_n_70),
        .winning_or_locked_index_cancel_req_reg_0(ol_wrh_n_73),
        .winning_or_locked_index_cancel_req_reg_1(ol_wrh_n_69),
        .winning_or_locked_index_cancel_req_reg_2(IC_REG_TCR_I[1]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_txreg ol_txreg
       (.D({\TRR_i_reg[31] [30:21],IC_REG_TRR_I,\TRR_i_reg[31] [20:0]}),
        .\FSM_sequential_tbs_cs[0]_i_3 (ol_tbs_n_32),
        .\FSM_sequential_tbs_cs[0]_i_3_0 (num_reg),
        .\IC_REG_IECRS_I_reg[3] (\IC_REG_IECRS_I_reg[3] ),
        .\IC_REG_IECRS_I_reg[8] (\IC_REG_IECRS_I_reg[8] ),
        .IC_REG_ISR_TXCRS_I_i_3_0(IC_REG_ISR_TXCRS_I_i_3),
        .IC_REG_ISR_TXTRS_I_i_3_0(IC_REG_ISR_TXTRS_I_i_3),
        .Q(TRR_TBS_SIG),
        .TBS_RUNNING_D1(TBS_RUNNING_D1),
        .TBS_RUNNING_D1_reg_0(\FSM_sequential_tbs_cs_reg[0] ),
        .\TCR_i_reg[0]_0 (IC_REG_TCR_I[31]),
        .\TCR_i_reg[0]_1 (\TCR_i_reg[0] ),
        .\TCR_i_reg[10]_0 (IC_REG_TCR_I[21]),
        .\TCR_i_reg[11]_0 (IC_REG_TCR_I[20]),
        .\TCR_i_reg[12]_0 (IC_REG_TCR_I[19]),
        .\TCR_i_reg[13]_0 (IC_REG_TCR_I[18]),
        .\TCR_i_reg[14]_0 (IC_REG_TCR_I[17]),
        .\TCR_i_reg[15]_0 (IC_REG_TCR_I[16]),
        .\TCR_i_reg[16]_0 (IC_REG_TCR_I[15]),
        .\TCR_i_reg[17]_0 (IC_REG_TCR_I[14]),
        .\TCR_i_reg[18]_0 (IC_REG_TCR_I[13]),
        .\TCR_i_reg[19]_0 (IC_REG_TCR_I[12]),
        .\TCR_i_reg[1]_0 (IC_REG_TCR_I[30]),
        .\TCR_i_reg[20]_0 (IC_REG_TCR_I[11]),
        .\TCR_i_reg[21]_0 (IC_REG_TCR_I[10]),
        .\TCR_i_reg[21]_1 (ol_txreg_n_74),
        .\TCR_i_reg[21]_2 (ol_txreg_n_76),
        .\TCR_i_reg[22]_0 (IC_REG_TCR_I[9]),
        .\TCR_i_reg[23]_0 (IC_REG_TCR_I[8]),
        .\TCR_i_reg[24]_0 (IC_REG_TCR_I[7]),
        .\TCR_i_reg[25]_0 (IC_REG_TCR_I[6]),
        .\TCR_i_reg[26]_0 (IC_REG_TCR_I[5]),
        .\TCR_i_reg[27]_0 (IC_REG_TCR_I[4]),
        .\TCR_i_reg[28]_0 (IC_REG_TCR_I[3]),
        .\TCR_i_reg[29]_0 (IC_REG_TCR_I[2]),
        .\TCR_i_reg[2]_0 (IC_REG_TCR_I[29]),
        .\TCR_i_reg[30]_0 (IC_REG_TCR_I[1]),
        .\TCR_i_reg[31]_0 (IC_REG_TCR_I[0]),
        .\TCR_i_reg[3]_0 (IC_REG_TCR_I[28]),
        .\TCR_i_reg[4]_0 (IC_REG_TCR_I[27]),
        .\TCR_i_reg[5]_0 (IC_REG_TCR_I[26]),
        .\TCR_i_reg[5]_1 (ol_txreg_n_75),
        .\TCR_i_reg[5]_2 (ol_txreg_n_77),
        .\TCR_i_reg[6]_0 (IC_REG_TCR_I[25]),
        .\TCR_i_reg[7]_0 (IC_REG_TCR_I[24]),
        .\TCR_i_reg[8]_0 (IC_REG_TCR_I[23]),
        .\TCR_i_reg[9]_0 (IC_REG_TCR_I[22]),
        .TRR_REG_WRITE_PULSE(TRR_REG_WRITE_PULSE),
        .TRR_REG_WRITE_PULSE0(TRR_REG_WRITE_PULSE0),
        .\TRR_TBS_i_reg[15]_0 (ol_txreg_n_2),
        .\TRR_TBS_i_reg[26]_0 (ol_txreg_n_78),
        .\TRR_TBS_i_reg[31]_0 ({ol_wrh_n_74,ol_wrh_n_75,ol_wrh_n_76,ol_wrh_n_77,ol_wrh_n_78,ol_wrh_n_79,ol_wrh_n_80,ol_wrh_n_81,ol_wrh_n_82,ol_wrh_n_83,ol_wrh_n_84,ol_wrh_n_85,ol_wrh_n_86,ol_wrh_n_87,ol_wrh_n_88,ol_wrh_n_89,ol_wrh_n_90,TRR_TBS_i0223_out,TRR_TBS_i0218_out,TRR_TBS_i0213_out,TRR_TBS_i0208_out,TRR_TBS_i0203_out,TRR_TBS_i0198_out,TRR_TBS_i0193_out,TRR_TBS_i0188_out,TRR_TBS_i0183_out,TRR_TBS_i0178_out,TRR_TBS_i0173_out,TRR_TBS_i0168_out,TRR_TBS_i0163_out,TRR_TBS_i0158_out,TRR_TBS_i0}),
        .\TRR_i_D1_reg[0]_0 (\MULTI_BIT.s_level_out_bus_d5_reg[0] ),
        .\TRR_i_D1_reg[23]_0 (\TRR_i_D1_reg[23] ),
        .\TRR_i_D1_reg[28]_0 (\TRR_i_D1_reg[28] ),
        .\TRR_i_reg[0]_0 (\TRR_i_reg[0] ),
        .\TRR_i_reg[0]_1 (ol_wrh_n_67),
        .\TRR_i_reg[0]_2 (ol_wrh_n_68),
        .\TRR_i_reg[10]_0 (ol_wrh_n_57),
        .\TRR_i_reg[10]_1 (ol_wrh_n_26),
        .\TRR_i_reg[11]_0 (ol_wrh_n_56),
        .\TRR_i_reg[11]_1 (ol_wrh_n_25),
        .\TRR_i_reg[12]_0 (ol_wrh_n_55),
        .\TRR_i_reg[12]_1 (ol_wrh_n_24),
        .\TRR_i_reg[13]_0 (\TRR_i_reg[13] ),
        .\TRR_i_reg[13]_1 (\TRR_i_reg[13]_0 ),
        .\TRR_i_reg[13]_2 (ol_wrh_n_54),
        .\TRR_i_reg[13]_3 (ol_wrh_n_23),
        .\TRR_i_reg[14]_0 (ol_wrh_n_36),
        .\TRR_i_reg[14]_1 (ol_wrh_n_5),
        .\TRR_i_reg[15]_0 (ol_wrh_n_37),
        .\TRR_i_reg[15]_1 (ol_wrh_n_6),
        .\TRR_i_reg[16]_0 (ol_wrh_n_38),
        .\TRR_i_reg[16]_1 (ol_wrh_n_7),
        .\TRR_i_reg[17]_0 (ol_wrh_n_39),
        .\TRR_i_reg[17]_1 (ol_wrh_n_8),
        .\TRR_i_reg[18]_0 (ol_wrh_n_40),
        .\TRR_i_reg[18]_1 (ol_wrh_n_9),
        .\TRR_i_reg[19]_0 (ol_wrh_n_41),
        .\TRR_i_reg[19]_1 (ol_wrh_n_10),
        .\TRR_i_reg[1]_0 (ol_wrh_n_66),
        .\TRR_i_reg[1]_1 (ol_wrh_n_35),
        .\TRR_i_reg[20]_0 (ol_wrh_n_42),
        .\TRR_i_reg[20]_1 (ol_wrh_n_11),
        .\TRR_i_reg[21]_0 (ol_wrh_n_43),
        .\TRR_i_reg[21]_1 (ol_wrh_n_12),
        .\TRR_i_reg[22]_0 (ol_wrh_n_44),
        .\TRR_i_reg[22]_1 (ol_wrh_n_13),
        .\TRR_i_reg[23]_0 (ol_wrh_n_45),
        .\TRR_i_reg[23]_1 (ol_wrh_n_14),
        .\TRR_i_reg[24]_0 (ol_wrh_n_46),
        .\TRR_i_reg[24]_1 (ol_wrh_n_15),
        .\TRR_i_reg[25]_0 (ol_wrh_n_47),
        .\TRR_i_reg[25]_1 (ol_wrh_n_16),
        .\TRR_i_reg[26]_0 (ol_wrh_n_48),
        .\TRR_i_reg[26]_1 (ol_wrh_n_17),
        .\TRR_i_reg[27]_0 (ol_wrh_n_49),
        .\TRR_i_reg[27]_1 (ol_wrh_n_18),
        .\TRR_i_reg[28]_0 (ol_wrh_n_50),
        .\TRR_i_reg[28]_1 (ol_wrh_n_19),
        .\TRR_i_reg[29]_0 (ol_wrh_n_51),
        .\TRR_i_reg[29]_1 (ol_wrh_n_20),
        .\TRR_i_reg[2]_0 (ol_wrh_n_65),
        .\TRR_i_reg[2]_1 (ol_wrh_n_34),
        .\TRR_i_reg[30]_0 (ol_wrh_n_52),
        .\TRR_i_reg[30]_1 (ol_wrh_n_21),
        .\TRR_i_reg[31]_0 (ol_wrh_n_53),
        .\TRR_i_reg[31]_1 (ol_wrh_n_22),
        .\TRR_i_reg[3]_0 (ol_wrh_n_64),
        .\TRR_i_reg[3]_1 (ol_wrh_n_33),
        .\TRR_i_reg[4]_0 (ol_wrh_n_63),
        .\TRR_i_reg[4]_1 (ol_wrh_n_32),
        .\TRR_i_reg[5]_0 (ol_wrh_n_62),
        .\TRR_i_reg[5]_1 (ol_wrh_n_31),
        .\TRR_i_reg[6]_0 (ol_wrh_n_61),
        .\TRR_i_reg[6]_1 (ol_wrh_n_30),
        .\TRR_i_reg[7]_0 (ol_wrh_n_60),
        .\TRR_i_reg[7]_1 (ol_wrh_n_29),
        .\TRR_i_reg[8]_0 (ol_wrh_n_59),
        .\TRR_i_reg[8]_1 (ol_wrh_n_28),
        .\TRR_i_reg[9]_0 (ol_wrh_n_58),
        .\TRR_i_reg[9]_1 (ol_wrh_n_27),
        .\num_reg_reg[2] (ol_txreg_n_79),
        .\num_reg_reg[2]_0 (ol_txreg_n_80),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_wdata(s_axi_wdata),
        .trig_pulse_2_i_7(winning_index_sig[1:0]),
        .trigger_next_round_d1(trigger_next_round_d1),
        .winning_or_locked_index_cancel_req_i_19({ol_wrh_n_71,ol_wrh_n_72}));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_wrh ol_wrh
       (.BUFFER_LOCKED_D1_reg_0(BUFFER_LOCKED_D1_reg),
        .CANCEL_CONFIRMED_OL_D1_SIG_reg_0(CANCEL_CONFIRMED_OL_D1_SIG_reg),
        .D({\TRR_i_reg[31] [30:21],IC_REG_TRR_I,\TRR_i_reg[31] [20:0]}),
        .IC_REG_TCR_I({IC_REG_TCR_I[0],IC_REG_TCR_I[1],IC_REG_TCR_I[2],IC_REG_TCR_I[3],IC_REG_TCR_I[4],IC_REG_TCR_I[5],IC_REG_TCR_I[6],IC_REG_TCR_I[7],IC_REG_TCR_I[8],IC_REG_TCR_I[9],IC_REG_TCR_I[10],IC_REG_TCR_I[11],IC_REG_TCR_I[18],IC_REG_TCR_I[19],IC_REG_TCR_I[20],IC_REG_TCR_I[21],IC_REG_TCR_I[22],IC_REG_TCR_I[23],IC_REG_TCR_I[24],IC_REG_TCR_I[25],IC_REG_TCR_I[26],IC_REG_TCR_I[27],IC_REG_TCR_I[28],IC_REG_TCR_I[29],IC_REG_TCR_I[30],IC_REG_TCR_I[31]}),
        .\LOCKED_BUFFER_INDEX_I_reg[4]_0 (winning_index_sig),
        .\LOCKED_ID_LOC_I_reg[9]_0 ({locked_id_loc_sig[0],locked_id_loc_sig[1],locked_id_loc_sig[2],locked_id_loc_sig[3],locked_id_loc_sig[4],locked_id_loc_sig[5],locked_id_loc_sig[6],locked_id_loc_sig[7],locked_id_loc_sig[8]}),
        .\LOCKED_ID_LOC_I_reg[9]_1 ({WINNING_ID_LOC_SIG[0],WINNING_ID_LOC_SIG[1],WINNING_ID_LOC_SIG[2],WINNING_ID_LOC_SIG[3],WINNING_ID_LOC_SIG[4],WINNING_ID_LOC_SIG[5],WINNING_ID_LOC_SIG[6],WINNING_ID_LOC_SIG[7],WINNING_ID_LOC_SIG[8]}),
        .MSG_DONE_FROM_BSP(MSG_DONE_FROM_BSP),
        .Q({ol_wrh_n_70,ol_wrh_n_71,ol_wrh_n_72}),
        .\TCR_i_reg[13] (ol_wrh_n_73),
        .\TCR_i_reg[29] (ol_wrh_n_69),
        .TRR_i2294_in(TRR_i2294_in),
        .\TRR_i_reg[0] (\TRR_i_reg[0] ),
        .\TRR_i_reg[14] (IC_REG_TCR_I[17]),
        .\TRR_i_reg[16] (IC_REG_TCR_I[15]),
        .\TRR_i_reg[17] (IC_REG_TCR_I[14]),
        .\TRR_i_reg[18] (IC_REG_TCR_I[13]),
        .\TRR_i_reg[19] (IC_REG_TCR_I[12]),
        .\exclude_winning_or_locked_req_reg[0]_0 (ol_wrh_n_67),
        .\exclude_winning_or_locked_req_reg[0]_1 (ol_wrh_n_68),
        .\exclude_winning_or_locked_req_reg[10]_0 (ol_wrh_n_26),
        .\exclude_winning_or_locked_req_reg[10]_1 (ol_wrh_n_57),
        .\exclude_winning_or_locked_req_reg[11]_0 (ol_wrh_n_25),
        .\exclude_winning_or_locked_req_reg[11]_1 (ol_wrh_n_56),
        .\exclude_winning_or_locked_req_reg[12]_0 (ol_wrh_n_24),
        .\exclude_winning_or_locked_req_reg[12]_1 (ol_wrh_n_55),
        .\exclude_winning_or_locked_req_reg[13]_0 (ol_wrh_n_23),
        .\exclude_winning_or_locked_req_reg[13]_1 (ol_wrh_n_54),
        .\exclude_winning_or_locked_req_reg[14]_0 (ol_wrh_n_5),
        .\exclude_winning_or_locked_req_reg[14]_1 (ol_wrh_n_36),
        .\exclude_winning_or_locked_req_reg[15]_0 (ol_wrh_n_6),
        .\exclude_winning_or_locked_req_reg[15]_1 (ol_wrh_n_37),
        .\exclude_winning_or_locked_req_reg[15]_2 (ol_tbs_n_9),
        .\exclude_winning_or_locked_req_reg[16]_0 (ol_wrh_n_7),
        .\exclude_winning_or_locked_req_reg[16]_1 (ol_wrh_n_38),
        .\exclude_winning_or_locked_req_reg[17]_0 (ol_wrh_n_8),
        .\exclude_winning_or_locked_req_reg[17]_1 (ol_wrh_n_39),
        .\exclude_winning_or_locked_req_reg[18]_0 (ol_wrh_n_9),
        .\exclude_winning_or_locked_req_reg[18]_1 (ol_wrh_n_40),
        .\exclude_winning_or_locked_req_reg[19]_0 (ol_wrh_n_10),
        .\exclude_winning_or_locked_req_reg[19]_1 (ol_wrh_n_41),
        .\exclude_winning_or_locked_req_reg[1]_0 (ol_wrh_n_35),
        .\exclude_winning_or_locked_req_reg[1]_1 (ol_wrh_n_66),
        .\exclude_winning_or_locked_req_reg[20]_0 (ol_wrh_n_11),
        .\exclude_winning_or_locked_req_reg[20]_1 (ol_wrh_n_42),
        .\exclude_winning_or_locked_req_reg[21]_0 (ol_wrh_n_12),
        .\exclude_winning_or_locked_req_reg[21]_1 (ol_wrh_n_43),
        .\exclude_winning_or_locked_req_reg[22]_0 (ol_wrh_n_13),
        .\exclude_winning_or_locked_req_reg[22]_1 (ol_wrh_n_44),
        .\exclude_winning_or_locked_req_reg[23]_0 (ol_wrh_n_14),
        .\exclude_winning_or_locked_req_reg[23]_1 (ol_wrh_n_45),
        .\exclude_winning_or_locked_req_reg[24]_0 (ol_wrh_n_15),
        .\exclude_winning_or_locked_req_reg[24]_1 (ol_wrh_n_46),
        .\exclude_winning_or_locked_req_reg[25]_0 (ol_wrh_n_16),
        .\exclude_winning_or_locked_req_reg[25]_1 (ol_wrh_n_47),
        .\exclude_winning_or_locked_req_reg[26]_0 (ol_wrh_n_17),
        .\exclude_winning_or_locked_req_reg[26]_1 (ol_wrh_n_48),
        .\exclude_winning_or_locked_req_reg[27]_0 (ol_wrh_n_18),
        .\exclude_winning_or_locked_req_reg[27]_1 (ol_wrh_n_49),
        .\exclude_winning_or_locked_req_reg[28]_0 (ol_wrh_n_19),
        .\exclude_winning_or_locked_req_reg[28]_1 (ol_wrh_n_50),
        .\exclude_winning_or_locked_req_reg[29]_0 (ol_wrh_n_20),
        .\exclude_winning_or_locked_req_reg[29]_1 (ol_wrh_n_51),
        .\exclude_winning_or_locked_req_reg[2]_0 (ol_wrh_n_34),
        .\exclude_winning_or_locked_req_reg[2]_1 (ol_wrh_n_65),
        .\exclude_winning_or_locked_req_reg[30]_0 (ol_wrh_n_21),
        .\exclude_winning_or_locked_req_reg[30]_1 (ol_wrh_n_52),
        .\exclude_winning_or_locked_req_reg[31]_0 (ol_wrh_n_22),
        .\exclude_winning_or_locked_req_reg[31]_1 (ol_wrh_n_53),
        .\exclude_winning_or_locked_req_reg[31]_2 ({ol_wrh_n_74,ol_wrh_n_75,ol_wrh_n_76,ol_wrh_n_77,ol_wrh_n_78,ol_wrh_n_79,ol_wrh_n_80,ol_wrh_n_81,ol_wrh_n_82,ol_wrh_n_83,ol_wrh_n_84,ol_wrh_n_85,ol_wrh_n_86,ol_wrh_n_87,ol_wrh_n_88,ol_wrh_n_89,ol_wrh_n_90,TRR_TBS_i0223_out,TRR_TBS_i0218_out,TRR_TBS_i0213_out,TRR_TBS_i0208_out,TRR_TBS_i0203_out,TRR_TBS_i0198_out,TRR_TBS_i0193_out,TRR_TBS_i0188_out,TRR_TBS_i0183_out,TRR_TBS_i0178_out,TRR_TBS_i0173_out,TRR_TBS_i0168_out,TRR_TBS_i0163_out,TRR_TBS_i0158_out,TRR_TBS_i0}),
        .\exclude_winning_or_locked_req_reg[31]_3 (ol_tbs_n_8),
        .\exclude_winning_or_locked_req_reg[31]_4 (ol_tbs_n_15),
        .\exclude_winning_or_locked_req_reg[3]_0 (ol_wrh_n_33),
        .\exclude_winning_or_locked_req_reg[3]_1 (ol_wrh_n_64),
        .\exclude_winning_or_locked_req_reg[4]_0 (ol_wrh_n_32),
        .\exclude_winning_or_locked_req_reg[4]_1 (ol_wrh_n_63),
        .\exclude_winning_or_locked_req_reg[5]_0 (ol_wrh_n_31),
        .\exclude_winning_or_locked_req_reg[5]_1 (ol_wrh_n_62),
        .\exclude_winning_or_locked_req_reg[6]_0 (ol_wrh_n_30),
        .\exclude_winning_or_locked_req_reg[6]_1 (ol_wrh_n_61),
        .\exclude_winning_or_locked_req_reg[7]_0 (ol_wrh_n_29),
        .\exclude_winning_or_locked_req_reg[7]_1 (ol_wrh_n_60),
        .\exclude_winning_or_locked_req_reg[8]_0 (ol_wrh_n_28),
        .\exclude_winning_or_locked_req_reg[8]_1 (ol_wrh_n_59),
        .\exclude_winning_or_locked_req_reg[9]_0 (ol_wrh_n_27),
        .\exclude_winning_or_locked_req_reg[9]_1 (ol_wrh_n_58),
        .index_valid_d1_reg_0(INDEX_VALID_SIG_reg),
        .out(out),
        .s_axi_aclk(s_axi_aclk),
        .src_in(src_in),
        .trig_pulse_1(trig_pulse_1),
        .trig_pulse_1_reg_0(\FSM_sequential_tbs_cs_reg[0] ),
        .trig_pulse_2(trig_pulse_2),
        .trig_pulse_20(trig_pulse_20),
        .winning_or_locked_index_cancel_req0(winning_or_locked_index_cancel_req0),
        .winning_or_locked_index_cancel_req_i_11_0(ol_txreg_n_77),
        .winning_or_locked_index_cancel_req_i_13_0(ol_txreg_n_76),
        .winning_or_locked_index_cancel_req_reg_0(winning_or_locked_index_cancel_req_reg),
        .winning_or_locked_index_cancel_req_reg_1(\MULTI_BIT.s_level_out_bus_d5_reg[0] ),
        .winning_or_locked_index_cancel_req_reg_2(IC_REG_TCR_I[16]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_tx_event_fifo_cntl tx_event_fifo_cntl
       (.D(D[2:0]),
        .E(E),
        .\FILL_LEVEL_reg[2]_0 (\FILL_LEVEL_reg[2] ),
        .\FILL_LEVEL_reg[4]_0 (\FILL_LEVEL_reg[4] ),
        .\FILL_LEVEL_reg[5]_0 (\FILL_LEVEL_reg[5] ),
        .\IC_REG_WMR_I2_reg[3]_0 (Q),
        .IC_SYNC_ISR_MSGLST_TXE(IC_SYNC_ISR_MSGLST_TXE),
        .IC_SYNC_ISR_MSGLST_reg_0(IC_SYNC_ISR_MSGLST_reg),
        .\MULTI_BIT.s_level_out_bus_d5_reg[0] (\MULTI_BIT.s_level_out_bus_d5_reg[0] ),
        .Q(\RD_INDEX_reg[1] ),
        .\RD_DATA_RET_reg[27] (\RD_DATA_RET_reg[27] ),
        .\RD_DATA_RET_reg[27]_0 (\RD_DATA_RET_reg[27]_0 ),
        .\RD_DATA_RET_reg[27]_1 (\RD_DATA_RET_reg[27]_1 ),
        .\RD_DATA_RET_reg[27]_2 (ol_tac_wr_n_21),
        .\RD_DATA_RET_reg[28] (\RD_DATA_RET_reg[28] ),
        .\RD_DATA_RET_reg[28]_0 (\RD_DATA_RET_reg[28]_0 ),
        .\RD_DATA_RET_reg[28]_1 (ol_tac_wr_n_20),
        .\RD_DATA_RET_reg[29] (\RD_DATA_RET_reg[29] ),
        .\RD_DATA_RET_reg[29]_0 (\RD_DATA_RET_reg[29]_0 ),
        .\RD_DATA_RET_reg[29]_1 (ol_tac_wr_n_19),
        .\RD_INDEX_reg[5]_0 (\RD_INDEX_reg[5] ),
        .RXF_FULL_AXI(RXF_FULL_AXI),
        .RXF_FULL_I_reg_0(RXF_FULL_I_reg),
        .\SINGLE_BIT.s_level_out_d1_cdc_to_reg (\SINGLE_BIT.s_level_out_d1_cdc_to_reg ),
        .\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 (winning_or_locked_index_cancel_req_reg),
        .SR(SR),
        .TS_RX_WDATA_F1(TS_RX_WDATA_F1),
        .TS_RX_WEN(TS_RX_WEN),
        .TXEWM_SET(TXEWM_SET),
        .TXE_BRAM_WEN(TXE_BRAM_WEN),
        .TXE_MSGVAL_D1_reg_0(TXE_MSGVAL_D1_reg),
        .TXE_MSGVAL_D1_reg_1(\TXE_DATA_TS_reg[7] ),
        .TXE_MSGVAL_D2_reg_0(TXE_MSGVAL_D2_reg),
        .TXE_MSGVAL_FD1(TXE_MSGVAL_FD1),
        .TXE_MSGVAL_FD2(TXE_MSGVAL_FD2),
        .addr_location_incr_count_reg_0(addr_location_incr_count_reg),
        .addr_location_incr_count_reg_1(addr_location_incr_count_reg_0),
        .addra(addra),
        .can_clk(can_clk),
        .dest_arst(dest_arst),
        .dina(dina),
        .\gen_wr_a.gen_word_narrow.mem_reg_0 (txmsg_addr_gen_n_41),
        .\gen_wr_a.gen_word_narrow.mem_reg_0_0 (txmsg_addr_gen_n_42),
        .\gen_wr_a.gen_word_narrow.mem_reg_1 (\gen_wr_a.gen_word_narrow.mem_reg_1_1 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_0 (txmsg_addr_gen_n_10),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_1 (\gen_wr_a.gen_word_narrow.mem_reg_1_4 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_10 (txmsg_addr_gen_n_35),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_11 (txmsg_addr_gen_n_36),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_12 (txmsg_addr_gen_n_37),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_13 (txmsg_addr_gen_n_38),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_14 (txmsg_addr_gen_n_39),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_15 (txmsg_addr_gen_n_40),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_16 (\gen_wr_a.gen_word_narrow.mem_reg_1_2 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_17 (\gen_wr_a.gen_word_narrow.mem_reg_1_3 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_2 (\gen_wr_a.gen_word_narrow.mem_reg_1_5 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_3 (txmsg_addr_gen_n_28),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_4 (txmsg_addr_gen_n_29),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_5 (txmsg_addr_gen_n_30),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_6 (txmsg_addr_gen_n_31),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_7 (txmsg_addr_gen_n_32),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_8 ({txe_id_data_i[6],txe_id_data_i[16],txe_id_data_i[17],txe_id_data_i[18],txe_id_data_i[19],txe_id_data_i[20],txe_id_data_i[21],txe_id_data_i[22],txe_id_data_i[23],txe_id_data_i[24],txe_id_data_i[25],txe_id_data_i[26],txe_id_data_i[27],txe_id_data_i[28],txe_id_data_i[29],txe_id_data_i[30],txe_id_data_i[31]}),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_9 (txmsg_addr_gen_n_33),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_wdata(s_axi_wdata[4:0]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_txmsg_addr_gen txmsg_addr_gen
       (.ADDR_M_CC(ADDR_M_CC),
        .Q({txe_id_data_i[6],txe_id_data_i[16],txe_id_data_i[17],txe_id_data_i[18],txe_id_data_i[19],txe_id_data_i[20],txe_id_data_i[21],txe_id_data_i[22],txe_id_data_i[23],txe_id_data_i[24],txe_id_data_i[25],txe_id_data_i[26],txe_id_data_i[27],txe_id_data_i[28],txe_id_data_i[29],txe_id_data_i[30],txe_id_data_i[31]}),
        .SR(SR),
        .\TXE_DATA_TS_reg[0]_0 (txmsg_addr_gen_n_10),
        .\TXE_DATA_TS_reg[10]_0 (txmsg_addr_gen_n_37),
        .\TXE_DATA_TS_reg[11]_0 (txmsg_addr_gen_n_38),
        .\TXE_DATA_TS_reg[12]_0 (txmsg_addr_gen_n_39),
        .\TXE_DATA_TS_reg[13]_0 (txmsg_addr_gen_n_40),
        .\TXE_DATA_TS_reg[14]_0 (txmsg_addr_gen_n_41),
        .\TXE_DATA_TS_reg[15]_0 (txmsg_addr_gen_n_42),
        .\TXE_DATA_TS_reg[1]_0 (txmsg_addr_gen_n_28),
        .\TXE_DATA_TS_reg[2]_0 (txmsg_addr_gen_n_29),
        .\TXE_DATA_TS_reg[3]_0 (txmsg_addr_gen_n_30),
        .\TXE_DATA_TS_reg[4]_0 (txmsg_addr_gen_n_31),
        .\TXE_DATA_TS_reg[5]_0 (txmsg_addr_gen_n_32),
        .\TXE_DATA_TS_reg[7]_0 (txmsg_addr_gen_n_33),
        .\TXE_DATA_TS_reg[7]_1 (\TXE_DATA_TS_reg[7] ),
        .\TXE_DATA_TS_reg[8]_0 (txmsg_addr_gen_n_35),
        .\TXE_DATA_TS_reg[9]_0 (txmsg_addr_gen_n_36),
        .\addr_location_incr_count_reg[0]_0 (\addr_location_incr_count_reg[0] ),
        .\addr_location_incr_count_reg[4]_0 (\addr_location_incr_count_reg[4] ),
        .can_clk(can_clk),
        .\gen_wr_a.gen_word_narrow.mem_reg_1 (TXE_MSGVAL_D2_reg),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_0 (TXE_MSGVAL_D1_reg),
        .\syncstages_ff_reg[0][9] ({locked_id_loc_sig[0],locked_id_loc_sig[1],locked_id_loc_sig[2],locked_id_loc_sig[3],locked_id_loc_sig[4],locked_id_loc_sig[5],locked_id_loc_sig[6],locked_id_loc_sig[7],locked_id_loc_sig[8]}),
        .\txe_id_data_i_reg[0]_0 (\txe_id_data_i_reg[0] ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_tbs
   (trigger_next_round,
    trigger_next_round_d1,
    INDEX_VALID_SIG_reg_0,
    Q,
    passed_trig0,
    \FSM_sequential_tbs_cs_reg[0]_0 ,
    winning_or_locked_index_cancel_req0,
    \WINNING_INDEX_SIG_reg[4]_0 ,
    INDEX_VALID_SIG_reg_1,
    \WINNING_INDEX_SIG_reg[4]_1 ,
    E_RST_I_reg,
    \FSM_sequential_tbs_cs_reg[0]_1 ,
    \RUNNING_ID_LOC_reg_reg[0]_0 ,
    \num_reg_reg[4]_0 ,
    trig_pulse_20,
    \num_reg_reg[4]_1 ,
    TRR_i2294_in,
    \WINNING_ID_LOC_SIG_reg[0]_0 ,
    ACK_N_PROCESSING_D1_reg_0,
    trigger_next_round0,
    s_axi_aclk,
    INDEX_VALID_SIG_reg_2,
    \RUNNING_ID_LOC_reg_reg[8]_0 ,
    ACK_S_SIG,
    TRR_REG_WRITE_PULSE,
    passed_trig_reg,
    winning_or_locked_index_cancel_req_reg,
    winning_or_locked_index_cancel_req_reg_0,
    invalidate_buffer_i,
    winning_or_locked_index_cancel_req_reg_1,
    MSG_DONE_FROM_BSP,
    \exclude_winning_or_locked_req_reg[31] ,
    winning_or_locked_index_cancel_req_reg_2,
    winning_or_locked_index_cancel_req_i_3_0,
    winning_or_locked_index_cancel_req_i_3_1,
    winning_or_locked_index_cancel_req_i_3_2,
    winning_or_locked_index_cancel_req_i_3_3,
    winning_or_locked_index_cancel_req_i_8_0,
    winning_or_locked_index_cancel_req_i_8_1,
    winning_or_locked_index_cancel_req_i_2_0,
    trig_pulse_2_i_3_0,
    trig_pulse_2_i_3_1,
    trig_pulse_2_i_6_0,
    trig_pulse_2_i_6_1,
    winning_or_locked_index_cancel_req_i_3_4,
    winning_or_locked_index_cancel_req_i_3_5,
    trig_pulse_2_i_3_2,
    trig_pulse_2_i_3_3,
    trig_pulse_2_i_3_4,
    trig_pulse_2_i_3_5,
    winning_or_locked_index_cancel_req_i_9_0,
    winning_or_locked_index_cancel_req_i_9_1,
    trig_pulse_2_i_7_0,
    trig_pulse_2_i_7_1,
    winning_or_locked_index_cancel_req_i_3_6,
    winning_or_locked_index_cancel_req_i_3_7,
    trig_pulse_2_i_3_6,
    trig_pulse_2_i_3_7,
    \FSM_sequential_tbs_cs_reg[0]_2 ,
    \FSM_sequential_tbs_cs_reg[0]_3 ,
    \FSM_sequential_tbs_cs_reg[0]_4 ,
    \FSM_sequential_tbs_cs[0]_i_3_0 ,
    TBS_RUNNING_D1,
    \RD_DATA_S_D1_reg[0]_0 );
  output trigger_next_round;
  output trigger_next_round_d1;
  output INDEX_VALID_SIG_reg_0;
  output [1:0]Q;
  output passed_trig0;
  output \FSM_sequential_tbs_cs_reg[0]_0 ;
  output winning_or_locked_index_cancel_req0;
  output \WINNING_INDEX_SIG_reg[4]_0 ;
  output INDEX_VALID_SIG_reg_1;
  output [4:0]\WINNING_INDEX_SIG_reg[4]_1 ;
  output E_RST_I_reg;
  output \FSM_sequential_tbs_cs_reg[0]_1 ;
  output [8:0]\RUNNING_ID_LOC_reg_reg[0]_0 ;
  output [4:0]\num_reg_reg[4]_0 ;
  output trig_pulse_20;
  output \num_reg_reg[4]_1 ;
  output TRR_i2294_in;
  output [8:0]\WINNING_ID_LOC_SIG_reg[0]_0 ;
  input ACK_N_PROCESSING_D1_reg_0;
  input trigger_next_round0;
  input s_axi_aclk;
  input INDEX_VALID_SIG_reg_2;
  input \RUNNING_ID_LOC_reg_reg[8]_0 ;
  input ACK_S_SIG;
  input TRR_REG_WRITE_PULSE;
  input passed_trig_reg;
  input [0:0]winning_or_locked_index_cancel_req_reg;
  input winning_or_locked_index_cancel_req_reg_0;
  input invalidate_buffer_i;
  input winning_or_locked_index_cancel_req_reg_1;
  input MSG_DONE_FROM_BSP;
  input \exclude_winning_or_locked_req_reg[31] ;
  input winning_or_locked_index_cancel_req_reg_2;
  input winning_or_locked_index_cancel_req_i_3_0;
  input winning_or_locked_index_cancel_req_i_3_1;
  input winning_or_locked_index_cancel_req_i_3_2;
  input winning_or_locked_index_cancel_req_i_3_3;
  input winning_or_locked_index_cancel_req_i_8_0;
  input winning_or_locked_index_cancel_req_i_8_1;
  input winning_or_locked_index_cancel_req_i_2_0;
  input trig_pulse_2_i_3_0;
  input trig_pulse_2_i_3_1;
  input trig_pulse_2_i_6_0;
  input trig_pulse_2_i_6_1;
  input winning_or_locked_index_cancel_req_i_3_4;
  input winning_or_locked_index_cancel_req_i_3_5;
  input trig_pulse_2_i_3_2;
  input trig_pulse_2_i_3_3;
  input trig_pulse_2_i_3_4;
  input trig_pulse_2_i_3_5;
  input winning_or_locked_index_cancel_req_i_9_0;
  input winning_or_locked_index_cancel_req_i_9_1;
  input trig_pulse_2_i_7_0;
  input trig_pulse_2_i_7_1;
  input winning_or_locked_index_cancel_req_i_3_6;
  input winning_or_locked_index_cancel_req_i_3_7;
  input trig_pulse_2_i_3_6;
  input trig_pulse_2_i_3_7;
  input \FSM_sequential_tbs_cs_reg[0]_2 ;
  input \FSM_sequential_tbs_cs_reg[0]_3 ;
  input \FSM_sequential_tbs_cs_reg[0]_4 ;
  input [0:0]\FSM_sequential_tbs_cs[0]_i_3_0 ;
  input TBS_RUNNING_D1;
  input [31:0]\RD_DATA_S_D1_reg[0]_0 ;

  wire ACK_N_PROCESSING;
  wire ACK_N_PROCESSING_D1;
  wire ACK_N_PROCESSING_D1_reg_0;
  wire ACK_S_SIG;
  wire E_RST_I_reg;
  wire FIRST_VALID_ID_NOT_READ_i_1_n_0;
  wire FIRST_VALID_ID_NOT_READ_reg_n_0;
  wire FIRST_VALID_ID_READ_PULSE;
  wire FIRST_VALID_ID_READ_PULSE0;
  wire [0:0]\FSM_sequential_tbs_cs[0]_i_3_0 ;
  wire \FSM_sequential_tbs_cs[0]_i_3_n_0 ;
  wire \FSM_sequential_tbs_cs[0]_i_7_n_0 ;
  wire \FSM_sequential_tbs_cs[1]_i_3_n_0 ;
  wire \FSM_sequential_tbs_cs_reg[0]_0 ;
  wire \FSM_sequential_tbs_cs_reg[0]_1 ;
  wire \FSM_sequential_tbs_cs_reg[0]_2 ;
  wire \FSM_sequential_tbs_cs_reg[0]_3 ;
  wire \FSM_sequential_tbs_cs_reg[0]_4 ;
  wire INDEX_VALID_SIG_reg_0;
  wire INDEX_VALID_SIG_reg_1;
  wire INDEX_VALID_SIG_reg_2;
  wire LAST_ENTRY_FLAG_i_1_n_0;
  wire LAST_ENTRY_FLAG_reg_n_0;
  wire MSG_DONE_FROM_BSP;
  wire [1:0]Q;
  wire [31:0]\RD_DATA_S_D1_reg[0]_0 ;
  wire \RD_DATA_S_D1_reg_n_0_[0] ;
  wire \RD_DATA_S_D1_reg_n_0_[10] ;
  wire \RD_DATA_S_D1_reg_n_0_[11] ;
  wire \RD_DATA_S_D1_reg_n_0_[13] ;
  wire \RD_DATA_S_D1_reg_n_0_[14] ;
  wire \RD_DATA_S_D1_reg_n_0_[15] ;
  wire \RD_DATA_S_D1_reg_n_0_[16] ;
  wire \RD_DATA_S_D1_reg_n_0_[17] ;
  wire \RD_DATA_S_D1_reg_n_0_[18] ;
  wire \RD_DATA_S_D1_reg_n_0_[19] ;
  wire \RD_DATA_S_D1_reg_n_0_[1] ;
  wire \RD_DATA_S_D1_reg_n_0_[20] ;
  wire \RD_DATA_S_D1_reg_n_0_[21] ;
  wire \RD_DATA_S_D1_reg_n_0_[22] ;
  wire \RD_DATA_S_D1_reg_n_0_[23] ;
  wire \RD_DATA_S_D1_reg_n_0_[24] ;
  wire \RD_DATA_S_D1_reg_n_0_[25] ;
  wire \RD_DATA_S_D1_reg_n_0_[26] ;
  wire \RD_DATA_S_D1_reg_n_0_[27] ;
  wire \RD_DATA_S_D1_reg_n_0_[28] ;
  wire \RD_DATA_S_D1_reg_n_0_[29] ;
  wire \RD_DATA_S_D1_reg_n_0_[2] ;
  wire \RD_DATA_S_D1_reg_n_0_[30] ;
  wire \RD_DATA_S_D1_reg_n_0_[31] ;
  wire \RD_DATA_S_D1_reg_n_0_[3] ;
  wire \RD_DATA_S_D1_reg_n_0_[4] ;
  wire \RD_DATA_S_D1_reg_n_0_[5] ;
  wire \RD_DATA_S_D1_reg_n_0_[6] ;
  wire \RD_DATA_S_D1_reg_n_0_[7] ;
  wire \RD_DATA_S_D1_reg_n_0_[8] ;
  wire \RD_DATA_S_D1_reg_n_0_[9] ;
  wire [0:8]RUNNING_ID_LOC;
  wire \RUNNING_ID_LOC_reg[0]_i_2_n_0 ;
  wire \RUNNING_ID_LOC_reg[3]_i_2_n_0 ;
  wire [0:8]RUNNING_ID_LOC_reg_d1;
  wire [8:0]\RUNNING_ID_LOC_reg_reg[0]_0 ;
  wire \RUNNING_ID_LOC_reg_reg[8]_0 ;
  wire TBS_RUNNING_D1;
  wire TBS_RUNNING_SIG_i_1_n_0;
  wire TBS_RUNNING_SIG_reg_n_0;
  wire TRR_REG_WRITE_PULSE;
  wire TRR_i2294_in;
  wire WINNING_ID_DATA0_carry__0_i_1_n_0;
  wire WINNING_ID_DATA0_carry__0_i_2_n_0;
  wire WINNING_ID_DATA0_carry__0_i_3_n_0;
  wire WINNING_ID_DATA0_carry__0_i_4_n_0;
  wire WINNING_ID_DATA0_carry__0_i_5_n_0;
  wire WINNING_ID_DATA0_carry__0_i_6_n_0;
  wire WINNING_ID_DATA0_carry__0_n_1;
  wire WINNING_ID_DATA0_carry__0_n_2;
  wire WINNING_ID_DATA0_carry__0_n_3;
  wire WINNING_ID_DATA0_carry_i_1_n_0;
  wire WINNING_ID_DATA0_carry_i_2_n_0;
  wire WINNING_ID_DATA0_carry_i_3_n_0;
  wire WINNING_ID_DATA0_carry_i_4_n_0;
  wire WINNING_ID_DATA0_carry_i_5_n_0;
  wire WINNING_ID_DATA0_carry_i_6_n_0;
  wire WINNING_ID_DATA0_carry_i_7_n_0;
  wire WINNING_ID_DATA0_carry_i_8_n_0;
  wire WINNING_ID_DATA0_carry_n_0;
  wire WINNING_ID_DATA0_carry_n_1;
  wire WINNING_ID_DATA0_carry_n_2;
  wire WINNING_ID_DATA0_carry_n_3;
  wire \WINNING_ID_DATA0_inferred__0/i__carry__0_n_0 ;
  wire \WINNING_ID_DATA0_inferred__0/i__carry__0_n_1 ;
  wire \WINNING_ID_DATA0_inferred__0/i__carry__0_n_2 ;
  wire \WINNING_ID_DATA0_inferred__0/i__carry__0_n_3 ;
  wire \WINNING_ID_DATA0_inferred__0/i__carry__1_n_0 ;
  wire \WINNING_ID_DATA0_inferred__0/i__carry__1_n_1 ;
  wire \WINNING_ID_DATA0_inferred__0/i__carry__1_n_2 ;
  wire \WINNING_ID_DATA0_inferred__0/i__carry__1_n_3 ;
  wire \WINNING_ID_DATA0_inferred__0/i__carry__2_n_0 ;
  wire \WINNING_ID_DATA0_inferred__0/i__carry__2_n_1 ;
  wire \WINNING_ID_DATA0_inferred__0/i__carry__2_n_2 ;
  wire \WINNING_ID_DATA0_inferred__0/i__carry__2_n_3 ;
  wire \WINNING_ID_DATA0_inferred__0/i__carry_n_0 ;
  wire \WINNING_ID_DATA0_inferred__0/i__carry_n_1 ;
  wire \WINNING_ID_DATA0_inferred__0/i__carry_n_2 ;
  wire \WINNING_ID_DATA0_inferred__0/i__carry_n_3 ;
  wire \WINNING_ID_DATA_reg_n_0_[0] ;
  wire \WINNING_ID_DATA_reg_n_0_[10] ;
  wire \WINNING_ID_DATA_reg_n_0_[11] ;
  wire \WINNING_ID_DATA_reg_n_0_[13] ;
  wire \WINNING_ID_DATA_reg_n_0_[14] ;
  wire \WINNING_ID_DATA_reg_n_0_[15] ;
  wire \WINNING_ID_DATA_reg_n_0_[16] ;
  wire \WINNING_ID_DATA_reg_n_0_[17] ;
  wire \WINNING_ID_DATA_reg_n_0_[18] ;
  wire \WINNING_ID_DATA_reg_n_0_[19] ;
  wire \WINNING_ID_DATA_reg_n_0_[1] ;
  wire \WINNING_ID_DATA_reg_n_0_[20] ;
  wire \WINNING_ID_DATA_reg_n_0_[21] ;
  wire \WINNING_ID_DATA_reg_n_0_[22] ;
  wire \WINNING_ID_DATA_reg_n_0_[23] ;
  wire \WINNING_ID_DATA_reg_n_0_[24] ;
  wire \WINNING_ID_DATA_reg_n_0_[25] ;
  wire \WINNING_ID_DATA_reg_n_0_[26] ;
  wire \WINNING_ID_DATA_reg_n_0_[27] ;
  wire \WINNING_ID_DATA_reg_n_0_[28] ;
  wire \WINNING_ID_DATA_reg_n_0_[29] ;
  wire \WINNING_ID_DATA_reg_n_0_[2] ;
  wire \WINNING_ID_DATA_reg_n_0_[30] ;
  wire \WINNING_ID_DATA_reg_n_0_[31] ;
  wire \WINNING_ID_DATA_reg_n_0_[3] ;
  wire \WINNING_ID_DATA_reg_n_0_[4] ;
  wire \WINNING_ID_DATA_reg_n_0_[5] ;
  wire \WINNING_ID_DATA_reg_n_0_[6] ;
  wire \WINNING_ID_DATA_reg_n_0_[7] ;
  wire \WINNING_ID_DATA_reg_n_0_[8] ;
  wire \WINNING_ID_DATA_reg_n_0_[9] ;
  wire WINNING_ID_LOC_SIG;
  wire [8:0]\WINNING_ID_LOC_SIG_reg[0]_0 ;
  wire \WINNING_INDEX_SIG_reg[4]_0 ;
  wire [4:0]\WINNING_INDEX_SIG_reg[4]_1 ;
  wire \exclude_winning_or_locked_req_reg[31] ;
  wire i__carry__0_i_1__0_n_0;
  wire i__carry__0_i_2__0_n_0;
  wire i__carry__0_i_3__0_n_0;
  wire i__carry__0_i_4__0_n_0;
  wire i__carry__0_i_5__0_n_0;
  wire i__carry__0_i_6_n_0;
  wire i__carry__0_i_7_n_0;
  wire i__carry__0_i_8_n_0;
  wire i__carry__1_i_1_n_0;
  wire i__carry__1_i_2_n_0;
  wire i__carry__1_i_3_n_0;
  wire i__carry__1_i_4_n_0;
  wire i__carry__1_i_5_n_0;
  wire i__carry__1_i_6_n_0;
  wire i__carry__1_i_7_n_0;
  wire i__carry__1_i_8_n_0;
  wire i__carry__2_i_1_n_0;
  wire i__carry__2_i_2_n_0;
  wire i__carry__2_i_3_n_0;
  wire i__carry__2_i_4_n_0;
  wire i__carry__2_i_5_n_0;
  wire i__carry__2_i_6_n_0;
  wire i__carry__2_i_7_n_0;
  wire i__carry__2_i_8_n_0;
  wire i__carry_i_1__0_n_0;
  wire i__carry_i_2__0_n_0;
  wire i__carry_i_3__0_n_0;
  wire i__carry_i_4__0_n_0;
  wire i__carry_i_5__0_n_0;
  wire i__carry_i_6__0_n_0;
  wire i__carry_i_7__0_n_0;
  wire i__carry_i_8__0_n_0;
  wire invalidate_buffer_i;
  wire [4:0]num;
  wire \num_reg[4]_i_1_n_0 ;
  wire \num_reg[4]_i_3_n_0 ;
  wire \num_reg[4]_i_4_n_0 ;
  wire \num_reg[4]_i_5_n_0 ;
  wire [4:0]num_reg_d1;
  wire [4:0]\num_reg_reg[4]_0 ;
  wire \num_reg_reg[4]_1 ;
  wire [0:0]p_0_in;
  wire [0:0]p_1_in;
  wire passed_trig0;
  wire passed_trig_reg;
  wire s_axi_aclk;
  wire [1:0]tbs_ns;
  wire trig_pulse_20;
  wire trig_pulse_2_i_2_n_0;
  wire trig_pulse_2_i_3_0;
  wire trig_pulse_2_i_3_1;
  wire trig_pulse_2_i_3_2;
  wire trig_pulse_2_i_3_3;
  wire trig_pulse_2_i_3_4;
  wire trig_pulse_2_i_3_5;
  wire trig_pulse_2_i_3_6;
  wire trig_pulse_2_i_3_7;
  wire trig_pulse_2_i_3_n_0;
  wire trig_pulse_2_i_4_n_0;
  wire trig_pulse_2_i_5_n_0;
  wire trig_pulse_2_i_6_0;
  wire trig_pulse_2_i_6_1;
  wire trig_pulse_2_i_6_n_0;
  wire trig_pulse_2_i_7_0;
  wire trig_pulse_2_i_7_1;
  wire trig_pulse_2_i_7_n_0;
  wire trig_pulse_2_i_8_n_0;
  wire trig_pulse_2_i_9_n_0;
  wire trigger_next_round;
  wire trigger_next_round0;
  wire trigger_next_round_d1;
  wire winning_or_locked_index_cancel_req0;
  wire winning_or_locked_index_cancel_req_i_10_n_0;
  wire winning_or_locked_index_cancel_req_i_14_n_0;
  wire winning_or_locked_index_cancel_req_i_15_n_0;
  wire winning_or_locked_index_cancel_req_i_16_n_0;
  wire winning_or_locked_index_cancel_req_i_18_n_0;
  wire winning_or_locked_index_cancel_req_i_2_0;
  wire winning_or_locked_index_cancel_req_i_2_n_0;
  wire winning_or_locked_index_cancel_req_i_3_0;
  wire winning_or_locked_index_cancel_req_i_3_1;
  wire winning_or_locked_index_cancel_req_i_3_2;
  wire winning_or_locked_index_cancel_req_i_3_3;
  wire winning_or_locked_index_cancel_req_i_3_4;
  wire winning_or_locked_index_cancel_req_i_3_5;
  wire winning_or_locked_index_cancel_req_i_3_6;
  wire winning_or_locked_index_cancel_req_i_3_7;
  wire winning_or_locked_index_cancel_req_i_3_n_0;
  wire winning_or_locked_index_cancel_req_i_6_n_0;
  wire winning_or_locked_index_cancel_req_i_7_n_0;
  wire winning_or_locked_index_cancel_req_i_8_0;
  wire winning_or_locked_index_cancel_req_i_8_1;
  wire winning_or_locked_index_cancel_req_i_8_n_0;
  wire winning_or_locked_index_cancel_req_i_9_0;
  wire winning_or_locked_index_cancel_req_i_9_1;
  wire winning_or_locked_index_cancel_req_i_9_n_0;
  wire [0:0]winning_or_locked_index_cancel_req_reg;
  wire winning_or_locked_index_cancel_req_reg_0;
  wire winning_or_locked_index_cancel_req_reg_1;
  wire winning_or_locked_index_cancel_req_reg_2;
  wire [3:0]NLW_WINNING_ID_DATA0_carry_O_UNCONNECTED;
  wire [3:3]NLW_WINNING_ID_DATA0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_WINNING_ID_DATA0_carry__0_O_UNCONNECTED;
  wire [3:0]\NLW_WINNING_ID_DATA0_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:0]\NLW_WINNING_ID_DATA0_inferred__0/i__carry__0_O_UNCONNECTED ;
  wire [3:0]\NLW_WINNING_ID_DATA0_inferred__0/i__carry__1_O_UNCONNECTED ;
  wire [3:0]\NLW_WINNING_ID_DATA0_inferred__0/i__carry__2_O_UNCONNECTED ;

  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT3 #(
    .INIT(8'h40)) 
    ACK_N_PROCESSING_D1_i_1
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(ACK_S_SIG),
        .O(ACK_N_PROCESSING));
  FDRE ACK_N_PROCESSING_D1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ACK_N_PROCESSING),
        .Q(ACK_N_PROCESSING_D1),
        .R(ACK_N_PROCESSING_D1_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT5 #(
    .INIT(32'hEEAEEEFF)) 
    FIRST_VALID_ID_NOT_READ_i_1
       (.I0(ACK_N_PROCESSING_D1_reg_0),
        .I1(FIRST_VALID_ID_NOT_READ_reg_n_0),
        .I2(ACK_S_SIG),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(FIRST_VALID_ID_NOT_READ_i_1_n_0));
  FDRE FIRST_VALID_ID_NOT_READ_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(FIRST_VALID_ID_NOT_READ_i_1_n_0),
        .Q(FIRST_VALID_ID_NOT_READ_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    FIRST_VALID_ID_READ_PULSE_i_1
       (.I0(ACK_S_SIG),
        .I1(FIRST_VALID_ID_NOT_READ_reg_n_0),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(FIRST_VALID_ID_READ_PULSE0));
  FDRE FIRST_VALID_ID_READ_PULSE_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(FIRST_VALID_ID_READ_PULSE0),
        .Q(FIRST_VALID_ID_READ_PULSE),
        .R(ACK_N_PROCESSING_D1_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT5 #(
    .INIT(32'h45016723)) 
    \FSM_sequential_tbs_cs[0]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\RUNNING_ID_LOC_reg_reg[8]_0 ),
        .I3(ACK_S_SIG),
        .I4(\FSM_sequential_tbs_cs[0]_i_3_n_0 ),
        .O(tbs_ns[0]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \FSM_sequential_tbs_cs[0]_i_16 
       (.I0(\num_reg_reg[4]_0 [4]),
        .I1(\num_reg_reg[4]_0 [3]),
        .I2(\num_reg_reg[4]_0 [2]),
        .O(\num_reg_reg[4]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFAAEA)) 
    \FSM_sequential_tbs_cs[0]_i_3 
       (.I0(\FSM_sequential_tbs_cs[0]_i_7_n_0 ),
        .I1(\FSM_sequential_tbs_cs_reg[0]_2 ),
        .I2(\num_reg_reg[4]_0 [3]),
        .I3(\num_reg_reg[4]_0 [4]),
        .I4(\FSM_sequential_tbs_cs_reg[0]_3 ),
        .I5(\FSM_sequential_tbs_cs_reg[0]_4 ),
        .O(\FSM_sequential_tbs_cs[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \FSM_sequential_tbs_cs[0]_i_7 
       (.I0(\FSM_sequential_tbs_cs[0]_i_3_0 ),
        .I1(\num_reg_reg[4]_0 [1]),
        .I2(\num_reg_reg[4]_0 [0]),
        .I3(\num_reg_reg[4]_0 [2]),
        .I4(\num_reg_reg[4]_0 [3]),
        .I5(\num_reg_reg[4]_0 [4]),
        .O(\FSM_sequential_tbs_cs[0]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hAAEEAFAA)) 
    \FSM_sequential_tbs_cs[1]_i_1 
       (.I0(\FSM_sequential_tbs_cs_reg[0]_1 ),
        .I1(LAST_ENTRY_FLAG_reg_n_0),
        .I2(\FSM_sequential_tbs_cs[1]_i_3_n_0 ),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(tbs_ns[1]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT4 #(
    .INIT(16'h0838)) 
    \FSM_sequential_tbs_cs[1]_i_2 
       (.I0(\FSM_sequential_tbs_cs[0]_i_3_n_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(ACK_S_SIG),
        .O(\FSM_sequential_tbs_cs_reg[0]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \FSM_sequential_tbs_cs[1]_i_3 
       (.I0(\num_reg_reg[4]_0 [4]),
        .I1(\num_reg_reg[4]_0 [3]),
        .I2(\num_reg_reg[4]_0 [2]),
        .I3(\num_reg_reg[4]_0 [1]),
        .I4(\num_reg_reg[4]_0 [0]),
        .O(\FSM_sequential_tbs_cs[1]_i_3_n_0 ));
  (* FSM_ENCODED_STATES = "IDLE:00,PROCESSING:10,LOOPING:01,ROUND_FINISH:11" *) 
  FDRE \FSM_sequential_tbs_cs_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(tbs_ns[0]),
        .Q(Q[0]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  (* FSM_ENCODED_STATES = "IDLE:00,PROCESSING:10,LOOPING:01,ROUND_FINISH:11" *) 
  FDRE \FSM_sequential_tbs_cs_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(tbs_ns[1]),
        .Q(Q[1]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE INDEX_VALID_SIG_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(INDEX_VALID_SIG_reg_2),
        .Q(INDEX_VALID_SIG_reg_0),
        .R(ACK_N_PROCESSING_D1_reg_0));
  LUT5 #(
    .INIT(32'h000B0A0A)) 
    LAST_ENTRY_FLAG_i_1
       (.I0(LAST_ENTRY_FLAG_reg_n_0),
        .I1(\FSM_sequential_tbs_cs[1]_i_3_n_0 ),
        .I2(ACK_N_PROCESSING_D1_reg_0),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(LAST_ENTRY_FLAG_i_1_n_0));
  FDRE LAST_ENTRY_FLAG_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(LAST_ENTRY_FLAG_i_1_n_0),
        .Q(LAST_ENTRY_FLAG_reg_n_0),
        .R(1'b0));
  FDRE \RD_DATA_S_D1_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [31]),
        .Q(\RD_DATA_S_D1_reg_n_0_[0] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [21]),
        .Q(\RD_DATA_S_D1_reg_n_0_[10] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [20]),
        .Q(\RD_DATA_S_D1_reg_n_0_[11] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [19]),
        .Q(p_1_in),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [18]),
        .Q(\RD_DATA_S_D1_reg_n_0_[13] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [17]),
        .Q(\RD_DATA_S_D1_reg_n_0_[14] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [16]),
        .Q(\RD_DATA_S_D1_reg_n_0_[15] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [15]),
        .Q(\RD_DATA_S_D1_reg_n_0_[16] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [14]),
        .Q(\RD_DATA_S_D1_reg_n_0_[17] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[18] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [13]),
        .Q(\RD_DATA_S_D1_reg_n_0_[18] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[19] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [12]),
        .Q(\RD_DATA_S_D1_reg_n_0_[19] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [30]),
        .Q(\RD_DATA_S_D1_reg_n_0_[1] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[20] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [11]),
        .Q(\RD_DATA_S_D1_reg_n_0_[20] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[21] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [10]),
        .Q(\RD_DATA_S_D1_reg_n_0_[21] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[22] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [9]),
        .Q(\RD_DATA_S_D1_reg_n_0_[22] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[23] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [8]),
        .Q(\RD_DATA_S_D1_reg_n_0_[23] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[24] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [7]),
        .Q(\RD_DATA_S_D1_reg_n_0_[24] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[25] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [6]),
        .Q(\RD_DATA_S_D1_reg_n_0_[25] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[26] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [5]),
        .Q(\RD_DATA_S_D1_reg_n_0_[26] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[27] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [4]),
        .Q(\RD_DATA_S_D1_reg_n_0_[27] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[28] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [3]),
        .Q(\RD_DATA_S_D1_reg_n_0_[28] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[29] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [2]),
        .Q(\RD_DATA_S_D1_reg_n_0_[29] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [29]),
        .Q(\RD_DATA_S_D1_reg_n_0_[2] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[30] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [1]),
        .Q(\RD_DATA_S_D1_reg_n_0_[30] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[31] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [0]),
        .Q(\RD_DATA_S_D1_reg_n_0_[31] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [28]),
        .Q(\RD_DATA_S_D1_reg_n_0_[3] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [27]),
        .Q(\RD_DATA_S_D1_reg_n_0_[4] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [26]),
        .Q(\RD_DATA_S_D1_reg_n_0_[5] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [25]),
        .Q(\RD_DATA_S_D1_reg_n_0_[6] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [24]),
        .Q(\RD_DATA_S_D1_reg_n_0_[7] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [23]),
        .Q(\RD_DATA_S_D1_reg_n_0_[8] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RD_DATA_S_D1_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_DATA_S_D1_reg[0]_0 [22]),
        .Q(\RD_DATA_S_D1_reg_n_0_[9] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  LUT6 #(
    .INIT(64'h00DFDF0000202000)) 
    \RUNNING_ID_LOC_reg[0]_i_1 
       (.I0(\RUNNING_ID_LOC_reg_reg[0]_0 [6]),
        .I1(\RUNNING_ID_LOC_reg[0]_i_2_n_0 ),
        .I2(\RUNNING_ID_LOC_reg_reg[0]_0 [7]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(\RUNNING_ID_LOC_reg_reg[0]_0 [8]),
        .O(RUNNING_ID_LOC[0]));
  LUT6 #(
    .INIT(64'h1555FFFFFFFFFFFF)) 
    \RUNNING_ID_LOC_reg[0]_i_2 
       (.I0(\RUNNING_ID_LOC_reg_reg[0]_0 [3]),
        .I1(\RUNNING_ID_LOC_reg_reg[0]_0 [2]),
        .I2(\RUNNING_ID_LOC_reg_reg[0]_0 [1]),
        .I3(\RUNNING_ID_LOC_reg_reg[0]_0 [0]),
        .I4(\RUNNING_ID_LOC_reg_reg[0]_0 [4]),
        .I5(\RUNNING_ID_LOC_reg_reg[0]_0 [5]),
        .O(\RUNNING_ID_LOC_reg[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT5 #(
    .INIT(32'h0BB00440)) 
    \RUNNING_ID_LOC_reg[1]_i_1 
       (.I0(\RUNNING_ID_LOC_reg[0]_i_2_n_0 ),
        .I1(\RUNNING_ID_LOC_reg_reg[0]_0 [6]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\RUNNING_ID_LOC_reg_reg[0]_0 [7]),
        .O(RUNNING_ID_LOC[1]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT4 #(
    .INIT(16'h2814)) 
    \RUNNING_ID_LOC_reg[2]_i_1 
       (.I0(\RUNNING_ID_LOC_reg[0]_i_2_n_0 ),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\RUNNING_ID_LOC_reg_reg[0]_0 [6]),
        .O(RUNNING_ID_LOC[2]));
  LUT5 #(
    .INIT(32'hFF6A6AFF)) 
    \RUNNING_ID_LOC_reg[3]_i_1 
       (.I0(\RUNNING_ID_LOC_reg_reg[0]_0 [5]),
        .I1(\RUNNING_ID_LOC_reg_reg[0]_0 [4]),
        .I2(\RUNNING_ID_LOC_reg[3]_i_2_n_0 ),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(RUNNING_ID_LOC[3]));
  LUT4 #(
    .INIT(16'hEAAA)) 
    \RUNNING_ID_LOC_reg[3]_i_2 
       (.I0(\RUNNING_ID_LOC_reg_reg[0]_0 [3]),
        .I1(\RUNNING_ID_LOC_reg_reg[0]_0 [2]),
        .I2(\RUNNING_ID_LOC_reg_reg[0]_0 [1]),
        .I3(\RUNNING_ID_LOC_reg_reg[0]_0 [0]),
        .O(\RUNNING_ID_LOC_reg[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h15550000EAAA0000)) 
    \RUNNING_ID_LOC_reg[4]_i_1 
       (.I0(\RUNNING_ID_LOC_reg_reg[0]_0 [3]),
        .I1(\RUNNING_ID_LOC_reg_reg[0]_0 [2]),
        .I2(\RUNNING_ID_LOC_reg_reg[0]_0 [1]),
        .I3(\RUNNING_ID_LOC_reg_reg[0]_0 [0]),
        .I4(\num_reg[4]_i_4_n_0 ),
        .I5(\RUNNING_ID_LOC_reg_reg[0]_0 [4]),
        .O(RUNNING_ID_LOC[4]));
  LUT6 #(
    .INIT(64'h00808000007F7F00)) 
    \RUNNING_ID_LOC_reg[5]_i_1 
       (.I0(\RUNNING_ID_LOC_reg_reg[0]_0 [0]),
        .I1(\RUNNING_ID_LOC_reg_reg[0]_0 [1]),
        .I2(\RUNNING_ID_LOC_reg_reg[0]_0 [2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(\RUNNING_ID_LOC_reg_reg[0]_0 [3]),
        .O(RUNNING_ID_LOC[5]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT5 #(
    .INIT(32'h06666000)) 
    \RUNNING_ID_LOC_reg[6]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\RUNNING_ID_LOC_reg_reg[0]_0 [0]),
        .I3(\RUNNING_ID_LOC_reg_reg[0]_0 [1]),
        .I4(\RUNNING_ID_LOC_reg_reg[0]_0 [2]),
        .O(RUNNING_ID_LOC[6]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT4 #(
    .INIT(16'h0660)) 
    \RUNNING_ID_LOC_reg[7]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\RUNNING_ID_LOC_reg_reg[0]_0 [0]),
        .I3(\RUNNING_ID_LOC_reg_reg[0]_0 [1]),
        .O(RUNNING_ID_LOC[7]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \RUNNING_ID_LOC_reg[8]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\RUNNING_ID_LOC_reg_reg[0]_0 [0]),
        .O(RUNNING_ID_LOC[8]));
  FDRE \RUNNING_ID_LOC_reg_d1_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RUNNING_ID_LOC_reg_reg[0]_0 [8]),
        .Q(RUNNING_ID_LOC_reg_d1[0]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RUNNING_ID_LOC_reg_d1_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RUNNING_ID_LOC_reg_reg[0]_0 [7]),
        .Q(RUNNING_ID_LOC_reg_d1[1]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RUNNING_ID_LOC_reg_d1_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RUNNING_ID_LOC_reg_reg[0]_0 [6]),
        .Q(RUNNING_ID_LOC_reg_d1[2]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDSE \RUNNING_ID_LOC_reg_d1_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RUNNING_ID_LOC_reg_reg[0]_0 [5]),
        .Q(RUNNING_ID_LOC_reg_d1[3]),
        .S(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RUNNING_ID_LOC_reg_d1_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RUNNING_ID_LOC_reg_reg[0]_0 [4]),
        .Q(RUNNING_ID_LOC_reg_d1[4]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RUNNING_ID_LOC_reg_d1_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RUNNING_ID_LOC_reg_reg[0]_0 [3]),
        .Q(RUNNING_ID_LOC_reg_d1[5]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RUNNING_ID_LOC_reg_d1_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RUNNING_ID_LOC_reg_reg[0]_0 [2]),
        .Q(RUNNING_ID_LOC_reg_d1[6]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RUNNING_ID_LOC_reg_d1_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RUNNING_ID_LOC_reg_reg[0]_0 [1]),
        .Q(RUNNING_ID_LOC_reg_d1[7]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RUNNING_ID_LOC_reg_d1_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RUNNING_ID_LOC_reg_reg[0]_0 [0]),
        .Q(RUNNING_ID_LOC_reg_d1[8]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RUNNING_ID_LOC_reg_reg[0] 
       (.C(s_axi_aclk),
        .CE(\num_reg[4]_i_1_n_0 ),
        .D(RUNNING_ID_LOC[0]),
        .Q(\RUNNING_ID_LOC_reg_reg[0]_0 [8]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RUNNING_ID_LOC_reg_reg[1] 
       (.C(s_axi_aclk),
        .CE(\num_reg[4]_i_1_n_0 ),
        .D(RUNNING_ID_LOC[1]),
        .Q(\RUNNING_ID_LOC_reg_reg[0]_0 [7]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RUNNING_ID_LOC_reg_reg[2] 
       (.C(s_axi_aclk),
        .CE(\num_reg[4]_i_1_n_0 ),
        .D(RUNNING_ID_LOC[2]),
        .Q(\RUNNING_ID_LOC_reg_reg[0]_0 [6]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDSE \RUNNING_ID_LOC_reg_reg[3] 
       (.C(s_axi_aclk),
        .CE(\num_reg[4]_i_1_n_0 ),
        .D(RUNNING_ID_LOC[3]),
        .Q(\RUNNING_ID_LOC_reg_reg[0]_0 [5]),
        .S(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RUNNING_ID_LOC_reg_reg[4] 
       (.C(s_axi_aclk),
        .CE(\num_reg[4]_i_1_n_0 ),
        .D(RUNNING_ID_LOC[4]),
        .Q(\RUNNING_ID_LOC_reg_reg[0]_0 [4]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RUNNING_ID_LOC_reg_reg[5] 
       (.C(s_axi_aclk),
        .CE(\num_reg[4]_i_1_n_0 ),
        .D(RUNNING_ID_LOC[5]),
        .Q(\RUNNING_ID_LOC_reg_reg[0]_0 [3]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RUNNING_ID_LOC_reg_reg[6] 
       (.C(s_axi_aclk),
        .CE(\num_reg[4]_i_1_n_0 ),
        .D(RUNNING_ID_LOC[6]),
        .Q(\RUNNING_ID_LOC_reg_reg[0]_0 [2]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RUNNING_ID_LOC_reg_reg[7] 
       (.C(s_axi_aclk),
        .CE(\num_reg[4]_i_1_n_0 ),
        .D(RUNNING_ID_LOC[7]),
        .Q(\RUNNING_ID_LOC_reg_reg[0]_0 [1]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \RUNNING_ID_LOC_reg_reg[8] 
       (.C(s_axi_aclk),
        .CE(\num_reg[4]_i_1_n_0 ),
        .D(RUNNING_ID_LOC[8]),
        .Q(\RUNNING_ID_LOC_reg_reg[0]_0 [0]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT4 #(
    .INIT(16'hFF01)) 
    TBS_RUNNING_D1_i_1
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\RUNNING_ID_LOC_reg_reg[8]_0 ),
        .I3(TBS_RUNNING_SIG_reg_n_0),
        .O(\FSM_sequential_tbs_cs_reg[0]_0 ));
  LUT4 #(
    .INIT(16'h0222)) 
    TBS_RUNNING_SIG_i_1
       (.I0(\FSM_sequential_tbs_cs_reg[0]_0 ),
        .I1(ACK_N_PROCESSING_D1_reg_0),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(TBS_RUNNING_SIG_i_1_n_0));
  FDRE TBS_RUNNING_SIG_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(TBS_RUNNING_SIG_i_1_n_0),
        .Q(TBS_RUNNING_SIG_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT5 #(
    .INIT(32'h000000FE)) 
    \TRR_i[31]_i_5 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\RUNNING_ID_LOC_reg_reg[8]_0 ),
        .I3(TBS_RUNNING_SIG_reg_n_0),
        .I4(TBS_RUNNING_D1),
        .O(TRR_i2294_in));
  CARRY4 WINNING_ID_DATA0_carry
       (.CI(1'b0),
        .CO({WINNING_ID_DATA0_carry_n_0,WINNING_ID_DATA0_carry_n_1,WINNING_ID_DATA0_carry_n_2,WINNING_ID_DATA0_carry_n_3}),
        .CYINIT(1'b0),
        .DI({WINNING_ID_DATA0_carry_i_1_n_0,WINNING_ID_DATA0_carry_i_2_n_0,WINNING_ID_DATA0_carry_i_3_n_0,WINNING_ID_DATA0_carry_i_4_n_0}),
        .O(NLW_WINNING_ID_DATA0_carry_O_UNCONNECTED[3:0]),
        .S({WINNING_ID_DATA0_carry_i_5_n_0,WINNING_ID_DATA0_carry_i_6_n_0,WINNING_ID_DATA0_carry_i_7_n_0,WINNING_ID_DATA0_carry_i_8_n_0}));
  CARRY4 WINNING_ID_DATA0_carry__0
       (.CI(WINNING_ID_DATA0_carry_n_0),
        .CO({NLW_WINNING_ID_DATA0_carry__0_CO_UNCONNECTED[3],WINNING_ID_DATA0_carry__0_n_1,WINNING_ID_DATA0_carry__0_n_2,WINNING_ID_DATA0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,WINNING_ID_DATA0_carry__0_i_1_n_0,WINNING_ID_DATA0_carry__0_i_2_n_0,WINNING_ID_DATA0_carry__0_i_3_n_0}),
        .O(NLW_WINNING_ID_DATA0_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,WINNING_ID_DATA0_carry__0_i_4_n_0,WINNING_ID_DATA0_carry__0_i_5_n_0,WINNING_ID_DATA0_carry__0_i_6_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    WINNING_ID_DATA0_carry__0_i_1
       (.I0(\WINNING_ID_DATA_reg_n_0_[0] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[0] ),
        .O(WINNING_ID_DATA0_carry__0_i_1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    WINNING_ID_DATA0_carry__0_i_2
       (.I0(\WINNING_ID_DATA_reg_n_0_[2] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[2] ),
        .I2(\RD_DATA_S_D1_reg_n_0_[1] ),
        .I3(\WINNING_ID_DATA_reg_n_0_[1] ),
        .O(WINNING_ID_DATA0_carry__0_i_2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    WINNING_ID_DATA0_carry__0_i_3
       (.I0(\WINNING_ID_DATA_reg_n_0_[4] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[4] ),
        .I2(\RD_DATA_S_D1_reg_n_0_[3] ),
        .I3(\WINNING_ID_DATA_reg_n_0_[3] ),
        .O(WINNING_ID_DATA0_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    WINNING_ID_DATA0_carry__0_i_4
       (.I0(\RD_DATA_S_D1_reg_n_0_[0] ),
        .I1(\WINNING_ID_DATA_reg_n_0_[0] ),
        .O(WINNING_ID_DATA0_carry__0_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    WINNING_ID_DATA0_carry__0_i_5
       (.I0(\WINNING_ID_DATA_reg_n_0_[2] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[2] ),
        .I2(\WINNING_ID_DATA_reg_n_0_[1] ),
        .I3(\RD_DATA_S_D1_reg_n_0_[1] ),
        .O(WINNING_ID_DATA0_carry__0_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    WINNING_ID_DATA0_carry__0_i_6
       (.I0(\WINNING_ID_DATA_reg_n_0_[4] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[4] ),
        .I2(\WINNING_ID_DATA_reg_n_0_[3] ),
        .I3(\RD_DATA_S_D1_reg_n_0_[3] ),
        .O(WINNING_ID_DATA0_carry__0_i_6_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    WINNING_ID_DATA0_carry_i_1
       (.I0(\WINNING_ID_DATA_reg_n_0_[6] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[6] ),
        .I2(\RD_DATA_S_D1_reg_n_0_[5] ),
        .I3(\WINNING_ID_DATA_reg_n_0_[5] ),
        .O(WINNING_ID_DATA0_carry_i_1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    WINNING_ID_DATA0_carry_i_2
       (.I0(\WINNING_ID_DATA_reg_n_0_[8] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[8] ),
        .I2(\RD_DATA_S_D1_reg_n_0_[7] ),
        .I3(\WINNING_ID_DATA_reg_n_0_[7] ),
        .O(WINNING_ID_DATA0_carry_i_2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    WINNING_ID_DATA0_carry_i_3
       (.I0(\WINNING_ID_DATA_reg_n_0_[10] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[10] ),
        .I2(\RD_DATA_S_D1_reg_n_0_[9] ),
        .I3(\WINNING_ID_DATA_reg_n_0_[9] ),
        .O(WINNING_ID_DATA0_carry_i_3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    WINNING_ID_DATA0_carry_i_4
       (.I0(p_0_in),
        .I1(p_1_in),
        .I2(\RD_DATA_S_D1_reg_n_0_[11] ),
        .I3(\WINNING_ID_DATA_reg_n_0_[11] ),
        .O(WINNING_ID_DATA0_carry_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    WINNING_ID_DATA0_carry_i_5
       (.I0(\WINNING_ID_DATA_reg_n_0_[6] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[6] ),
        .I2(\WINNING_ID_DATA_reg_n_0_[5] ),
        .I3(\RD_DATA_S_D1_reg_n_0_[5] ),
        .O(WINNING_ID_DATA0_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    WINNING_ID_DATA0_carry_i_6
       (.I0(\WINNING_ID_DATA_reg_n_0_[8] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[8] ),
        .I2(\WINNING_ID_DATA_reg_n_0_[7] ),
        .I3(\RD_DATA_S_D1_reg_n_0_[7] ),
        .O(WINNING_ID_DATA0_carry_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    WINNING_ID_DATA0_carry_i_7
       (.I0(\WINNING_ID_DATA_reg_n_0_[10] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[10] ),
        .I2(\WINNING_ID_DATA_reg_n_0_[9] ),
        .I3(\RD_DATA_S_D1_reg_n_0_[9] ),
        .O(WINNING_ID_DATA0_carry_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    WINNING_ID_DATA0_carry_i_8
       (.I0(p_0_in),
        .I1(p_1_in),
        .I2(\WINNING_ID_DATA_reg_n_0_[11] ),
        .I3(\RD_DATA_S_D1_reg_n_0_[11] ),
        .O(WINNING_ID_DATA0_carry_i_8_n_0));
  CARRY4 \WINNING_ID_DATA0_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\WINNING_ID_DATA0_inferred__0/i__carry_n_0 ,\WINNING_ID_DATA0_inferred__0/i__carry_n_1 ,\WINNING_ID_DATA0_inferred__0/i__carry_n_2 ,\WINNING_ID_DATA0_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI({i__carry_i_1__0_n_0,i__carry_i_2__0_n_0,i__carry_i_3__0_n_0,i__carry_i_4__0_n_0}),
        .O(\NLW_WINNING_ID_DATA0_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_5__0_n_0,i__carry_i_6__0_n_0,i__carry_i_7__0_n_0,i__carry_i_8__0_n_0}));
  CARRY4 \WINNING_ID_DATA0_inferred__0/i__carry__0 
       (.CI(\WINNING_ID_DATA0_inferred__0/i__carry_n_0 ),
        .CO({\WINNING_ID_DATA0_inferred__0/i__carry__0_n_0 ,\WINNING_ID_DATA0_inferred__0/i__carry__0_n_1 ,\WINNING_ID_DATA0_inferred__0/i__carry__0_n_2 ,\WINNING_ID_DATA0_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({i__carry__0_i_1__0_n_0,i__carry__0_i_2__0_n_0,i__carry__0_i_3__0_n_0,i__carry__0_i_4__0_n_0}),
        .O(\NLW_WINNING_ID_DATA0_inferred__0/i__carry__0_O_UNCONNECTED [3:0]),
        .S({i__carry__0_i_5__0_n_0,i__carry__0_i_6_n_0,i__carry__0_i_7_n_0,i__carry__0_i_8_n_0}));
  CARRY4 \WINNING_ID_DATA0_inferred__0/i__carry__1 
       (.CI(\WINNING_ID_DATA0_inferred__0/i__carry__0_n_0 ),
        .CO({\WINNING_ID_DATA0_inferred__0/i__carry__1_n_0 ,\WINNING_ID_DATA0_inferred__0/i__carry__1_n_1 ,\WINNING_ID_DATA0_inferred__0/i__carry__1_n_2 ,\WINNING_ID_DATA0_inferred__0/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({i__carry__1_i_1_n_0,i__carry__1_i_2_n_0,i__carry__1_i_3_n_0,i__carry__1_i_4_n_0}),
        .O(\NLW_WINNING_ID_DATA0_inferred__0/i__carry__1_O_UNCONNECTED [3:0]),
        .S({i__carry__1_i_5_n_0,i__carry__1_i_6_n_0,i__carry__1_i_7_n_0,i__carry__1_i_8_n_0}));
  CARRY4 \WINNING_ID_DATA0_inferred__0/i__carry__2 
       (.CI(\WINNING_ID_DATA0_inferred__0/i__carry__1_n_0 ),
        .CO({\WINNING_ID_DATA0_inferred__0/i__carry__2_n_0 ,\WINNING_ID_DATA0_inferred__0/i__carry__2_n_1 ,\WINNING_ID_DATA0_inferred__0/i__carry__2_n_2 ,\WINNING_ID_DATA0_inferred__0/i__carry__2_n_3 }),
        .CYINIT(1'b0),
        .DI({i__carry__2_i_1_n_0,i__carry__2_i_2_n_0,i__carry__2_i_3_n_0,i__carry__2_i_4_n_0}),
        .O(\NLW_WINNING_ID_DATA0_inferred__0/i__carry__2_O_UNCONNECTED [3:0]),
        .S({i__carry__2_i_5_n_0,i__carry__2_i_6_n_0,i__carry__2_i_7_n_0,i__carry__2_i_8_n_0}));
  FDRE \WINNING_ID_DATA_reg[0] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[0] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[0] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[10] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[10] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[10] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[11] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[11] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[11] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[12] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(p_1_in),
        .Q(p_0_in),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[13] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[13] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[13] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[14] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[14] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[14] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[15] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[15] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[15] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[16] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[16] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[16] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[17] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[17] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[17] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[18] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[18] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[18] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[19] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[19] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[19] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[1] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[1] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[1] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[20] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[20] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[20] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[21] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[21] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[21] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[22] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[22] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[22] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[23] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[23] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[23] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[24] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[24] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[24] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[25] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[25] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[25] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[26] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[26] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[26] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[27] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[27] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[27] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[28] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[28] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[28] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[29] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[29] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[29] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[2] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[2] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[2] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[30] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[30] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[30] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[31] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[31] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[31] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[3] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[3] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[3] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[4] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[4] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[4] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[5] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[5] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[5] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[6] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[6] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[6] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[7] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[7] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[7] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[8] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[8] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[8] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_DATA_reg[9] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(\RD_DATA_S_D1_reg_n_0_[9] ),
        .Q(\WINNING_ID_DATA_reg_n_0_[9] ),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_LOC_SIG_reg[0] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(RUNNING_ID_LOC_reg_d1[0]),
        .Q(\WINNING_ID_LOC_SIG_reg[0]_0 [8]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_LOC_SIG_reg[1] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(RUNNING_ID_LOC_reg_d1[1]),
        .Q(\WINNING_ID_LOC_SIG_reg[0]_0 [7]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_LOC_SIG_reg[2] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(RUNNING_ID_LOC_reg_d1[2]),
        .Q(\WINNING_ID_LOC_SIG_reg[0]_0 [6]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDSE \WINNING_ID_LOC_SIG_reg[3] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(RUNNING_ID_LOC_reg_d1[3]),
        .Q(\WINNING_ID_LOC_SIG_reg[0]_0 [5]),
        .S(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_LOC_SIG_reg[4] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(RUNNING_ID_LOC_reg_d1[4]),
        .Q(\WINNING_ID_LOC_SIG_reg[0]_0 [4]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_LOC_SIG_reg[5] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(RUNNING_ID_LOC_reg_d1[5]),
        .Q(\WINNING_ID_LOC_SIG_reg[0]_0 [3]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_LOC_SIG_reg[6] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(RUNNING_ID_LOC_reg_d1[6]),
        .Q(\WINNING_ID_LOC_SIG_reg[0]_0 [2]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_LOC_SIG_reg[7] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(RUNNING_ID_LOC_reg_d1[7]),
        .Q(\WINNING_ID_LOC_SIG_reg[0]_0 [1]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_ID_LOC_SIG_reg[8] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(RUNNING_ID_LOC_reg_d1[8]),
        .Q(\WINNING_ID_LOC_SIG_reg[0]_0 [0]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  LUT6 #(
    .INIT(64'hEFFFEAAAAAAAAAAA)) 
    \WINNING_INDEX_SIG[4]_i_1 
       (.I0(FIRST_VALID_ID_READ_PULSE),
        .I1(\WINNING_ID_DATA0_inferred__0/i__carry__2_n_0 ),
        .I2(p_1_in),
        .I3(p_0_in),
        .I4(WINNING_ID_DATA0_carry__0_n_1),
        .I5(ACK_N_PROCESSING_D1),
        .O(WINNING_ID_LOC_SIG));
  FDRE \WINNING_INDEX_SIG_reg[0] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(num_reg_d1[0]),
        .Q(\WINNING_INDEX_SIG_reg[4]_1 [0]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_INDEX_SIG_reg[1] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(num_reg_d1[1]),
        .Q(\WINNING_INDEX_SIG_reg[4]_1 [1]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_INDEX_SIG_reg[2] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(num_reg_d1[2]),
        .Q(\WINNING_INDEX_SIG_reg[4]_1 [2]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_INDEX_SIG_reg[3] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(num_reg_d1[3]),
        .Q(\WINNING_INDEX_SIG_reg[4]_1 [3]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \WINNING_INDEX_SIG_reg[4] 
       (.C(s_axi_aclk),
        .CE(WINNING_ID_LOC_SIG),
        .D(num_reg_d1[4]),
        .Q(\WINNING_INDEX_SIG_reg[4]_1 [4]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \exclude_winning_or_locked_req[15]_i_2 
       (.I0(INDEX_VALID_SIG_reg_0),
        .I1(passed_trig_reg),
        .I2(\WINNING_INDEX_SIG_reg[4]_1 [4]),
        .O(INDEX_VALID_SIG_reg_1));
  LUT5 #(
    .INIT(32'hFFFFFFAB)) 
    \exclude_winning_or_locked_req[31]_i_1 
       (.I0(ACK_N_PROCESSING_D1_reg_0),
        .I1(INDEX_VALID_SIG_reg_0),
        .I2(passed_trig_reg),
        .I3(MSG_DONE_FROM_BSP),
        .I4(\exclude_winning_or_locked_req_reg[31] ),
        .O(E_RST_I_reg));
  LUT3 #(
    .INIT(8'h08)) 
    \exclude_winning_or_locked_req[31]_i_4 
       (.I0(\WINNING_INDEX_SIG_reg[4]_1 [4]),
        .I1(INDEX_VALID_SIG_reg_0),
        .I2(passed_trig_reg),
        .O(\WINNING_INDEX_SIG_reg[4]_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_1__0
       (.I0(\WINNING_ID_DATA_reg_n_0_[17] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[17] ),
        .I2(\RD_DATA_S_D1_reg_n_0_[16] ),
        .I3(\WINNING_ID_DATA_reg_n_0_[16] ),
        .O(i__carry__0_i_1__0_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_2__0
       (.I0(\WINNING_ID_DATA_reg_n_0_[19] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[19] ),
        .I2(\RD_DATA_S_D1_reg_n_0_[18] ),
        .I3(\WINNING_ID_DATA_reg_n_0_[18] ),
        .O(i__carry__0_i_2__0_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_3__0
       (.I0(\WINNING_ID_DATA_reg_n_0_[21] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[21] ),
        .I2(\RD_DATA_S_D1_reg_n_0_[20] ),
        .I3(\WINNING_ID_DATA_reg_n_0_[20] ),
        .O(i__carry__0_i_3__0_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_4__0
       (.I0(\WINNING_ID_DATA_reg_n_0_[23] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[23] ),
        .I2(\RD_DATA_S_D1_reg_n_0_[22] ),
        .I3(\WINNING_ID_DATA_reg_n_0_[22] ),
        .O(i__carry__0_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_5__0
       (.I0(\WINNING_ID_DATA_reg_n_0_[17] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[17] ),
        .I2(\WINNING_ID_DATA_reg_n_0_[16] ),
        .I3(\RD_DATA_S_D1_reg_n_0_[16] ),
        .O(i__carry__0_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_6
       (.I0(\WINNING_ID_DATA_reg_n_0_[19] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[19] ),
        .I2(\WINNING_ID_DATA_reg_n_0_[18] ),
        .I3(\RD_DATA_S_D1_reg_n_0_[18] ),
        .O(i__carry__0_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_7
       (.I0(\WINNING_ID_DATA_reg_n_0_[21] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[21] ),
        .I2(\WINNING_ID_DATA_reg_n_0_[20] ),
        .I3(\RD_DATA_S_D1_reg_n_0_[20] ),
        .O(i__carry__0_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_8
       (.I0(\WINNING_ID_DATA_reg_n_0_[23] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[23] ),
        .I2(\WINNING_ID_DATA_reg_n_0_[22] ),
        .I3(\RD_DATA_S_D1_reg_n_0_[22] ),
        .O(i__carry__0_i_8_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_1
       (.I0(\WINNING_ID_DATA_reg_n_0_[9] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[9] ),
        .I2(\RD_DATA_S_D1_reg_n_0_[8] ),
        .I3(\WINNING_ID_DATA_reg_n_0_[8] ),
        .O(i__carry__1_i_1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_2
       (.I0(\WINNING_ID_DATA_reg_n_0_[11] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[11] ),
        .I2(\RD_DATA_S_D1_reg_n_0_[10] ),
        .I3(\WINNING_ID_DATA_reg_n_0_[10] ),
        .O(i__carry__1_i_2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_3
       (.I0(\WINNING_ID_DATA_reg_n_0_[13] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[13] ),
        .I2(p_1_in),
        .I3(p_0_in),
        .O(i__carry__1_i_3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__1_i_4
       (.I0(\WINNING_ID_DATA_reg_n_0_[15] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[15] ),
        .I2(\RD_DATA_S_D1_reg_n_0_[14] ),
        .I3(\WINNING_ID_DATA_reg_n_0_[14] ),
        .O(i__carry__1_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_5
       (.I0(\WINNING_ID_DATA_reg_n_0_[9] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[9] ),
        .I2(\WINNING_ID_DATA_reg_n_0_[8] ),
        .I3(\RD_DATA_S_D1_reg_n_0_[8] ),
        .O(i__carry__1_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_6
       (.I0(\WINNING_ID_DATA_reg_n_0_[11] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[11] ),
        .I2(\WINNING_ID_DATA_reg_n_0_[10] ),
        .I3(\RD_DATA_S_D1_reg_n_0_[10] ),
        .O(i__carry__1_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_7
       (.I0(\WINNING_ID_DATA_reg_n_0_[13] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[13] ),
        .I2(p_0_in),
        .I3(p_1_in),
        .O(i__carry__1_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__1_i_8
       (.I0(\WINNING_ID_DATA_reg_n_0_[15] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[15] ),
        .I2(\WINNING_ID_DATA_reg_n_0_[14] ),
        .I3(\RD_DATA_S_D1_reg_n_0_[14] ),
        .O(i__carry__1_i_8_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_1
       (.I0(\WINNING_ID_DATA_reg_n_0_[1] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[1] ),
        .I2(\RD_DATA_S_D1_reg_n_0_[0] ),
        .I3(\WINNING_ID_DATA_reg_n_0_[0] ),
        .O(i__carry__2_i_1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_2
       (.I0(\WINNING_ID_DATA_reg_n_0_[3] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[3] ),
        .I2(\RD_DATA_S_D1_reg_n_0_[2] ),
        .I3(\WINNING_ID_DATA_reg_n_0_[2] ),
        .O(i__carry__2_i_2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_3
       (.I0(\WINNING_ID_DATA_reg_n_0_[5] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[5] ),
        .I2(\RD_DATA_S_D1_reg_n_0_[4] ),
        .I3(\WINNING_ID_DATA_reg_n_0_[4] ),
        .O(i__carry__2_i_3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__2_i_4
       (.I0(\WINNING_ID_DATA_reg_n_0_[7] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[7] ),
        .I2(\RD_DATA_S_D1_reg_n_0_[6] ),
        .I3(\WINNING_ID_DATA_reg_n_0_[6] ),
        .O(i__carry__2_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_5
       (.I0(\WINNING_ID_DATA_reg_n_0_[1] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[1] ),
        .I2(\WINNING_ID_DATA_reg_n_0_[0] ),
        .I3(\RD_DATA_S_D1_reg_n_0_[0] ),
        .O(i__carry__2_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_6
       (.I0(\WINNING_ID_DATA_reg_n_0_[3] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[3] ),
        .I2(\WINNING_ID_DATA_reg_n_0_[2] ),
        .I3(\RD_DATA_S_D1_reg_n_0_[2] ),
        .O(i__carry__2_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_7
       (.I0(\WINNING_ID_DATA_reg_n_0_[5] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[5] ),
        .I2(\WINNING_ID_DATA_reg_n_0_[4] ),
        .I3(\RD_DATA_S_D1_reg_n_0_[4] ),
        .O(i__carry__2_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__2_i_8
       (.I0(\WINNING_ID_DATA_reg_n_0_[7] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[7] ),
        .I2(\WINNING_ID_DATA_reg_n_0_[6] ),
        .I3(\RD_DATA_S_D1_reg_n_0_[6] ),
        .O(i__carry__2_i_8_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_1__0
       (.I0(\WINNING_ID_DATA_reg_n_0_[25] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[25] ),
        .I2(\RD_DATA_S_D1_reg_n_0_[24] ),
        .I3(\WINNING_ID_DATA_reg_n_0_[24] ),
        .O(i__carry_i_1__0_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_2__0
       (.I0(\WINNING_ID_DATA_reg_n_0_[27] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[27] ),
        .I2(\RD_DATA_S_D1_reg_n_0_[26] ),
        .I3(\WINNING_ID_DATA_reg_n_0_[26] ),
        .O(i__carry_i_2__0_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_3__0
       (.I0(\WINNING_ID_DATA_reg_n_0_[29] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[29] ),
        .I2(\RD_DATA_S_D1_reg_n_0_[28] ),
        .I3(\WINNING_ID_DATA_reg_n_0_[28] ),
        .O(i__carry_i_3__0_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_4__0
       (.I0(\WINNING_ID_DATA_reg_n_0_[31] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[31] ),
        .I2(\RD_DATA_S_D1_reg_n_0_[30] ),
        .I3(\WINNING_ID_DATA_reg_n_0_[30] ),
        .O(i__carry_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_5__0
       (.I0(\WINNING_ID_DATA_reg_n_0_[25] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[25] ),
        .I2(\WINNING_ID_DATA_reg_n_0_[24] ),
        .I3(\RD_DATA_S_D1_reg_n_0_[24] ),
        .O(i__carry_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_6__0
       (.I0(\WINNING_ID_DATA_reg_n_0_[27] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[27] ),
        .I2(\WINNING_ID_DATA_reg_n_0_[26] ),
        .I3(\RD_DATA_S_D1_reg_n_0_[26] ),
        .O(i__carry_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_7__0
       (.I0(\WINNING_ID_DATA_reg_n_0_[29] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[29] ),
        .I2(\WINNING_ID_DATA_reg_n_0_[28] ),
        .I3(\RD_DATA_S_D1_reg_n_0_[28] ),
        .O(i__carry_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_8__0
       (.I0(\WINNING_ID_DATA_reg_n_0_[31] ),
        .I1(\RD_DATA_S_D1_reg_n_0_[31] ),
        .I2(\WINNING_ID_DATA_reg_n_0_[30] ),
        .I3(\RD_DATA_S_D1_reg_n_0_[30] ),
        .O(i__carry_i_8__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \num_reg[0]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\num_reg_reg[4]_0 [0]),
        .O(num[0]));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT4 #(
    .INIT(16'h0660)) 
    \num_reg[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\num_reg_reg[4]_0 [0]),
        .I3(\num_reg_reg[4]_0 [1]),
        .O(num[1]));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT5 #(
    .INIT(32'h06666000)) 
    \num_reg[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\num_reg_reg[4]_0 [0]),
        .I3(\num_reg_reg[4]_0 [1]),
        .I4(\num_reg_reg[4]_0 [2]),
        .O(num[2]));
  LUT6 #(
    .INIT(64'h0666666660000000)) 
    \num_reg[3]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\num_reg_reg[4]_0 [2]),
        .I3(\num_reg_reg[4]_0 [1]),
        .I4(\num_reg_reg[4]_0 [0]),
        .I5(\num_reg_reg[4]_0 [3]),
        .O(num[3]));
  LUT6 #(
    .INIT(64'hFFFFFFFF98DC9898)) 
    \num_reg[4]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\RUNNING_ID_LOC_reg_reg[8]_0 ),
        .I3(LAST_ENTRY_FLAG_reg_n_0),
        .I4(ACK_S_SIG),
        .I5(\num_reg[4]_i_3_n_0 ),
        .O(\num_reg[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \num_reg[4]_i_2 
       (.I0(\num_reg_reg[4]_0 [2]),
        .I1(\num_reg_reg[4]_0 [1]),
        .I2(\num_reg_reg[4]_0 [0]),
        .I3(\num_reg_reg[4]_0 [3]),
        .I4(\num_reg[4]_i_4_n_0 ),
        .I5(\num_reg_reg[4]_0 [4]),
        .O(num[4]));
  LUT6 #(
    .INIT(64'h00000000AAAA2AAA)) 
    \num_reg[4]_i_3 
       (.I0(Q[0]),
        .I1(\num_reg_reg[4]_0 [4]),
        .I2(\num_reg_reg[4]_0 [3]),
        .I3(\num_reg_reg[4]_0 [2]),
        .I4(\num_reg[4]_i_5_n_0 ),
        .I5(\FSM_sequential_tbs_cs[0]_i_3_n_0 ),
        .O(\num_reg[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \num_reg[4]_i_4 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\num_reg[4]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \num_reg[4]_i_5 
       (.I0(\num_reg_reg[4]_0 [1]),
        .I1(\num_reg_reg[4]_0 [0]),
        .O(\num_reg[4]_i_5_n_0 ));
  FDRE \num_reg_d1_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\num_reg_reg[4]_0 [0]),
        .Q(num_reg_d1[0]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \num_reg_d1_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\num_reg_reg[4]_0 [1]),
        .Q(num_reg_d1[1]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \num_reg_d1_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\num_reg_reg[4]_0 [2]),
        .Q(num_reg_d1[2]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \num_reg_d1_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\num_reg_reg[4]_0 [3]),
        .Q(num_reg_d1[3]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \num_reg_d1_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\num_reg_reg[4]_0 [4]),
        .Q(num_reg_d1[4]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \num_reg_reg[0] 
       (.C(s_axi_aclk),
        .CE(\num_reg[4]_i_1_n_0 ),
        .D(num[0]),
        .Q(\num_reg_reg[4]_0 [0]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \num_reg_reg[1] 
       (.C(s_axi_aclk),
        .CE(\num_reg[4]_i_1_n_0 ),
        .D(num[1]),
        .Q(\num_reg_reg[4]_0 [1]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \num_reg_reg[2] 
       (.C(s_axi_aclk),
        .CE(\num_reg[4]_i_1_n_0 ),
        .D(num[2]),
        .Q(\num_reg_reg[4]_0 [2]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \num_reg_reg[3] 
       (.C(s_axi_aclk),
        .CE(\num_reg[4]_i_1_n_0 ),
        .D(num[3]),
        .Q(\num_reg_reg[4]_0 [3]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE \num_reg_reg[4] 
       (.C(s_axi_aclk),
        .CE(\num_reg[4]_i_1_n_0 ),
        .D(num[4]),
        .Q(\num_reg_reg[4]_0 [4]),
        .R(ACK_N_PROCESSING_D1_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT4 #(
    .INIT(16'h008A)) 
    passed_trig_i_1
       (.I0(TRR_REG_WRITE_PULSE),
        .I1(passed_trig_reg),
        .I2(INDEX_VALID_SIG_reg_0),
        .I3(\FSM_sequential_tbs_cs_reg[0]_0 ),
        .O(passed_trig0));
  LUT4 #(
    .INIT(16'hAAEA)) 
    trig_pulse_2_i_1
       (.I0(trig_pulse_2_i_2_n_0),
        .I1(invalidate_buffer_i),
        .I2(\exclude_winning_or_locked_req_reg[31] ),
        .I3(passed_trig_reg),
        .O(trig_pulse_20));
  LUT6 #(
    .INIT(64'hA8A8A8000000A800)) 
    trig_pulse_2_i_2
       (.I0(INDEX_VALID_SIG_reg_0),
        .I1(\exclude_winning_or_locked_req_reg[31] ),
        .I2(passed_trig_reg),
        .I3(trig_pulse_2_i_3_n_0),
        .I4(\WINNING_INDEX_SIG_reg[4]_1 [4]),
        .I5(winning_or_locked_index_cancel_req_i_3_n_0),
        .O(trig_pulse_2_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFFFE)) 
    trig_pulse_2_i_3
       (.I0(trig_pulse_2_i_4_n_0),
        .I1(trig_pulse_2_i_5_n_0),
        .I2(trig_pulse_2_i_6_n_0),
        .I3(trig_pulse_2_i_7_n_0),
        .I4(winning_or_locked_index_cancel_req_i_10_n_0),
        .I5(winning_or_locked_index_cancel_req_i_2_0),
        .O(trig_pulse_2_i_3_n_0));
  LUT6 #(
    .INIT(64'hAC00000000000000)) 
    trig_pulse_2_i_4
       (.I0(trig_pulse_2_i_3_6),
        .I1(trig_pulse_2_i_3_7),
        .I2(\WINNING_INDEX_SIG_reg[4]_1 [1]),
        .I3(\WINNING_INDEX_SIG_reg[4]_1 [0]),
        .I4(\WINNING_INDEX_SIG_reg[4]_1 [2]),
        .I5(\WINNING_INDEX_SIG_reg[4]_1 [3]),
        .O(trig_pulse_2_i_4_n_0));
  LUT6 #(
    .INIT(64'h000AC00000000000)) 
    trig_pulse_2_i_5
       (.I0(trig_pulse_2_i_3_2),
        .I1(trig_pulse_2_i_3_3),
        .I2(\WINNING_INDEX_SIG_reg[4]_1 [0]),
        .I3(\WINNING_INDEX_SIG_reg[4]_1 [1]),
        .I4(\WINNING_INDEX_SIG_reg[4]_1 [2]),
        .I5(\WINNING_INDEX_SIG_reg[4]_1 [3]),
        .O(trig_pulse_2_i_5_n_0));
  LUT6 #(
    .INIT(64'hAAEEAAEAAAAEAAAA)) 
    trig_pulse_2_i_6
       (.I0(trig_pulse_2_i_8_n_0),
        .I1(winning_or_locked_index_cancel_req_i_15_n_0),
        .I2(\WINNING_INDEX_SIG_reg[4]_1 [1]),
        .I3(\WINNING_INDEX_SIG_reg[4]_1 [0]),
        .I4(trig_pulse_2_i_3_0),
        .I5(trig_pulse_2_i_3_1),
        .O(trig_pulse_2_i_6_n_0));
  LUT6 #(
    .INIT(64'hBBABBAAABAAABAAA)) 
    trig_pulse_2_i_7
       (.I0(trig_pulse_2_i_9_n_0),
        .I1(\WINNING_INDEX_SIG_reg[4]_1 [3]),
        .I2(\WINNING_INDEX_SIG_reg[4]_1 [2]),
        .I3(trig_pulse_2_i_3_4),
        .I4(winning_or_locked_index_cancel_req_i_18_n_0),
        .I5(trig_pulse_2_i_3_5),
        .O(trig_pulse_2_i_7_n_0));
  LUT6 #(
    .INIT(64'h0000000A0000C000)) 
    trig_pulse_2_i_8
       (.I0(trig_pulse_2_i_6_0),
        .I1(trig_pulse_2_i_6_1),
        .I2(\WINNING_INDEX_SIG_reg[4]_1 [0]),
        .I3(\WINNING_INDEX_SIG_reg[4]_1 [1]),
        .I4(\WINNING_INDEX_SIG_reg[4]_1 [2]),
        .I5(\WINNING_INDEX_SIG_reg[4]_1 [3]),
        .O(trig_pulse_2_i_8_n_0));
  LUT6 #(
    .INIT(64'h00000CA000000000)) 
    trig_pulse_2_i_9
       (.I0(trig_pulse_2_i_7_0),
        .I1(trig_pulse_2_i_7_1),
        .I2(\WINNING_INDEX_SIG_reg[4]_1 [0]),
        .I3(\WINNING_INDEX_SIG_reg[4]_1 [1]),
        .I4(\WINNING_INDEX_SIG_reg[4]_1 [2]),
        .I5(\WINNING_INDEX_SIG_reg[4]_1 [3]),
        .O(trig_pulse_2_i_9_n_0));
  FDRE trigger_next_round_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(trigger_next_round),
        .Q(trigger_next_round_d1),
        .R(ACK_N_PROCESSING_D1_reg_0));
  FDRE trigger_next_round_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(trigger_next_round0),
        .Q(trigger_next_round),
        .R(ACK_N_PROCESSING_D1_reg_0));
  LUT6 #(
    .INIT(64'hEAFFEAEAEAEAEAEA)) 
    winning_or_locked_index_cancel_req_i_1
       (.I0(winning_or_locked_index_cancel_req_i_2_n_0),
        .I1(\WINNING_INDEX_SIG_reg[4]_0 ),
        .I2(winning_or_locked_index_cancel_req_i_3_n_0),
        .I3(winning_or_locked_index_cancel_req_reg),
        .I4(passed_trig_reg),
        .I5(winning_or_locked_index_cancel_req_reg_0),
        .O(winning_or_locked_index_cancel_req0));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    winning_or_locked_index_cancel_req_i_10
       (.I0(\WINNING_INDEX_SIG_reg[4]_1 [0]),
        .I1(\WINNING_INDEX_SIG_reg[4]_1 [1]),
        .I2(\WINNING_INDEX_SIG_reg[4]_1 [2]),
        .I3(\WINNING_INDEX_SIG_reg[4]_1 [3]),
        .O(winning_or_locked_index_cancel_req_i_10_n_0));
  LUT6 #(
    .INIT(64'h0000000A0000C000)) 
    winning_or_locked_index_cancel_req_i_14
       (.I0(winning_or_locked_index_cancel_req_i_8_0),
        .I1(winning_or_locked_index_cancel_req_i_8_1),
        .I2(\WINNING_INDEX_SIG_reg[4]_1 [0]),
        .I3(\WINNING_INDEX_SIG_reg[4]_1 [1]),
        .I4(\WINNING_INDEX_SIG_reg[4]_1 [2]),
        .I5(\WINNING_INDEX_SIG_reg[4]_1 [3]),
        .O(winning_or_locked_index_cancel_req_i_14_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    winning_or_locked_index_cancel_req_i_15
       (.I0(\WINNING_INDEX_SIG_reg[4]_1 [3]),
        .I1(\WINNING_INDEX_SIG_reg[4]_1 [2]),
        .O(winning_or_locked_index_cancel_req_i_15_n_0));
  LUT6 #(
    .INIT(64'h00000CA000000000)) 
    winning_or_locked_index_cancel_req_i_16
       (.I0(winning_or_locked_index_cancel_req_i_9_0),
        .I1(winning_or_locked_index_cancel_req_i_9_1),
        .I2(\WINNING_INDEX_SIG_reg[4]_1 [0]),
        .I3(\WINNING_INDEX_SIG_reg[4]_1 [1]),
        .I4(\WINNING_INDEX_SIG_reg[4]_1 [2]),
        .I5(\WINNING_INDEX_SIG_reg[4]_1 [3]),
        .O(winning_or_locked_index_cancel_req_i_16_n_0));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h2)) 
    winning_or_locked_index_cancel_req_i_18
       (.I0(\WINNING_INDEX_SIG_reg[4]_1 [0]),
        .I1(\WINNING_INDEX_SIG_reg[4]_1 [1]),
        .O(winning_or_locked_index_cancel_req_i_18_n_0));
  LUT6 #(
    .INIT(64'hFFC0EAEAC0C0EAEA)) 
    winning_or_locked_index_cancel_req_i_2
       (.I0(invalidate_buffer_i),
        .I1(INDEX_VALID_SIG_reg_1),
        .I2(trig_pulse_2_i_3_n_0),
        .I3(winning_or_locked_index_cancel_req_reg_1),
        .I4(passed_trig_reg),
        .I5(winning_or_locked_index_cancel_req_reg),
        .O(winning_or_locked_index_cancel_req_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFFFE)) 
    winning_or_locked_index_cancel_req_i_3
       (.I0(winning_or_locked_index_cancel_req_i_6_n_0),
        .I1(winning_or_locked_index_cancel_req_i_7_n_0),
        .I2(winning_or_locked_index_cancel_req_i_8_n_0),
        .I3(winning_or_locked_index_cancel_req_i_9_n_0),
        .I4(winning_or_locked_index_cancel_req_i_10_n_0),
        .I5(winning_or_locked_index_cancel_req_reg_2),
        .O(winning_or_locked_index_cancel_req_i_3_n_0));
  LUT6 #(
    .INIT(64'hAC00000000000000)) 
    winning_or_locked_index_cancel_req_i_6
       (.I0(winning_or_locked_index_cancel_req_i_3_6),
        .I1(winning_or_locked_index_cancel_req_i_3_7),
        .I2(\WINNING_INDEX_SIG_reg[4]_1 [1]),
        .I3(\WINNING_INDEX_SIG_reg[4]_1 [0]),
        .I4(\WINNING_INDEX_SIG_reg[4]_1 [2]),
        .I5(\WINNING_INDEX_SIG_reg[4]_1 [3]),
        .O(winning_or_locked_index_cancel_req_i_6_n_0));
  LUT6 #(
    .INIT(64'h000AC00000000000)) 
    winning_or_locked_index_cancel_req_i_7
       (.I0(winning_or_locked_index_cancel_req_i_3_4),
        .I1(winning_or_locked_index_cancel_req_i_3_5),
        .I2(\WINNING_INDEX_SIG_reg[4]_1 [0]),
        .I3(\WINNING_INDEX_SIG_reg[4]_1 [1]),
        .I4(\WINNING_INDEX_SIG_reg[4]_1 [2]),
        .I5(\WINNING_INDEX_SIG_reg[4]_1 [3]),
        .O(winning_or_locked_index_cancel_req_i_7_n_0));
  LUT6 #(
    .INIT(64'hAAEEAAEAAAAEAAAA)) 
    winning_or_locked_index_cancel_req_i_8
       (.I0(winning_or_locked_index_cancel_req_i_14_n_0),
        .I1(winning_or_locked_index_cancel_req_i_15_n_0),
        .I2(\WINNING_INDEX_SIG_reg[4]_1 [1]),
        .I3(\WINNING_INDEX_SIG_reg[4]_1 [0]),
        .I4(winning_or_locked_index_cancel_req_i_3_2),
        .I5(winning_or_locked_index_cancel_req_i_3_3),
        .O(winning_or_locked_index_cancel_req_i_8_n_0));
  LUT6 #(
    .INIT(64'hBBABBAAABAAABAAA)) 
    winning_or_locked_index_cancel_req_i_9
       (.I0(winning_or_locked_index_cancel_req_i_16_n_0),
        .I1(\WINNING_INDEX_SIG_reg[4]_1 [3]),
        .I2(\WINNING_INDEX_SIG_reg[4]_1 [2]),
        .I3(winning_or_locked_index_cancel_req_i_3_0),
        .I4(winning_or_locked_index_cancel_req_i_18_n_0),
        .I5(winning_or_locked_index_cancel_req_i_3_1),
        .O(winning_or_locked_index_cancel_req_i_9_n_0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_top
   (SR,
    E_DATA_ACK,
    postpone_flag,
    postpone_flag_2,
    CANCEL_CONFIRMED_OL_D1,
    MSG_ON_CAN_BUS_AXI_D1,
    index_valid_sig,
    src_in,
    winning_or_locked_index_cancel_req_reg,
    TRR_REG_WRITE_PULSE,
    tbs_running_sig,
    trigger_next_round,
    wea,
    ACK_S_SIG_IMM,
    \arststages_ff_reg[1] ,
    IC_REG_MSR_DAR_I_reg,
    TXE_MSGVAL_D2,
    TXEWM_SET,
    RXF_FULL_I_reg,
    TXE_MSGVAL_D1,
    MATCH_RUNNING_SIG_reg,
    ID_MATCH_EN_D2,
    RXMNF_SET,
    RXWM_SET,
    OL_RX_FIFO_FULL,
    RXWM_SET_F1,
    OL_RX_FIFO_FULL_F1,
    enb,
    host_req_reg,
    dest_arst,
    out,
    \SINGLE_BIT.s_level_out_d4_reg ,
    \SINGLE_BIT.s_level_out_d4_reg_0 ,
    \SINGLE_BIT.s_level_out_d4_reg_1 ,
    \SINGLE_BIT.s_level_out_d4_reg_2 ,
    \SINGLE_BIT.s_level_out_d4_reg_3 ,
    \SINGLE_BIT.s_level_out_d4_reg_4 ,
    \SINGLE_BIT.s_level_out_d4_reg_5 ,
    \SINGLE_BIT.s_level_out_d4_reg_6 ,
    \SINGLE_BIT.s_level_out_d4_reg_7 ,
    \SINGLE_BIT.s_level_out_d4_reg_8 ,
    \SINGLE_BIT.s_level_out_d4_reg_9 ,
    \SINGLE_BIT.s_level_out_d4_reg_10 ,
    \SINGLE_BIT.s_level_out_d4_reg_11 ,
    \SINGLE_BIT.s_level_out_d4_reg_12 ,
    \SINGLE_BIT.s_level_out_d6_reg ,
    \SINGLE_BIT.s_level_out_d6_reg_0 ,
    \SINGLE_BIT.s_level_out_d4_reg_13 ,
    \SINGLE_BIT.s_level_out_d4_reg_14 ,
    \SINGLE_BIT.s_level_out_d4_reg_15 ,
    \SINGLE_BIT.s_level_out_d4_reg_16 ,
    \SINGLE_BIT.s_level_out_d4_reg_17 ,
    IC_SYNC_ISR_MSGLST_TXE,
    IC_IPSIG_WRITE_I,
    IC_REG_SR_SLEEP_FS3,
    IC_REG_MSR_LBACK,
    IC_REG_MSR_SBR_I_reg,
    IC_REG_MSR_BRSD_I_reg,
    IC_REG_MSR_DPEE_I_reg,
    IC_REG_ISR_BSOFF_FS3,
    IC_SYNC_ECR_WEN_FS3,
    IC_REG_ESR_CRCER_FS3,
    IC_REG_ESR_FMER_FS3,
    IC_REG_ESR_STER_FS3,
    IC_REG_ESR_BERR_FS3,
    IC_REG_ESR_ACKER_FS3,
    IC_REG_ESR_F_CRCER_FS3,
    IC_REG_ESR_F_FMER_FS3,
    IC_REG_ESR_F_STER_FS3,
    IC_REG_ESR_F_BERR_FS3,
    p_14_in,
    IC_REG_SR_SNOOP_I_reg,
    IC_REG_ISR_ARBLST_FS3,
    IC_REG_ISR_TXOK_FS3,
    RXOK_FS3,
    IC_SYNC_TSR_WEN_FS3,
    IC_REG_ISR_MSGLST_FS3,
    IC_REG_ISR_MSGLST_FS3_F1,
    IC_REG_ISR_MSGLST_FS3_TXE,
    ip2bus_intrevent,
    IC_REG_SBR_I_reg,
    IC_REG_MSR_SLEEP_reg,
    \syncstages_ff_reg[3] ,
    IC_REG_SRR_SRST,
    BSP_IN_IFSPACE_OL,
    ID_MATCH_EN_FS_D1,
    Q,
    \wr_index_i_reg[6] ,
    invalidate_buffer_i,
    addr_location_incr_count_reg,
    ack_s_gate_toggle,
    MATCH_RESULT_SIG_reg,
    RXF_FULL_AT_MSG_BOUNDARY,
    RXF_FULL_AT_MSG_BOUNDARY_F1,
    addr_location_incr_count_reg_0_sp_1,
    IC_REG_SRR_CEN_I,
    p_13_in,
    IC_REG_ESR_CRCER_I,
    IC_REG_ESR_FMER_I,
    IC_REG_ESR_STER_I,
    IC_REG_ESR_BERR_I,
    IC_REG_ESR_ACKER_I,
    IC_REG_ESR_F_CRCER_I,
    IC_REG_ESR_F_FMER_I,
    IC_REG_ESR_F_STER_I,
    IC_REG_ESR_F_BERR_I,
    IC_TIMESTAMP_RST_reg,
    IC_SYNC_ECR_ACK_I_reg,
    IC_IPSIG_WRITE_I_reg,
    \IC_REG_BRPR_I_reg[0] ,
    \IC_REG_IFF_EN_I_reg[5] ,
    \IC_REG_F_BTR_TS1_I_reg[0] ,
    \IC_REG_F_BTR_TS2_I_reg[0] ,
    \ADDR_RET_reg[2] ,
    \IC_REG_F_BRPR_I_reg[15] ,
    \IC_REG_N_BTR_TS1_I_reg[0] ,
    \IC_REG_RXFP_I2_reg[0] ,
    \IC_REG_N_BTR_SJW_I_reg[0] ,
    \IC_REG_F_BTR_SJW_I_reg[0] ,
    \IC_REG_N_BTR_TS2_I_reg[0] ,
    p_51_in,
    \ADDR_RET_reg[8] ,
    p_71_in,
    \FSM_sequential_tbs_cs_reg[1] ,
    postpone_flag_2_reg,
    addrb,
    imm_cs,
    ACF_VAL_I,
    IC_REG_ISR_ERROR_I10_out,
    IC_REG_ISR_TSCNT_OFLW_I0,
    \TRR_i_reg[13] ,
    \TRR_i_D1_reg[28] ,
    \TRR_i_D1_reg[23] ,
    \TRR_i_reg[13]_0 ,
    \IC_REG_IECRS_I_reg[3] ,
    \IC_REG_IECRS_I_reg[8] ,
    pr1_rd_req_reg,
    s_axi_wready,
    s_axi_arready,
    can_phy_rx_0,
    addra,
    \arststages_ff_reg[1]_0 ,
    sync_tl_rst_n_d2_reg,
    \TXE_DATA_TS_reg[7] ,
    TXE_BRAM_WEN,
    ADDR_M_CC,
    RX_ADDR_M_CC_F1,
    S,
    MATCH_RESULT_TO_BSP0,
    \RD_DATA_RET_reg[0] ,
    \MATCHED_FILTER_INDEX_reg[4] ,
    \RXE_DATA_STORED_AT_DLC_reg[0] ,
    dina,
    s_axi_aclk,
    can_clk,
    src_arst,
    IC_SYNC_SR_RSTST,
    IC_SYNC_SR_PEE,
    IC_SYNC_SR_BSFR,
    IC_SYNC_SR_LBACK,
    IC_SYNC_SR_BIDLE,
    IC_SYNC_SR_ERRWRN,
    IC_SYNC_ESR_F_CRCER,
    IC_SYNC_ESR_F_FMER,
    IC_SYNC_ESR_F_STER,
    IC_SYNC_ESR_F_BERR,
    TDCV_CNT_REG_WEN,
    IC_SYNC_TSR_WEN,
    IC_SYNC_ECR_WEN,
    IC_SYNC_ESR_CRCER,
    IC_SYNC_ESR_FMER,
    IC_SYNC_ESR_STER,
    IC_SYNC_ESR_BERR,
    IC_SYNC_ESR_ACKER,
    IC_SYNC_SR_SLEEP,
    IC_SYNC_ISR_ARBLST,
    IC_SYNC_ISR_TXOK,
    IC_SYNC_ISR_RXOK,
    IC_SYNC_ISR_MSGLST,
    IC_SYNC_ISR_MSGLST_F1,
    IC_SYNC_ISR_BSOFF,
    s_axi_wdata,
    CANCEL_OR_INVALIDATE_CONFIRMED_TL2OL,
    BSP_IN_IFSPACE,
    BSP_IN_EOF,
    ID_MATCH_EN,
    MSG_ON_CAN_BUS,
    SYNC_RST_TL,
    postpone_flag_reg,
    postpone_flag_2_reg_0,
    invalidate_buffer_reg,
    INDEX_VALID_SIG_reg,
    addr_location_incr_count_reg_0,
    IC_SYNC_ISR_MSGLST_reg,
    ack_s_gate_toggle_reg,
    MATCH_RESULT_SIG_reg_0,
    MATCH_RUNNING_SIG_reg_0,
    IC_REG_SRR_SRST_I_reg,
    IC_REG_SRR_CEN_I_reg,
    IC_REG_ISR_ARBLST_I_reg,
    IC_REG_ISR_TXOK_I_reg,
    IC_REG_ISR_PEE_I_reg,
    IC_REG_ISR_BSFRD_I_reg,
    IC_REG_ISR_RXOK_I_reg,
    IC_REG_ISR_TSCNT_OFLW_I_reg,
    IC_REG_ISR_MSGLST_I_reg,
    IC_REG_ISR_ERROR_I_reg,
    IC_REG_ISR_BSOFF_I_reg,
    IC_REG_ISR_SLEEP_I_reg,
    IC_REG_ISR_WKUP_I_reg,
    IC_REG_ISR_RXWM_I_reg,
    IC_REG_ISR_TXTRS_I_reg,
    IC_REG_ISR_TXCRS_I_reg,
    IC_REG_ISR_MSGLST_I_F1_reg,
    IC_REG_ISR_RXWM_I_F1_reg,
    IC_REG_ISR_RXMNF_I_reg,
    IC_REG_ISR_MSGLST_I_TXE_reg,
    IC_REG_ISR_TXEWM_I_reg,
    IC_REG_ESR_CRCER_I_reg,
    IC_REG_ESR_FMER_I_reg,
    IC_REG_ESR_STER_I_reg,
    IC_REG_ESR_BERR_I_reg,
    IC_REG_ESR_ACKER_I_reg,
    IC_REG_ESR_F_CRCER_I_reg,
    IC_REG_ESR_F_FMER_I_reg,
    IC_REG_ESR_F_STER_I_reg,
    IC_REG_ESR_F_BERR_I_reg,
    IC_TIMESTAMP_RST_reg_0,
    IC_REG_MSR_SBR_I_reg_0,
    Bus2IP_RNW,
    Bus2IP_CS,
    D,
    doutb,
    \RD_DATA_RET_reg[0]_0 ,
    dest_rst,
    can_phy_rx,
    RXE_FDF_I,
    TS_RX_WEN,
    RXE_MSGVAL_EARLY_F0,
    TS_RX_WEN_F1,
    RXE_MSGVAL_EARLY_F1,
    RXE_RXMSG_INVAL_F1,
    RXE_RXFIFO_WEN_FD2,
    RXE_RXFIFO_WEN_FD1,
    RXE_RXMSG_INVAL_F0,
    TXE_MSGVAL_FD2,
    TXE_MSGVAL_FD1,
    \wr_index_i_reg[1] ,
    RXE_RXMSG_VAL_F0,
    \wr_index_i_reg[1]_0 ,
    RXE_RXMSG_VAL_F1,
    \addr_location_incr_count_reg[4] ,
    RXE_RXFIFO_WEN,
    CO,
    MATCH_RESULT_TO_BSP_reg,
    MATCH_RESULT_FS2_D1,
    \ADDR_RET_reg[0] ,
    \txe_id_data_i_reg[0] ,
    \RXE_DATA_STORED_AT_DLC_reg[0]_0 ,
    \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[1] ,
    \ic_sync_ecr_cdc_tig_reg[0] ,
    E,
    \time_stamp_cnt_cdc_tig_reg[0] ,
    \IC_REG_TSR_I_reg[15] ,
    \ic_reg_sr_tdcv_cdc_tig_reg[6] ,
    \id_for_match_cdc_tig_reg[0]_0 ,
    \addr_location_incr_count_reg[0]_0 ,
    \wr_index_i_reg[6]_0 ,
    \wr_index_i_reg[6]_1 ,
    TS_RX_WDATA_F1);
  output [0:0]SR;
  output E_DATA_ACK;
  output postpone_flag;
  output postpone_flag_2;
  output CANCEL_CONFIRMED_OL_D1;
  output MSG_ON_CAN_BUS_AXI_D1;
  output index_valid_sig;
  output src_in;
  output winning_or_locked_index_cancel_req_reg;
  output TRR_REG_WRITE_PULSE;
  output tbs_running_sig;
  output trigger_next_round;
  output [0:0]wea;
  output ACK_S_SIG_IMM;
  output [0:0]\arststages_ff_reg[1] ;
  output IC_REG_MSR_DAR_I_reg;
  output TXE_MSGVAL_D2;
  output TXEWM_SET;
  output RXF_FULL_I_reg;
  output TXE_MSGVAL_D1;
  output MATCH_RUNNING_SIG_reg;
  output ID_MATCH_EN_D2;
  output RXMNF_SET;
  output RXWM_SET;
  output OL_RX_FIFO_FULL;
  output RXWM_SET_F1;
  output OL_RX_FIFO_FULL_F1;
  output enb;
  output host_req_reg;
  output dest_arst;
  output out;
  output \SINGLE_BIT.s_level_out_d4_reg ;
  output \SINGLE_BIT.s_level_out_d4_reg_0 ;
  output \SINGLE_BIT.s_level_out_d4_reg_1 ;
  output \SINGLE_BIT.s_level_out_d4_reg_2 ;
  output \SINGLE_BIT.s_level_out_d4_reg_3 ;
  output \SINGLE_BIT.s_level_out_d4_reg_4 ;
  output \SINGLE_BIT.s_level_out_d4_reg_5 ;
  output \SINGLE_BIT.s_level_out_d4_reg_6 ;
  output \SINGLE_BIT.s_level_out_d4_reg_7 ;
  output \SINGLE_BIT.s_level_out_d4_reg_8 ;
  output \SINGLE_BIT.s_level_out_d4_reg_9 ;
  output \SINGLE_BIT.s_level_out_d4_reg_10 ;
  output \SINGLE_BIT.s_level_out_d4_reg_11 ;
  output \SINGLE_BIT.s_level_out_d4_reg_12 ;
  output \SINGLE_BIT.s_level_out_d6_reg ;
  output \SINGLE_BIT.s_level_out_d6_reg_0 ;
  output \SINGLE_BIT.s_level_out_d4_reg_13 ;
  output \SINGLE_BIT.s_level_out_d4_reg_14 ;
  output \SINGLE_BIT.s_level_out_d4_reg_15 ;
  output \SINGLE_BIT.s_level_out_d4_reg_16 ;
  output \SINGLE_BIT.s_level_out_d4_reg_17 ;
  output IC_SYNC_ISR_MSGLST_TXE;
  output IC_IPSIG_WRITE_I;
  output IC_REG_SR_SLEEP_FS3;
  output IC_REG_MSR_LBACK;
  output [0:0]IC_REG_MSR_SBR_I_reg;
  output IC_REG_MSR_BRSD_I_reg;
  output IC_REG_MSR_DPEE_I_reg;
  output IC_REG_ISR_BSOFF_FS3;
  output IC_SYNC_ECR_WEN_FS3;
  output IC_REG_ESR_CRCER_FS3;
  output IC_REG_ESR_FMER_FS3;
  output IC_REG_ESR_STER_FS3;
  output IC_REG_ESR_BERR_FS3;
  output IC_REG_ESR_ACKER_FS3;
  output IC_REG_ESR_F_CRCER_FS3;
  output IC_REG_ESR_F_FMER_FS3;
  output IC_REG_ESR_F_STER_FS3;
  output IC_REG_ESR_F_BERR_FS3;
  output [1:0]p_14_in;
  output IC_REG_SR_SNOOP_I_reg;
  output IC_REG_ISR_ARBLST_FS3;
  output IC_REG_ISR_TXOK_FS3;
  output RXOK_FS3;
  output IC_SYNC_TSR_WEN_FS3;
  output IC_REG_ISR_MSGLST_FS3;
  output IC_REG_ISR_MSGLST_FS3_F1;
  output IC_REG_ISR_MSGLST_FS3_TXE;
  output ip2bus_intrevent;
  output IC_REG_SBR_I_reg;
  output IC_REG_MSR_SLEEP_reg;
  output \syncstages_ff_reg[3] ;
  output IC_REG_SRR_SRST;
  output BSP_IN_IFSPACE_OL;
  output ID_MATCH_EN_FS_D1;
  output [0:0]Q;
  output [0:0]\wr_index_i_reg[6] ;
  output invalidate_buffer_i;
  output [0:0]addr_location_incr_count_reg;
  output ack_s_gate_toggle;
  output MATCH_RESULT_SIG_reg;
  output RXF_FULL_AT_MSG_BOUNDARY;
  output RXF_FULL_AT_MSG_BOUNDARY_F1;
  output addr_location_incr_count_reg_0_sp_1;
  output IC_REG_SRR_CEN_I;
  output [18:0]p_13_in;
  output IC_REG_ESR_CRCER_I;
  output IC_REG_ESR_FMER_I;
  output IC_REG_ESR_STER_I;
  output IC_REG_ESR_BERR_I;
  output IC_REG_ESR_ACKER_I;
  output IC_REG_ESR_F_CRCER_I;
  output IC_REG_ESR_F_FMER_I;
  output IC_REG_ESR_F_STER_I;
  output IC_REG_ESR_F_BERR_I;
  output IC_TIMESTAMP_RST_reg;
  output IC_SYNC_ECR_ACK_I_reg;
  output IC_IPSIG_WRITE_I_reg;
  output [7:0]\IC_REG_BRPR_I_reg[0] ;
  output [2:0]\IC_REG_IFF_EN_I_reg[5] ;
  output [4:0]\IC_REG_F_BTR_TS1_I_reg[0] ;
  output [3:0]\IC_REG_F_BTR_TS2_I_reg[0] ;
  output [10:0]\ADDR_RET_reg[2] ;
  output [14:0]\IC_REG_F_BRPR_I_reg[15] ;
  output [7:0]\IC_REG_N_BTR_TS1_I_reg[0] ;
  output [4:0]\IC_REG_RXFP_I2_reg[0] ;
  output [6:0]\IC_REG_N_BTR_SJW_I_reg[0] ;
  output [3:0]\IC_REG_F_BTR_SJW_I_reg[0] ;
  output [6:0]\IC_REG_N_BTR_TS2_I_reg[0] ;
  output p_51_in;
  output \ADDR_RET_reg[8] ;
  output p_71_in;
  output [1:0]\FSM_sequential_tbs_cs_reg[1] ;
  output postpone_flag_2_reg;
  output [9:0]addrb;
  output [1:0]imm_cs;
  output ACF_VAL_I;
  output IC_REG_ISR_ERROR_I10_out;
  output IC_REG_ISR_TSCNT_OFLW_I0;
  output \TRR_i_reg[13] ;
  output \TRR_i_D1_reg[28] ;
  output \TRR_i_D1_reg[23] ;
  output \TRR_i_reg[13]_0 ;
  output \IC_REG_IECRS_I_reg[3] ;
  output \IC_REG_IECRS_I_reg[8] ;
  output pr1_rd_req_reg;
  output s_axi_wready;
  output s_axi_arready;
  output can_phy_rx_0;
  output [10:0]addra;
  output \arststages_ff_reg[1]_0 ;
  output sync_tl_rst_n_d2_reg;
  output [0:0]\TXE_DATA_TS_reg[7] ;
  output TXE_BRAM_WEN;
  output [9:0]ADDR_M_CC;
  output [9:0]RX_ADDR_M_CC_F1;
  output [0:0]S;
  output MATCH_RESULT_TO_BSP0;
  output [31:0]\RD_DATA_RET_reg[0] ;
  output [4:0]\MATCHED_FILTER_INDEX_reg[4] ;
  output [10:0]\RXE_DATA_STORED_AT_DLC_reg[0] ;
  output [31:0]dina;
  input s_axi_aclk;
  input can_clk;
  input src_arst;
  input IC_SYNC_SR_RSTST;
  input IC_SYNC_SR_PEE;
  input IC_SYNC_SR_BSFR;
  input IC_SYNC_SR_LBACK;
  input IC_SYNC_SR_BIDLE;
  input IC_SYNC_SR_ERRWRN;
  input IC_SYNC_ESR_F_CRCER;
  input IC_SYNC_ESR_F_FMER;
  input IC_SYNC_ESR_F_STER;
  input IC_SYNC_ESR_F_BERR;
  input TDCV_CNT_REG_WEN;
  input IC_SYNC_TSR_WEN;
  input IC_SYNC_ECR_WEN;
  input IC_SYNC_ESR_CRCER;
  input IC_SYNC_ESR_FMER;
  input IC_SYNC_ESR_STER;
  input IC_SYNC_ESR_BERR;
  input IC_SYNC_ESR_ACKER;
  input IC_SYNC_SR_SLEEP;
  input IC_SYNC_ISR_ARBLST;
  input IC_SYNC_ISR_TXOK;
  input IC_SYNC_ISR_RXOK;
  input IC_SYNC_ISR_MSGLST;
  input IC_SYNC_ISR_MSGLST_F1;
  input IC_SYNC_ISR_BSOFF;
  input [31:0]s_axi_wdata;
  input CANCEL_OR_INVALIDATE_CONFIRMED_TL2OL;
  input BSP_IN_IFSPACE;
  input BSP_IN_EOF;
  input ID_MATCH_EN;
  input MSG_ON_CAN_BUS;
  input SYNC_RST_TL;
  input postpone_flag_reg;
  input postpone_flag_2_reg_0;
  input invalidate_buffer_reg;
  input INDEX_VALID_SIG_reg;
  input addr_location_incr_count_reg_0;
  input IC_SYNC_ISR_MSGLST_reg;
  input ack_s_gate_toggle_reg;
  input MATCH_RESULT_SIG_reg_0;
  input MATCH_RUNNING_SIG_reg_0;
  input IC_REG_SRR_SRST_I_reg;
  input IC_REG_SRR_CEN_I_reg;
  input IC_REG_ISR_ARBLST_I_reg;
  input IC_REG_ISR_TXOK_I_reg;
  input IC_REG_ISR_PEE_I_reg;
  input IC_REG_ISR_BSFRD_I_reg;
  input IC_REG_ISR_RXOK_I_reg;
  input IC_REG_ISR_TSCNT_OFLW_I_reg;
  input IC_REG_ISR_MSGLST_I_reg;
  input IC_REG_ISR_ERROR_I_reg;
  input IC_REG_ISR_BSOFF_I_reg;
  input IC_REG_ISR_SLEEP_I_reg;
  input IC_REG_ISR_WKUP_I_reg;
  input IC_REG_ISR_RXWM_I_reg;
  input IC_REG_ISR_TXTRS_I_reg;
  input IC_REG_ISR_TXCRS_I_reg;
  input IC_REG_ISR_MSGLST_I_F1_reg;
  input IC_REG_ISR_RXWM_I_F1_reg;
  input IC_REG_ISR_RXMNF_I_reg;
  input IC_REG_ISR_MSGLST_I_TXE_reg;
  input IC_REG_ISR_TXEWM_I_reg;
  input IC_REG_ESR_CRCER_I_reg;
  input IC_REG_ESR_FMER_I_reg;
  input IC_REG_ESR_STER_I_reg;
  input IC_REG_ESR_BERR_I_reg;
  input IC_REG_ESR_ACKER_I_reg;
  input IC_REG_ESR_F_CRCER_I_reg;
  input IC_REG_ESR_F_FMER_I_reg;
  input IC_REG_ESR_F_STER_I_reg;
  input IC_REG_ESR_F_BERR_I_reg;
  input IC_TIMESTAMP_RST_reg_0;
  input IC_REG_MSR_SBR_I_reg_0;
  input Bus2IP_RNW;
  input Bus2IP_CS;
  input [31:0]D;
  input [31:0]doutb;
  input [31:0]\RD_DATA_RET_reg[0]_0 ;
  input dest_rst;
  input can_phy_rx;
  input RXE_FDF_I;
  input TS_RX_WEN;
  input RXE_MSGVAL_EARLY_F0;
  input TS_RX_WEN_F1;
  input RXE_MSGVAL_EARLY_F1;
  input RXE_RXMSG_INVAL_F1;
  input RXE_RXFIFO_WEN_FD2;
  input RXE_RXFIFO_WEN_FD1;
  input RXE_RXMSG_INVAL_F0;
  input TXE_MSGVAL_FD2;
  input TXE_MSGVAL_FD1;
  input \wr_index_i_reg[1] ;
  input RXE_RXMSG_VAL_F0;
  input \wr_index_i_reg[1]_0 ;
  input RXE_RXMSG_VAL_F1;
  input \addr_location_incr_count_reg[4] ;
  input RXE_RXFIFO_WEN;
  input [0:0]CO;
  input MATCH_RESULT_TO_BSP_reg;
  input MATCH_RESULT_FS2_D1;
  input [12:0]\ADDR_RET_reg[0] ;
  input [31:0]\txe_id_data_i_reg[0] ;
  input [31:0]\RXE_DATA_STORED_AT_DLC_reg[0]_0 ;
  input [0:0]\MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[1] ;
  input [15:0]\ic_sync_ecr_cdc_tig_reg[0] ;
  input [0:0]E;
  input [15:0]\time_stamp_cnt_cdc_tig_reg[0] ;
  input [0:0]\IC_REG_TSR_I_reg[15] ;
  input [6:0]\ic_reg_sr_tdcv_cdc_tig_reg[6] ;
  input [31:0]\id_for_match_cdc_tig_reg[0]_0 ;
  input [0:0]\addr_location_incr_count_reg[0]_0 ;
  input [0:0]\wr_index_i_reg[6]_0 ;
  input [0:0]\wr_index_i_reg[6]_1 ;
  input [20:0]TS_RX_WDATA_F1;

  wire ACF_VAL_I;
  wire ACK_CR;
  wire ACK_RX;
  wire ACK_RX_T;
  wire ACK_S_SIG_IMM;
  wire ACK_TX_RD;
  wire ACK_TX_WR;
  wire [9:0]ADDR_M_CC;
  wire [12:0]\ADDR_RET_reg[0] ;
  wire [10:0]\ADDR_RET_reg[2] ;
  wire \ADDR_RET_reg[8] ;
  wire [9:12]ADDR_S_SIG_IMM;
  wire BSP_IN_EOF;
  wire BSP_IN_EOF_OL;
  wire BSP_IN_IFSPACE;
  wire BSP_IN_IFSPACE_OL;
  wire Bus2IP_CS;
  wire Bus2IP_RNW;
  wire CANCEL_BUFFER_OL2TL_D1;
  wire CANCEL_CONFIRMED_OL;
  wire CANCEL_CONFIRMED_OL_D1;
  wire CANCEL_OR_INVALIDATE_CONFIRMED_TL2OL;
  wire [0:0]CO;
  wire CS_H0;
  wire CS_H00_out;
  wire CS_RX;
  wire CS_RX_T;
  wire [31:0]D;
  wire [0:0]E;
  wire E_DATA_ACK;
  wire [1:0]\FSM_sequential_tbs_cs_reg[1] ;
  wire \GEN_FIFO_1_CNTL.rxmsg_fifo_cntl_1/IC_REG_WMR_I20 ;
  wire \GEN_FIFO_1_CNTL.rxmsg_fifo_cntl_1/RXF_FULL_AXI ;
  wire [4:4]\GEN_FIFO_1_CNTL.rxmsg_fifo_cntl_1/addr_location_incr_count ;
  wire \GEN_FIFO_CNTL.rxmsg_fifo_cntl/RXF_FULL_AXI ;
  wire [4:4]\GEN_FIFO_CNTL.rxmsg_fifo_cntl/addr_location_incr_count ;
  wire [9:9]\GEN_FIFO_CNTL.rxmsg_fifo_cntl/wr_index_id_loc_reg ;
  wire [4:0]\GEN_IMM.ol_imm/num_reg ;
  wire G_RST_SRST_CEN_I0;
  wire IC_IPSIG_WRITE_I;
  wire IC_IPSIG_WRITE_I_reg;
  wire [1:31]IC_REG_AFR;
  wire IC_REG_AFR_I0;
  wire IC_REG_BRPR_I0;
  wire [7:0]\IC_REG_BRPR_I_reg[0] ;
  wire [0:15]IC_REG_ECR_I;
  wire IC_REG_ESR_ACKER_FS3;
  wire IC_REG_ESR_ACKER_I;
  wire IC_REG_ESR_ACKER_I_reg;
  wire IC_REG_ESR_BERR_FS3;
  wire IC_REG_ESR_BERR_I;
  wire IC_REG_ESR_BERR_I_reg;
  wire IC_REG_ESR_CRCER_FS3;
  wire IC_REG_ESR_CRCER_I;
  wire IC_REG_ESR_CRCER_I_reg;
  wire IC_REG_ESR_FMER_FS3;
  wire IC_REG_ESR_FMER_I;
  wire IC_REG_ESR_FMER_I_reg;
  wire IC_REG_ESR_F_BERR_FS3;
  wire IC_REG_ESR_F_BERR_I;
  wire IC_REG_ESR_F_BERR_I_reg;
  wire IC_REG_ESR_F_CRCER_FS3;
  wire IC_REG_ESR_F_CRCER_I;
  wire IC_REG_ESR_F_CRCER_I_reg;
  wire IC_REG_ESR_F_FMER_FS3;
  wire IC_REG_ESR_F_FMER_I;
  wire IC_REG_ESR_F_FMER_I_reg;
  wire IC_REG_ESR_F_STER_FS3;
  wire IC_REG_ESR_F_STER_I;
  wire IC_REG_ESR_F_STER_I_reg;
  wire IC_REG_ESR_STER_FS3;
  wire IC_REG_ESR_STER_I;
  wire IC_REG_ESR_STER_I_reg;
  wire [2:8]IC_REG_FSR_I;
  wire [2:8]IC_REG_FSR_I_F1;
  wire [11:16]IC_REG_FSR_I_F1__0;
  wire [12:16]IC_REG_FSR_I_TXE;
  wire [3:8]IC_REG_FSR_I_TXE__0;
  wire [11:16]IC_REG_FSR_I__0;
  wire IC_REG_F_BRPR_I0;
  wire [14:0]\IC_REG_F_BRPR_I_reg[15] ;
  wire [3:0]\IC_REG_F_BTR_SJW_I_reg[0] ;
  wire IC_REG_F_BTR_TS1_I0;
  wire [4:0]\IC_REG_F_BTR_TS1_I_reg[0] ;
  wire [3:0]\IC_REG_F_BTR_TS2_I_reg[0] ;
  wire IC_REG_IECRS_I0;
  wire \IC_REG_IECRS_I_reg[3] ;
  wire \IC_REG_IECRS_I_reg[8] ;
  wire IC_REG_IER_I0;
  wire IC_REG_IETRS_I0;
  wire [2:0]\IC_REG_IFF_EN_I_reg[5] ;
  wire IC_REG_ISR_ARBLST_FS3;
  wire IC_REG_ISR_ARBLST_I_reg;
  wire IC_REG_ISR_BSFRD_I_reg;
  wire IC_REG_ISR_BSOFF_FS3;
  wire IC_REG_ISR_BSOFF_I_reg;
  wire IC_REG_ISR_ERROR_I10_out;
  wire IC_REG_ISR_ERROR_I_reg;
  wire IC_REG_ISR_MSGLST_FS3;
  wire IC_REG_ISR_MSGLST_FS3_F1;
  wire IC_REG_ISR_MSGLST_FS3_TXE;
  wire IC_REG_ISR_MSGLST_I_F1_reg;
  wire IC_REG_ISR_MSGLST_I_TXE_reg;
  wire IC_REG_ISR_MSGLST_I_reg;
  wire IC_REG_ISR_PEE_I_reg;
  wire IC_REG_ISR_RXMNF_I_reg;
  wire IC_REG_ISR_RXOK_I_reg;
  wire IC_REG_ISR_RXWM_I_F1_reg;
  wire IC_REG_ISR_RXWM_I_reg;
  wire IC_REG_ISR_SLEEP_I_reg;
  wire IC_REG_ISR_TSCNT_OFLW_I0;
  wire IC_REG_ISR_TSCNT_OFLW_I_reg;
  wire IC_REG_ISR_TXCRS_I_reg;
  wire IC_REG_ISR_TXEWM_I_reg;
  wire IC_REG_ISR_TXOK_FS3;
  wire IC_REG_ISR_TXOK_I_reg;
  wire IC_REG_ISR_TXTRS_I_reg;
  wire IC_REG_ISR_WKUP_I_reg;
  wire IC_REG_MSR_BRSD_I_reg;
  wire IC_REG_MSR_DAR_I_reg;
  wire IC_REG_MSR_DPEE_I_reg;
  wire IC_REG_MSR_LBACK;
  wire IC_REG_MSR_LBACK_I0;
  wire [0:0]IC_REG_MSR_SBR_I_reg;
  wire IC_REG_MSR_SBR_I_reg_0;
  wire IC_REG_MSR_SLEEP_reg;
  wire [6:0]\IC_REG_N_BTR_SJW_I_reg[0] ;
  wire IC_REG_N_BTR_TS1_I0;
  wire [7:0]\IC_REG_N_BTR_TS1_I_reg[0] ;
  wire [6:0]\IC_REG_N_BTR_TS2_I_reg[0] ;
  wire [4:0]\IC_REG_RXFP_I2_reg[0] ;
  wire IC_REG_SBR_I_reg;
  wire IC_REG_SRR_CEN_I;
  wire IC_REG_SRR_CEN_I_reg;
  wire IC_REG_SRR_SRST;
  wire IC_REG_SRR_SRST_I_reg;
  wire IC_REG_SR_BBSY_I;
  wire IC_REG_SR_ERRWRN_I;
  wire IC_REG_SR_SLEEP_FS3;
  wire IC_REG_SR_SNOOP_I_reg;
  wire [6:0]IC_REG_SR_TDCV_I;
  wire [0:31]IC_REG_TCR_I;
  wire [0:31]IC_REG_TRR_I;
  wire IC_REG_TSR_I;
  wire [0:0]\IC_REG_TSR_I_reg[15] ;
  wire [0:5]IC_REG_WMR_I;
  wire [3:5]IC_REG_WMR_I_F1;
  wire [4:5]IC_REG_WMR_I_TXE;
  wire IC_SYNC_ECR_ACK_I_reg;
  wire IC_SYNC_ECR_WEN;
  wire IC_SYNC_ECR_WEN_FS3;
  wire IC_SYNC_ESR_ACKER;
  wire IC_SYNC_ESR_BERR;
  wire IC_SYNC_ESR_CRCER;
  wire IC_SYNC_ESR_FMER;
  wire IC_SYNC_ESR_F_BERR;
  wire IC_SYNC_ESR_F_CRCER;
  wire IC_SYNC_ESR_F_FMER;
  wire IC_SYNC_ESR_F_STER;
  wire IC_SYNC_ESR_STER;
  wire IC_SYNC_ISR_ARBLST;
  wire IC_SYNC_ISR_BSOFF;
  wire IC_SYNC_ISR_MSGLST;
  wire IC_SYNC_ISR_MSGLST_F1;
  wire IC_SYNC_ISR_MSGLST_TXE;
  wire IC_SYNC_ISR_MSGLST_reg;
  wire IC_SYNC_ISR_RXOK;
  wire IC_SYNC_ISR_TXOK;
  wire IC_SYNC_SR_BIDLE;
  wire IC_SYNC_SR_BSFR;
  wire IC_SYNC_SR_ERRWRN;
  wire IC_SYNC_SR_LBACK;
  wire IC_SYNC_SR_PEE;
  wire IC_SYNC_SR_RSTST;
  wire IC_SYNC_SR_SLEEP;
  wire IC_SYNC_TSR_WEN;
  wire IC_SYNC_TSR_WEN_FS3;
  wire IC_TIMESTAMP_RST_reg;
  wire IC_TIMESTAMP_RST_reg_0;
  wire ID_MATCH_EN;
  wire ID_MATCH_EN_D2;
  wire ID_MATCH_EN_FS_D1;
  wire ID_MATCH_EN_OL;
  wire [31:0]IETCS;
  wire [31:0]IETRS;
  wire INDEX_VALID_SIG_reg;
  wire [4:0]\MATCHED_FILTER_INDEX_reg[4] ;
  wire MATCH_RESULT_FS2_D1;
  wire MATCH_RESULT_SIG_reg;
  wire MATCH_RESULT_SIG_reg_0;
  wire MATCH_RESULT_TO_BSP0;
  wire MATCH_RESULT_TO_BSP_reg;
  wire MATCH_RUNNING_SIG_reg;
  wire MATCH_RUNNING_SIG_reg_0;
  wire MSG_DONE_FROM_BSP;
  wire MSG_ON_CAN_BUS;
  wire MSG_ON_CAN_BUS_AXI;
  wire MSG_ON_CAN_BUS_AXI_D1;
  wire MSG_ON_CAN_BUS_OL;
  wire MSG_ON_CAN_BUS_OL_D1;
  wire [0:0]\MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[1] ;
  wire OL_RX_FIFO_FULL;
  wire OL_RX_FIFO_FULL_F1;
  wire [0:0]Q;
  wire [1:29]RD_DATA;
  wire [31:0]\RD_DATA_RET_reg[0] ;
  wire [31:0]\RD_DATA_RET_reg[0]_0 ;
  wire [1:5]RUNNING_FIFO_ID_LOC_reg;
  wire [10:0]\RXE_DATA_STORED_AT_DLC_reg[0] ;
  wire [31:0]\RXE_DATA_STORED_AT_DLC_reg[0]_0 ;
  wire RXE_FDF_I;
  wire RXE_MSGVAL_EARLY_F0;
  wire RXE_MSGVAL_EARLY_F1;
  wire RXE_RXFIFO_WEN;
  wire RXE_RXFIFO_WEN_FD1;
  wire RXE_RXFIFO_WEN_FD2;
  wire RXE_RXMSG_INVAL_F0;
  wire RXE_RXMSG_INVAL_F1;
  wire RXE_RXMSG_VAL_F0;
  wire RXE_RXMSG_VAL_F1;
  wire RXF_FULL_AT_MSG_BOUNDARY;
  wire RXF_FULL_AT_MSG_BOUNDARY_F1;
  wire RXF_FULL_I_reg;
  wire RXMNF_SET;
  wire RXOK_FS3;
  wire RXWM_SET;
  wire RXWM_SET_F1;
  wire [12:2]RX_ADDR_M_CC;
  wire [9:0]RX_ADDR_M_CC_F1;
  wire [0:0]S;
  wire \SINGLE_BIT.s_level_out_d4_reg ;
  wire \SINGLE_BIT.s_level_out_d4_reg_0 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_1 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_10 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_11 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_12 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_13 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_14 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_15 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_16 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_17 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_2 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_3 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_4 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_5 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_6 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_7 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_8 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_9 ;
  wire \SINGLE_BIT.s_level_out_d6_reg ;
  wire \SINGLE_BIT.s_level_out_d6_reg_0 ;
  wire [0:0]SR;
  wire SYNC_RST_TL;
  wire TDCV_CNT_REG_WEN;
  wire TRR_REG_WRITE_PULSE;
  wire \TRR_i_D1_reg[23] ;
  wire \TRR_i_D1_reg[28] ;
  wire \TRR_i_reg[13] ;
  wire \TRR_i_reg[13]_0 ;
  wire [20:0]TS_RX_WDATA_F1;
  wire TS_RX_WEN;
  wire TS_RX_WEN_F1;
  wire TXEWM_SET;
  wire TXE_BRAM_WEN;
  wire [0:0]\TXE_DATA_TS_reg[7] ;
  wire TXE_MSGVAL_D1;
  wire TXE_MSGVAL_D2;
  wire TXE_MSGVAL_FD1;
  wire TXE_MSGVAL_FD2;
  wire VALID_S_SIG_IMM;
  wire ack_s_gate_toggle;
  wire ack_s_gate_toggle_reg;
  wire [0:0]addr_location_incr_count_reg;
  wire [0:0]\addr_location_incr_count_reg[0]_0 ;
  wire \addr_location_incr_count_reg[4] ;
  wire addr_location_incr_count_reg_0;
  wire addr_location_incr_count_reg_0_sn_1;
  wire [10:0]addra;
  wire [9:0]addrb;
  wire [0:0]\arststages_ff_reg[1] ;
  wire \arststages_ff_reg[1]_0 ;
  wire can_clk;
  wire can_phy_rx;
  wire can_phy_rx_0;
  wire dest_arst;
  wire dest_rst;
  wire [31:0]dina;
  wire [31:0]doutb;
  wire enb;
  wire host_req_reg;
  wire ic_n_100;
  wire ic_n_102;
  wire ic_n_167;
  wire ic_n_168;
  wire ic_n_169;
  wire ic_n_170;
  wire ic_n_171;
  wire ic_n_172;
  wire ic_n_173;
  wire ic_n_174;
  wire ic_n_175;
  wire ic_n_176;
  wire ic_n_177;
  wire ic_n_178;
  wire ic_n_179;
  wire ic_n_193;
  wire ic_n_216;
  wire ic_n_232;
  wire ic_n_233;
  wire ic_n_234;
  wire ic_n_235;
  wire ic_n_243;
  wire ic_n_251;
  wire ic_n_252;
  wire ic_n_253;
  wire ic_n_254;
  wire ic_n_259;
  wire ic_n_272;
  wire ic_n_273;
  wire ic_n_274;
  wire ic_n_278;
  wire ic_n_279;
  wire ic_n_280;
  wire ic_n_281;
  wire ic_n_282;
  wire ic_n_283;
  wire ic_n_88;
  wire ic_n_97;
  wire ic_n_98;
  wire ic_n_99;
  wire [6:0]\ic_reg_sr_tdcv_cdc_tig_reg[6] ;
  wire [15:0]\ic_sync_ecr_cdc_tig_reg[0] ;
  wire [0:31]id_for_match_cdc_tig;
  wire [31:0]\id_for_match_cdc_tig_reg[0]_0 ;
  wire [1:0]imm_cs;
  wire index_valid_sig;
  wire invalidate_buffer_i;
  wire invalidate_buffer_reg;
  wire ip2bus_intrevent;
  wire ol_adec_n_1;
  wire ol_adec_n_10;
  wire ol_adec_n_11;
  wire ol_adec_n_12;
  wire ol_adec_n_13;
  wire ol_adec_n_14;
  wire ol_adec_n_15;
  wire ol_adec_n_16;
  wire ol_adec_n_17;
  wire ol_adec_n_18;
  wire ol_adec_n_19;
  wire ol_adec_n_2;
  wire ol_adec_n_20;
  wire ol_adec_n_21;
  wire ol_adec_n_25;
  wire ol_adec_n_4;
  wire ol_adec_n_40;
  wire ol_adec_n_41;
  wire ol_adec_n_42;
  wire ol_adec_n_43;
  wire ol_adec_n_44;
  wire ol_adec_n_45;
  wire ol_adec_n_46;
  wire ol_adec_n_47;
  wire ol_adec_n_48;
  wire ol_adec_n_49;
  wire ol_adec_n_5;
  wire ol_adec_n_50;
  wire ol_adec_n_51;
  wire ol_adec_n_52;
  wire ol_adec_n_53;
  wire ol_adec_n_54;
  wire ol_adec_n_55;
  wire ol_adec_n_56;
  wire ol_adec_n_57;
  wire ol_adec_n_58;
  wire ol_adec_n_59;
  wire ol_adec_n_6;
  wire ol_adec_n_60;
  wire ol_adec_n_61;
  wire ol_adec_n_62;
  wire ol_adec_n_65;
  wire ol_adec_n_7;
  wire ol_adec_n_78;
  wire ol_adec_n_8;
  wire ol_adec_n_9;
  wire ol_fifo_rst_n;
  wire ol_rbmm_n_113;
  wire ol_rbmm_n_114;
  wire ol_rbmm_n_115;
  wire ol_rbmm_n_116;
  wire ol_rbmm_n_117;
  wire ol_rbmm_n_118;
  wire ol_rbmm_n_119;
  wire ol_rbmm_n_120;
  wire ol_rbmm_n_121;
  wire ol_rbmm_n_122;
  wire ol_rbmm_n_123;
  wire ol_rbmm_n_44;
  wire ol_rbmm_n_48;
  wire ol_rbmm_n_49;
  wire ol_rbmm_n_50;
  wire ol_rbmm_n_51;
  wire ol_rbmm_n_6;
  wire ol_rbmm_n_62;
  wire ol_rbmm_n_63;
  wire ol_rbmm_n_64;
  wire ol_rbmm_n_65;
  wire ol_rbmm_n_66;
  wire ol_rbmm_n_74;
  wire \ol_tac/CS_H_D1 ;
  wire \ol_tac/CS_H_INTERNAL ;
  wire \ol_tac_nf/CS_H_D1 ;
  wire \ol_tac_nf/CS_H_INTERNAL ;
  wire \ol_tac_rd/CS_H_D1 ;
  wire \ol_tac_rd/pr1_rd_req0 ;
  wire ol_tbmm_n_146;
  wire ol_tbmm_n_153;
  wire ol_tbmm_n_154;
  wire ol_tbmm_n_155;
  wire ol_tbmm_n_41;
  wire ol_tbmm_n_42;
  wire ol_tbmm_n_43;
  wire ol_tbmm_n_44;
  wire ol_tbmm_n_45;
  wire ol_tbmm_n_46;
  wire ol_tbmm_n_78;
  wire ol_tbmm_n_79;
  wire ol_tbmm_n_80;
  wire ol_tbmm_n_81;
  wire ol_tbmm_n_82;
  wire ol_tbmm_n_83;
  wire ol_tbmm_n_84;
  wire ol_tbmm_n_85;
  wire ol_tbmm_n_86;
  wire ol_tbmm_n_87;
  wire ol_tbmm_n_88;
  wire ol_tbmm_n_89;
  wire ol_tbmm_n_90;
  wire \ol_txreg/TRR_REG_WRITE_PULSE0 ;
  wire olglue_n_10;
  wire olglue_n_11;
  wire olglue_n_13;
  wire olglue_n_14;
  wire olglue_n_16;
  wire olglue_n_17;
  wire olglue_n_21;
  wire olglue_n_23;
  wire out;
  wire p_0_in;
  wire [31:17]p_11_in;
  wire [18:0]p_13_in;
  wire p_13_in__0;
  wire [1:0]p_14_in;
  wire p_14_in__0;
  wire p_1_in;
  wire p_2_in;
  wire [7:0]p_3_in;
  wire p_3_in__0;
  wire p_4_in;
  wire p_51_in;
  wire p_5_in;
  wire p_6_in;
  wire p_71_in;
  wire p_7_in;
  wire p_8_in;
  wire postpone_flag;
  wire postpone_flag_2;
  wire postpone_flag_2_reg;
  wire postpone_flag_2_reg_0;
  wire postpone_flag_reg;
  wire pr1_rd_req_reg;
  wire s_axi_aclk;
  wire s_axi_arready;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire src_arst;
  wire src_in;
  wire sync_tl_rst_n_d2_reg;
  wire \syncstages_ff_reg[3] ;
  wire tbs_running_sig;
  wire [15:0]\time_stamp_cnt_cdc_tig_reg[0] ;
  wire trigger_next_round;
  wire \tx_event_fifo_cntl/IC_REG_WMR_I20 ;
  wire \tx_event_fifo_cntl/RD_INDEX0 ;
  wire \tx_event_fifo_cntl/RXF_FULL_AXI ;
  wire [31:0]\txe_id_data_i_reg[0] ;
  wire [0:0]wea;
  wire winning_or_locked_index_cancel_req_reg;
  wire \wr_index_i_reg[1] ;
  wire \wr_index_i_reg[1]_0 ;
  wire [0:0]\wr_index_i_reg[6] ;
  wire [0:0]\wr_index_i_reg[6]_0 ;
  wire [0:0]\wr_index_i_reg[6]_1 ;

  assign addr_location_incr_count_reg_0_sp_1 = addr_location_incr_count_reg_0_sn_1;
  FDRE CANCEL_BUFFER_OL2TL_D1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(winning_or_locked_index_cancel_req_reg),
        .Q(CANCEL_BUFFER_OL2TL_D1),
        .R(SR));
  FDRE MSG_ON_CAN_BUS_AXI_D1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(MSG_ON_CAN_BUS_AXI),
        .Q(MSG_ON_CAN_BUS_AXI_D1),
        .R(SR));
  FDRE MSG_ON_CAN_BUS_AXI_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(olglue_n_16),
        .Q(MSG_ON_CAN_BUS_AXI),
        .R(1'b0));
  FDRE MSG_ON_CAN_BUS_OL_D1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(MSG_ON_CAN_BUS_OL),
        .Q(MSG_ON_CAN_BUS_OL_D1),
        .R(SR));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ic_main ic
       (.ACK_CR(ACK_CR),
        .Bus2IP_CS(Bus2IP_CS),
        .Bus2IP_RNW(Bus2IP_RNW),
        .CANCEL_BUFFER_OL2TL_D1(CANCEL_BUFFER_OL2TL_D1),
        .E(IC_REG_MSR_LBACK_I0),
        .E_INTR_reg_0(p_51_in),
        .\FSM_sequential_imm_cs[0]_i_2 (\GEN_IMM.ol_imm/num_reg ),
        .\FSM_sequential_imm_cs[0]_i_2_0 (ol_rbmm_n_74),
        .G_RST_SRST_CEN_I0(G_RST_SRST_CEN_I0),
        .\IC_IPIC_COUNTER_I_reg[1]_0 (ol_adec_n_21),
        .IC_IPSIG_WRITE_I_reg_0(IC_IPSIG_WRITE_I),
        .\IC_REG_BRPR_I_reg[0]_0 (\IC_REG_BRPR_I_reg[0] ),
        .\IC_REG_BRPR_I_reg[0]_1 (IC_REG_BRPR_I0),
        .\IC_REG_ECR_I_reg[0]_0 ({IC_REG_ECR_I[0],IC_REG_ECR_I[1],IC_REG_ECR_I[2],IC_REG_ECR_I[3],IC_REG_ECR_I[4],IC_REG_ECR_I[5],IC_REG_ECR_I[6],IC_REG_ECR_I[7],IC_REG_ECR_I[8],IC_REG_ECR_I[9],IC_REG_ECR_I[10],IC_REG_ECR_I[11],IC_REG_ECR_I[12],IC_REG_ECR_I[13],IC_REG_ECR_I[14],IC_REG_ECR_I[15]}),
        .\IC_REG_ECR_I_reg[15]_0 (E),
        .IC_REG_ESR_ACKER_FS3(IC_REG_ESR_ACKER_FS3),
        .IC_REG_ESR_ACKER_I(IC_REG_ESR_ACKER_I),
        .IC_REG_ESR_ACKER_I_reg_0(IC_REG_ESR_ACKER_I_reg),
        .IC_REG_ESR_BERR_FS3(IC_REG_ESR_BERR_FS3),
        .IC_REG_ESR_BERR_I(IC_REG_ESR_BERR_I),
        .IC_REG_ESR_BERR_I_reg_0(IC_REG_ESR_BERR_I_reg),
        .IC_REG_ESR_CRCER_FS3(IC_REG_ESR_CRCER_FS3),
        .IC_REG_ESR_CRCER_I(IC_REG_ESR_CRCER_I),
        .IC_REG_ESR_CRCER_I_reg_0(IC_REG_ESR_CRCER_I_reg),
        .IC_REG_ESR_FMER_FS3(IC_REG_ESR_FMER_FS3),
        .IC_REG_ESR_FMER_I(IC_REG_ESR_FMER_I),
        .IC_REG_ESR_FMER_I_reg_0(IC_REG_ESR_FMER_I_reg),
        .IC_REG_ESR_F_BERR_FS3(IC_REG_ESR_F_BERR_FS3),
        .IC_REG_ESR_F_BERR_I(IC_REG_ESR_F_BERR_I),
        .IC_REG_ESR_F_BERR_I_reg_0(IC_REG_ESR_F_BERR_I_reg),
        .IC_REG_ESR_F_CRCER_FS3(IC_REG_ESR_F_CRCER_FS3),
        .IC_REG_ESR_F_CRCER_I(IC_REG_ESR_F_CRCER_I),
        .IC_REG_ESR_F_CRCER_I_reg_0(IC_REG_ESR_F_CRCER_I_reg),
        .IC_REG_ESR_F_FMER_FS3(IC_REG_ESR_F_FMER_FS3),
        .IC_REG_ESR_F_FMER_I(IC_REG_ESR_F_FMER_I),
        .IC_REG_ESR_F_FMER_I_reg_0(IC_REG_ESR_F_FMER_I_reg),
        .IC_REG_ESR_F_STER_FS3(IC_REG_ESR_F_STER_FS3),
        .IC_REG_ESR_F_STER_I(IC_REG_ESR_F_STER_I),
        .IC_REG_ESR_F_STER_I_reg_0(IC_REG_ESR_F_STER_I_reg),
        .IC_REG_ESR_STER_FS3(IC_REG_ESR_STER_FS3),
        .IC_REG_ESR_STER_I(IC_REG_ESR_STER_I),
        .IC_REG_ESR_STER_I_reg_0(IC_REG_ESR_STER_I_reg),
        .\IC_REG_F_BRPR_I_reg[15]_0 (\IC_REG_F_BRPR_I_reg[15] ),
        .\IC_REG_F_BRPR_I_reg[15]_1 (ic_n_254),
        .\IC_REG_F_BRPR_I_reg[15]_2 (IC_REG_F_BRPR_I0),
        .\IC_REG_F_BRPR_I_reg[20]_0 (ic_n_216),
        .\IC_REG_F_BRPR_I_reg[24]_0 (ic_n_234),
        .\IC_REG_F_BTR_SJW_I_reg[0]_0 (\IC_REG_F_BTR_SJW_I_reg[0] ),
        .\IC_REG_F_BTR_TS1_I_reg[0]_0 (\IC_REG_F_BTR_TS1_I_reg[0] ),
        .\IC_REG_F_BTR_TS1_I_reg[0]_1 (IC_REG_F_BTR_TS1_I0),
        .\IC_REG_F_BTR_TS2_I_reg[0]_0 (\IC_REG_F_BTR_TS2_I_reg[0] ),
        .\IC_REG_IECRS_I_reg[0]_0 (IETCS),
        .\IC_REG_IECRS_I_reg[0]_1 (IC_REG_IECRS_I0),
        .\IC_REG_IECRS_I_reg[11]_0 (ic_n_178),
        .\IC_REG_IECRS_I_reg[12]_0 (ic_n_177),
        .\IC_REG_IECRS_I_reg[13]_0 (ic_n_176),
        .\IC_REG_IECRS_I_reg[14]_0 (ic_n_175),
        .\IC_REG_IECRS_I_reg[15]_0 (ic_n_174),
        .\IC_REG_IETRS_I_reg[0]_0 (IC_REG_IETRS_I0),
        .\IC_REG_IFF_EN_I_reg[0]_0 ({ic_n_279,ic_n_280,ic_n_281,ic_n_282,ic_n_283,\IC_REG_IFF_EN_I_reg[5] }),
        .IC_REG_ISR_ARBLST_FS3(IC_REG_ISR_ARBLST_FS3),
        .IC_REG_ISR_ARBLST_I_reg_0(p_13_in[0]),
        .IC_REG_ISR_ARBLST_I_reg_1(IC_REG_ISR_ARBLST_I_reg),
        .IC_REG_ISR_BSFRD_I_reg_0(p_13_in[3]),
        .IC_REG_ISR_BSFRD_I_reg_1(IC_REG_ISR_BSFRD_I_reg),
        .IC_REG_ISR_BSOFF_FS3(IC_REG_ISR_BSOFF_FS3),
        .IC_REG_ISR_BSOFF_I_reg_0(p_13_in[8]),
        .IC_REG_ISR_BSOFF_I_reg_1(IC_REG_ISR_BSOFF_I_reg),
        .IC_REG_ISR_ERROR_I10_out(IC_REG_ISR_ERROR_I10_out),
        .IC_REG_ISR_ERROR_I_reg_0(p_13_in[7]),
        .IC_REG_ISR_ERROR_I_reg_1(IC_REG_ISR_ERROR_I_reg),
        .IC_REG_ISR_MSGLST_FS3(IC_REG_ISR_MSGLST_FS3),
        .IC_REG_ISR_MSGLST_FS3_F1(IC_REG_ISR_MSGLST_FS3_F1),
        .IC_REG_ISR_MSGLST_FS3_TXE(IC_REG_ISR_MSGLST_FS3_TXE),
        .IC_REG_ISR_MSGLST_I_F1_reg_0(p_13_in[14]),
        .IC_REG_ISR_MSGLST_I_F1_reg_1(IC_REG_ISR_MSGLST_I_F1_reg),
        .IC_REG_ISR_MSGLST_I_TXE_reg_0(p_13_in[17]),
        .IC_REG_ISR_MSGLST_I_TXE_reg_1(IC_REG_ISR_MSGLST_I_TXE_reg),
        .IC_REG_ISR_MSGLST_I_reg_0(p_13_in[6]),
        .IC_REG_ISR_MSGLST_I_reg_1(IC_REG_ISR_MSGLST_I_reg),
        .IC_REG_ISR_PEE_I_reg_0(p_13_in[2]),
        .IC_REG_ISR_PEE_I_reg_1(IC_REG_ISR_PEE_I_reg),
        .IC_REG_ISR_RXMNF_I_reg_0(p_13_in[16]),
        .IC_REG_ISR_RXMNF_I_reg_1(IC_REG_ISR_RXMNF_I_reg),
        .IC_REG_ISR_RXOK_I_reg_0(p_13_in[4]),
        .IC_REG_ISR_RXOK_I_reg_1(IC_REG_ISR_RXOK_I_reg),
        .IC_REG_ISR_RXWM_I_F1_reg_0(p_13_in[15]),
        .IC_REG_ISR_RXWM_I_F1_reg_1(IC_REG_ISR_RXWM_I_F1_reg),
        .IC_REG_ISR_RXWM_I_reg_0(p_13_in[11]),
        .IC_REG_ISR_RXWM_I_reg_1(IC_REG_ISR_RXWM_I_reg),
        .IC_REG_ISR_SLEEP_I_reg_0(p_13_in[9]),
        .IC_REG_ISR_SLEEP_I_reg_1(IC_REG_ISR_SLEEP_I_reg),
        .IC_REG_ISR_TSCNT_OFLW_I0(IC_REG_ISR_TSCNT_OFLW_I0),
        .IC_REG_ISR_TSCNT_OFLW_I_reg_0(p_13_in[5]),
        .IC_REG_ISR_TSCNT_OFLW_I_reg_1(IC_REG_ISR_TSCNT_OFLW_I_reg),
        .IC_REG_ISR_TXCRS_I_reg_0(p_13_in[13]),
        .IC_REG_ISR_TXCRS_I_reg_1(IC_REG_ISR_TXCRS_I_reg),
        .IC_REG_ISR_TXEWM_I_reg_0(p_13_in[18]),
        .IC_REG_ISR_TXEWM_I_reg_1(IC_REG_ISR_TXEWM_I_reg),
        .IC_REG_ISR_TXOK_FS3(IC_REG_ISR_TXOK_FS3),
        .IC_REG_ISR_TXOK_I_reg_0(p_13_in[1]),
        .IC_REG_ISR_TXOK_I_reg_1(IC_REG_ISR_TXOK_I_reg),
        .IC_REG_ISR_TXTRS_I_reg_0(p_13_in[12]),
        .IC_REG_ISR_TXTRS_I_reg_1(IC_REG_ISR_TXTRS_I_reg),
        .IC_REG_ISR_WKUP_I_reg_0(p_13_in[10]),
        .IC_REG_ISR_WKUP_I_reg_1(IC_REG_ISR_WKUP_I_reg),
        .IC_REG_MSR_ABR_I_reg_0({p_3_in[7],p_3_in[0]}),
        .IC_REG_MSR_BRSD_I_reg_0(IC_REG_MSR_BRSD_I_reg),
        .IC_REG_MSR_BRSD_I_reg_1(ic_n_99),
        .IC_REG_MSR_DAR_I_reg_0(IC_REG_MSR_DAR_I_reg),
        .IC_REG_MSR_DAR_I_reg_1(ic_n_100),
        .IC_REG_MSR_DPEE_I_reg_0(IC_REG_MSR_DPEE_I_reg),
        .IC_REG_MSR_LBACK_I_reg_0(IC_REG_MSR_LBACK),
        .IC_REG_MSR_LBACK_I_reg_1(ic_n_97),
        .IC_REG_MSR_SBR_I_reg_0(IC_REG_MSR_SBR_I_reg),
        .IC_REG_MSR_SBR_I_reg_1(IC_REG_MSR_SBR_I_reg_0),
        .IC_REG_MSR_SLEEP_I_reg_0(ic_n_88),
        .IC_REG_MSR_SLEEP_I_reg_1(ol_adec_n_2),
        .IC_REG_MSR_SLEEP_reg_0(IC_REG_MSR_SLEEP_reg),
        .IC_REG_MSR_SNOOP_I_reg_0(ic_n_98),
        .\IC_REG_N_BTR_SJW_I_reg[0]_0 (\IC_REG_N_BTR_SJW_I_reg[0] ),
        .\IC_REG_N_BTR_SJW_I_reg[1]_0 (ic_n_243),
        .\IC_REG_N_BTR_TS1_I_reg[0]_0 (\IC_REG_N_BTR_TS1_I_reg[0] ),
        .\IC_REG_N_BTR_TS1_I_reg[0]_1 (IC_REG_N_BTR_TS1_I0),
        .\IC_REG_N_BTR_TS2_I_reg[0]_0 (ic_n_235),
        .\IC_REG_N_BTR_TS2_I_reg[0]_1 (\IC_REG_N_BTR_TS2_I_reg[0] ),
        .IC_REG_SBR_I_reg_0(IC_REG_SBR_I_reg),
        .IC_REG_SRR_CEN_I_reg_0(IC_REG_SRR_CEN_I),
        .IC_REG_SRR_CEN_I_reg_1(IC_REG_SRR_CEN_I_reg),
        .IC_REG_SRR_SRST_I_reg_0(IC_REG_SRR_SRST),
        .IC_REG_SRR_SRST_I_reg_1(IC_REG_SRR_SRST_I_reg),
        .IC_REG_SR_BBSY_I(IC_REG_SR_BBSY_I),
        .IC_REG_SR_ERRWRN_I(IC_REG_SR_ERRWRN_I),
        .IC_REG_SR_SLEEP_FS3(IC_REG_SR_SLEEP_FS3),
        .IC_REG_SR_SNOOP_I_reg_0(IC_REG_SR_SNOOP_I_reg),
        .\IC_REG_SR_TDCV_I_reg[6]_0 (IC_REG_SR_TDCV_I),
        .IC_REG_TCR_I({IC_REG_TCR_I[0],IC_REG_TCR_I[16],IC_REG_TCR_I[18],IC_REG_TCR_I[19]}),
        .IC_REG_TRR_I({IC_REG_TRR_I[15],IC_REG_TRR_I[21],IC_REG_TRR_I[22],IC_REG_TRR_I[23],IC_REG_TRR_I[27],IC_REG_TRR_I[28],IC_REG_TRR_I[29],IC_REG_TRR_I[30],IC_REG_TRR_I[31]}),
        .\IC_REG_TSR_I_reg[0]_0 ({p_11_in[31:23],p_11_in[21],p_11_in[19:17]}),
        .\IC_REG_TSR_I_reg[11]_0 (ic_n_232),
        .\IC_REG_TSR_I_reg[15]_0 (\IC_REG_TSR_I_reg[15] ),
        .\IC_REG_TSR_I_reg[9]_0 (ic_n_179),
        .IC_SYNC_ECR_ACK_I_reg_0(IC_SYNC_ECR_ACK_I_reg),
        .IC_SYNC_ECR_WEN(IC_SYNC_ECR_WEN),
        .IC_SYNC_ECR_WEN_FS3(IC_SYNC_ECR_WEN_FS3),
        .IC_SYNC_ESR_ACKER(IC_SYNC_ESR_ACKER),
        .IC_SYNC_ESR_BERR(IC_SYNC_ESR_BERR),
        .IC_SYNC_ESR_CRCER(IC_SYNC_ESR_CRCER),
        .IC_SYNC_ESR_FMER(IC_SYNC_ESR_FMER),
        .IC_SYNC_ESR_F_BERR(IC_SYNC_ESR_F_BERR),
        .IC_SYNC_ESR_F_CRCER(IC_SYNC_ESR_F_CRCER),
        .IC_SYNC_ESR_F_FMER(IC_SYNC_ESR_F_FMER),
        .IC_SYNC_ESR_F_STER(IC_SYNC_ESR_F_STER),
        .IC_SYNC_ESR_STER(IC_SYNC_ESR_STER),
        .IC_SYNC_ISR_ARBLST(IC_SYNC_ISR_ARBLST),
        .IC_SYNC_ISR_BSOFF(IC_SYNC_ISR_BSOFF),
        .IC_SYNC_ISR_MSGLST(IC_SYNC_ISR_MSGLST),
        .IC_SYNC_ISR_MSGLST_F1(IC_SYNC_ISR_MSGLST_F1),
        .IC_SYNC_ISR_MSGLST_TXE(IC_SYNC_ISR_MSGLST_TXE),
        .IC_SYNC_ISR_RXOK(IC_SYNC_ISR_RXOK),
        .IC_SYNC_ISR_TXOK(IC_SYNC_ISR_TXOK),
        .IC_SYNC_SR_BIDLE(IC_SYNC_SR_BIDLE),
        .IC_SYNC_SR_BSFR(IC_SYNC_SR_BSFR),
        .IC_SYNC_SR_ERRWRN(IC_SYNC_SR_ERRWRN),
        .IC_SYNC_SR_LBACK(IC_SYNC_SR_LBACK),
        .IC_SYNC_SR_PEE(IC_SYNC_SR_PEE),
        .IC_SYNC_SR_RSTST(IC_SYNC_SR_RSTST),
        .IC_SYNC_SR_SLEEP(IC_SYNC_SR_SLEEP),
        .IC_SYNC_TSR_WEN(IC_SYNC_TSR_WEN),
        .IC_SYNC_TSR_WEN_FS3(IC_SYNC_TSR_WEN_FS3),
        .IC_TIMESTAMP_RST_reg_0(IC_TIMESTAMP_RST_reg),
        .IC_TIMESTAMP_RST_reg_1(IC_TIMESTAMP_RST_reg_0),
        .MSG_DONE_FROM_BSP(MSG_DONE_FROM_BSP),
        .MSG_ON_CAN_BUS_AXI(MSG_ON_CAN_BUS_AXI),
        .\MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[1] (\MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[1] ),
        .Q(IETRS),
        .\RD_DATA_RET[0]_i_3 (ol_adec_n_65),
        .\RD_DATA_RET[0]_i_3_0 (ol_adec_n_60),
        .\RD_DATA_RET[10]_i_3 (ol_adec_n_19),
        .\RD_DATA_RET[10]_i_3_0 (ol_adec_n_12),
        .\RD_DATA_RET[11]_i_5 (ol_adec_n_14),
        .\RD_DATA_RET[21]_i_5 (ol_adec_n_20),
        .\RD_DATA_RET[21]_i_5_0 (ol_adec_n_15),
        .\RD_DATA_RET[24]_i_7 (ol_adec_n_43),
        .\RD_DATA_RET[24]_i_7_0 (ol_adec_n_13),
        .\RD_DATA_RET[9]_i_3 (ol_adec_n_17),
        .\RD_DATA_RET[9]_i_3_0 (ol_adec_n_16),
        .\RD_DATA_RET[9]_i_6 (ol_adec_n_18),
        .\RD_DATA_RET_reg[31] (ol_adec_n_7),
        .\RD_DATA_RET_reg[31]_0 (ol_adec_n_6),
        .RXOK_FS3(RXOK_FS3),
        .\RX_FIFO_AFR.IC_REG_AFR_I_reg[0]_0 (IC_REG_AFR_I0),
        .\RX_FIFO_AFR.IC_REG_AFR_I_reg[1]_0 ({IC_REG_AFR[1],IC_REG_AFR[2],IC_REG_AFR[3],IC_REG_AFR[4],IC_REG_AFR[5],IC_REG_AFR[6],IC_REG_AFR[7],IC_REG_AFR[8],IC_REG_AFR[12],IC_REG_AFR[13],IC_REG_AFR[14],IC_REG_AFR[15],IC_REG_AFR[21],IC_REG_AFR[22],IC_REG_AFR[23],IC_REG_AFR[25],IC_REG_AFR[26],IC_REG_AFR[27],IC_REG_AFR[28],IC_REG_AFR[29],IC_REG_AFR[30],IC_REG_AFR[31]}),
        .\RX_FIFO_AFR.IC_REG_AFR_I_reg[24]_0 (ic_n_193),
        .\RX_FIFO_AFR.IC_REG_AFR_I_reg[5]_0 (ic_n_274),
        .\RX_FIFO_AFR.IC_REG_AFR_I_reg[9]_0 (ic_n_233),
        .\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_0 ({p_0_in,p_1_in,p_2_in,p_3_in__0,p_4_in,p_5_in,p_6_in,p_7_in,p_8_in,p_13_in__0,p_14_in__0}),
        .\RX_FIFO_IERBUF.IC_REG_IER_I_reg[0]_1 (IC_REG_IER_I0),
        .\SINGLE_BIT.s_level_out_d4_reg (\SINGLE_BIT.s_level_out_d4_reg ),
        .\SINGLE_BIT.s_level_out_d4_reg_0 (\SINGLE_BIT.s_level_out_d4_reg_0 ),
        .\SINGLE_BIT.s_level_out_d4_reg_1 (\SINGLE_BIT.s_level_out_d4_reg_2 ),
        .\SINGLE_BIT.s_level_out_d4_reg_10 (\SINGLE_BIT.s_level_out_d4_reg_11 ),
        .\SINGLE_BIT.s_level_out_d4_reg_11 (\SINGLE_BIT.s_level_out_d4_reg_12 ),
        .\SINGLE_BIT.s_level_out_d4_reg_12 (\SINGLE_BIT.s_level_out_d4_reg_13 ),
        .\SINGLE_BIT.s_level_out_d4_reg_13 (\SINGLE_BIT.s_level_out_d4_reg_14 ),
        .\SINGLE_BIT.s_level_out_d4_reg_14 (\SINGLE_BIT.s_level_out_d4_reg_15 ),
        .\SINGLE_BIT.s_level_out_d4_reg_15 (\SINGLE_BIT.s_level_out_d4_reg_16 ),
        .\SINGLE_BIT.s_level_out_d4_reg_16 (\SINGLE_BIT.s_level_out_d4_reg_17 ),
        .\SINGLE_BIT.s_level_out_d4_reg_17 (ic_n_278),
        .\SINGLE_BIT.s_level_out_d4_reg_2 (\SINGLE_BIT.s_level_out_d4_reg_3 ),
        .\SINGLE_BIT.s_level_out_d4_reg_3 (\SINGLE_BIT.s_level_out_d4_reg_4 ),
        .\SINGLE_BIT.s_level_out_d4_reg_4 (\SINGLE_BIT.s_level_out_d4_reg_5 ),
        .\SINGLE_BIT.s_level_out_d4_reg_5 (\SINGLE_BIT.s_level_out_d4_reg_6 ),
        .\SINGLE_BIT.s_level_out_d4_reg_6 (\SINGLE_BIT.s_level_out_d4_reg_7 ),
        .\SINGLE_BIT.s_level_out_d4_reg_7 (\SINGLE_BIT.s_level_out_d4_reg_8 ),
        .\SINGLE_BIT.s_level_out_d4_reg_8 (\SINGLE_BIT.s_level_out_d4_reg_9 ),
        .\SINGLE_BIT.s_level_out_d4_reg_9 (\SINGLE_BIT.s_level_out_d4_reg_10 ),
        .\SINGLE_BIT.s_level_out_d6_reg (\SINGLE_BIT.s_level_out_d6_reg ),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\SINGLE_BIT.s_level_out_d6_reg_0 ),
        .\SINGLE_BIT.s_level_out_d6_reg_1 (SR),
        .SR(IC_REG_TSR_I),
        .\TCR_i_reg[12] (ic_n_251),
        .\TCR_i_reg[13] (ic_n_252),
        .\TCR_i_reg[15] (ic_n_253),
        .\TCR_i_reg[31] (ic_n_259),
        .TDCV_CNT_REG_WEN(TDCV_CNT_REG_WEN),
        .\TRR_i_reg[0] (ic_n_102),
        .\TRR_i_reg[10] (ic_n_173),
        .\TRR_i_reg[1] (ic_n_167),
        .\TRR_i_reg[2] (ic_n_168),
        .\TRR_i_reg[3] (ic_n_169),
        .\TRR_i_reg[4] (ic_n_170),
        .\TRR_i_reg[8] (ic_n_171),
        .\TRR_i_reg[9] (ic_n_172),
        .\exclude_winning_or_locked_req_reg[31] (MSG_ON_CAN_BUS_AXI_D1),
        .\ic_reg_sr_tdcv_cdc_tig_reg[6]_0 (\ic_reg_sr_tdcv_cdc_tig_reg[6] ),
        .\ic_sync_ecr_cdc_tig_reg[0]_0 (\ic_sync_ecr_cdc_tig_reg[0] ),
        .ip2bus_intrevent(ip2bus_intrevent),
        .\num_reg_reg[2] (ic_n_272),
        .\num_reg_reg[3] (ic_n_273),
        .out(\SINGLE_BIT.s_level_out_d4_reg_1 ),
        .p_14_in(p_14_in),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_wdata(s_axi_wdata),
        .\time_stamp_cnt_cdc_tig_reg[0]_0 (\time_stamp_cnt_cdc_tig_reg[0] ));
  FDRE \id_for_match_cdc_tig_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [31]),
        .Q(id_for_match_cdc_tig[0]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [21]),
        .Q(id_for_match_cdc_tig[10]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [20]),
        .Q(id_for_match_cdc_tig[11]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [19]),
        .Q(id_for_match_cdc_tig[12]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [18]),
        .Q(id_for_match_cdc_tig[13]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [17]),
        .Q(id_for_match_cdc_tig[14]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [16]),
        .Q(id_for_match_cdc_tig[15]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [15]),
        .Q(id_for_match_cdc_tig[16]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [14]),
        .Q(id_for_match_cdc_tig[17]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[18] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [13]),
        .Q(id_for_match_cdc_tig[18]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[19] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [12]),
        .Q(id_for_match_cdc_tig[19]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [30]),
        .Q(id_for_match_cdc_tig[1]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[20] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [11]),
        .Q(id_for_match_cdc_tig[20]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[21] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [10]),
        .Q(id_for_match_cdc_tig[21]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[22] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [9]),
        .Q(id_for_match_cdc_tig[22]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[23] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [8]),
        .Q(id_for_match_cdc_tig[23]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[24] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [7]),
        .Q(id_for_match_cdc_tig[24]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[25] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [6]),
        .Q(id_for_match_cdc_tig[25]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[26] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [5]),
        .Q(id_for_match_cdc_tig[26]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[27] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [4]),
        .Q(id_for_match_cdc_tig[27]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[28] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [3]),
        .Q(id_for_match_cdc_tig[28]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[29] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [2]),
        .Q(id_for_match_cdc_tig[29]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [29]),
        .Q(id_for_match_cdc_tig[2]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[30] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [1]),
        .Q(id_for_match_cdc_tig[30]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[31] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [0]),
        .Q(id_for_match_cdc_tig[31]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [28]),
        .Q(id_for_match_cdc_tig[3]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [27]),
        .Q(id_for_match_cdc_tig[4]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [26]),
        .Q(id_for_match_cdc_tig[5]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [25]),
        .Q(id_for_match_cdc_tig[6]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [24]),
        .Q(id_for_match_cdc_tig[7]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [23]),
        .Q(id_for_match_cdc_tig[8]),
        .R(SR));
  FDRE \id_for_match_cdc_tig_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\id_for_match_cdc_tig_reg[0]_0 [22]),
        .Q(id_for_match_cdc_tig[9]),
        .R(SR));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_adec ol_adec
       (.ACK_CR(ACK_CR),
        .ACK_H_reg(ol_adec_n_1),
        .ACK_RET_reg_0(SR),
        .ACK_RET_reg_1(ol_tbmm_n_90),
        .ACK_RX(ACK_RX),
        .ACK_RX_T(ACK_RX_T),
        .ACK_TX_RD(ACK_TX_RD),
        .ACK_TX_WR(ACK_TX_WR),
        .\ADDR_RET_reg[0]_0 (\ADDR_RET_reg[0] ),
        .\ADDR_RET_reg[11]_0 (ol_adec_n_4),
        .\ADDR_RET_reg[11]_1 (ol_adec_n_5),
        .\ADDR_RET_reg[11]_2 (ol_adec_n_6),
        .\ADDR_RET_reg[11]_3 (ol_adec_n_7),
        .\ADDR_RET_reg[11]_4 (IC_REG_F_BRPR_I0),
        .\ADDR_RET_reg[12]_0 (ol_adec_n_12),
        .\ADDR_RET_reg[12]_1 (ol_adec_n_16),
        .\ADDR_RET_reg[12]_2 (ol_adec_n_17),
        .\ADDR_RET_reg[12]_3 (ol_adec_n_18),
        .\ADDR_RET_reg[12]_4 (ol_adec_n_19),
        .\ADDR_RET_reg[12]_5 (ol_adec_n_41),
        .\ADDR_RET_reg[12]_6 (\GEN_FIFO_1_CNTL.rxmsg_fifo_cntl_1/IC_REG_WMR_I20 ),
        .\ADDR_RET_reg[12]_7 (IC_REG_F_BTR_TS1_I0),
        .\ADDR_RET_reg[1]_0 (ol_adec_n_21),
        .\ADDR_RET_reg[2]_0 (\ADDR_RET_reg[2] ),
        .\ADDR_RET_reg[8]_0 (ol_adec_n_11),
        .\ADDR_RET_reg[8]_1 (ol_adec_n_13),
        .\ADDR_RET_reg[8]_10 (ol_adec_n_78),
        .\ADDR_RET_reg[8]_2 (ol_adec_n_14),
        .\ADDR_RET_reg[8]_3 (ol_adec_n_15),
        .\ADDR_RET_reg[8]_4 (ol_adec_n_20),
        .\ADDR_RET_reg[8]_5 (ol_adec_n_43),
        .\ADDR_RET_reg[8]_6 (ol_adec_n_60),
        .\ADDR_RET_reg[8]_7 (ol_adec_n_65),
        .\ADDR_RET_reg[8]_8 (\ADDR_RET_reg[8] ),
        .\ADDR_RET_reg[8]_9 (IC_REG_IETRS_I0),
        .Bus2IP_CS(Bus2IP_CS),
        .Bus2IP_RNW(Bus2IP_RNW),
        .CS_H0(CS_H0),
        .CS_H00_out(CS_H00_out),
        .CS_H_D1(\ol_tac/CS_H_D1 ),
        .CS_H_D1_1(\ol_tac_nf/CS_H_D1 ),
        .CS_H_INTERNAL(\ol_tac/CS_H_INTERNAL ),
        .CS_H_INTERNAL_0(\ol_tac_nf/CS_H_INTERNAL ),
        .CS_RX(CS_RX),
        .CS_RX_T(CS_RX_T),
        .D({RD_DATA[1],RD_DATA[2],RD_DATA[3],RD_DATA[4],RD_DATA[5],RD_DATA[6],RD_DATA[7],RD_DATA[9],RD_DATA[11],RD_DATA[12],RD_DATA[13],RD_DATA[15],RD_DATA[18],RD_DATA[19],RD_DATA[27],RD_DATA[28],RD_DATA[29]}),
        .E(\tx_event_fifo_cntl/IC_REG_WMR_I20 ),
        .E_DATA_ACK(E_DATA_ACK),
        .E_RST_I_reg(ol_adec_n_2),
        .IC_IPSIG_WRITE_I_reg(IC_IPSIG_WRITE_I_reg),
        .IC_IPSIG_WRITE_I_reg_0(IC_REG_AFR_I0),
        .IC_IPSIG_WRITE_I_reg_1(IC_REG_IER_I0),
        .IC_IPSIG_WRITE_I_reg_2(IC_REG_IECRS_I0),
        .IC_REG_ESR_F_BERR_I(IC_REG_ESR_F_BERR_I),
        .\IC_REG_F_BRPR_I_reg[15] (IC_REG_SRR_CEN_I),
        .\IC_REG_F_BRPR_I_reg[18] (ol_adec_n_58),
        .\IC_REG_F_BTR_SJW_I_reg[0] (ol_adec_n_46),
        .\IC_REG_F_BTR_SJW_I_reg[1] (ol_adec_n_45),
        .\IC_REG_IECRS_I_reg[0] (IC_IPSIG_WRITE_I),
        .IC_REG_MSR_SLEEP_I_reg(ic_n_278),
        .\IC_REG_N_BTR_SJW_I_reg[0] (ol_adec_n_50),
        .\IC_REG_N_BTR_SJW_I_reg[2] (ol_adec_n_47),
        .\IC_REG_N_BTR_TS1_I_reg[0] (ol_adec_n_49),
        .\IC_REG_N_BTR_TS1_I_reg[1] (ol_adec_n_48),
        .\IC_REG_RXFP_I2_reg[4] (ol_adec_n_44),
        .IC_REG_SRR_CEN_I_reg(IC_REG_N_BTR_TS1_I0),
        .IC_REG_SRR_CEN_I_reg_0(IC_REG_BRPR_I0),
        .IC_REG_SRR_CEN_I_reg_1(IC_REG_MSR_LBACK_I0),
        .IC_REG_SRR_SRST(IC_REG_SRR_SRST),
        .IC_REG_SR_BBSY_I(IC_REG_SR_BBSY_I),
        .IC_REG_SR_ERRWRN_I(IC_REG_SR_ERRWRN_I),
        .IC_REG_TCR_I({IC_REG_TCR_I[1],IC_REG_TCR_I[2],IC_REG_TCR_I[3],IC_REG_TCR_I[4],IC_REG_TCR_I[5],IC_REG_TCR_I[6],IC_REG_TCR_I[7],IC_REG_TCR_I[8],IC_REG_TCR_I[9],IC_REG_TCR_I[10],IC_REG_TCR_I[11],IC_REG_TCR_I[12],IC_REG_TCR_I[13],IC_REG_TCR_I[14],IC_REG_TCR_I[15],IC_REG_TCR_I[17],IC_REG_TCR_I[20],IC_REG_TCR_I[21],IC_REG_TCR_I[22],IC_REG_TCR_I[23],IC_REG_TCR_I[24],IC_REG_TCR_I[25],IC_REG_TCR_I[26],IC_REG_TCR_I[27],IC_REG_TCR_I[28],IC_REG_TCR_I[29],IC_REG_TCR_I[30],IC_REG_TCR_I[31]}),
        .IC_REG_TRR_I({IC_REG_TRR_I[0],IC_REG_TRR_I[1],IC_REG_TRR_I[2],IC_REG_TRR_I[3],IC_REG_TRR_I[4],IC_REG_TRR_I[5],IC_REG_TRR_I[6],IC_REG_TRR_I[7],IC_REG_TRR_I[8],IC_REG_TRR_I[9],IC_REG_TRR_I[11],IC_REG_TRR_I[12],IC_REG_TRR_I[13],IC_REG_TRR_I[14],IC_REG_TRR_I[16],IC_REG_TRR_I[17],IC_REG_TRR_I[18],IC_REG_TRR_I[19],IC_REG_TRR_I[20],IC_REG_TRR_I[24],IC_REG_TRR_I[25],IC_REG_TRR_I[26]}),
        .\MEM_DECODE_GEN[0].cs_out_i_reg[0] (ol_adec_n_25),
        .Q({IC_REG_WMR_I_TXE[4],IC_REG_WMR_I_TXE[5]}),
        .\RD_DATA_RET[11]_i_3_0 (\IC_REG_RXFP_I2_reg[0] ),
        .\RD_DATA_RET[11]_i_3_1 (ic_n_232),
        .\RD_DATA_RET[11]_i_3_2 (ic_n_178),
        .\RD_DATA_RET[12]_i_4_0 (ic_n_177),
        .\RD_DATA_RET[13]_i_3_0 (ic_n_176),
        .\RD_DATA_RET[14]_i_4_0 (ic_n_175),
        .\RD_DATA_RET[15]_i_4_0 (ic_n_174),
        .\RD_DATA_RET[15]_i_4_1 (ic_n_254),
        .\RD_DATA_RET[17]_i_2_0 ({IC_REG_FSR_I[2],IC_REG_FSR_I[6],IC_REG_FSR_I[7],IC_REG_FSR_I[8]}),
        .\RD_DATA_RET[17]_i_2_1 (ic_n_235),
        .\RD_DATA_RET[19]_i_3_0 (IC_REG_SR_SNOOP_I_reg),
        .\RD_DATA_RET[19]_i_4_0 (ol_rbmm_n_48),
        .\RD_DATA_RET[1]_i_3_0 ({IC_REG_AFR[1],IC_REG_AFR[2],IC_REG_AFR[3],IC_REG_AFR[4],IC_REG_AFR[5],IC_REG_AFR[6],IC_REG_AFR[7],IC_REG_AFR[8],IC_REG_AFR[12],IC_REG_AFR[13],IC_REG_AFR[14],IC_REG_AFR[15],IC_REG_AFR[21],IC_REG_AFR[22],IC_REG_AFR[23],IC_REG_AFR[25],IC_REG_AFR[26],IC_REG_AFR[27],IC_REG_AFR[28],IC_REG_AFR[29],IC_REG_AFR[30],IC_REG_AFR[31]}),
        .\RD_DATA_RET[1]_i_3_1 ({IETCS[30:23],IETCS[21],IETCS[14],IETCS[11],IETCS[6:5]}),
        .\RD_DATA_RET[1]_i_3_2 ({IETRS[30:23],IETRS[21],IETRS[14],IETRS[11],IETRS[7:5]}),
        .\RD_DATA_RET[1]_i_6_0 ({IC_REG_FSR_I_F1[2],IC_REG_FSR_I_F1[3],IC_REG_FSR_I_F1[4],IC_REG_FSR_I_F1[5],IC_REG_FSR_I_F1[6],IC_REG_FSR_I_F1[7],IC_REG_FSR_I_F1[8]}),
        .\RD_DATA_RET[20]_i_3_0 (\IC_REG_F_BTR_TS2_I_reg[0] ),
        .\RD_DATA_RET[20]_i_3_1 (ic_n_216),
        .\RD_DATA_RET[20]_i_4_0 (ol_rbmm_n_44),
        .\RD_DATA_RET[21]_i_3_0 ({IC_REG_WMR_I_F1[3],IC_REG_WMR_I_F1[4],IC_REG_WMR_I_F1[5]}),
        .\RD_DATA_RET[21]_i_3_1 (ic_n_173),
        .\RD_DATA_RET[21]_i_5_0 (\IC_REG_N_BTR_TS2_I_reg[0] [2:0]),
        .\RD_DATA_RET[22]_i_3_0 (ic_n_172),
        .\RD_DATA_RET[23]_i_3_0 (ic_n_171),
        .\RD_DATA_RET[24]_i_2 (\IC_REG_N_BTR_TS1_I_reg[0] ),
        .\RD_DATA_RET[24]_i_2_0 (ic_n_193),
        .\RD_DATA_RET[24]_i_4_0 (ic_n_234),
        .\RD_DATA_RET[26]_i_5_0 ({IC_REG_WMR_I[0],IC_REG_WMR_I[1],IC_REG_WMR_I[2],IC_REG_WMR_I[3],IC_REG_WMR_I[4],IC_REG_WMR_I[5]}),
        .\RD_DATA_RET[26]_i_7_0 ({IC_REG_FSR_I__0[11],IC_REG_FSR_I__0[12],IC_REG_FSR_I__0[13],IC_REG_FSR_I__0[14],IC_REG_FSR_I__0[15],IC_REG_FSR_I__0[16]}),
        .\RD_DATA_RET[27]_i_3_0 (ic_n_170),
        .\RD_DATA_RET[28]_i_2_0 (ic_n_169),
        .\RD_DATA_RET[29]_i_2_0 (ic_n_168),
        .\RD_DATA_RET[30]_i_2_0 (ic_n_167),
        .\RD_DATA_RET[31]_i_2_0 (ic_n_102),
        .\RD_DATA_RET[9]_i_3_0 ({IC_REG_SR_TDCV_I[6:4],IC_REG_SR_TDCV_I[1:0]}),
        .\RD_DATA_RET[9]_i_3_1 (ic_n_179),
        .\RD_DATA_RET_reg[0]_0 (\RD_DATA_RET_reg[0] ),
        .\RD_DATA_RET_reg[0]_1 ({p_0_in,p_1_in,p_2_in,p_4_in,p_5_in,p_6_in,p_7_in,p_8_in,p_13_in__0,p_14_in__0}),
        .\RD_DATA_RET_reg[0]_2 ({p_11_in[31:23],p_11_in[21],p_11_in[19:17]}),
        .\RD_DATA_RET_reg[0]_3 (ol_tbmm_n_89),
        .\RD_DATA_RET_reg[0]_4 (ic_n_259),
        .\RD_DATA_RET_reg[10]_0 (ol_tbmm_n_45),
        .\RD_DATA_RET_reg[10]_1 ({IC_REG_FSR_I_F1__0[11],IC_REG_FSR_I_F1__0[12],IC_REG_FSR_I_F1__0[13],IC_REG_FSR_I_F1__0[14],IC_REG_FSR_I_F1__0[15],IC_REG_FSR_I_F1__0[16]}),
        .\RD_DATA_RET_reg[10]_2 (ic_n_243),
        .\RD_DATA_RET_reg[12]_0 (\IC_REG_F_BTR_SJW_I_reg[0] [3:1]),
        .\RD_DATA_RET_reg[14]_0 (ol_tbmm_n_87),
        .\RD_DATA_RET_reg[16]_0 ({IC_REG_ECR_I[0],IC_REG_ECR_I[1],IC_REG_ECR_I[2],IC_REG_ECR_I[3],IC_REG_ECR_I[4],IC_REG_ECR_I[5],IC_REG_ECR_I[6],IC_REG_ECR_I[7],IC_REG_ECR_I[9],IC_REG_ECR_I[10],IC_REG_ECR_I[14],IC_REG_ECR_I[15]}),
        .\RD_DATA_RET_reg[16]_1 ({ic_n_279,ic_n_280,ic_n_281,ic_n_282,ic_n_283,\IC_REG_IFF_EN_I_reg[5] }),
        .\RD_DATA_RET_reg[16]_2 (ic_n_253),
        .\RD_DATA_RET_reg[16]_3 (ol_tbmm_n_86),
        .\RD_DATA_RET_reg[17]_0 (ol_tbmm_n_85),
        .\RD_DATA_RET_reg[18]_0 (ol_rbmm_n_49),
        .\RD_DATA_RET_reg[18]_1 ({\IC_REG_F_BRPR_I_reg[15] [13:12],\IC_REG_F_BRPR_I_reg[15] [10:8],\IC_REG_F_BRPR_I_reg[15] [6:0]}),
        .\RD_DATA_RET_reg[18]_2 (ic_n_252),
        .\RD_DATA_RET_reg[19]_0 (ic_n_251),
        .\RD_DATA_RET_reg[20]_0 (ol_tbmm_n_84),
        .\RD_DATA_RET_reg[21]_0 (ol_tbmm_n_83),
        .\RD_DATA_RET_reg[21]_1 ({IC_REG_FSR_I_TXE__0[6],IC_REG_FSR_I_TXE__0[7],IC_REG_FSR_I_TXE__0[8]}),
        .\RD_DATA_RET_reg[22]_0 (ol_tbmm_n_82),
        .\RD_DATA_RET_reg[23]_0 (ol_tbmm_n_81),
        .\RD_DATA_RET_reg[24]_0 ({p_3_in[7],p_3_in[0]}),
        .\RD_DATA_RET_reg[24]_1 ({\IC_REG_BRPR_I_reg[0] [7],\IC_REG_BRPR_I_reg[0] [5]}),
        .\RD_DATA_RET_reg[24]_2 (ol_tbmm_n_44),
        .\RD_DATA_RET_reg[25]_0 (ol_tbmm_n_42),
        .\RD_DATA_RET_reg[25]_1 (IC_REG_MSR_SBR_I_reg),
        .\RD_DATA_RET_reg[26]_0 (ol_tbmm_n_43),
        .\RD_DATA_RET_reg[26]_1 (IC_REG_MSR_DPEE_I_reg),
        .\RD_DATA_RET_reg[26]_2 (ol_tbmm_n_80),
        .\RD_DATA_RET_reg[27]_0 ({IC_REG_FSR_I_TXE[12],IC_REG_FSR_I_TXE[13],IC_REG_FSR_I_TXE[14],IC_REG_FSR_I_TXE[15],IC_REG_FSR_I_TXE[16]}),
        .\RD_DATA_RET_reg[27]_1 (\IC_REG_F_BTR_TS1_I_reg[0] ),
        .\RD_DATA_RET_reg[30]_0 (ic_n_97),
        .\RD_DATA_RET_reg[30]_1 (ol_tbmm_n_79),
        .\RD_DATA_RET_reg[31]_0 (ic_n_88),
        .\RD_DATA_RET_reg[31]_1 (ol_tbmm_n_41),
        .\RD_DATA_RET_reg[31]_2 (ol_tbmm_n_78),
        .\RD_DATA_RET_reg[8]_0 (ol_tbmm_n_88),
        .\RD_DATA_RET_reg[8]_1 (ol_tbmm_n_46),
        .\RD_DATA_RET_reg[9]_0 ({\IC_REG_N_BTR_SJW_I_reg[0] [6],\IC_REG_N_BTR_SJW_I_reg[0] [4:0]}),
        .\RD_DATA_RET_reg[9]_1 (ic_n_233),
        .\RD_INDEX_reg[1] (ol_adec_n_10),
        .\RD_INDEX_reg[2] (ol_adec_n_9),
        .\RD_INDEX_reg[3] (ol_adec_n_8),
        .\RD_INDEX_reg[5] (ol_tbmm_n_146),
        .\RX_FIFO_AFR.IC_REG_AFR_I_reg[2] (ol_adec_n_56),
        .\RX_FIFO_AFR.IC_REG_AFR_I_reg[3] (ol_adec_n_55),
        .\RX_FIFO_AFR.IC_REG_AFR_I_reg[4] (ol_adec_n_54),
        .\RX_FIFO_AFR.IC_REG_AFR_I_reg[5] (ol_adec_n_53),
        .\RX_FIFO_AFR.IC_REG_AFR_I_reg[6] (ol_adec_n_52),
        .\RX_FIFO_AFR.IC_REG_AFR_I_reg[7] (ol_adec_n_51),
        .\RX_FIFO_IERBUF.IC_REG_IER_I_reg[18] (ol_adec_n_42),
        .\RX_FIFO_IERBUF.IC_REG_IER_I_reg[19] (ol_adec_n_59),
        .\TCR_i_reg[30] (ol_adec_n_57),
        .TRR_REG_WRITE_PULSE0(\ol_txreg/TRR_REG_WRITE_PULSE0 ),
        .\TRR_i_reg[12] (ol_adec_n_40),
        .doutb(doutb[23]),
        .p_13_in({p_13_in[18:10],p_13_in[6:5]}),
        .p_51_in(p_51_in),
        .p_71_in(p_71_in),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_arready(s_axi_arready),
        .s_axi_wdata({s_axi_wdata[23],s_axi_wdata[7],s_axi_wdata[0]}),
        .\s_axi_wdata[23] (ol_adec_n_61),
        .\s_axi_wdata[7] (\tx_event_fifo_cntl/RD_INDEX0 ),
        .\s_axi_wdata[7]_0 (ol_adec_n_62),
        .s_axi_wready(s_axi_wready));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_rbmm ol_rbmm
       (.ACF_VAL_I(ACF_VAL_I),
        .ACK_H_reg(SR),
        .ACK_RX(ACK_RX),
        .ACK_RX_T(ACK_RX_T),
        .Bus2IP_RNW(Bus2IP_RNW),
        .CS_H_D1(\ol_tac/CS_H_D1 ),
        .CS_H_D1_1(\ol_tac_nf/CS_H_D1 ),
        .CS_H_D1_4(\ol_tac_rd/CS_H_D1 ),
        .CS_H_INTERNAL(\ol_tac/CS_H_INTERNAL ),
        .CS_H_INTERNAL_3(\ol_tac_nf/CS_H_INTERNAL ),
        .CS_RX(CS_RX),
        .CS_RX_T(CS_RX_T),
        .D({ADDR_S_SIG_IMM[9],ADDR_S_SIG_IMM[10],ADDR_S_SIG_IMM[11],ADDR_S_SIG_IMM[12]}),
        .E(\GEN_FIFO_1_CNTL.rxmsg_fifo_cntl_1/IC_REG_WMR_I20 ),
        .\FILL_LEVEL_reg[5] (olglue_n_13),
        .\FILL_LEVEL_reg[5]_0 (olglue_n_14),
        .\FILL_LEVEL_reg[6] ({IC_REG_FSR_I_F1[2],IC_REG_FSR_I_F1[3],IC_REG_FSR_I_F1[4],IC_REG_FSR_I_F1[5],IC_REG_FSR_I_F1[6],IC_REG_FSR_I_F1[7],IC_REG_FSR_I_F1[8]}),
        .\FILTER_ID_DATA_reg[0] (D),
        .\FSM_sequential_imm_cs[0]_i_2 (IC_REG_AFR[7]),
        .\FSM_sequential_imm_cs_reg[0] (imm_cs[0]),
        .\FSM_sequential_imm_cs_reg[0]_0 (ic_n_272),
        .\FSM_sequential_imm_cs_reg[0]_1 (ic_n_274),
        .\FSM_sequential_imm_cs_reg[0]_2 (ic_n_273),
        .\FSM_sequential_imm_cs_reg[0]_3 (olglue_n_11),
        .\FSM_sequential_imm_cs_reg[1] (imm_cs[1]),
        .\FSM_sequential_imm_cs_reg[1]_0 (ol_rbmm_n_63),
        .\IC_REG_RXFP_I2_reg[0] (\IC_REG_RXFP_I2_reg[0] ),
        .\IC_REG_WMR_I2_reg[0] (ol_rbmm_n_49),
        .\IC_REG_WMR_I2_reg[0]_0 ({IC_REG_WMR_I[0],IC_REG_WMR_I[1],IC_REG_WMR_I[2],IC_REG_WMR_I[3],IC_REG_WMR_I[4],IC_REG_WMR_I[5]}),
        .\IC_REG_WMR_I2_reg[1] (ol_rbmm_n_48),
        .\IC_REG_WMR_I2_reg[2] (ol_rbmm_n_44),
        .\IC_REG_WMR_I2_reg[3] ({IC_REG_WMR_I_F1[3],IC_REG_WMR_I_F1[4],IC_REG_WMR_I_F1[5]}),
        .ID_MATCH_EN_D2_reg(ID_MATCH_EN_D2),
        .ID_MATCH_EN_D2_reg_0(ol_rbmm_n_62),
        .ID_MATCH_EN_OL(ID_MATCH_EN_OL),
        .\MATCHED_FILTER_INDEX_reg[0] (ACK_S_SIG_IMM),
        .\MATCHED_FILTER_INDEX_reg[4] (\MATCHED_FILTER_INDEX_reg[4] ),
        .MATCH_RESULT_FS2_D1(MATCH_RESULT_FS2_D1),
        .MATCH_RESULT_SIG_reg(MATCH_RESULT_SIG_reg),
        .MATCH_RESULT_SIG_reg_0(MATCH_RESULT_SIG_reg_0),
        .MATCH_RESULT_TO_BSP0(MATCH_RESULT_TO_BSP0),
        .MATCH_RESULT_TO_BSP_reg(MATCH_RESULT_TO_BSP_reg),
        .MATCH_RUNNING_SIG_reg(MATCH_RUNNING_SIG_reg),
        .MATCH_RUNNING_SIG_reg_0(MATCH_RUNNING_SIG_reg_0),
        .Q({IC_REG_FSR_I[2],IC_REG_FSR_I[6],IC_REG_FSR_I[7],IC_REG_FSR_I[8]}),
        .\RD_DATA_RET[18]_i_4 (\IC_REG_N_BTR_TS2_I_reg[0] [5:3]),
        .\RD_DATA_RET[18]_i_4_0 ({IC_REG_FSR_I_TXE__0[3],IC_REG_FSR_I_TXE__0[4],IC_REG_FSR_I_TXE__0[5]}),
        .\RD_DATA_RET[20]_i_7 (ol_adec_n_65),
        .\RD_DATA_RET[20]_i_7_0 (ol_adec_n_60),
        .\RD_DATA_RET_reg[18] (\RD_DATA_RET_reg[0]_0 [13:12]),
        .\RD_DATA_RET_reg[18]_0 (ol_adec_n_1),
        .\RD_INDEX_reg[1] ({IC_REG_FSR_I__0[11],IC_REG_FSR_I__0[12],IC_REG_FSR_I__0[13],IC_REG_FSR_I__0[14],IC_REG_FSR_I__0[15],IC_REG_FSR_I__0[16]}),
        .\RD_INDEX_reg[1]_0 ({IC_REG_FSR_I_F1__0[11],IC_REG_FSR_I_F1__0[12],IC_REG_FSR_I_F1__0[13],IC_REG_FSR_I_F1__0[14],IC_REG_FSR_I_F1__0[15],IC_REG_FSR_I_F1__0[16]}),
        .\RD_INDEX_reg[6] (ol_adec_n_61),
        .\RD_INDEX_reg[6]_0 (IC_IPSIG_WRITE_I),
        .\RD_INDEX_reg[6]_1 (ol_adec_n_62),
        .\RUNNING_FIFO_ID_LOC_reg_reg[1] ({RUNNING_FIFO_ID_LOC_reg[1],RUNNING_FIFO_ID_LOC_reg[3],RUNNING_FIFO_ID_LOC_reg[4],RUNNING_FIFO_ID_LOC_reg[5]}),
        .\RUNNING_FIFO_ID_LOC_reg_reg[1]_0 (ol_rbmm_n_66),
        .\RUNNING_FIFO_ID_LOC_reg_reg[3] (ol_rbmm_n_65),
        .\RUNNING_FIFO_ID_LOC_reg_reg[5] (ol_rbmm_n_64),
        .\RXE_DATA_STORED_AT_DLC_reg[0] ({ol_rbmm_n_113,ol_rbmm_n_114,ol_rbmm_n_115,ol_rbmm_n_116,ol_rbmm_n_117,ol_rbmm_n_118,ol_rbmm_n_119,ol_rbmm_n_120,ol_rbmm_n_121,ol_rbmm_n_122,ol_rbmm_n_123}),
        .\RXE_DATA_STORED_AT_DLC_reg[0]_0 (\RXE_DATA_STORED_AT_DLC_reg[0] ),
        .\RXE_DATA_STORED_AT_DLC_reg[0]_1 (\RXE_DATA_STORED_AT_DLC_reg[0]_0 [31:21]),
        .RXE_MSGVAL_EARLY_F0(RXE_MSGVAL_EARLY_F0),
        .RXE_MSGVAL_EARLY_F1(RXE_MSGVAL_EARLY_F1),
        .RXE_RXFIFO_WEN(RXE_RXFIFO_WEN),
        .RXE_RXFIFO_WEN_FD1(RXE_RXFIFO_WEN_FD1),
        .RXE_RXFIFO_WEN_FD2(RXE_RXFIFO_WEN_FD2),
        .RXE_RXMSG_VAL_F0(RXE_RXMSG_VAL_F0),
        .RXE_RXMSG_VAL_F1(RXE_RXMSG_VAL_F1),
        .RXF_FULL_AT_MSG_BOUNDARY_reg(RXF_FULL_AT_MSG_BOUNDARY),
        .RXF_FULL_AT_MSG_BOUNDARY_reg_0(RXF_FULL_AT_MSG_BOUNDARY_F1),
        .RXF_FULL_AT_MSG_BOUNDARY_reg_1(olglue_n_23),
        .RXF_FULL_AT_MSG_BOUNDARY_reg_2(olglue_n_21),
        .RXF_FULL_AXI(\GEN_FIFO_CNTL.rxmsg_fifo_cntl/RXF_FULL_AXI ),
        .RXF_FULL_AXI_0(\GEN_FIFO_1_CNTL.rxmsg_fifo_cntl_1/RXF_FULL_AXI ),
        .RXF_FULL_I_reg(OL_RX_FIFO_FULL),
        .RXF_FULL_I_reg_0(OL_RX_FIFO_FULL_F1),
        .RXMNF_SET(RXMNF_SET),
        .RXWM_SET(RXWM_SET),
        .RXWM_SET_F1(RXWM_SET_F1),
        .RX_ADDR_M_CC_F1(RX_ADDR_M_CC_F1),
        .SR(\arststages_ff_reg[1] ),
        .TS_RX_WEN(TS_RX_WEN),
        .TS_RX_WEN_F1(TS_RX_WEN_F1),
        .VALID_S_SIG_IMM(VALID_S_SIG_IMM),
        .ack_s_gate_toggle_reg(ack_s_gate_toggle),
        .ack_s_gate_toggle_reg_0(ack_s_gate_toggle_reg),
        .addr_location_incr_count(\GEN_FIFO_CNTL.rxmsg_fifo_cntl/addr_location_incr_count ),
        .addr_location_incr_count_2(\GEN_FIFO_1_CNTL.rxmsg_fifo_cntl_1/addr_location_incr_count ),
        .\addr_location_incr_count_reg[0] (addr_location_incr_count_reg_0_sn_1),
        .\addr_location_incr_count_reg[1] (ol_rbmm_n_6),
        .addrb({addrb[9],addrb[7]}),
        .can_clk(can_clk),
        .dest_arst(ol_fifo_rst_n),
        .doutb(doutb[13:12]),
        .enb(enb),
        .\gen_wr_a.gen_word_narrow.mem_reg (ol_tbmm_n_154),
        .\gen_wr_a.gen_word_narrow.mem_reg_0 (ol_rbmm_n_50),
        .\gen_wr_a.gen_word_narrow.mem_reg_0_0 (ol_rbmm_n_51),
        .\gen_wr_a.gen_word_narrow.mem_reg_1 (ol_tbmm_n_153),
        .\gen_wr_a.gen_word_narrow.mem_reg_2 (ol_tbmm_n_155),
        .host_req_reg(host_req_reg),
        .num5_carry__0({id_for_match_cdc_tig[0],id_for_match_cdc_tig[1],id_for_match_cdc_tig[2],id_for_match_cdc_tig[3],id_for_match_cdc_tig[4],id_for_match_cdc_tig[5],id_for_match_cdc_tig[6],id_for_match_cdc_tig[7],id_for_match_cdc_tig[8],id_for_match_cdc_tig[9],id_for_match_cdc_tig[10],id_for_match_cdc_tig[11],id_for_match_cdc_tig[12],id_for_match_cdc_tig[13],id_for_match_cdc_tig[14],id_for_match_cdc_tig[15],id_for_match_cdc_tig[16],id_for_match_cdc_tig[17],id_for_match_cdc_tig[18],id_for_match_cdc_tig[19],id_for_match_cdc_tig[20],id_for_match_cdc_tig[21],id_for_match_cdc_tig[22],id_for_match_cdc_tig[23],id_for_match_cdc_tig[24],id_for_match_cdc_tig[25],id_for_match_cdc_tig[26],id_for_match_cdc_tig[27],id_for_match_cdc_tig[28],id_for_match_cdc_tig[29],id_for_match_cdc_tig[30],id_for_match_cdc_tig[31]}),
        .\num_reg_reg[3] (ol_rbmm_n_74),
        .\num_reg_reg[4] (\GEN_IMM.ol_imm/num_reg ),
        .out(BSP_IN_EOF_OL),
        .pr1_rd_req0(\ol_tac_rd/pr1_rd_req0 ),
        .pr1_rd_req_reg(ol_adec_n_25),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_wdata({s_axi_wdata[20:16],s_axi_wdata[13:8],s_axi_wdata[5:0]}),
        .\wr_index_i_reg[1] (\wr_index_i_reg[1] ),
        .\wr_index_i_reg[1]_0 (\wr_index_i_reg[1]_0 ),
        .\wr_index_i_reg[6] (Q),
        .\wr_index_i_reg[6]_0 (\wr_index_i_reg[6] ),
        .\wr_index_i_reg[6]_1 (\wr_index_i_reg[6]_0 ),
        .\wr_index_i_reg[6]_2 (\wr_index_i_reg[6]_1 ),
        .\wr_index_id_loc_reg[0] ({RX_ADDR_M_CC[12:4],RX_ADDR_M_CC[2]}),
        .\wr_index_id_loc_reg[9] (\GEN_FIFO_CNTL.rxmsg_fifo_cntl/wr_index_id_loc_reg ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_tbmm ol_tbmm
       (.ACK_CR(ACK_CR),
        .ACK_H_reg(ol_tbmm_n_41),
        .ACK_H_reg_0(ol_tbmm_n_46),
        .ACK_H_reg_1(ol_tbmm_n_90),
        .ACK_RX(ACK_RX),
        .ACK_RX_T(ACK_RX_T),
        .ACK_S_SIG_IMM(ACK_S_SIG_IMM),
        .ACK_TX_RD(ACK_TX_RD),
        .ACK_TX_WR(ACK_TX_WR),
        .ADDR_M_CC(ADDR_M_CC),
        .\ADDR_RET_reg[12] (ol_tbmm_n_43),
        .BUFFER_LOCKED_D1_reg(MSG_ON_CAN_BUS_AXI_D1),
        .Bus2IP_RNW(Bus2IP_RNW),
        .CANCEL_CONFIRMED_OL_D1_SIG_reg(CANCEL_CONFIRMED_OL_D1),
        .CS_H0(CS_H0),
        .CS_H00_out(CS_H00_out),
        .CS_H_D1(\ol_tac_rd/CS_H_D1 ),
        .D({RD_DATA[1],RD_DATA[2],RD_DATA[3],RD_DATA[4],RD_DATA[5],RD_DATA[6],RD_DATA[7],RD_DATA[9],RD_DATA[11],RD_DATA[12],RD_DATA[13],RD_DATA[15],RD_DATA[18],RD_DATA[19],RD_DATA[27],RD_DATA[28],RD_DATA[29]}),
        .E(\tx_event_fifo_cntl/IC_REG_WMR_I20 ),
        .\FILL_LEVEL_reg[2] (ol_tbmm_n_146),
        .\FILL_LEVEL_reg[4] (olglue_n_10),
        .\FILL_LEVEL_reg[5] ({IC_REG_FSR_I_TXE__0[3],IC_REG_FSR_I_TXE__0[4],IC_REG_FSR_I_TXE__0[5],IC_REG_FSR_I_TXE__0[6],IC_REG_FSR_I_TXE__0[7],IC_REG_FSR_I_TXE__0[8]}),
        .\FSM_sequential_tbs_cs_reg[0] (tbs_running_sig),
        .\FSM_sequential_tbs_cs_reg[1] (\FSM_sequential_tbs_cs_reg[1] ),
        .\IC_REG_BRPR_I_reg[1] (ol_tbmm_n_42),
        .\IC_REG_ECR_I_reg[8] (ol_tbmm_n_44),
        .\IC_REG_IECRS_I_reg[3] (\IC_REG_IECRS_I_reg[3] ),
        .\IC_REG_IECRS_I_reg[8] (\IC_REG_IECRS_I_reg[8] ),
        .IC_REG_ISR_TXCRS_I_i_3(IETCS),
        .IC_REG_ISR_TXTRS_I_i_3(IETRS),
        .IC_REG_TCR_I(IC_REG_TCR_I),
        .IC_SYNC_ISR_MSGLST_TXE(IC_SYNC_ISR_MSGLST_TXE),
        .IC_SYNC_ISR_MSGLST_reg(IC_SYNC_ISR_MSGLST_reg),
        .INDEX_VALID_SIG_reg(index_valid_sig),
        .INDEX_VALID_SIG_reg_0(INDEX_VALID_SIG_reg),
        .MSG_DONE_FROM_BSP(MSG_DONE_FROM_BSP),
        .\MULTI_BIT.s_level_out_bus_d5_reg[0] (SR),
        .Q({IC_REG_WMR_I_TXE[4],IC_REG_WMR_I_TXE[5]}),
        .\RD_DATA_RET_reg[0] ({\RD_DATA_RET_reg[0]_0 [31:14],\RD_DATA_RET_reg[0]_0 [11:0]}),
        .\RD_DATA_RET_reg[10] (ol_adec_n_15),
        .\RD_DATA_RET_reg[11] (ol_adec_n_47),
        .\RD_DATA_RET_reg[12] (IC_REG_SR_TDCV_I[3:2]),
        .\RD_DATA_RET_reg[12]_0 (ol_adec_n_13),
        .\RD_DATA_RET_reg[12]_1 (ol_adec_n_46),
        .\RD_DATA_RET_reg[13] (ol_adec_n_45),
        .\RD_DATA_RET_reg[15] (p_3_in__0),
        .\RD_DATA_RET_reg[15]_0 (ol_adec_n_11),
        .\RD_DATA_RET_reg[15]_1 (ol_adec_n_44),
        .\RD_DATA_RET_reg[18] (ol_rbmm_n_51),
        .\RD_DATA_RET_reg[18]_0 (ol_adec_n_42),
        .\RD_DATA_RET_reg[18]_1 (ol_adec_n_58),
        .\RD_DATA_RET_reg[19] (ol_rbmm_n_50),
        .\RD_DATA_RET_reg[19]_0 (ol_adec_n_59),
        .\RD_DATA_RET_reg[19]_1 (ol_adec_n_40),
        .\RD_DATA_RET_reg[1] (ol_adec_n_1),
        .\RD_DATA_RET_reg[1]_0 (ol_adec_n_57),
        .\RD_DATA_RET_reg[1]_1 (ol_adec_n_41),
        .\RD_DATA_RET_reg[24] ({IC_REG_ECR_I[8],IC_REG_ECR_I[11],IC_REG_ECR_I[12],IC_REG_ECR_I[13]}),
        .\RD_DATA_RET_reg[24]_0 (ol_adec_n_5),
        .\RD_DATA_RET_reg[24]_1 (ol_adec_n_49),
        .\RD_DATA_RET_reg[25] (ol_adec_n_48),
        .\RD_DATA_RET_reg[25]_0 (ol_adec_n_6),
        .\RD_DATA_RET_reg[25]_1 (\IC_REG_BRPR_I_reg[0] [6]),
        .\RD_DATA_RET_reg[27] (ol_adec_n_4),
        .\RD_DATA_RET_reg[27]_0 (ol_adec_n_10),
        .\RD_DATA_RET_reg[27]_1 (ic_n_100),
        .\RD_DATA_RET_reg[28] (ol_adec_n_9),
        .\RD_DATA_RET_reg[28]_0 (ic_n_99),
        .\RD_DATA_RET_reg[29] (ol_adec_n_8),
        .\RD_DATA_RET_reg[29]_0 (ic_n_98),
        .\RD_DATA_RET_reg[2] (ol_adec_n_56),
        .\RD_DATA_RET_reg[3] (ol_adec_n_55),
        .\RD_DATA_RET_reg[4] (ol_adec_n_54),
        .\RD_DATA_RET_reg[5] (ol_adec_n_53),
        .\RD_DATA_RET_reg[6] (ol_adec_n_52),
        .\RD_DATA_RET_reg[7] (ol_adec_n_51),
        .\RD_DATA_RET_reg[9] (ol_adec_n_50),
        .\RD_DATA_S_D1_reg[0] (D),
        .\RD_INDEX_reg[1] ({IC_REG_FSR_I_TXE[12],IC_REG_FSR_I_TXE[13],IC_REG_FSR_I_TXE[14],IC_REG_FSR_I_TXE[15],IC_REG_FSR_I_TXE[16]}),
        .\RD_INDEX_reg[5] (\tx_event_fifo_cntl/RD_INDEX0 ),
        .\RUNNING_ID_LOC_reg_reg[0] (ol_tbmm_n_155),
        .\RUNNING_ID_LOC_reg_reg[2] (ol_tbmm_n_154),
        .RXF_FULL_AXI(\tx_event_fifo_cntl/RXF_FULL_AXI ),
        .RXF_FULL_I_reg(RXF_FULL_I_reg),
        .\SINGLE_BIT.s_level_out_d1_cdc_to_reg (IC_REG_MSR_DAR_I_reg),
        .SR(\arststages_ff_reg[1] ),
        .\TCR_i_reg[0] (ol_adec_n_78),
        .TRR_REG_WRITE_PULSE(TRR_REG_WRITE_PULSE),
        .TRR_REG_WRITE_PULSE0(\ol_txreg/TRR_REG_WRITE_PULSE0 ),
        .\TRR_i_D1_reg[23] (\TRR_i_D1_reg[23] ),
        .\TRR_i_D1_reg[28] (\TRR_i_D1_reg[28] ),
        .\TRR_i_reg[0] (olglue_n_17),
        .\TRR_i_reg[13] (\TRR_i_reg[13] ),
        .\TRR_i_reg[13]_0 (\TRR_i_reg[13]_0 ),
        .\TRR_i_reg[31] ({IC_REG_TRR_I[0],IC_REG_TRR_I[1],IC_REG_TRR_I[2],IC_REG_TRR_I[3],IC_REG_TRR_I[4],IC_REG_TRR_I[5],IC_REG_TRR_I[6],IC_REG_TRR_I[7],IC_REG_TRR_I[8],IC_REG_TRR_I[9],IC_REG_TRR_I[11],IC_REG_TRR_I[12],IC_REG_TRR_I[13],IC_REG_TRR_I[14],IC_REG_TRR_I[15],IC_REG_TRR_I[16],IC_REG_TRR_I[17],IC_REG_TRR_I[18],IC_REG_TRR_I[19],IC_REG_TRR_I[20],IC_REG_TRR_I[21],IC_REG_TRR_I[22],IC_REG_TRR_I[23],IC_REG_TRR_I[24],IC_REG_TRR_I[25],IC_REG_TRR_I[26],IC_REG_TRR_I[27],IC_REG_TRR_I[28],IC_REG_TRR_I[29],IC_REG_TRR_I[30],IC_REG_TRR_I[31]}),
        .TS_RX_WDATA_F1(TS_RX_WDATA_F1),
        .TS_RX_WEN(TS_RX_WEN),
        .TXEWM_SET(TXEWM_SET),
        .TXE_BRAM_WEN(TXE_BRAM_WEN),
        .\TXE_DATA_TS_reg[7] (\TXE_DATA_TS_reg[7] ),
        .TXE_MSGVAL_D1_reg(TXE_MSGVAL_D1),
        .TXE_MSGVAL_D2_reg(TXE_MSGVAL_D2),
        .TXE_MSGVAL_FD1(TXE_MSGVAL_FD1),
        .TXE_MSGVAL_FD2(TXE_MSGVAL_FD2),
        .VALID_S_SIG_IMM(VALID_S_SIG_IMM),
        .addr_location_incr_count_reg(addr_location_incr_count_reg),
        .\addr_location_incr_count_reg[0] (\addr_location_incr_count_reg[0]_0 ),
        .\addr_location_incr_count_reg[4] (\addr_location_incr_count_reg[4] ),
        .addr_location_incr_count_reg_0(addr_location_incr_count_reg_0),
        .addra(addra),
        .addrb({addrb[8],addrb[6:0]}),
        .can_clk(can_clk),
        .dest_arst(ol_fifo_rst_n),
        .dina(dina),
        .doutb({doutb[31:24],doutb[22:14],doutb[11:0]}),
        .\gen_wr_a.gen_word_narrow.mem_reg (ol_tbmm_n_78),
        .\gen_wr_a.gen_word_narrow.mem_reg_0 (ol_tbmm_n_79),
        .\gen_wr_a.gen_word_narrow.mem_reg_1 (ol_tbmm_n_45),
        .\gen_wr_a.gen_word_narrow.mem_reg_10 (ol_tbmm_n_89),
        .\gen_wr_a.gen_word_narrow.mem_reg_11 (\ADDR_RET_reg[2] [9:0]),
        .\gen_wr_a.gen_word_narrow.mem_reg_12 ({ADDR_S_SIG_IMM[9],ADDR_S_SIG_IMM[10],ADDR_S_SIG_IMM[11],ADDR_S_SIG_IMM[12]}),
        .\gen_wr_a.gen_word_narrow.mem_reg_13 (ol_rbmm_n_62),
        .\gen_wr_a.gen_word_narrow.mem_reg_14 ({RUNNING_FIFO_ID_LOC_reg[1],RUNNING_FIFO_ID_LOC_reg[3],RUNNING_FIFO_ID_LOC_reg[4],RUNNING_FIFO_ID_LOC_reg[5]}),
        .\gen_wr_a.gen_word_narrow.mem_reg_15 (ol_rbmm_n_63),
        .\gen_wr_a.gen_word_narrow.mem_reg_16 (ol_rbmm_n_64),
        .\gen_wr_a.gen_word_narrow.mem_reg_17 (ol_rbmm_n_65),
        .\gen_wr_a.gen_word_narrow.mem_reg_18 (ol_rbmm_n_66),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_0 (ol_tbmm_n_88),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_1 ({RX_ADDR_M_CC[12:4],RX_ADDR_M_CC[2]}),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_2 (\GEN_FIFO_CNTL.rxmsg_fifo_cntl/wr_index_id_loc_reg ),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_3 (ol_rbmm_n_6),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_4 ({ol_rbmm_n_113,ol_rbmm_n_114,ol_rbmm_n_115,ol_rbmm_n_116,ol_rbmm_n_117,ol_rbmm_n_118,ol_rbmm_n_119,ol_rbmm_n_120,ol_rbmm_n_121,ol_rbmm_n_122,ol_rbmm_n_123}),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_5 (\RXE_DATA_STORED_AT_DLC_reg[0]_0 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_2 (ol_tbmm_n_80),
        .\gen_wr_a.gen_word_narrow.mem_reg_3 (ol_tbmm_n_81),
        .\gen_wr_a.gen_word_narrow.mem_reg_4 (ol_tbmm_n_82),
        .\gen_wr_a.gen_word_narrow.mem_reg_5 (ol_tbmm_n_83),
        .\gen_wr_a.gen_word_narrow.mem_reg_6 (ol_tbmm_n_84),
        .\gen_wr_a.gen_word_narrow.mem_reg_7 (ol_tbmm_n_85),
        .\gen_wr_a.gen_word_narrow.mem_reg_8 (ol_tbmm_n_86),
        .\gen_wr_a.gen_word_narrow.mem_reg_9 (ol_tbmm_n_87),
        .host_wr_req_reg(ol_adec_n_25),
        .invalidate_buffer_i(invalidate_buffer_i),
        .invalidate_buffer_reg(invalidate_buffer_reg),
        .out(CANCEL_CONFIRMED_OL),
        .postpone_flag(postpone_flag),
        .postpone_flag_2_reg(postpone_flag_2),
        .postpone_flag_2_reg_0(postpone_flag_2_reg),
        .postpone_flag_2_reg_1(postpone_flag_2_reg_0),
        .postpone_flag_reg(postpone_flag_reg),
        .pr1_rd_req0(\ol_tac_rd/pr1_rd_req0 ),
        .pr1_rd_req_reg(pr1_rd_req_reg),
        .pr1_rd_req_reg_0(ol_tbmm_n_153),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_wdata(s_axi_wdata),
        .src_in(src_in),
        .trigger_next_round(trigger_next_round),
        .\txe_id_data_i_reg[0] (\txe_id_data_i_reg[0] ),
        .wea(wea),
        .winning_or_locked_index_cancel_req_reg(winning_or_locked_index_cancel_req_reg));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_glue olglue
       (.BSP_IN_EOF(BSP_IN_EOF),
        .BSP_IN_IFSPACE(BSP_IN_IFSPACE),
        .BSP_IN_IFSPACE_OL(BSP_IN_IFSPACE_OL),
        .CANCEL_OR_INVALIDATE_CONFIRMED_TL2OL(CANCEL_OR_INVALIDATE_CONFIRMED_TL2OL),
        .CO(CO),
        .E_RST_I_reg_0(SR),
        .E_RST_I_reg_1(olglue_n_10),
        .E_RST_I_reg_2(olglue_n_13),
        .E_RST_I_reg_3(olglue_n_14),
        .E_RST_I_reg_4(olglue_n_17),
        .G_RST_SRST_CEN_I0(G_RST_SRST_CEN_I0),
        .IC_REG_SRR_CEN_I(IC_REG_SRR_CEN_I),
        .IC_REG_SRR_SRST(IC_REG_SRR_SRST),
        .ID_MATCH_EN(ID_MATCH_EN),
        .ID_MATCH_EN_FS_D1(ID_MATCH_EN_FS_D1),
        .ID_MATCH_EN_FS_D1_reg_0(olglue_n_11),
        .ID_MATCH_EN_OL(ID_MATCH_EN_OL),
        .MSG_ON_CAN_BUS(MSG_ON_CAN_BUS),
        .MSG_ON_CAN_BUS_AXI(MSG_ON_CAN_BUS_AXI),
        .MSG_ON_CAN_BUS_OL_D1(MSG_ON_CAN_BUS_OL_D1),
        .RXE_FDF_I(RXE_FDF_I),
        .RXE_MSGVAL_EARLY_F0(RXE_MSGVAL_EARLY_F0),
        .RXE_MSGVAL_EARLY_F1(RXE_MSGVAL_EARLY_F1),
        .RXE_RXMSG_INVAL_F0(RXE_RXMSG_INVAL_F0),
        .RXE_RXMSG_INVAL_F1(RXE_RXMSG_INVAL_F1),
        .RXF_FULL_AXI(\tx_event_fifo_cntl/RXF_FULL_AXI ),
        .RXF_FULL_AXI_1(\GEN_FIFO_CNTL.rxmsg_fifo_cntl/RXF_FULL_AXI ),
        .RXF_FULL_AXI_2(\GEN_FIFO_1_CNTL.rxmsg_fifo_cntl_1/RXF_FULL_AXI ),
        .RXMNF_SET(RXMNF_SET),
        .S(S),
        .\SINGLE_BIT.s_level_out_d4_reg (BSP_IN_EOF_OL),
        .\SINGLE_BIT.s_level_out_d4_reg_0 (out),
        .\SINGLE_BIT.s_level_out_d4_reg_1 (MSG_ON_CAN_BUS_OL),
        .\SINGLE_BIT.s_level_out_d4_reg_2 (olglue_n_16),
        .SR(IC_REG_TSR_I),
        .SYNC_RST_TL(SYNC_RST_TL),
        .\TRR_i_reg[0] (IC_REG_SR_SNOOP_I_reg),
        .TS_RX_WEN(TS_RX_WEN),
        .TS_RX_WEN_F1(TS_RX_WEN_F1),
        .addr_location_incr_count(\GEN_FIFO_1_CNTL.rxmsg_fifo_cntl_1/addr_location_incr_count ),
        .addr_location_incr_count_0(\GEN_FIFO_CNTL.rxmsg_fifo_cntl/addr_location_incr_count ),
        .\arststages_ff_reg[1] (dest_arst),
        .\arststages_ff_reg[1]_0 (\arststages_ff_reg[1]_0 ),
        .\arststages_ff_reg[1]_1 (olglue_n_21),
        .\arststages_ff_reg[1]_2 (olglue_n_23),
        .\arststages_ff_reg[1]_3 (\arststages_ff_reg[1] ),
        .can_clk(can_clk),
        .can_phy_rx(can_phy_rx),
        .can_phy_rx_0(can_phy_rx_0),
        .dest_arst(ol_fifo_rst_n),
        .dest_rst(dest_rst),
        .out(CANCEL_CONFIRMED_OL),
        .s_axi_aclk(s_axi_aclk),
        .src_arst(src_arst),
        .sync_tl_rst_n_d2_reg_0(sync_tl_rst_n_d2_reg),
        .\syncstages_ff_reg[3] (\syncstages_ff_reg[3] ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_txreg
   (TRR_REG_WRITE_PULSE,
    TBS_RUNNING_D1,
    \TRR_TBS_i_reg[15]_0 ,
    Q,
    \TRR_i_reg[13]_0 ,
    D,
    \TRR_i_D1_reg[28]_0 ,
    \TRR_i_D1_reg[23]_0 ,
    \TRR_i_reg[13]_1 ,
    \TCR_i_reg[13]_0 ,
    \TCR_i_reg[4]_0 ,
    \TCR_i_reg[1]_0 ,
    \TCR_i_reg[0]_0 ,
    \TCR_i_reg[3]_0 ,
    \TCR_i_reg[2]_0 ,
    \TCR_i_reg[7]_0 ,
    \TCR_i_reg[6]_0 ,
    \TCR_i_reg[5]_0 ,
    \TCR_i_reg[12]_0 ,
    \TCR_i_reg[9]_0 ,
    \TCR_i_reg[8]_0 ,
    \TCR_i_reg[11]_0 ,
    \TCR_i_reg[10]_0 ,
    \TCR_i_reg[15]_0 ,
    \TCR_i_reg[14]_0 ,
    \IC_REG_IECRS_I_reg[3] ,
    \TCR_i_reg[25]_0 ,
    \TCR_i_reg[24]_0 ,
    \TCR_i_reg[27]_0 ,
    \TCR_i_reg[26]_0 ,
    \TCR_i_reg[28]_0 ,
    \TCR_i_reg[29]_0 ,
    \IC_REG_IECRS_I_reg[8] ,
    \TCR_i_reg[23]_0 ,
    \TCR_i_reg[20]_0 ,
    \TCR_i_reg[17]_0 ,
    \TCR_i_reg[16]_0 ,
    \TCR_i_reg[19]_0 ,
    \TCR_i_reg[18]_0 ,
    \TCR_i_reg[22]_0 ,
    \TCR_i_reg[21]_0 ,
    \TCR_i_reg[30]_0 ,
    \TCR_i_reg[31]_0 ,
    \TCR_i_reg[21]_1 ,
    \TCR_i_reg[5]_1 ,
    \TCR_i_reg[21]_2 ,
    \TCR_i_reg[5]_2 ,
    \TRR_TBS_i_reg[26]_0 ,
    \num_reg_reg[2] ,
    \num_reg_reg[2]_0 ,
    \TRR_i_D1_reg[0]_0 ,
    TRR_REG_WRITE_PULSE0,
    s_axi_aclk,
    TBS_RUNNING_D1_reg_0,
    trigger_next_round_d1,
    IC_REG_ISR_TXTRS_I_i_3_0,
    IC_REG_ISR_TXCRS_I_i_3_0,
    trig_pulse_2_i_7,
    winning_or_locked_index_cancel_req_i_19,
    \FSM_sequential_tbs_cs[0]_i_3 ,
    \FSM_sequential_tbs_cs[0]_i_3_0 ,
    s_axi_wdata,
    \TRR_i_reg[0]_0 ,
    \TRR_i_reg[31]_0 ,
    \TRR_i_reg[31]_1 ,
    \TRR_i_reg[30]_0 ,
    \TRR_i_reg[30]_1 ,
    \TRR_i_reg[29]_0 ,
    \TRR_i_reg[29]_1 ,
    \TRR_i_reg[28]_0 ,
    \TRR_i_reg[28]_1 ,
    \TRR_i_reg[27]_0 ,
    \TRR_i_reg[27]_1 ,
    \TRR_i_reg[26]_0 ,
    \TRR_i_reg[26]_1 ,
    \TRR_i_reg[25]_0 ,
    \TRR_i_reg[25]_1 ,
    \TRR_i_reg[24]_0 ,
    \TRR_i_reg[24]_1 ,
    \TRR_i_reg[23]_0 ,
    \TRR_i_reg[23]_1 ,
    \TRR_i_reg[22]_0 ,
    \TRR_i_reg[22]_1 ,
    \TRR_i_reg[21]_0 ,
    \TRR_i_reg[21]_1 ,
    \TRR_i_reg[20]_0 ,
    \TRR_i_reg[20]_1 ,
    \TRR_i_reg[19]_0 ,
    \TRR_i_reg[19]_1 ,
    \TRR_i_reg[18]_0 ,
    \TRR_i_reg[18]_1 ,
    \TRR_i_reg[17]_0 ,
    \TRR_i_reg[17]_1 ,
    \TRR_i_reg[16]_0 ,
    \TRR_i_reg[16]_1 ,
    \TRR_i_reg[15]_0 ,
    \TRR_i_reg[15]_1 ,
    \TRR_i_reg[14]_0 ,
    \TRR_i_reg[14]_1 ,
    \TRR_i_reg[13]_2 ,
    \TRR_i_reg[13]_3 ,
    \TRR_i_reg[12]_0 ,
    \TRR_i_reg[12]_1 ,
    \TRR_i_reg[11]_0 ,
    \TRR_i_reg[11]_1 ,
    \TRR_i_reg[10]_0 ,
    \TRR_i_reg[10]_1 ,
    \TRR_i_reg[9]_0 ,
    \TRR_i_reg[9]_1 ,
    \TRR_i_reg[8]_0 ,
    \TRR_i_reg[8]_1 ,
    \TRR_i_reg[7]_0 ,
    \TRR_i_reg[7]_1 ,
    \TRR_i_reg[6]_0 ,
    \TRR_i_reg[6]_1 ,
    \TRR_i_reg[5]_0 ,
    \TRR_i_reg[5]_1 ,
    \TRR_i_reg[4]_0 ,
    \TRR_i_reg[4]_1 ,
    \TRR_i_reg[3]_0 ,
    \TRR_i_reg[3]_1 ,
    \TRR_i_reg[2]_0 ,
    \TRR_i_reg[2]_1 ,
    \TRR_i_reg[1]_0 ,
    \TRR_i_reg[1]_1 ,
    \TRR_i_reg[0]_1 ,
    \TRR_i_reg[0]_2 ,
    \TCR_i_reg[0]_1 ,
    \TRR_TBS_i_reg[31]_0 );
  output TRR_REG_WRITE_PULSE;
  output TBS_RUNNING_D1;
  output \TRR_TBS_i_reg[15]_0 ;
  output [0:0]Q;
  output \TRR_i_reg[13]_0 ;
  output [31:0]D;
  output \TRR_i_D1_reg[28]_0 ;
  output \TRR_i_D1_reg[23]_0 ;
  output \TRR_i_reg[13]_1 ;
  output \TCR_i_reg[13]_0 ;
  output \TCR_i_reg[4]_0 ;
  output \TCR_i_reg[1]_0 ;
  output \TCR_i_reg[0]_0 ;
  output \TCR_i_reg[3]_0 ;
  output \TCR_i_reg[2]_0 ;
  output \TCR_i_reg[7]_0 ;
  output \TCR_i_reg[6]_0 ;
  output \TCR_i_reg[5]_0 ;
  output \TCR_i_reg[12]_0 ;
  output \TCR_i_reg[9]_0 ;
  output \TCR_i_reg[8]_0 ;
  output \TCR_i_reg[11]_0 ;
  output \TCR_i_reg[10]_0 ;
  output \TCR_i_reg[15]_0 ;
  output \TCR_i_reg[14]_0 ;
  output \IC_REG_IECRS_I_reg[3] ;
  output \TCR_i_reg[25]_0 ;
  output \TCR_i_reg[24]_0 ;
  output \TCR_i_reg[27]_0 ;
  output \TCR_i_reg[26]_0 ;
  output \TCR_i_reg[28]_0 ;
  output \TCR_i_reg[29]_0 ;
  output \IC_REG_IECRS_I_reg[8] ;
  output \TCR_i_reg[23]_0 ;
  output \TCR_i_reg[20]_0 ;
  output \TCR_i_reg[17]_0 ;
  output \TCR_i_reg[16]_0 ;
  output \TCR_i_reg[19]_0 ;
  output \TCR_i_reg[18]_0 ;
  output \TCR_i_reg[22]_0 ;
  output \TCR_i_reg[21]_0 ;
  output \TCR_i_reg[30]_0 ;
  output \TCR_i_reg[31]_0 ;
  output \TCR_i_reg[21]_1 ;
  output \TCR_i_reg[5]_1 ;
  output \TCR_i_reg[21]_2 ;
  output \TCR_i_reg[5]_2 ;
  output \TRR_TBS_i_reg[26]_0 ;
  output \num_reg_reg[2] ;
  output \num_reg_reg[2]_0 ;
  input \TRR_i_D1_reg[0]_0 ;
  input TRR_REG_WRITE_PULSE0;
  input s_axi_aclk;
  input TBS_RUNNING_D1_reg_0;
  input trigger_next_round_d1;
  input [31:0]IC_REG_ISR_TXTRS_I_i_3_0;
  input [31:0]IC_REG_ISR_TXCRS_I_i_3_0;
  input [1:0]trig_pulse_2_i_7;
  input [1:0]winning_or_locked_index_cancel_req_i_19;
  input \FSM_sequential_tbs_cs[0]_i_3 ;
  input [4:0]\FSM_sequential_tbs_cs[0]_i_3_0 ;
  input [31:0]s_axi_wdata;
  input \TRR_i_reg[0]_0 ;
  input \TRR_i_reg[31]_0 ;
  input \TRR_i_reg[31]_1 ;
  input \TRR_i_reg[30]_0 ;
  input \TRR_i_reg[30]_1 ;
  input \TRR_i_reg[29]_0 ;
  input \TRR_i_reg[29]_1 ;
  input \TRR_i_reg[28]_0 ;
  input \TRR_i_reg[28]_1 ;
  input \TRR_i_reg[27]_0 ;
  input \TRR_i_reg[27]_1 ;
  input \TRR_i_reg[26]_0 ;
  input \TRR_i_reg[26]_1 ;
  input \TRR_i_reg[25]_0 ;
  input \TRR_i_reg[25]_1 ;
  input \TRR_i_reg[24]_0 ;
  input \TRR_i_reg[24]_1 ;
  input \TRR_i_reg[23]_0 ;
  input \TRR_i_reg[23]_1 ;
  input \TRR_i_reg[22]_0 ;
  input \TRR_i_reg[22]_1 ;
  input \TRR_i_reg[21]_0 ;
  input \TRR_i_reg[21]_1 ;
  input \TRR_i_reg[20]_0 ;
  input \TRR_i_reg[20]_1 ;
  input \TRR_i_reg[19]_0 ;
  input \TRR_i_reg[19]_1 ;
  input \TRR_i_reg[18]_0 ;
  input \TRR_i_reg[18]_1 ;
  input \TRR_i_reg[17]_0 ;
  input \TRR_i_reg[17]_1 ;
  input \TRR_i_reg[16]_0 ;
  input \TRR_i_reg[16]_1 ;
  input \TRR_i_reg[15]_0 ;
  input \TRR_i_reg[15]_1 ;
  input \TRR_i_reg[14]_0 ;
  input \TRR_i_reg[14]_1 ;
  input \TRR_i_reg[13]_2 ;
  input \TRR_i_reg[13]_3 ;
  input \TRR_i_reg[12]_0 ;
  input \TRR_i_reg[12]_1 ;
  input \TRR_i_reg[11]_0 ;
  input \TRR_i_reg[11]_1 ;
  input \TRR_i_reg[10]_0 ;
  input \TRR_i_reg[10]_1 ;
  input \TRR_i_reg[9]_0 ;
  input \TRR_i_reg[9]_1 ;
  input \TRR_i_reg[8]_0 ;
  input \TRR_i_reg[8]_1 ;
  input \TRR_i_reg[7]_0 ;
  input \TRR_i_reg[7]_1 ;
  input \TRR_i_reg[6]_0 ;
  input \TRR_i_reg[6]_1 ;
  input \TRR_i_reg[5]_0 ;
  input \TRR_i_reg[5]_1 ;
  input \TRR_i_reg[4]_0 ;
  input \TRR_i_reg[4]_1 ;
  input \TRR_i_reg[3]_0 ;
  input \TRR_i_reg[3]_1 ;
  input \TRR_i_reg[2]_0 ;
  input \TRR_i_reg[2]_1 ;
  input \TRR_i_reg[1]_0 ;
  input \TRR_i_reg[1]_1 ;
  input \TRR_i_reg[0]_1 ;
  input \TRR_i_reg[0]_2 ;
  input \TCR_i_reg[0]_1 ;
  input [31:0]\TRR_TBS_i_reg[31]_0 ;

  wire [31:0]D;
  wire \FSM_sequential_tbs_cs[0]_i_11_n_0 ;
  wire \FSM_sequential_tbs_cs[0]_i_12_n_0 ;
  wire \FSM_sequential_tbs_cs[0]_i_13_n_0 ;
  wire \FSM_sequential_tbs_cs[0]_i_14_n_0 ;
  wire \FSM_sequential_tbs_cs[0]_i_15_n_0 ;
  wire \FSM_sequential_tbs_cs[0]_i_19_n_0 ;
  wire \FSM_sequential_tbs_cs[0]_i_20_n_0 ;
  wire \FSM_sequential_tbs_cs[0]_i_21_n_0 ;
  wire \FSM_sequential_tbs_cs[0]_i_22_n_0 ;
  wire \FSM_sequential_tbs_cs[0]_i_23_n_0 ;
  wire \FSM_sequential_tbs_cs[0]_i_24_n_0 ;
  wire \FSM_sequential_tbs_cs[0]_i_3 ;
  wire [4:0]\FSM_sequential_tbs_cs[0]_i_3_0 ;
  wire \FSM_sequential_tbs_cs[0]_i_4_n_0 ;
  wire \FSM_sequential_tbs_cs[0]_i_5_n_0 ;
  wire \FSM_sequential_tbs_cs[0]_i_6_n_0 ;
  wire \FSM_sequential_tbs_cs_reg[0]_i_17_n_0 ;
  wire \FSM_sequential_tbs_cs_reg[0]_i_18_n_0 ;
  wire \IC_REG_IECRS_I_reg[3] ;
  wire \IC_REG_IECRS_I_reg[8] ;
  wire IC_REG_ISR_TXCRS_I_i_10_n_0;
  wire IC_REG_ISR_TXCRS_I_i_11_n_0;
  wire IC_REG_ISR_TXCRS_I_i_12_n_0;
  wire IC_REG_ISR_TXCRS_I_i_13_n_0;
  wire IC_REG_ISR_TXCRS_I_i_14_n_0;
  wire IC_REG_ISR_TXCRS_I_i_15_n_0;
  wire IC_REG_ISR_TXCRS_I_i_16_n_0;
  wire IC_REG_ISR_TXCRS_I_i_17_n_0;
  wire IC_REG_ISR_TXCRS_I_i_18_n_0;
  wire IC_REG_ISR_TXCRS_I_i_19_n_0;
  wire IC_REG_ISR_TXCRS_I_i_20_n_0;
  wire IC_REG_ISR_TXCRS_I_i_21_n_0;
  wire [31:0]IC_REG_ISR_TXCRS_I_i_3_0;
  wire IC_REG_ISR_TXCRS_I_i_5_n_0;
  wire IC_REG_ISR_TXCRS_I_i_6_n_0;
  wire IC_REG_ISR_TXCRS_I_i_7_n_0;
  wire IC_REG_ISR_TXCRS_I_i_8_n_0;
  wire IC_REG_ISR_TXCRS_I_i_9_n_0;
  wire IC_REG_ISR_TXTRS_I_i_10_n_0;
  wire IC_REG_ISR_TXTRS_I_i_11_n_0;
  wire IC_REG_ISR_TXTRS_I_i_12_n_0;
  wire IC_REG_ISR_TXTRS_I_i_13_n_0;
  wire IC_REG_ISR_TXTRS_I_i_14_n_0;
  wire IC_REG_ISR_TXTRS_I_i_15_n_0;
  wire IC_REG_ISR_TXTRS_I_i_16_n_0;
  wire IC_REG_ISR_TXTRS_I_i_17_n_0;
  wire IC_REG_ISR_TXTRS_I_i_18_n_0;
  wire IC_REG_ISR_TXTRS_I_i_19_n_0;
  wire IC_REG_ISR_TXTRS_I_i_20_n_0;
  wire IC_REG_ISR_TXTRS_I_i_21_n_0;
  wire [31:0]IC_REG_ISR_TXTRS_I_i_3_0;
  wire IC_REG_ISR_TXTRS_I_i_5_n_0;
  wire IC_REG_ISR_TXTRS_I_i_6_n_0;
  wire IC_REG_ISR_TXTRS_I_i_7_n_0;
  wire IC_REG_ISR_TXTRS_I_i_8_n_0;
  wire IC_REG_ISR_TXTRS_I_i_9_n_0;
  wire [0:0]Q;
  wire TBS_RUNNING_D1;
  wire TBS_RUNNING_D1_reg_0;
  wire \TCR_i[0]_i_1_n_0 ;
  wire \TCR_i[10]_i_1_n_0 ;
  wire \TCR_i[11]_i_1_n_0 ;
  wire \TCR_i[12]_i_1_n_0 ;
  wire \TCR_i[13]_i_1_n_0 ;
  wire \TCR_i[14]_i_1_n_0 ;
  wire \TCR_i[15]_i_1_n_0 ;
  wire \TCR_i[16]_i_1_n_0 ;
  wire \TCR_i[17]_i_1_n_0 ;
  wire \TCR_i[18]_i_1_n_0 ;
  wire \TCR_i[19]_i_1_n_0 ;
  wire \TCR_i[1]_i_1_n_0 ;
  wire \TCR_i[20]_i_1_n_0 ;
  wire \TCR_i[21]_i_1_n_0 ;
  wire \TCR_i[22]_i_1_n_0 ;
  wire \TCR_i[23]_i_1_n_0 ;
  wire \TCR_i[24]_i_1_n_0 ;
  wire \TCR_i[25]_i_1_n_0 ;
  wire \TCR_i[26]_i_1_n_0 ;
  wire \TCR_i[27]_i_1_n_0 ;
  wire \TCR_i[28]_i_1_n_0 ;
  wire \TCR_i[29]_i_1_n_0 ;
  wire \TCR_i[2]_i_1_n_0 ;
  wire \TCR_i[30]_i_1_n_0 ;
  wire \TCR_i[31]_i_1_n_0 ;
  wire \TCR_i[3]_i_1_n_0 ;
  wire \TCR_i[4]_i_1_n_0 ;
  wire \TCR_i[5]_i_1_n_0 ;
  wire \TCR_i[6]_i_1_n_0 ;
  wire \TCR_i[7]_i_1_n_0 ;
  wire \TCR_i[8]_i_1_n_0 ;
  wire \TCR_i[9]_i_1_n_0 ;
  wire \TCR_i_reg[0]_0 ;
  wire \TCR_i_reg[0]_1 ;
  wire \TCR_i_reg[10]_0 ;
  wire \TCR_i_reg[11]_0 ;
  wire \TCR_i_reg[12]_0 ;
  wire \TCR_i_reg[13]_0 ;
  wire \TCR_i_reg[14]_0 ;
  wire \TCR_i_reg[15]_0 ;
  wire \TCR_i_reg[16]_0 ;
  wire \TCR_i_reg[17]_0 ;
  wire \TCR_i_reg[18]_0 ;
  wire \TCR_i_reg[19]_0 ;
  wire \TCR_i_reg[1]_0 ;
  wire \TCR_i_reg[20]_0 ;
  wire \TCR_i_reg[21]_0 ;
  wire \TCR_i_reg[21]_1 ;
  wire \TCR_i_reg[21]_2 ;
  wire \TCR_i_reg[22]_0 ;
  wire \TCR_i_reg[23]_0 ;
  wire \TCR_i_reg[24]_0 ;
  wire \TCR_i_reg[25]_0 ;
  wire \TCR_i_reg[26]_0 ;
  wire \TCR_i_reg[27]_0 ;
  wire \TCR_i_reg[28]_0 ;
  wire \TCR_i_reg[29]_0 ;
  wire \TCR_i_reg[2]_0 ;
  wire \TCR_i_reg[30]_0 ;
  wire \TCR_i_reg[31]_0 ;
  wire \TCR_i_reg[3]_0 ;
  wire \TCR_i_reg[4]_0 ;
  wire \TCR_i_reg[5]_0 ;
  wire \TCR_i_reg[5]_1 ;
  wire \TCR_i_reg[5]_2 ;
  wire \TCR_i_reg[6]_0 ;
  wire \TCR_i_reg[7]_0 ;
  wire \TCR_i_reg[8]_0 ;
  wire \TCR_i_reg[9]_0 ;
  wire TRR_REG_WRITE_PULSE;
  wire TRR_REG_WRITE_PULSE0;
  wire [31:0]TRR_TBS_SIG;
  wire \TRR_TBS_i[31]_i_1_n_0 ;
  wire \TRR_TBS_i_reg[15]_0 ;
  wire \TRR_TBS_i_reg[26]_0 ;
  wire [31:0]\TRR_TBS_i_reg[31]_0 ;
  wire \TRR_i[0]_i_1_n_0 ;
  wire \TRR_i[10]_i_1_n_0 ;
  wire \TRR_i[11]_i_1_n_0 ;
  wire \TRR_i[12]_i_1_n_0 ;
  wire \TRR_i[13]_i_1_n_0 ;
  wire \TRR_i[14]_i_1_n_0 ;
  wire \TRR_i[15]_i_1_n_0 ;
  wire \TRR_i[16]_i_1_n_0 ;
  wire \TRR_i[17]_i_1_n_0 ;
  wire \TRR_i[18]_i_1_n_0 ;
  wire \TRR_i[19]_i_1_n_0 ;
  wire \TRR_i[1]_i_1_n_0 ;
  wire \TRR_i[20]_i_1_n_0 ;
  wire \TRR_i[21]_i_1_n_0 ;
  wire \TRR_i[22]_i_1_n_0 ;
  wire \TRR_i[23]_i_1_n_0 ;
  wire \TRR_i[24]_i_1_n_0 ;
  wire \TRR_i[25]_i_1_n_0 ;
  wire \TRR_i[26]_i_1_n_0 ;
  wire \TRR_i[27]_i_1_n_0 ;
  wire \TRR_i[28]_i_1_n_0 ;
  wire \TRR_i[29]_i_1_n_0 ;
  wire \TRR_i[2]_i_1_n_0 ;
  wire \TRR_i[30]_i_1_n_0 ;
  wire \TRR_i[31]_i_1_n_0 ;
  wire \TRR_i[3]_i_1_n_0 ;
  wire \TRR_i[4]_i_1_n_0 ;
  wire \TRR_i[5]_i_1_n_0 ;
  wire \TRR_i[6]_i_1_n_0 ;
  wire \TRR_i[7]_i_1_n_0 ;
  wire \TRR_i[8]_i_1_n_0 ;
  wire \TRR_i[9]_i_1_n_0 ;
  wire \TRR_i_D1_reg[0]_0 ;
  wire \TRR_i_D1_reg[23]_0 ;
  wire \TRR_i_D1_reg[28]_0 ;
  wire \TRR_i_D1_reg_n_0_[0] ;
  wire \TRR_i_D1_reg_n_0_[31] ;
  wire \TRR_i_reg[0]_0 ;
  wire \TRR_i_reg[0]_1 ;
  wire \TRR_i_reg[0]_2 ;
  wire \TRR_i_reg[10]_0 ;
  wire \TRR_i_reg[10]_1 ;
  wire \TRR_i_reg[11]_0 ;
  wire \TRR_i_reg[11]_1 ;
  wire \TRR_i_reg[12]_0 ;
  wire \TRR_i_reg[12]_1 ;
  wire \TRR_i_reg[13]_0 ;
  wire \TRR_i_reg[13]_1 ;
  wire \TRR_i_reg[13]_2 ;
  wire \TRR_i_reg[13]_3 ;
  wire \TRR_i_reg[14]_0 ;
  wire \TRR_i_reg[14]_1 ;
  wire \TRR_i_reg[15]_0 ;
  wire \TRR_i_reg[15]_1 ;
  wire \TRR_i_reg[16]_0 ;
  wire \TRR_i_reg[16]_1 ;
  wire \TRR_i_reg[17]_0 ;
  wire \TRR_i_reg[17]_1 ;
  wire \TRR_i_reg[18]_0 ;
  wire \TRR_i_reg[18]_1 ;
  wire \TRR_i_reg[19]_0 ;
  wire \TRR_i_reg[19]_1 ;
  wire \TRR_i_reg[1]_0 ;
  wire \TRR_i_reg[1]_1 ;
  wire \TRR_i_reg[20]_0 ;
  wire \TRR_i_reg[20]_1 ;
  wire \TRR_i_reg[21]_0 ;
  wire \TRR_i_reg[21]_1 ;
  wire \TRR_i_reg[22]_0 ;
  wire \TRR_i_reg[22]_1 ;
  wire \TRR_i_reg[23]_0 ;
  wire \TRR_i_reg[23]_1 ;
  wire \TRR_i_reg[24]_0 ;
  wire \TRR_i_reg[24]_1 ;
  wire \TRR_i_reg[25]_0 ;
  wire \TRR_i_reg[25]_1 ;
  wire \TRR_i_reg[26]_0 ;
  wire \TRR_i_reg[26]_1 ;
  wire \TRR_i_reg[27]_0 ;
  wire \TRR_i_reg[27]_1 ;
  wire \TRR_i_reg[28]_0 ;
  wire \TRR_i_reg[28]_1 ;
  wire \TRR_i_reg[29]_0 ;
  wire \TRR_i_reg[29]_1 ;
  wire \TRR_i_reg[2]_0 ;
  wire \TRR_i_reg[2]_1 ;
  wire \TRR_i_reg[30]_0 ;
  wire \TRR_i_reg[30]_1 ;
  wire \TRR_i_reg[31]_0 ;
  wire \TRR_i_reg[31]_1 ;
  wire \TRR_i_reg[3]_0 ;
  wire \TRR_i_reg[3]_1 ;
  wire \TRR_i_reg[4]_0 ;
  wire \TRR_i_reg[4]_1 ;
  wire \TRR_i_reg[5]_0 ;
  wire \TRR_i_reg[5]_1 ;
  wire \TRR_i_reg[6]_0 ;
  wire \TRR_i_reg[6]_1 ;
  wire \TRR_i_reg[7]_0 ;
  wire \TRR_i_reg[7]_1 ;
  wire \TRR_i_reg[8]_0 ;
  wire \TRR_i_reg[8]_1 ;
  wire \TRR_i_reg[9]_0 ;
  wire \TRR_i_reg[9]_1 ;
  wire \num_reg_reg[2] ;
  wire \num_reg_reg[2]_0 ;
  wire p_12_in469_in;
  wire p_15_in473_in;
  wire p_18_in477_in;
  wire p_21_in481_in;
  wire p_24_in485_in;
  wire p_27_in489_in;
  wire p_30_in493_in;
  wire p_33_in497_in;
  wire p_36_in;
  wire p_39_in503_in;
  wire p_3_in457_in;
  wire p_42_in;
  wire p_45_in509_in;
  wire p_48_in;
  wire p_51_in;
  wire p_54_in;
  wire p_57_in;
  wire p_60_in;
  wire p_63_in;
  wire p_66_in;
  wire p_69_in;
  wire p_6_in461_in;
  wire p_72_in;
  wire p_75_in;
  wire p_78_in;
  wire p_81_in;
  wire p_84_in;
  wire p_87_in;
  wire p_90_in;
  wire p_9_in465_in;
  wire s_axi_aclk;
  wire [31:0]s_axi_wdata;
  wire [1:0]trig_pulse_2_i_7;
  wire trigger_next_round_d1;
  wire [1:0]winning_or_locked_index_cancel_req_i_19;

  LUT6 #(
    .INIT(64'hF0000000CCCCAAAA)) 
    \FSM_sequential_tbs_cs[0]_i_10 
       (.I0(\FSM_sequential_tbs_cs_reg[0]_i_17_n_0 ),
        .I1(\FSM_sequential_tbs_cs_reg[0]_i_18_n_0 ),
        .I2(\FSM_sequential_tbs_cs[0]_i_19_n_0 ),
        .I3(\FSM_sequential_tbs_cs[0]_i_3_0 [2]),
        .I4(\FSM_sequential_tbs_cs[0]_i_3_0 [4]),
        .I5(\FSM_sequential_tbs_cs[0]_i_3_0 [3]),
        .O(\num_reg_reg[2]_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \FSM_sequential_tbs_cs[0]_i_11 
       (.I0(TRR_TBS_SIG[20]),
        .I1(TRR_TBS_SIG[21]),
        .I2(TRR_TBS_SIG[22]),
        .I3(TRR_TBS_SIG[23]),
        .O(\FSM_sequential_tbs_cs[0]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \FSM_sequential_tbs_cs[0]_i_12 
       (.I0(TRR_TBS_SIG[27]),
        .I1(TRR_TBS_SIG[26]),
        .I2(TRR_TBS_SIG[25]),
        .I3(Q),
        .I4(\FSM_sequential_tbs_cs[0]_i_20_n_0 ),
        .O(\FSM_sequential_tbs_cs[0]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \FSM_sequential_tbs_cs[0]_i_13 
       (.I0(TRR_TBS_SIG[13]),
        .I1(TRR_TBS_SIG[12]),
        .I2(TRR_TBS_SIG[11]),
        .I3(TRR_TBS_SIG[10]),
        .I4(TRR_TBS_SIG[0]),
        .I5(TRR_TBS_SIG[1]),
        .O(\FSM_sequential_tbs_cs[0]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \FSM_sequential_tbs_cs[0]_i_14 
       (.I0(TRR_TBS_SIG[9]),
        .I1(TRR_TBS_SIG[11]),
        .I2(\FSM_sequential_tbs_cs[0]_i_3_0 [0]),
        .I3(\FSM_sequential_tbs_cs[0]_i_3_0 [1]),
        .I4(TRR_TBS_SIG[8]),
        .I5(TRR_TBS_SIG[10]),
        .O(\FSM_sequential_tbs_cs[0]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \FSM_sequential_tbs_cs[0]_i_15 
       (.I0(TRR_TBS_SIG[13]),
        .I1(TRR_TBS_SIG[15]),
        .I2(\FSM_sequential_tbs_cs[0]_i_3_0 [0]),
        .I3(\FSM_sequential_tbs_cs[0]_i_3_0 [1]),
        .I4(TRR_TBS_SIG[12]),
        .I5(TRR_TBS_SIG[14]),
        .O(\FSM_sequential_tbs_cs[0]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \FSM_sequential_tbs_cs[0]_i_19 
       (.I0(TRR_TBS_SIG[29]),
        .I1(TRR_TBS_SIG[31]),
        .I2(\FSM_sequential_tbs_cs[0]_i_3_0 [0]),
        .I3(\FSM_sequential_tbs_cs[0]_i_3_0 [1]),
        .I4(TRR_TBS_SIG[28]),
        .I5(TRR_TBS_SIG[30]),
        .O(\FSM_sequential_tbs_cs[0]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h00000001FFFFFFFF)) 
    \FSM_sequential_tbs_cs[0]_i_2 
       (.I0(\FSM_sequential_tbs_cs[0]_i_4_n_0 ),
        .I1(\FSM_sequential_tbs_cs[0]_i_5_n_0 ),
        .I2(TRR_TBS_SIG[15]),
        .I3(TRR_TBS_SIG[14]),
        .I4(\FSM_sequential_tbs_cs[0]_i_6_n_0 ),
        .I5(trigger_next_round_d1),
        .O(\TRR_TBS_i_reg[15]_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \FSM_sequential_tbs_cs[0]_i_20 
       (.I0(TRR_TBS_SIG[28]),
        .I1(TRR_TBS_SIG[29]),
        .I2(TRR_TBS_SIG[31]),
        .I3(TRR_TBS_SIG[30]),
        .O(\FSM_sequential_tbs_cs[0]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \FSM_sequential_tbs_cs[0]_i_21 
       (.I0(TRR_TBS_SIG[1]),
        .I1(TRR_TBS_SIG[3]),
        .I2(\FSM_sequential_tbs_cs[0]_i_3_0 [0]),
        .I3(\FSM_sequential_tbs_cs[0]_i_3_0 [1]),
        .I4(TRR_TBS_SIG[0]),
        .I5(TRR_TBS_SIG[2]),
        .O(\FSM_sequential_tbs_cs[0]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \FSM_sequential_tbs_cs[0]_i_22 
       (.I0(TRR_TBS_SIG[5]),
        .I1(TRR_TBS_SIG[7]),
        .I2(\FSM_sequential_tbs_cs[0]_i_3_0 [0]),
        .I3(\FSM_sequential_tbs_cs[0]_i_3_0 [1]),
        .I4(TRR_TBS_SIG[4]),
        .I5(TRR_TBS_SIG[6]),
        .O(\FSM_sequential_tbs_cs[0]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \FSM_sequential_tbs_cs[0]_i_23 
       (.I0(TRR_TBS_SIG[17]),
        .I1(TRR_TBS_SIG[19]),
        .I2(\FSM_sequential_tbs_cs[0]_i_3_0 [0]),
        .I3(\FSM_sequential_tbs_cs[0]_i_3_0 [1]),
        .I4(TRR_TBS_SIG[16]),
        .I5(TRR_TBS_SIG[18]),
        .O(\FSM_sequential_tbs_cs[0]_i_23_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \FSM_sequential_tbs_cs[0]_i_24 
       (.I0(TRR_TBS_SIG[21]),
        .I1(TRR_TBS_SIG[23]),
        .I2(\FSM_sequential_tbs_cs[0]_i_3_0 [0]),
        .I3(\FSM_sequential_tbs_cs[0]_i_3_0 [1]),
        .I4(TRR_TBS_SIG[20]),
        .I5(TRR_TBS_SIG[22]),
        .O(\FSM_sequential_tbs_cs[0]_i_24_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \FSM_sequential_tbs_cs[0]_i_4 
       (.I0(TRR_TBS_SIG[6]),
        .I1(TRR_TBS_SIG[7]),
        .I2(TRR_TBS_SIG[8]),
        .I3(TRR_TBS_SIG[9]),
        .O(\FSM_sequential_tbs_cs[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \FSM_sequential_tbs_cs[0]_i_5 
       (.I0(\FSM_sequential_tbs_cs[0]_i_11_n_0 ),
        .I1(TRR_TBS_SIG[16]),
        .I2(TRR_TBS_SIG[17]),
        .I3(TRR_TBS_SIG[18]),
        .I4(TRR_TBS_SIG[19]),
        .I5(\FSM_sequential_tbs_cs[0]_i_12_n_0 ),
        .O(\FSM_sequential_tbs_cs[0]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \FSM_sequential_tbs_cs[0]_i_6 
       (.I0(\FSM_sequential_tbs_cs[0]_i_13_n_0 ),
        .I1(TRR_TBS_SIG[5]),
        .I2(TRR_TBS_SIG[4]),
        .I3(TRR_TBS_SIG[3]),
        .I4(TRR_TBS_SIG[2]),
        .O(\FSM_sequential_tbs_cs[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hF000A0A0C0C00000)) 
    \FSM_sequential_tbs_cs[0]_i_9 
       (.I0(TRR_TBS_SIG[26]),
        .I1(TRR_TBS_SIG[25]),
        .I2(\FSM_sequential_tbs_cs[0]_i_3 ),
        .I3(TRR_TBS_SIG[27]),
        .I4(\FSM_sequential_tbs_cs[0]_i_3_0 [0]),
        .I5(\FSM_sequential_tbs_cs[0]_i_3_0 [1]),
        .O(\TRR_TBS_i_reg[26]_0 ));
  MUXF7 \FSM_sequential_tbs_cs_reg[0]_i_17 
       (.I0(\FSM_sequential_tbs_cs[0]_i_21_n_0 ),
        .I1(\FSM_sequential_tbs_cs[0]_i_22_n_0 ),
        .O(\FSM_sequential_tbs_cs_reg[0]_i_17_n_0 ),
        .S(\FSM_sequential_tbs_cs[0]_i_3_0 [2]));
  MUXF7 \FSM_sequential_tbs_cs_reg[0]_i_18 
       (.I0(\FSM_sequential_tbs_cs[0]_i_23_n_0 ),
        .I1(\FSM_sequential_tbs_cs[0]_i_24_n_0 ),
        .O(\FSM_sequential_tbs_cs_reg[0]_i_18_n_0 ),
        .S(\FSM_sequential_tbs_cs[0]_i_3_0 [2]));
  MUXF7 \FSM_sequential_tbs_cs_reg[0]_i_8 
       (.I0(\FSM_sequential_tbs_cs[0]_i_14_n_0 ),
        .I1(\FSM_sequential_tbs_cs[0]_i_15_n_0 ),
        .O(\num_reg_reg[2] ),
        .S(\FSM_sequential_tbs_cs[0]_i_3_0 [2]));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    IC_REG_ISR_TXCRS_I_i_10
       (.I0(IC_REG_ISR_TXCRS_I_i_3_0[22]),
        .I1(\TCR_i_reg[22]_0 ),
        .I2(D[22]),
        .I3(IC_REG_ISR_TXCRS_I_i_3_0[21]),
        .I4(\TCR_i_reg[21]_0 ),
        .I5(D[21]),
        .O(IC_REG_ISR_TXCRS_I_i_10_n_0));
  LUT6 #(
    .INIT(64'hFEFFFEFEFEFEFEFE)) 
    IC_REG_ISR_TXCRS_I_i_11
       (.I0(IC_REG_ISR_TXCRS_I_i_16_n_0),
        .I1(IC_REG_ISR_TXCRS_I_i_17_n_0),
        .I2(IC_REG_ISR_TXCRS_I_i_18_n_0),
        .I3(D[12]),
        .I4(\TCR_i_reg[12]_0 ),
        .I5(IC_REG_ISR_TXCRS_I_i_3_0[12]),
        .O(IC_REG_ISR_TXCRS_I_i_11_n_0));
  LUT4 #(
    .INIT(16'hAAEA)) 
    IC_REG_ISR_TXCRS_I_i_12
       (.I0(IC_REG_ISR_TXCRS_I_i_19_n_0),
        .I1(IC_REG_ISR_TXCRS_I_i_3_0[7]),
        .I2(\TCR_i_reg[7]_0 ),
        .I3(D[7]),
        .O(IC_REG_ISR_TXCRS_I_i_12_n_0));
  LUT5 #(
    .INIT(32'hFFFFFF08)) 
    IC_REG_ISR_TXCRS_I_i_13
       (.I0(IC_REG_ISR_TXCRS_I_i_3_0[4]),
        .I1(\TCR_i_reg[4]_0 ),
        .I2(D[4]),
        .I3(IC_REG_ISR_TXCRS_I_i_20_n_0),
        .I4(IC_REG_ISR_TXCRS_I_i_21_n_0),
        .O(IC_REG_ISR_TXCRS_I_i_13_n_0));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    IC_REG_ISR_TXCRS_I_i_14
       (.I0(IC_REG_ISR_TXCRS_I_i_3_0[17]),
        .I1(\TCR_i_reg[17]_0 ),
        .I2(D[17]),
        .I3(IC_REG_ISR_TXCRS_I_i_3_0[16]),
        .I4(\TCR_i_reg[16]_0 ),
        .I5(D[16]),
        .O(IC_REG_ISR_TXCRS_I_i_14_n_0));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    IC_REG_ISR_TXCRS_I_i_15
       (.I0(IC_REG_ISR_TXCRS_I_i_3_0[19]),
        .I1(\TCR_i_reg[19]_0 ),
        .I2(D[19]),
        .I3(IC_REG_ISR_TXCRS_I_i_3_0[18]),
        .I4(\TCR_i_reg[18]_0 ),
        .I5(D[18]),
        .O(IC_REG_ISR_TXCRS_I_i_15_n_0));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    IC_REG_ISR_TXCRS_I_i_16
       (.I0(IC_REG_ISR_TXCRS_I_i_3_0[15]),
        .I1(\TCR_i_reg[15]_0 ),
        .I2(D[15]),
        .I3(IC_REG_ISR_TXCRS_I_i_3_0[14]),
        .I4(\TCR_i_reg[14]_0 ),
        .I5(D[14]),
        .O(IC_REG_ISR_TXCRS_I_i_16_n_0));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    IC_REG_ISR_TXCRS_I_i_17
       (.I0(IC_REG_ISR_TXCRS_I_i_3_0[11]),
        .I1(\TCR_i_reg[11]_0 ),
        .I2(D[11]),
        .I3(IC_REG_ISR_TXCRS_I_i_3_0[10]),
        .I4(\TCR_i_reg[10]_0 ),
        .I5(D[10]),
        .O(IC_REG_ISR_TXCRS_I_i_17_n_0));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    IC_REG_ISR_TXCRS_I_i_18
       (.I0(IC_REG_ISR_TXCRS_I_i_3_0[9]),
        .I1(\TCR_i_reg[9]_0 ),
        .I2(D[9]),
        .I3(IC_REG_ISR_TXCRS_I_i_3_0[8]),
        .I4(\TCR_i_reg[8]_0 ),
        .I5(D[8]),
        .O(IC_REG_ISR_TXCRS_I_i_18_n_0));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    IC_REG_ISR_TXCRS_I_i_19
       (.I0(IC_REG_ISR_TXCRS_I_i_3_0[6]),
        .I1(\TCR_i_reg[6]_0 ),
        .I2(D[6]),
        .I3(IC_REG_ISR_TXCRS_I_i_3_0[5]),
        .I4(\TCR_i_reg[5]_0 ),
        .I5(D[5]),
        .O(IC_REG_ISR_TXCRS_I_i_19_n_0));
  LUT3 #(
    .INIT(8'hFE)) 
    IC_REG_ISR_TXCRS_I_i_2
       (.I0(IC_REG_ISR_TXCRS_I_i_5_n_0),
        .I1(IC_REG_ISR_TXCRS_I_i_6_n_0),
        .I2(IC_REG_ISR_TXCRS_I_i_7_n_0),
        .O(\IC_REG_IECRS_I_reg[3] ));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    IC_REG_ISR_TXCRS_I_i_20
       (.I0(IC_REG_ISR_TXCRS_I_i_3_0[1]),
        .I1(\TCR_i_reg[1]_0 ),
        .I2(D[1]),
        .I3(IC_REG_ISR_TXCRS_I_i_3_0[0]),
        .I4(\TCR_i_reg[0]_0 ),
        .I5(D[0]),
        .O(IC_REG_ISR_TXCRS_I_i_20_n_0));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    IC_REG_ISR_TXCRS_I_i_21
       (.I0(IC_REG_ISR_TXCRS_I_i_3_0[3]),
        .I1(\TCR_i_reg[3]_0 ),
        .I2(D[3]),
        .I3(IC_REG_ISR_TXCRS_I_i_3_0[2]),
        .I4(\TCR_i_reg[2]_0 ),
        .I5(D[2]),
        .O(IC_REG_ISR_TXCRS_I_i_21_n_0));
  LUT6 #(
    .INIT(64'hFEFEFEFEFFFEFEFE)) 
    IC_REG_ISR_TXCRS_I_i_3
       (.I0(IC_REG_ISR_TXCRS_I_i_8_n_0),
        .I1(IC_REG_ISR_TXCRS_I_i_9_n_0),
        .I2(IC_REG_ISR_TXCRS_I_i_10_n_0),
        .I3(IC_REG_ISR_TXCRS_I_i_3_0[23]),
        .I4(\TCR_i_reg[23]_0 ),
        .I5(D[23]),
        .O(\IC_REG_IECRS_I_reg[8] ));
  LUT6 #(
    .INIT(64'hFEFFFEFEFEFEFEFE)) 
    IC_REG_ISR_TXCRS_I_i_4
       (.I0(IC_REG_ISR_TXCRS_I_i_11_n_0),
        .I1(IC_REG_ISR_TXCRS_I_i_12_n_0),
        .I2(IC_REG_ISR_TXCRS_I_i_13_n_0),
        .I3(D[13]),
        .I4(\TCR_i_reg[13]_0 ),
        .I5(IC_REG_ISR_TXCRS_I_i_3_0[13]),
        .O(\TRR_i_reg[13]_1 ));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    IC_REG_ISR_TXCRS_I_i_5
       (.I0(IC_REG_ISR_TXCRS_I_i_3_0[28]),
        .I1(\TCR_i_reg[28]_0 ),
        .I2(D[28]),
        .I3(IC_REG_ISR_TXCRS_I_i_3_0[29]),
        .I4(\TCR_i_reg[29]_0 ),
        .I5(D[29]),
        .O(IC_REG_ISR_TXCRS_I_i_5_n_0));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    IC_REG_ISR_TXCRS_I_i_6
       (.I0(IC_REG_ISR_TXCRS_I_i_3_0[25]),
        .I1(\TCR_i_reg[25]_0 ),
        .I2(D[25]),
        .I3(IC_REG_ISR_TXCRS_I_i_3_0[24]),
        .I4(\TCR_i_reg[24]_0 ),
        .I5(D[24]),
        .O(IC_REG_ISR_TXCRS_I_i_6_n_0));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    IC_REG_ISR_TXCRS_I_i_7
       (.I0(IC_REG_ISR_TXCRS_I_i_3_0[27]),
        .I1(\TCR_i_reg[27]_0 ),
        .I2(D[27]),
        .I3(IC_REG_ISR_TXCRS_I_i_3_0[26]),
        .I4(\TCR_i_reg[26]_0 ),
        .I5(D[26]),
        .O(IC_REG_ISR_TXCRS_I_i_7_n_0));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    IC_REG_ISR_TXCRS_I_i_8
       (.I0(IC_REG_ISR_TXCRS_I_i_3_0[30]),
        .I1(\TCR_i_reg[30]_0 ),
        .I2(D[30]),
        .I3(IC_REG_ISR_TXCRS_I_i_3_0[31]),
        .I4(\TCR_i_reg[31]_0 ),
        .I5(D[31]),
        .O(IC_REG_ISR_TXCRS_I_i_8_n_0));
  LUT5 #(
    .INIT(32'hFFFFFF08)) 
    IC_REG_ISR_TXCRS_I_i_9
       (.I0(IC_REG_ISR_TXCRS_I_i_3_0[20]),
        .I1(\TCR_i_reg[20]_0 ),
        .I2(D[20]),
        .I3(IC_REG_ISR_TXCRS_I_i_14_n_0),
        .I4(IC_REG_ISR_TXCRS_I_i_15_n_0),
        .O(IC_REG_ISR_TXCRS_I_i_9_n_0));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    IC_REG_ISR_TXTRS_I_i_10
       (.I0(p_66_in),
        .I1(IC_REG_ISR_TXTRS_I_i_3_0[22]),
        .I2(D[22]),
        .I3(p_63_in),
        .I4(IC_REG_ISR_TXTRS_I_i_3_0[21]),
        .I5(D[21]),
        .O(IC_REG_ISR_TXTRS_I_i_10_n_0));
  LUT6 #(
    .INIT(64'hFEFFFEFEFEFEFEFE)) 
    IC_REG_ISR_TXTRS_I_i_11
       (.I0(IC_REG_ISR_TXTRS_I_i_16_n_0),
        .I1(IC_REG_ISR_TXTRS_I_i_17_n_0),
        .I2(IC_REG_ISR_TXTRS_I_i_18_n_0),
        .I3(D[12]),
        .I4(IC_REG_ISR_TXTRS_I_i_3_0[12]),
        .I5(p_36_in),
        .O(IC_REG_ISR_TXTRS_I_i_11_n_0));
  LUT4 #(
    .INIT(16'hAAEA)) 
    IC_REG_ISR_TXTRS_I_i_12
       (.I0(IC_REG_ISR_TXTRS_I_i_19_n_0),
        .I1(p_21_in481_in),
        .I2(IC_REG_ISR_TXTRS_I_i_3_0[7]),
        .I3(D[7]),
        .O(IC_REG_ISR_TXTRS_I_i_12_n_0));
  LUT5 #(
    .INIT(32'hFFFFFF08)) 
    IC_REG_ISR_TXTRS_I_i_13
       (.I0(p_12_in469_in),
        .I1(IC_REG_ISR_TXTRS_I_i_3_0[4]),
        .I2(D[4]),
        .I3(IC_REG_ISR_TXTRS_I_i_20_n_0),
        .I4(IC_REG_ISR_TXTRS_I_i_21_n_0),
        .O(IC_REG_ISR_TXTRS_I_i_13_n_0));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    IC_REG_ISR_TXTRS_I_i_14
       (.I0(p_51_in),
        .I1(IC_REG_ISR_TXTRS_I_i_3_0[17]),
        .I2(D[17]),
        .I3(p_48_in),
        .I4(IC_REG_ISR_TXTRS_I_i_3_0[16]),
        .I5(D[16]),
        .O(IC_REG_ISR_TXTRS_I_i_14_n_0));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    IC_REG_ISR_TXTRS_I_i_15
       (.I0(p_57_in),
        .I1(IC_REG_ISR_TXTRS_I_i_3_0[19]),
        .I2(D[19]),
        .I3(p_54_in),
        .I4(IC_REG_ISR_TXTRS_I_i_3_0[18]),
        .I5(D[18]),
        .O(IC_REG_ISR_TXTRS_I_i_15_n_0));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    IC_REG_ISR_TXTRS_I_i_16
       (.I0(p_45_in509_in),
        .I1(IC_REG_ISR_TXTRS_I_i_3_0[15]),
        .I2(D[15]),
        .I3(p_42_in),
        .I4(IC_REG_ISR_TXTRS_I_i_3_0[14]),
        .I5(D[14]),
        .O(IC_REG_ISR_TXTRS_I_i_16_n_0));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    IC_REG_ISR_TXTRS_I_i_17
       (.I0(p_33_in497_in),
        .I1(IC_REG_ISR_TXTRS_I_i_3_0[11]),
        .I2(D[11]),
        .I3(p_30_in493_in),
        .I4(IC_REG_ISR_TXTRS_I_i_3_0[10]),
        .I5(D[10]),
        .O(IC_REG_ISR_TXTRS_I_i_17_n_0));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    IC_REG_ISR_TXTRS_I_i_18
       (.I0(p_27_in489_in),
        .I1(IC_REG_ISR_TXTRS_I_i_3_0[9]),
        .I2(D[9]),
        .I3(p_24_in485_in),
        .I4(IC_REG_ISR_TXTRS_I_i_3_0[8]),
        .I5(D[8]),
        .O(IC_REG_ISR_TXTRS_I_i_18_n_0));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    IC_REG_ISR_TXTRS_I_i_19
       (.I0(p_18_in477_in),
        .I1(IC_REG_ISR_TXTRS_I_i_3_0[6]),
        .I2(D[6]),
        .I3(p_15_in473_in),
        .I4(IC_REG_ISR_TXTRS_I_i_3_0[5]),
        .I5(D[5]),
        .O(IC_REG_ISR_TXTRS_I_i_19_n_0));
  LUT3 #(
    .INIT(8'hFE)) 
    IC_REG_ISR_TXTRS_I_i_2
       (.I0(IC_REG_ISR_TXTRS_I_i_5_n_0),
        .I1(IC_REG_ISR_TXTRS_I_i_6_n_0),
        .I2(IC_REG_ISR_TXTRS_I_i_7_n_0),
        .O(\TRR_i_D1_reg[28]_0 ));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    IC_REG_ISR_TXTRS_I_i_20
       (.I0(p_3_in457_in),
        .I1(IC_REG_ISR_TXTRS_I_i_3_0[1]),
        .I2(D[1]),
        .I3(\TRR_i_D1_reg_n_0_[0] ),
        .I4(IC_REG_ISR_TXTRS_I_i_3_0[0]),
        .I5(D[0]),
        .O(IC_REG_ISR_TXTRS_I_i_20_n_0));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    IC_REG_ISR_TXTRS_I_i_21
       (.I0(p_9_in465_in),
        .I1(IC_REG_ISR_TXTRS_I_i_3_0[3]),
        .I2(D[3]),
        .I3(p_6_in461_in),
        .I4(IC_REG_ISR_TXTRS_I_i_3_0[2]),
        .I5(D[2]),
        .O(IC_REG_ISR_TXTRS_I_i_21_n_0));
  LUT6 #(
    .INIT(64'hFEFEFEFEFFFEFEFE)) 
    IC_REG_ISR_TXTRS_I_i_3
       (.I0(IC_REG_ISR_TXTRS_I_i_8_n_0),
        .I1(IC_REG_ISR_TXTRS_I_i_9_n_0),
        .I2(IC_REG_ISR_TXTRS_I_i_10_n_0),
        .I3(p_69_in),
        .I4(IC_REG_ISR_TXTRS_I_i_3_0[23]),
        .I5(D[23]),
        .O(\TRR_i_D1_reg[23]_0 ));
  LUT6 #(
    .INIT(64'hFEFFFEFEFEFEFEFE)) 
    IC_REG_ISR_TXTRS_I_i_4
       (.I0(IC_REG_ISR_TXTRS_I_i_11_n_0),
        .I1(IC_REG_ISR_TXTRS_I_i_12_n_0),
        .I2(IC_REG_ISR_TXTRS_I_i_13_n_0),
        .I3(D[13]),
        .I4(IC_REG_ISR_TXTRS_I_i_3_0[13]),
        .I5(p_39_in503_in),
        .O(\TRR_i_reg[13]_0 ));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    IC_REG_ISR_TXTRS_I_i_5
       (.I0(p_84_in),
        .I1(IC_REG_ISR_TXTRS_I_i_3_0[28]),
        .I2(D[28]),
        .I3(p_87_in),
        .I4(IC_REG_ISR_TXTRS_I_i_3_0[29]),
        .I5(D[29]),
        .O(IC_REG_ISR_TXTRS_I_i_5_n_0));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    IC_REG_ISR_TXTRS_I_i_6
       (.I0(p_75_in),
        .I1(IC_REG_ISR_TXTRS_I_i_3_0[25]),
        .I2(D[25]),
        .I3(p_72_in),
        .I4(IC_REG_ISR_TXTRS_I_i_3_0[24]),
        .I5(D[24]),
        .O(IC_REG_ISR_TXTRS_I_i_6_n_0));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    IC_REG_ISR_TXTRS_I_i_7
       (.I0(p_81_in),
        .I1(IC_REG_ISR_TXTRS_I_i_3_0[27]),
        .I2(D[27]),
        .I3(p_78_in),
        .I4(IC_REG_ISR_TXTRS_I_i_3_0[26]),
        .I5(D[26]),
        .O(IC_REG_ISR_TXTRS_I_i_7_n_0));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    IC_REG_ISR_TXTRS_I_i_8
       (.I0(p_90_in),
        .I1(IC_REG_ISR_TXTRS_I_i_3_0[30]),
        .I2(D[30]),
        .I3(\TRR_i_D1_reg_n_0_[31] ),
        .I4(IC_REG_ISR_TXTRS_I_i_3_0[31]),
        .I5(D[31]),
        .O(IC_REG_ISR_TXTRS_I_i_8_n_0));
  LUT5 #(
    .INIT(32'hFFFFFF08)) 
    IC_REG_ISR_TXTRS_I_i_9
       (.I0(p_60_in),
        .I1(IC_REG_ISR_TXTRS_I_i_3_0[20]),
        .I2(D[20]),
        .I3(IC_REG_ISR_TXTRS_I_i_14_n_0),
        .I4(IC_REG_ISR_TXTRS_I_i_15_n_0),
        .O(IC_REG_ISR_TXTRS_I_i_9_n_0));
  FDRE TBS_RUNNING_D1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(TBS_RUNNING_D1_reg_0),
        .Q(TBS_RUNNING_D1),
        .R(\TRR_i_D1_reg[0]_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[0]_i_1 
       (.I0(s_axi_wdata[0]),
        .I1(D[0]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[0]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[10]_i_1 
       (.I0(s_axi_wdata[10]),
        .I1(D[10]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[10]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[10]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[11]_i_1 
       (.I0(s_axi_wdata[11]),
        .I1(D[11]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[11]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[11]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[12]_i_1 
       (.I0(s_axi_wdata[12]),
        .I1(D[12]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[12]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[12]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[13]_i_1 
       (.I0(s_axi_wdata[13]),
        .I1(D[13]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[13]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[13]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000EC00)) 
    \TCR_i[14]_i_1 
       (.I0(s_axi_wdata[14]),
        .I1(\TCR_i_reg[14]_0 ),
        .I2(\TCR_i_reg[0]_1 ),
        .I3(D[14]),
        .I4(\TRR_i_D1_reg[0]_0 ),
        .O(\TCR_i[14]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[15]_i_1 
       (.I0(s_axi_wdata[15]),
        .I1(D[15]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[15]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000EC00)) 
    \TCR_i[16]_i_1 
       (.I0(s_axi_wdata[16]),
        .I1(\TCR_i_reg[16]_0 ),
        .I2(\TCR_i_reg[0]_1 ),
        .I3(D[16]),
        .I4(\TRR_i_D1_reg[0]_0 ),
        .O(\TCR_i[16]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[17]_i_1 
       (.I0(s_axi_wdata[17]),
        .I1(D[17]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[17]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[17]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[18]_i_1 
       (.I0(s_axi_wdata[18]),
        .I1(D[18]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[18]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[18]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[19]_i_1 
       (.I0(s_axi_wdata[19]),
        .I1(D[19]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[19]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[19]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[1]_i_1 
       (.I0(s_axi_wdata[1]),
        .I1(D[1]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[1]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[20]_i_1 
       (.I0(s_axi_wdata[20]),
        .I1(D[20]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[20]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[20]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[21]_i_1 
       (.I0(s_axi_wdata[21]),
        .I1(D[21]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[21]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[21]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[22]_i_1 
       (.I0(s_axi_wdata[22]),
        .I1(D[22]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[22]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[22]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[23]_i_1 
       (.I0(s_axi_wdata[23]),
        .I1(D[23]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[23]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[23]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[24]_i_1 
       (.I0(s_axi_wdata[24]),
        .I1(D[24]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[24]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[24]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[25]_i_1 
       (.I0(s_axi_wdata[25]),
        .I1(D[25]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[25]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[25]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[26]_i_1 
       (.I0(s_axi_wdata[26]),
        .I1(D[26]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[26]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[26]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[27]_i_1 
       (.I0(s_axi_wdata[27]),
        .I1(D[27]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[27]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[27]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[28]_i_1 
       (.I0(s_axi_wdata[28]),
        .I1(D[28]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[28]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[28]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[29]_i_1 
       (.I0(s_axi_wdata[29]),
        .I1(D[29]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[29]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[29]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[2]_i_1 
       (.I0(s_axi_wdata[2]),
        .I1(D[2]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[2]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[30]_i_1 
       (.I0(s_axi_wdata[30]),
        .I1(D[30]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[30]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[30]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[31]_i_1 
       (.I0(s_axi_wdata[31]),
        .I1(D[31]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[31]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[3]_i_1 
       (.I0(s_axi_wdata[3]),
        .I1(D[3]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[3]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[4]_i_1 
       (.I0(s_axi_wdata[4]),
        .I1(D[4]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[4]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[5]_i_1 
       (.I0(s_axi_wdata[5]),
        .I1(D[5]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[5]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[6]_i_1 
       (.I0(s_axi_wdata[6]),
        .I1(D[6]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[6]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[7]_i_1 
       (.I0(s_axi_wdata[7]),
        .I1(D[7]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[7]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[8]_i_1 
       (.I0(s_axi_wdata[8]),
        .I1(D[8]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[8]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[8]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C080C00)) 
    \TCR_i[9]_i_1 
       (.I0(s_axi_wdata[9]),
        .I1(D[9]),
        .I2(\TRR_i_D1_reg[0]_0 ),
        .I3(\TCR_i_reg[9]_0 ),
        .I4(\TCR_i_reg[0]_1 ),
        .O(\TCR_i[9]_i_1_n_0 ));
  FDRE \TCR_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[0]_i_1_n_0 ),
        .Q(\TCR_i_reg[0]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[10]_i_1_n_0 ),
        .Q(\TCR_i_reg[10]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[11]_i_1_n_0 ),
        .Q(\TCR_i_reg[11]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[12]_i_1_n_0 ),
        .Q(\TCR_i_reg[12]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[13]_i_1_n_0 ),
        .Q(\TCR_i_reg[13]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[14]_i_1_n_0 ),
        .Q(\TCR_i_reg[14]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[15]_i_1_n_0 ),
        .Q(\TCR_i_reg[15]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[16]_i_1_n_0 ),
        .Q(\TCR_i_reg[16]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[17]_i_1_n_0 ),
        .Q(\TCR_i_reg[17]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[18] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[18]_i_1_n_0 ),
        .Q(\TCR_i_reg[18]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[19] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[19]_i_1_n_0 ),
        .Q(\TCR_i_reg[19]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[1]_i_1_n_0 ),
        .Q(\TCR_i_reg[1]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[20] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[20]_i_1_n_0 ),
        .Q(\TCR_i_reg[20]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[21] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[21]_i_1_n_0 ),
        .Q(\TCR_i_reg[21]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[22] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[22]_i_1_n_0 ),
        .Q(\TCR_i_reg[22]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[23] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[23]_i_1_n_0 ),
        .Q(\TCR_i_reg[23]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[24] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[24]_i_1_n_0 ),
        .Q(\TCR_i_reg[24]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[25] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[25]_i_1_n_0 ),
        .Q(\TCR_i_reg[25]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[26] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[26]_i_1_n_0 ),
        .Q(\TCR_i_reg[26]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[27] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[27]_i_1_n_0 ),
        .Q(\TCR_i_reg[27]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[28] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[28]_i_1_n_0 ),
        .Q(\TCR_i_reg[28]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[29] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[29]_i_1_n_0 ),
        .Q(\TCR_i_reg[29]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[2]_i_1_n_0 ),
        .Q(\TCR_i_reg[2]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[30] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[30]_i_1_n_0 ),
        .Q(\TCR_i_reg[30]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[31] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[31]_i_1_n_0 ),
        .Q(\TCR_i_reg[31]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[3]_i_1_n_0 ),
        .Q(\TCR_i_reg[3]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[4]_i_1_n_0 ),
        .Q(\TCR_i_reg[4]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[5]_i_1_n_0 ),
        .Q(\TCR_i_reg[5]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[6]_i_1_n_0 ),
        .Q(\TCR_i_reg[6]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[7]_i_1_n_0 ),
        .Q(\TCR_i_reg[7]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[8]_i_1_n_0 ),
        .Q(\TCR_i_reg[8]_0 ),
        .R(1'b0));
  FDRE \TCR_i_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCR_i[9]_i_1_n_0 ),
        .Q(\TCR_i_reg[9]_0 ),
        .R(1'b0));
  FDRE TRR_REG_WRITE_PULSE_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(TRR_REG_WRITE_PULSE0),
        .Q(TRR_REG_WRITE_PULSE),
        .R(\TRR_i_D1_reg[0]_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \TRR_TBS_i[31]_i_1 
       (.I0(TBS_RUNNING_D1),
        .I1(TBS_RUNNING_D1_reg_0),
        .O(\TRR_TBS_i[31]_i_1_n_0 ));
  FDRE \TRR_TBS_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [0]),
        .Q(TRR_TBS_SIG[0]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[10] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [10]),
        .Q(TRR_TBS_SIG[10]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[11] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [11]),
        .Q(TRR_TBS_SIG[11]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[12] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [12]),
        .Q(TRR_TBS_SIG[12]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[13] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [13]),
        .Q(TRR_TBS_SIG[13]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[14] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [14]),
        .Q(TRR_TBS_SIG[14]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[15] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [15]),
        .Q(TRR_TBS_SIG[15]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[16] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [16]),
        .Q(TRR_TBS_SIG[16]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[17] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [17]),
        .Q(TRR_TBS_SIG[17]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[18] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [18]),
        .Q(TRR_TBS_SIG[18]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[19] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [19]),
        .Q(TRR_TBS_SIG[19]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [1]),
        .Q(TRR_TBS_SIG[1]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[20] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [20]),
        .Q(TRR_TBS_SIG[20]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[21] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [21]),
        .Q(TRR_TBS_SIG[21]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[22] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [22]),
        .Q(TRR_TBS_SIG[22]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[23] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [23]),
        .Q(TRR_TBS_SIG[23]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[24] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [24]),
        .Q(Q),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[25] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [25]),
        .Q(TRR_TBS_SIG[25]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[26] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [26]),
        .Q(TRR_TBS_SIG[26]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[27] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [27]),
        .Q(TRR_TBS_SIG[27]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[28] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [28]),
        .Q(TRR_TBS_SIG[28]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[29] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [29]),
        .Q(TRR_TBS_SIG[29]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [2]),
        .Q(TRR_TBS_SIG[2]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[30] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [30]),
        .Q(TRR_TBS_SIG[30]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[31] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [31]),
        .Q(TRR_TBS_SIG[31]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [3]),
        .Q(TRR_TBS_SIG[3]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [4]),
        .Q(TRR_TBS_SIG[4]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [5]),
        .Q(TRR_TBS_SIG[5]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [6]),
        .Q(TRR_TBS_SIG[6]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [7]),
        .Q(TRR_TBS_SIG[7]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[8] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [8]),
        .Q(TRR_TBS_SIG[8]),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_TBS_i_reg[9] 
       (.C(s_axi_aclk),
        .CE(\TRR_TBS_i[31]_i_1_n_0 ),
        .D(\TRR_TBS_i_reg[31]_0 [9]),
        .Q(TRR_TBS_SIG[9]),
        .R(\TRR_i_D1_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[0]_i_1 
       (.I0(s_axi_wdata[0]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[0]_1 ),
        .I3(\TRR_i_reg[0]_2 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[0]),
        .O(\TRR_i[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[10]_i_1 
       (.I0(s_axi_wdata[10]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[10]_0 ),
        .I3(\TRR_i_reg[10]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[10]),
        .O(\TRR_i[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[11]_i_1 
       (.I0(s_axi_wdata[11]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[11]_0 ),
        .I3(\TRR_i_reg[11]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[11]),
        .O(\TRR_i[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[12]_i_1 
       (.I0(s_axi_wdata[12]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[12]_0 ),
        .I3(\TRR_i_reg[12]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[12]),
        .O(\TRR_i[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[13]_i_1 
       (.I0(s_axi_wdata[13]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[13]_2 ),
        .I3(\TRR_i_reg[13]_3 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[13]),
        .O(\TRR_i[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[14]_i_1 
       (.I0(s_axi_wdata[14]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[14]_0 ),
        .I3(\TRR_i_reg[14]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[14]),
        .O(\TRR_i[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[15]_i_1 
       (.I0(s_axi_wdata[15]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[15]_0 ),
        .I3(\TRR_i_reg[15]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[15]),
        .O(\TRR_i[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[16]_i_1 
       (.I0(s_axi_wdata[16]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[16]_0 ),
        .I3(\TRR_i_reg[16]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[16]),
        .O(\TRR_i[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[17]_i_1 
       (.I0(s_axi_wdata[17]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[17]_0 ),
        .I3(\TRR_i_reg[17]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[17]),
        .O(\TRR_i[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[18]_i_1 
       (.I0(s_axi_wdata[18]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[18]_0 ),
        .I3(\TRR_i_reg[18]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[18]),
        .O(\TRR_i[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[19]_i_1 
       (.I0(s_axi_wdata[19]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[19]_0 ),
        .I3(\TRR_i_reg[19]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[19]),
        .O(\TRR_i[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[1]_i_1 
       (.I0(s_axi_wdata[1]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[1]_0 ),
        .I3(\TRR_i_reg[1]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[1]),
        .O(\TRR_i[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[20]_i_1 
       (.I0(s_axi_wdata[20]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[20]_0 ),
        .I3(\TRR_i_reg[20]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[20]),
        .O(\TRR_i[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[21]_i_1 
       (.I0(s_axi_wdata[21]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[21]_0 ),
        .I3(\TRR_i_reg[21]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[21]),
        .O(\TRR_i[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[22]_i_1 
       (.I0(s_axi_wdata[22]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[22]_0 ),
        .I3(\TRR_i_reg[22]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[22]),
        .O(\TRR_i[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[23]_i_1 
       (.I0(s_axi_wdata[23]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[23]_0 ),
        .I3(\TRR_i_reg[23]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[23]),
        .O(\TRR_i[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[24]_i_1 
       (.I0(s_axi_wdata[24]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[24]_0 ),
        .I3(\TRR_i_reg[24]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[24]),
        .O(\TRR_i[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[25]_i_1 
       (.I0(s_axi_wdata[25]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[25]_0 ),
        .I3(\TRR_i_reg[25]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[25]),
        .O(\TRR_i[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[26]_i_1 
       (.I0(s_axi_wdata[26]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[26]_0 ),
        .I3(\TRR_i_reg[26]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[26]),
        .O(\TRR_i[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[27]_i_1 
       (.I0(s_axi_wdata[27]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[27]_0 ),
        .I3(\TRR_i_reg[27]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[27]),
        .O(\TRR_i[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[28]_i_1 
       (.I0(s_axi_wdata[28]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[28]_0 ),
        .I3(\TRR_i_reg[28]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[28]),
        .O(\TRR_i[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[29]_i_1 
       (.I0(s_axi_wdata[29]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[29]_0 ),
        .I3(\TRR_i_reg[29]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[29]),
        .O(\TRR_i[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[2]_i_1 
       (.I0(s_axi_wdata[2]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[2]_0 ),
        .I3(\TRR_i_reg[2]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[2]),
        .O(\TRR_i[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[30]_i_1 
       (.I0(s_axi_wdata[30]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[30]_0 ),
        .I3(\TRR_i_reg[30]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[30]),
        .O(\TRR_i[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[31]_i_1 
       (.I0(s_axi_wdata[31]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[31]_0 ),
        .I3(\TRR_i_reg[31]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[31]),
        .O(\TRR_i[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[3]_i_1 
       (.I0(s_axi_wdata[3]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[3]_0 ),
        .I3(\TRR_i_reg[3]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[3]),
        .O(\TRR_i[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[4]_i_1 
       (.I0(s_axi_wdata[4]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[4]_0 ),
        .I3(\TRR_i_reg[4]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[4]),
        .O(\TRR_i[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[5]_i_1 
       (.I0(s_axi_wdata[5]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[5]_0 ),
        .I3(\TRR_i_reg[5]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[5]),
        .O(\TRR_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[6]_i_1 
       (.I0(s_axi_wdata[6]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[6]_0 ),
        .I3(\TRR_i_reg[6]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[6]),
        .O(\TRR_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[7]_i_1 
       (.I0(s_axi_wdata[7]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[7]_0 ),
        .I3(\TRR_i_reg[7]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[7]),
        .O(\TRR_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[8]_i_1 
       (.I0(s_axi_wdata[8]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[8]_0 ),
        .I3(\TRR_i_reg[8]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[8]),
        .O(\TRR_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000F000F22220000)) 
    \TRR_i[9]_i_1 
       (.I0(s_axi_wdata[9]),
        .I1(\TRR_i_reg[0]_0 ),
        .I2(\TRR_i_reg[9]_0 ),
        .I3(\TRR_i_reg[9]_1 ),
        .I4(TRR_REG_WRITE_PULSE0),
        .I5(D[9]),
        .O(\TRR_i[9]_i_1_n_0 ));
  FDRE \TRR_i_D1_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\TRR_i_D1_reg_n_0_[0] ),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[10]),
        .Q(p_30_in493_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[11]),
        .Q(p_33_in497_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[12]),
        .Q(p_36_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[13]),
        .Q(p_39_in503_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[14]),
        .Q(p_42_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[15]),
        .Q(p_45_in509_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[16]),
        .Q(p_48_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[17]),
        .Q(p_51_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[18] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[18]),
        .Q(p_54_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[19] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[19]),
        .Q(p_57_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[1]),
        .Q(p_3_in457_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[20] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[20]),
        .Q(p_60_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[21] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[21]),
        .Q(p_63_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[22] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[22]),
        .Q(p_66_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[23] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[23]),
        .Q(p_69_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[24] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[24]),
        .Q(p_72_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[25] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[25]),
        .Q(p_75_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[26] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[26]),
        .Q(p_78_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[27] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[27]),
        .Q(p_81_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[28] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[28]),
        .Q(p_84_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[29] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[29]),
        .Q(p_87_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[2]),
        .Q(p_6_in461_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[30] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[30]),
        .Q(p_90_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[31] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[31]),
        .Q(\TRR_i_D1_reg_n_0_[31] ),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[3]),
        .Q(p_9_in465_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[4]),
        .Q(p_12_in469_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[5]),
        .Q(p_15_in473_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[6]),
        .Q(p_18_in477_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[7]),
        .Q(p_21_in481_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[8]),
        .Q(p_24_in485_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_D1_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D[9]),
        .Q(p_27_in489_in),
        .R(\TRR_i_D1_reg[0]_0 ));
  FDRE \TRR_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[0]_i_1_n_0 ),
        .Q(D[0]),
        .R(1'b0));
  FDRE \TRR_i_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[10]_i_1_n_0 ),
        .Q(D[10]),
        .R(1'b0));
  FDRE \TRR_i_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[11]_i_1_n_0 ),
        .Q(D[11]),
        .R(1'b0));
  FDRE \TRR_i_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[12]_i_1_n_0 ),
        .Q(D[12]),
        .R(1'b0));
  FDRE \TRR_i_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[13]_i_1_n_0 ),
        .Q(D[13]),
        .R(1'b0));
  FDRE \TRR_i_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[14]_i_1_n_0 ),
        .Q(D[14]),
        .R(1'b0));
  FDRE \TRR_i_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[15]_i_1_n_0 ),
        .Q(D[15]),
        .R(1'b0));
  FDRE \TRR_i_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[16]_i_1_n_0 ),
        .Q(D[16]),
        .R(1'b0));
  FDRE \TRR_i_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[17]_i_1_n_0 ),
        .Q(D[17]),
        .R(1'b0));
  FDRE \TRR_i_reg[18] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[18]_i_1_n_0 ),
        .Q(D[18]),
        .R(1'b0));
  FDRE \TRR_i_reg[19] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[19]_i_1_n_0 ),
        .Q(D[19]),
        .R(1'b0));
  FDRE \TRR_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[1]_i_1_n_0 ),
        .Q(D[1]),
        .R(1'b0));
  FDRE \TRR_i_reg[20] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[20]_i_1_n_0 ),
        .Q(D[20]),
        .R(1'b0));
  FDRE \TRR_i_reg[21] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[21]_i_1_n_0 ),
        .Q(D[21]),
        .R(1'b0));
  FDRE \TRR_i_reg[22] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[22]_i_1_n_0 ),
        .Q(D[22]),
        .R(1'b0));
  FDRE \TRR_i_reg[23] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[23]_i_1_n_0 ),
        .Q(D[23]),
        .R(1'b0));
  FDRE \TRR_i_reg[24] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[24]_i_1_n_0 ),
        .Q(D[24]),
        .R(1'b0));
  FDRE \TRR_i_reg[25] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[25]_i_1_n_0 ),
        .Q(D[25]),
        .R(1'b0));
  FDRE \TRR_i_reg[26] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[26]_i_1_n_0 ),
        .Q(D[26]),
        .R(1'b0));
  FDRE \TRR_i_reg[27] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[27]_i_1_n_0 ),
        .Q(D[27]),
        .R(1'b0));
  FDRE \TRR_i_reg[28] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[28]_i_1_n_0 ),
        .Q(D[28]),
        .R(1'b0));
  FDRE \TRR_i_reg[29] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[29]_i_1_n_0 ),
        .Q(D[29]),
        .R(1'b0));
  FDRE \TRR_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[2]_i_1_n_0 ),
        .Q(D[2]),
        .R(1'b0));
  FDRE \TRR_i_reg[30] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[30]_i_1_n_0 ),
        .Q(D[30]),
        .R(1'b0));
  FDRE \TRR_i_reg[31] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[31]_i_1_n_0 ),
        .Q(D[31]),
        .R(1'b0));
  FDRE \TRR_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[3]_i_1_n_0 ),
        .Q(D[3]),
        .R(1'b0));
  FDRE \TRR_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[4]_i_1_n_0 ),
        .Q(D[4]),
        .R(1'b0));
  FDRE \TRR_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[5]_i_1_n_0 ),
        .Q(D[5]),
        .R(1'b0));
  FDRE \TRR_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[6]_i_1_n_0 ),
        .Q(D[6]),
        .R(1'b0));
  FDRE \TRR_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[7]_i_1_n_0 ),
        .Q(D[7]),
        .R(1'b0));
  FDRE \TRR_i_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[8]_i_1_n_0 ),
        .Q(D[8]),
        .R(1'b0));
  FDRE \TRR_i_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TRR_i[9]_i_1_n_0 ),
        .Q(D[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    trig_pulse_2_i_10
       (.I0(\TCR_i_reg[5]_0 ),
        .I1(\TCR_i_reg[7]_0 ),
        .I2(trig_pulse_2_i_7[0]),
        .I3(trig_pulse_2_i_7[1]),
        .I4(\TCR_i_reg[4]_0 ),
        .I5(\TCR_i_reg[6]_0 ),
        .O(\TCR_i_reg[5]_1 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    winning_or_locked_index_cancel_req_i_17
       (.I0(\TCR_i_reg[21]_0 ),
        .I1(\TCR_i_reg[23]_0 ),
        .I2(trig_pulse_2_i_7[0]),
        .I3(trig_pulse_2_i_7[1]),
        .I4(\TCR_i_reg[20]_0 ),
        .I5(\TCR_i_reg[22]_0 ),
        .O(\TCR_i_reg[21]_1 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    winning_or_locked_index_cancel_req_i_27
       (.I0(\TCR_i_reg[5]_0 ),
        .I1(\TCR_i_reg[7]_0 ),
        .I2(winning_or_locked_index_cancel_req_i_19[0]),
        .I3(winning_or_locked_index_cancel_req_i_19[1]),
        .I4(\TCR_i_reg[4]_0 ),
        .I5(\TCR_i_reg[6]_0 ),
        .O(\TCR_i_reg[5]_2 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    winning_or_locked_index_cancel_req_i_30
       (.I0(\TCR_i_reg[21]_0 ),
        .I1(\TCR_i_reg[23]_0 ),
        .I2(winning_or_locked_index_cancel_req_i_19[0]),
        .I3(winning_or_locked_index_cancel_req_i_19[1]),
        .I4(\TCR_i_reg[20]_0 ),
        .I5(\TCR_i_reg[22]_0 ),
        .O(\TCR_i_reg[21]_2 ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_wrh
   (CANCEL_CONFIRMED_OL_D1_SIG_reg_0,
    trig_pulse_2,
    trig_pulse_1,
    src_in,
    winning_or_locked_index_cancel_req_reg_0,
    \exclude_winning_or_locked_req_reg[14]_0 ,
    \exclude_winning_or_locked_req_reg[15]_0 ,
    \exclude_winning_or_locked_req_reg[16]_0 ,
    \exclude_winning_or_locked_req_reg[17]_0 ,
    \exclude_winning_or_locked_req_reg[18]_0 ,
    \exclude_winning_or_locked_req_reg[19]_0 ,
    \exclude_winning_or_locked_req_reg[20]_0 ,
    \exclude_winning_or_locked_req_reg[21]_0 ,
    \exclude_winning_or_locked_req_reg[22]_0 ,
    \exclude_winning_or_locked_req_reg[23]_0 ,
    \exclude_winning_or_locked_req_reg[24]_0 ,
    \exclude_winning_or_locked_req_reg[25]_0 ,
    \exclude_winning_or_locked_req_reg[26]_0 ,
    \exclude_winning_or_locked_req_reg[27]_0 ,
    \exclude_winning_or_locked_req_reg[28]_0 ,
    \exclude_winning_or_locked_req_reg[29]_0 ,
    \exclude_winning_or_locked_req_reg[30]_0 ,
    \exclude_winning_or_locked_req_reg[31]_0 ,
    \exclude_winning_or_locked_req_reg[13]_0 ,
    \exclude_winning_or_locked_req_reg[12]_0 ,
    \exclude_winning_or_locked_req_reg[11]_0 ,
    \exclude_winning_or_locked_req_reg[10]_0 ,
    \exclude_winning_or_locked_req_reg[9]_0 ,
    \exclude_winning_or_locked_req_reg[8]_0 ,
    \exclude_winning_or_locked_req_reg[7]_0 ,
    \exclude_winning_or_locked_req_reg[6]_0 ,
    \exclude_winning_or_locked_req_reg[5]_0 ,
    \exclude_winning_or_locked_req_reg[4]_0 ,
    \exclude_winning_or_locked_req_reg[3]_0 ,
    \exclude_winning_or_locked_req_reg[2]_0 ,
    \exclude_winning_or_locked_req_reg[1]_0 ,
    \exclude_winning_or_locked_req_reg[14]_1 ,
    \exclude_winning_or_locked_req_reg[15]_1 ,
    \exclude_winning_or_locked_req_reg[16]_1 ,
    \exclude_winning_or_locked_req_reg[17]_1 ,
    \exclude_winning_or_locked_req_reg[18]_1 ,
    \exclude_winning_or_locked_req_reg[19]_1 ,
    \exclude_winning_or_locked_req_reg[20]_1 ,
    \exclude_winning_or_locked_req_reg[21]_1 ,
    \exclude_winning_or_locked_req_reg[22]_1 ,
    \exclude_winning_or_locked_req_reg[23]_1 ,
    \exclude_winning_or_locked_req_reg[24]_1 ,
    \exclude_winning_or_locked_req_reg[25]_1 ,
    \exclude_winning_or_locked_req_reg[26]_1 ,
    \exclude_winning_or_locked_req_reg[27]_1 ,
    \exclude_winning_or_locked_req_reg[28]_1 ,
    \exclude_winning_or_locked_req_reg[29]_1 ,
    \exclude_winning_or_locked_req_reg[30]_1 ,
    \exclude_winning_or_locked_req_reg[31]_1 ,
    \exclude_winning_or_locked_req_reg[13]_1 ,
    \exclude_winning_or_locked_req_reg[12]_1 ,
    \exclude_winning_or_locked_req_reg[11]_1 ,
    \exclude_winning_or_locked_req_reg[10]_1 ,
    \exclude_winning_or_locked_req_reg[9]_1 ,
    \exclude_winning_or_locked_req_reg[8]_1 ,
    \exclude_winning_or_locked_req_reg[7]_1 ,
    \exclude_winning_or_locked_req_reg[6]_1 ,
    \exclude_winning_or_locked_req_reg[5]_1 ,
    \exclude_winning_or_locked_req_reg[4]_1 ,
    \exclude_winning_or_locked_req_reg[3]_1 ,
    \exclude_winning_or_locked_req_reg[2]_1 ,
    \exclude_winning_or_locked_req_reg[1]_1 ,
    \exclude_winning_or_locked_req_reg[0]_0 ,
    \exclude_winning_or_locked_req_reg[0]_1 ,
    \TCR_i_reg[29] ,
    Q,
    \TCR_i_reg[13] ,
    \exclude_winning_or_locked_req_reg[31]_2 ,
    \LOCKED_ID_LOC_I_reg[9]_0 ,
    winning_or_locked_index_cancel_req_reg_1,
    out,
    s_axi_aclk,
    trig_pulse_20,
    BUFFER_LOCKED_D1_reg_0,
    index_valid_d1_reg_0,
    winning_or_locked_index_cancel_req0,
    trig_pulse_1_reg_0,
    \TRR_i_reg[14] ,
    TRR_i2294_in,
    winning_or_locked_index_cancel_req_reg_2,
    \TRR_i_reg[16] ,
    \TRR_i_reg[17] ,
    \TRR_i_reg[18] ,
    \TRR_i_reg[19] ,
    IC_REG_TCR_I,
    \TRR_i_reg[0] ,
    MSG_DONE_FROM_BSP,
    winning_or_locked_index_cancel_req_i_13_0,
    winning_or_locked_index_cancel_req_i_11_0,
    D,
    \exclude_winning_or_locked_req_reg[31]_3 ,
    \LOCKED_BUFFER_INDEX_I_reg[4]_0 ,
    \exclude_winning_or_locked_req_reg[15]_2 ,
    \exclude_winning_or_locked_req_reg[31]_4 ,
    \LOCKED_ID_LOC_I_reg[9]_1 );
  output CANCEL_CONFIRMED_OL_D1_SIG_reg_0;
  output trig_pulse_2;
  output trig_pulse_1;
  output src_in;
  output winning_or_locked_index_cancel_req_reg_0;
  output \exclude_winning_or_locked_req_reg[14]_0 ;
  output \exclude_winning_or_locked_req_reg[15]_0 ;
  output \exclude_winning_or_locked_req_reg[16]_0 ;
  output \exclude_winning_or_locked_req_reg[17]_0 ;
  output \exclude_winning_or_locked_req_reg[18]_0 ;
  output \exclude_winning_or_locked_req_reg[19]_0 ;
  output \exclude_winning_or_locked_req_reg[20]_0 ;
  output \exclude_winning_or_locked_req_reg[21]_0 ;
  output \exclude_winning_or_locked_req_reg[22]_0 ;
  output \exclude_winning_or_locked_req_reg[23]_0 ;
  output \exclude_winning_or_locked_req_reg[24]_0 ;
  output \exclude_winning_or_locked_req_reg[25]_0 ;
  output \exclude_winning_or_locked_req_reg[26]_0 ;
  output \exclude_winning_or_locked_req_reg[27]_0 ;
  output \exclude_winning_or_locked_req_reg[28]_0 ;
  output \exclude_winning_or_locked_req_reg[29]_0 ;
  output \exclude_winning_or_locked_req_reg[30]_0 ;
  output \exclude_winning_or_locked_req_reg[31]_0 ;
  output \exclude_winning_or_locked_req_reg[13]_0 ;
  output \exclude_winning_or_locked_req_reg[12]_0 ;
  output \exclude_winning_or_locked_req_reg[11]_0 ;
  output \exclude_winning_or_locked_req_reg[10]_0 ;
  output \exclude_winning_or_locked_req_reg[9]_0 ;
  output \exclude_winning_or_locked_req_reg[8]_0 ;
  output \exclude_winning_or_locked_req_reg[7]_0 ;
  output \exclude_winning_or_locked_req_reg[6]_0 ;
  output \exclude_winning_or_locked_req_reg[5]_0 ;
  output \exclude_winning_or_locked_req_reg[4]_0 ;
  output \exclude_winning_or_locked_req_reg[3]_0 ;
  output \exclude_winning_or_locked_req_reg[2]_0 ;
  output \exclude_winning_or_locked_req_reg[1]_0 ;
  output \exclude_winning_or_locked_req_reg[14]_1 ;
  output \exclude_winning_or_locked_req_reg[15]_1 ;
  output \exclude_winning_or_locked_req_reg[16]_1 ;
  output \exclude_winning_or_locked_req_reg[17]_1 ;
  output \exclude_winning_or_locked_req_reg[18]_1 ;
  output \exclude_winning_or_locked_req_reg[19]_1 ;
  output \exclude_winning_or_locked_req_reg[20]_1 ;
  output \exclude_winning_or_locked_req_reg[21]_1 ;
  output \exclude_winning_or_locked_req_reg[22]_1 ;
  output \exclude_winning_or_locked_req_reg[23]_1 ;
  output \exclude_winning_or_locked_req_reg[24]_1 ;
  output \exclude_winning_or_locked_req_reg[25]_1 ;
  output \exclude_winning_or_locked_req_reg[26]_1 ;
  output \exclude_winning_or_locked_req_reg[27]_1 ;
  output \exclude_winning_or_locked_req_reg[28]_1 ;
  output \exclude_winning_or_locked_req_reg[29]_1 ;
  output \exclude_winning_or_locked_req_reg[30]_1 ;
  output \exclude_winning_or_locked_req_reg[31]_1 ;
  output \exclude_winning_or_locked_req_reg[13]_1 ;
  output \exclude_winning_or_locked_req_reg[12]_1 ;
  output \exclude_winning_or_locked_req_reg[11]_1 ;
  output \exclude_winning_or_locked_req_reg[10]_1 ;
  output \exclude_winning_or_locked_req_reg[9]_1 ;
  output \exclude_winning_or_locked_req_reg[8]_1 ;
  output \exclude_winning_or_locked_req_reg[7]_1 ;
  output \exclude_winning_or_locked_req_reg[6]_1 ;
  output \exclude_winning_or_locked_req_reg[5]_1 ;
  output \exclude_winning_or_locked_req_reg[4]_1 ;
  output \exclude_winning_or_locked_req_reg[3]_1 ;
  output \exclude_winning_or_locked_req_reg[2]_1 ;
  output \exclude_winning_or_locked_req_reg[1]_1 ;
  output \exclude_winning_or_locked_req_reg[0]_0 ;
  output \exclude_winning_or_locked_req_reg[0]_1 ;
  output \TCR_i_reg[29] ;
  output [2:0]Q;
  output \TCR_i_reg[13] ;
  output [31:0]\exclude_winning_or_locked_req_reg[31]_2 ;
  output [8:0]\LOCKED_ID_LOC_I_reg[9]_0 ;
  input winning_or_locked_index_cancel_req_reg_1;
  input out;
  input s_axi_aclk;
  input trig_pulse_20;
  input BUFFER_LOCKED_D1_reg_0;
  input index_valid_d1_reg_0;
  input winning_or_locked_index_cancel_req0;
  input trig_pulse_1_reg_0;
  input \TRR_i_reg[14] ;
  input TRR_i2294_in;
  input winning_or_locked_index_cancel_req_reg_2;
  input \TRR_i_reg[16] ;
  input \TRR_i_reg[17] ;
  input \TRR_i_reg[18] ;
  input \TRR_i_reg[19] ;
  input [25:0]IC_REG_TCR_I;
  input \TRR_i_reg[0] ;
  input MSG_DONE_FROM_BSP;
  input winning_or_locked_index_cancel_req_i_13_0;
  input winning_or_locked_index_cancel_req_i_11_0;
  input [31:0]D;
  input \exclude_winning_or_locked_req_reg[31]_3 ;
  input [4:0]\LOCKED_BUFFER_INDEX_I_reg[4]_0 ;
  input \exclude_winning_or_locked_req_reg[15]_2 ;
  input \exclude_winning_or_locked_req_reg[31]_4 ;
  input [8:0]\LOCKED_ID_LOC_I_reg[9]_1 ;

  wire BUFFER_IS_READY0;
  wire BUFFER_LOCKED_D1;
  wire BUFFER_LOCKED_D1_reg_0;
  wire CANCEL_CONFIRMED_OL_D1_SIG_reg_0;
  wire [31:0]D;
  wire [25:0]IC_REG_TCR_I;
  wire [4:0]\LOCKED_BUFFER_INDEX_I_reg[4]_0 ;
  wire \LOCKED_BUFFER_INDEX_I_reg_n_0_[2] ;
  wire \LOCKED_BUFFER_INDEX_I_reg_n_0_[3] ;
  wire \LOCKED_ID_LOC_I[9]_i_1_n_0 ;
  wire [8:0]\LOCKED_ID_LOC_I_reg[9]_0 ;
  wire [8:0]\LOCKED_ID_LOC_I_reg[9]_1 ;
  wire MSG_DONE_FROM_BSP;
  wire [2:0]Q;
  wire \TCR_i_reg[13] ;
  wire \TCR_i_reg[29] ;
  wire TRR_i2294_in;
  wire \TRR_i_reg[0] ;
  wire \TRR_i_reg[14] ;
  wire \TRR_i_reg[16] ;
  wire \TRR_i_reg[17] ;
  wire \TRR_i_reg[18] ;
  wire \TRR_i_reg[19] ;
  wire [31:0]exclude_winning_or_locked_req;
  wire \exclude_winning_or_locked_req[0]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[10]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[11]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[12]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[13]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[14]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[15]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[16]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[17]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[18]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[19]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[1]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[20]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[21]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[22]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[23]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[24]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[25]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[26]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[27]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[28]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[29]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[2]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[30]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[31]_i_2_n_0 ;
  wire \exclude_winning_or_locked_req[3]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[4]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[5]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[6]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[7]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[8]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req[9]_i_1_n_0 ;
  wire \exclude_winning_or_locked_req_reg[0]_0 ;
  wire \exclude_winning_or_locked_req_reg[0]_1 ;
  wire \exclude_winning_or_locked_req_reg[10]_0 ;
  wire \exclude_winning_or_locked_req_reg[10]_1 ;
  wire \exclude_winning_or_locked_req_reg[11]_0 ;
  wire \exclude_winning_or_locked_req_reg[11]_1 ;
  wire \exclude_winning_or_locked_req_reg[12]_0 ;
  wire \exclude_winning_or_locked_req_reg[12]_1 ;
  wire \exclude_winning_or_locked_req_reg[13]_0 ;
  wire \exclude_winning_or_locked_req_reg[13]_1 ;
  wire \exclude_winning_or_locked_req_reg[14]_0 ;
  wire \exclude_winning_or_locked_req_reg[14]_1 ;
  wire \exclude_winning_or_locked_req_reg[15]_0 ;
  wire \exclude_winning_or_locked_req_reg[15]_1 ;
  wire \exclude_winning_or_locked_req_reg[15]_2 ;
  wire \exclude_winning_or_locked_req_reg[16]_0 ;
  wire \exclude_winning_or_locked_req_reg[16]_1 ;
  wire \exclude_winning_or_locked_req_reg[17]_0 ;
  wire \exclude_winning_or_locked_req_reg[17]_1 ;
  wire \exclude_winning_or_locked_req_reg[18]_0 ;
  wire \exclude_winning_or_locked_req_reg[18]_1 ;
  wire \exclude_winning_or_locked_req_reg[19]_0 ;
  wire \exclude_winning_or_locked_req_reg[19]_1 ;
  wire \exclude_winning_or_locked_req_reg[1]_0 ;
  wire \exclude_winning_or_locked_req_reg[1]_1 ;
  wire \exclude_winning_or_locked_req_reg[20]_0 ;
  wire \exclude_winning_or_locked_req_reg[20]_1 ;
  wire \exclude_winning_or_locked_req_reg[21]_0 ;
  wire \exclude_winning_or_locked_req_reg[21]_1 ;
  wire \exclude_winning_or_locked_req_reg[22]_0 ;
  wire \exclude_winning_or_locked_req_reg[22]_1 ;
  wire \exclude_winning_or_locked_req_reg[23]_0 ;
  wire \exclude_winning_or_locked_req_reg[23]_1 ;
  wire \exclude_winning_or_locked_req_reg[24]_0 ;
  wire \exclude_winning_or_locked_req_reg[24]_1 ;
  wire \exclude_winning_or_locked_req_reg[25]_0 ;
  wire \exclude_winning_or_locked_req_reg[25]_1 ;
  wire \exclude_winning_or_locked_req_reg[26]_0 ;
  wire \exclude_winning_or_locked_req_reg[26]_1 ;
  wire \exclude_winning_or_locked_req_reg[27]_0 ;
  wire \exclude_winning_or_locked_req_reg[27]_1 ;
  wire \exclude_winning_or_locked_req_reg[28]_0 ;
  wire \exclude_winning_or_locked_req_reg[28]_1 ;
  wire \exclude_winning_or_locked_req_reg[29]_0 ;
  wire \exclude_winning_or_locked_req_reg[29]_1 ;
  wire \exclude_winning_or_locked_req_reg[2]_0 ;
  wire \exclude_winning_or_locked_req_reg[2]_1 ;
  wire \exclude_winning_or_locked_req_reg[30]_0 ;
  wire \exclude_winning_or_locked_req_reg[30]_1 ;
  wire \exclude_winning_or_locked_req_reg[31]_0 ;
  wire \exclude_winning_or_locked_req_reg[31]_1 ;
  wire [31:0]\exclude_winning_or_locked_req_reg[31]_2 ;
  wire \exclude_winning_or_locked_req_reg[31]_3 ;
  wire \exclude_winning_or_locked_req_reg[31]_4 ;
  wire \exclude_winning_or_locked_req_reg[3]_0 ;
  wire \exclude_winning_or_locked_req_reg[3]_1 ;
  wire \exclude_winning_or_locked_req_reg[4]_0 ;
  wire \exclude_winning_or_locked_req_reg[4]_1 ;
  wire \exclude_winning_or_locked_req_reg[5]_0 ;
  wire \exclude_winning_or_locked_req_reg[5]_1 ;
  wire \exclude_winning_or_locked_req_reg[6]_0 ;
  wire \exclude_winning_or_locked_req_reg[6]_1 ;
  wire \exclude_winning_or_locked_req_reg[7]_0 ;
  wire \exclude_winning_or_locked_req_reg[7]_1 ;
  wire \exclude_winning_or_locked_req_reg[8]_0 ;
  wire \exclude_winning_or_locked_req_reg[8]_1 ;
  wire \exclude_winning_or_locked_req_reg[9]_0 ;
  wire \exclude_winning_or_locked_req_reg[9]_1 ;
  wire index_valid_d1;
  wire index_valid_d1_reg_0;
  wire index_valid_d2;
  wire index_valid_d3;
  wire index_valid_d4;
  wire out;
  wire s_axi_aclk;
  wire src_in;
  wire trig_pulse_1;
  wire trig_pulse_10;
  wire trig_pulse_1_reg_0;
  wire trig_pulse_2;
  wire trig_pulse_20;
  wire winning_or_locked_index_cancel_req0;
  wire winning_or_locked_index_cancel_req_i_11_0;
  wire winning_or_locked_index_cancel_req_i_11_n_0;
  wire winning_or_locked_index_cancel_req_i_12_n_0;
  wire winning_or_locked_index_cancel_req_i_13_0;
  wire winning_or_locked_index_cancel_req_i_13_n_0;
  wire winning_or_locked_index_cancel_req_i_19_n_0;
  wire winning_or_locked_index_cancel_req_i_20_n_0;
  wire winning_or_locked_index_cancel_req_i_21_n_0;
  wire winning_or_locked_index_cancel_req_i_22_n_0;
  wire winning_or_locked_index_cancel_req_i_23_n_0;
  wire winning_or_locked_index_cancel_req_i_24_n_0;
  wire winning_or_locked_index_cancel_req_i_25_n_0;
  wire winning_or_locked_index_cancel_req_i_26_n_0;
  wire winning_or_locked_index_cancel_req_i_28_n_0;
  wire winning_or_locked_index_cancel_req_i_29_n_0;
  wire winning_or_locked_index_cancel_req_i_31_n_0;
  wire winning_or_locked_index_cancel_req_i_32_n_0;
  wire winning_or_locked_index_cancel_req_i_33_n_0;
  wire winning_or_locked_index_cancel_req_reg_0;
  wire winning_or_locked_index_cancel_req_reg_1;
  wire winning_or_locked_index_cancel_req_reg_2;

  LUT2 #(
    .INIT(4'h8)) 
    BUFFER_IS_READY_i_1
       (.I0(index_valid_d4),
        .I1(index_valid_d1_reg_0),
        .O(BUFFER_IS_READY0));
  FDRE BUFFER_IS_READY_reg
       (.C(s_axi_aclk),
        .CE(\LOCKED_ID_LOC_I[9]_i_1_n_0 ),
        .D(BUFFER_IS_READY0),
        .Q(src_in),
        .R(winning_or_locked_index_cancel_req_reg_1));
  FDRE BUFFER_LOCKED_D1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(BUFFER_LOCKED_D1_reg_0),
        .Q(BUFFER_LOCKED_D1),
        .R(winning_or_locked_index_cancel_req_reg_1));
  FDRE CANCEL_CONFIRMED_OL_D1_SIG_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(out),
        .Q(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .R(winning_or_locked_index_cancel_req_reg_1));
  FDRE \LOCKED_BUFFER_INDEX_I_reg[0] 
       (.C(s_axi_aclk),
        .CE(\LOCKED_ID_LOC_I[9]_i_1_n_0 ),
        .D(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .Q(Q[0]),
        .R(winning_or_locked_index_cancel_req_reg_1));
  FDRE \LOCKED_BUFFER_INDEX_I_reg[1] 
       (.C(s_axi_aclk),
        .CE(\LOCKED_ID_LOC_I[9]_i_1_n_0 ),
        .D(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .Q(Q[1]),
        .R(winning_or_locked_index_cancel_req_reg_1));
  FDRE \LOCKED_BUFFER_INDEX_I_reg[2] 
       (.C(s_axi_aclk),
        .CE(\LOCKED_ID_LOC_I[9]_i_1_n_0 ),
        .D(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .Q(\LOCKED_BUFFER_INDEX_I_reg_n_0_[2] ),
        .R(winning_or_locked_index_cancel_req_reg_1));
  FDRE \LOCKED_BUFFER_INDEX_I_reg[3] 
       (.C(s_axi_aclk),
        .CE(\LOCKED_ID_LOC_I[9]_i_1_n_0 ),
        .D(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .Q(\LOCKED_BUFFER_INDEX_I_reg_n_0_[3] ),
        .R(winning_or_locked_index_cancel_req_reg_1));
  FDRE \LOCKED_BUFFER_INDEX_I_reg[4] 
       (.C(s_axi_aclk),
        .CE(\LOCKED_ID_LOC_I[9]_i_1_n_0 ),
        .D(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [4]),
        .Q(Q[2]),
        .R(winning_or_locked_index_cancel_req_reg_1));
  LUT1 #(
    .INIT(2'h1)) 
    \LOCKED_ID_LOC_I[9]_i_1 
       (.I0(BUFFER_LOCKED_D1_reg_0),
        .O(\LOCKED_ID_LOC_I[9]_i_1_n_0 ));
  FDRE \LOCKED_ID_LOC_I_reg[1] 
       (.C(s_axi_aclk),
        .CE(\LOCKED_ID_LOC_I[9]_i_1_n_0 ),
        .D(\LOCKED_ID_LOC_I_reg[9]_1 [0]),
        .Q(\LOCKED_ID_LOC_I_reg[9]_0 [0]),
        .R(winning_or_locked_index_cancel_req_reg_1));
  FDRE \LOCKED_ID_LOC_I_reg[2] 
       (.C(s_axi_aclk),
        .CE(\LOCKED_ID_LOC_I[9]_i_1_n_0 ),
        .D(\LOCKED_ID_LOC_I_reg[9]_1 [1]),
        .Q(\LOCKED_ID_LOC_I_reg[9]_0 [1]),
        .R(winning_or_locked_index_cancel_req_reg_1));
  FDRE \LOCKED_ID_LOC_I_reg[3] 
       (.C(s_axi_aclk),
        .CE(\LOCKED_ID_LOC_I[9]_i_1_n_0 ),
        .D(\LOCKED_ID_LOC_I_reg[9]_1 [2]),
        .Q(\LOCKED_ID_LOC_I_reg[9]_0 [2]),
        .R(winning_or_locked_index_cancel_req_reg_1));
  FDRE \LOCKED_ID_LOC_I_reg[4] 
       (.C(s_axi_aclk),
        .CE(\LOCKED_ID_LOC_I[9]_i_1_n_0 ),
        .D(\LOCKED_ID_LOC_I_reg[9]_1 [3]),
        .Q(\LOCKED_ID_LOC_I_reg[9]_0 [3]),
        .R(winning_or_locked_index_cancel_req_reg_1));
  FDRE \LOCKED_ID_LOC_I_reg[5] 
       (.C(s_axi_aclk),
        .CE(\LOCKED_ID_LOC_I[9]_i_1_n_0 ),
        .D(\LOCKED_ID_LOC_I_reg[9]_1 [4]),
        .Q(\LOCKED_ID_LOC_I_reg[9]_0 [4]),
        .R(winning_or_locked_index_cancel_req_reg_1));
  FDRE \LOCKED_ID_LOC_I_reg[6] 
       (.C(s_axi_aclk),
        .CE(\LOCKED_ID_LOC_I[9]_i_1_n_0 ),
        .D(\LOCKED_ID_LOC_I_reg[9]_1 [5]),
        .Q(\LOCKED_ID_LOC_I_reg[9]_0 [5]),
        .R(winning_or_locked_index_cancel_req_reg_1));
  FDRE \LOCKED_ID_LOC_I_reg[7] 
       (.C(s_axi_aclk),
        .CE(\LOCKED_ID_LOC_I[9]_i_1_n_0 ),
        .D(\LOCKED_ID_LOC_I_reg[9]_1 [6]),
        .Q(\LOCKED_ID_LOC_I_reg[9]_0 [6]),
        .R(winning_or_locked_index_cancel_req_reg_1));
  FDRE \LOCKED_ID_LOC_I_reg[8] 
       (.C(s_axi_aclk),
        .CE(\LOCKED_ID_LOC_I[9]_i_1_n_0 ),
        .D(\LOCKED_ID_LOC_I_reg[9]_1 [7]),
        .Q(\LOCKED_ID_LOC_I_reg[9]_0 [7]),
        .R(winning_or_locked_index_cancel_req_reg_1));
  FDRE \LOCKED_ID_LOC_I_reg[9] 
       (.C(s_axi_aclk),
        .CE(\LOCKED_ID_LOC_I[9]_i_1_n_0 ),
        .D(\LOCKED_ID_LOC_I_reg[9]_1 [8]),
        .Q(\LOCKED_ID_LOC_I_reg[9]_0 [8]),
        .R(winning_or_locked_index_cancel_req_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[0]_i_1 
       (.I0(BUFFER_LOCKED_D1_reg_0),
        .I1(exclude_winning_or_locked_req[0]),
        .I2(D[0]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [0]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[10]_i_1 
       (.I0(exclude_winning_or_locked_req[10]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[10]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [10]));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[11]_i_1 
       (.I0(exclude_winning_or_locked_req[11]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[11]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [11]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[12]_i_1 
       (.I0(exclude_winning_or_locked_req[12]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[12]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [12]));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[13]_i_1 
       (.I0(exclude_winning_or_locked_req[13]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[13]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [13]));
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[14]_i_1 
       (.I0(exclude_winning_or_locked_req[14]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[14]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [14]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[15]_i_1 
       (.I0(exclude_winning_or_locked_req[15]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[15]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [15]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[16]_i_1 
       (.I0(exclude_winning_or_locked_req[16]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[16]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [16]));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[17]_i_1 
       (.I0(exclude_winning_or_locked_req[17]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[17]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [17]));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[18]_i_1 
       (.I0(exclude_winning_or_locked_req[18]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[18]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [18]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[19]_i_1 
       (.I0(exclude_winning_or_locked_req[19]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[19]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [19]));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[1]_i_1 
       (.I0(exclude_winning_or_locked_req[1]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[1]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [1]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[20]_i_1 
       (.I0(exclude_winning_or_locked_req[20]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[20]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [20]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[21]_i_1 
       (.I0(exclude_winning_or_locked_req[21]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[21]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [21]));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[22]_i_1 
       (.I0(exclude_winning_or_locked_req[22]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[22]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [22]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[23]_i_1 
       (.I0(exclude_winning_or_locked_req[23]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[23]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [23]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[24]_i_1 
       (.I0(exclude_winning_or_locked_req[24]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[24]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [24]));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[25]_i_1 
       (.I0(exclude_winning_or_locked_req[25]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[25]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [25]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[26]_i_1 
       (.I0(exclude_winning_or_locked_req[26]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[26]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [26]));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[27]_i_1 
       (.I0(exclude_winning_or_locked_req[27]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[27]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [27]));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[28]_i_1 
       (.I0(exclude_winning_or_locked_req[28]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[28]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [28]));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[29]_i_1 
       (.I0(exclude_winning_or_locked_req[29]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[29]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [29]));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[2]_i_1 
       (.I0(BUFFER_LOCKED_D1_reg_0),
        .I1(exclude_winning_or_locked_req[2]),
        .I2(D[2]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [2]));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[30]_i_1 
       (.I0(exclude_winning_or_locked_req[30]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[30]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [30]));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[31]_i_2 
       (.I0(exclude_winning_or_locked_req[31]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[31]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [31]));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[3]_i_1 
       (.I0(exclude_winning_or_locked_req[3]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[3]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [3]));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[4]_i_1 
       (.I0(exclude_winning_or_locked_req[4]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[4]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [4]));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[5]_i_1 
       (.I0(exclude_winning_or_locked_req[5]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[5]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [5]));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[6]_i_1 
       (.I0(exclude_winning_or_locked_req[6]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[6]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [6]));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[7]_i_1 
       (.I0(exclude_winning_or_locked_req[7]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[7]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [7]));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[8]_i_1 
       (.I0(exclude_winning_or_locked_req[8]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[8]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [8]));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \TRR_TBS_i[9]_i_1 
       (.I0(exclude_winning_or_locked_req[9]),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(D[9]),
        .O(\exclude_winning_or_locked_req_reg[31]_2 [9]));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[0]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[0]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(IC_REG_TCR_I[0]),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[0]_i_3 
       (.I0(exclude_winning_or_locked_req[0]),
        .I1(IC_REG_TCR_I[0]),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[0]_1 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[10]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[10]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(IC_REG_TCR_I[10]),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[10]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[10]_i_3 
       (.I0(exclude_winning_or_locked_req[10]),
        .I1(IC_REG_TCR_I[10]),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[10]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[11]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[11]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(IC_REG_TCR_I[11]),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[11]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[11]_i_3 
       (.I0(exclude_winning_or_locked_req[11]),
        .I1(IC_REG_TCR_I[11]),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[11]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[12]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[12]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(IC_REG_TCR_I[12]),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[12]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[12]_i_3 
       (.I0(exclude_winning_or_locked_req[12]),
        .I1(IC_REG_TCR_I[12]),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[12]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[13]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[13]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(IC_REG_TCR_I[13]),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[13]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[13]_i_3 
       (.I0(exclude_winning_or_locked_req[13]),
        .I1(IC_REG_TCR_I[13]),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[13]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[14]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[14]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(\TRR_i_reg[14] ),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[14]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[14]_i_3 
       (.I0(exclude_winning_or_locked_req[14]),
        .I1(\TRR_i_reg[14] ),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[14]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[15]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[15]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(winning_or_locked_index_cancel_req_reg_2),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[15]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[15]_i_3 
       (.I0(exclude_winning_or_locked_req[15]),
        .I1(winning_or_locked_index_cancel_req_reg_2),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[15]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[16]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[16]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(\TRR_i_reg[16] ),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[16]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[16]_i_3 
       (.I0(exclude_winning_or_locked_req[16]),
        .I1(\TRR_i_reg[16] ),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[16]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[17]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[17]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(\TRR_i_reg[17] ),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[17]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[17]_i_3 
       (.I0(exclude_winning_or_locked_req[17]),
        .I1(\TRR_i_reg[17] ),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[17]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[18]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[18]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(\TRR_i_reg[18] ),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[18]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[18]_i_3 
       (.I0(exclude_winning_or_locked_req[18]),
        .I1(\TRR_i_reg[18] ),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[18]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[19]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[19]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(\TRR_i_reg[19] ),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[19]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[19]_i_3 
       (.I0(exclude_winning_or_locked_req[19]),
        .I1(\TRR_i_reg[19] ),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[19]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[1]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[1]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(IC_REG_TCR_I[1]),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[1]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[1]_i_3 
       (.I0(exclude_winning_or_locked_req[1]),
        .I1(IC_REG_TCR_I[1]),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[20]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[20]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(IC_REG_TCR_I[14]),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[20]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[20]_i_3 
       (.I0(exclude_winning_or_locked_req[20]),
        .I1(IC_REG_TCR_I[14]),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[20]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[21]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[21]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(IC_REG_TCR_I[15]),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[21]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[21]_i_3 
       (.I0(exclude_winning_or_locked_req[21]),
        .I1(IC_REG_TCR_I[15]),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[21]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[22]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[22]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(IC_REG_TCR_I[16]),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[22]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[22]_i_3 
       (.I0(exclude_winning_or_locked_req[22]),
        .I1(IC_REG_TCR_I[16]),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[22]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[23]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[23]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(IC_REG_TCR_I[17]),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[23]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[23]_i_3 
       (.I0(exclude_winning_or_locked_req[23]),
        .I1(IC_REG_TCR_I[17]),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[23]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[24]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[24]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(IC_REG_TCR_I[18]),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[24]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[24]_i_3 
       (.I0(exclude_winning_or_locked_req[24]),
        .I1(IC_REG_TCR_I[18]),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[24]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[25]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[25]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(IC_REG_TCR_I[19]),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[25]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[25]_i_3 
       (.I0(exclude_winning_or_locked_req[25]),
        .I1(IC_REG_TCR_I[19]),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[25]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[26]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[26]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(IC_REG_TCR_I[20]),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[26]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[26]_i_3 
       (.I0(exclude_winning_or_locked_req[26]),
        .I1(IC_REG_TCR_I[20]),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[26]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[27]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[27]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(IC_REG_TCR_I[21]),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[27]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[27]_i_3 
       (.I0(exclude_winning_or_locked_req[27]),
        .I1(IC_REG_TCR_I[21]),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[27]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[28]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[28]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(IC_REG_TCR_I[22]),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[28]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[28]_i_3 
       (.I0(exclude_winning_or_locked_req[28]),
        .I1(IC_REG_TCR_I[22]),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[28]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[29]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[29]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(IC_REG_TCR_I[23]),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[29]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[29]_i_3 
       (.I0(exclude_winning_or_locked_req[29]),
        .I1(IC_REG_TCR_I[23]),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[29]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[2]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[2]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(IC_REG_TCR_I[2]),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[2]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[2]_i_3 
       (.I0(exclude_winning_or_locked_req[2]),
        .I1(IC_REG_TCR_I[2]),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[2]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[30]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[30]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(IC_REG_TCR_I[24]),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[30]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[30]_i_3 
       (.I0(exclude_winning_or_locked_req[30]),
        .I1(IC_REG_TCR_I[24]),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[30]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[31]_i_3 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[31]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(IC_REG_TCR_I[25]),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[31]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[31]_i_4 
       (.I0(exclude_winning_or_locked_req[31]),
        .I1(IC_REG_TCR_I[25]),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[31]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[3]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[3]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(IC_REG_TCR_I[3]),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[3]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[3]_i_3 
       (.I0(exclude_winning_or_locked_req[3]),
        .I1(IC_REG_TCR_I[3]),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[3]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[4]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[4]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(IC_REG_TCR_I[4]),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[4]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[4]_i_3 
       (.I0(exclude_winning_or_locked_req[4]),
        .I1(IC_REG_TCR_I[4]),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[5]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[5]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(IC_REG_TCR_I[5]),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[5]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[5]_i_3 
       (.I0(exclude_winning_or_locked_req[5]),
        .I1(IC_REG_TCR_I[5]),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[5]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[6]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[6]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(IC_REG_TCR_I[6]),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[6]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[6]_i_3 
       (.I0(exclude_winning_or_locked_req[6]),
        .I1(IC_REG_TCR_I[6]),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[6]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[7]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[7]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(IC_REG_TCR_I[7]),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[7]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[7]_i_3 
       (.I0(exclude_winning_or_locked_req[7]),
        .I1(IC_REG_TCR_I[7]),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[7]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[8]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[8]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(IC_REG_TCR_I[8]),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[8]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[8]_i_3 
       (.I0(exclude_winning_or_locked_req[8]),
        .I1(IC_REG_TCR_I[8]),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFEAEAEAEAEAEAEA)) 
    \TRR_i[9]_i_2 
       (.I0(\TRR_i_reg[0] ),
        .I1(exclude_winning_or_locked_req[9]),
        .I2(MSG_DONE_FROM_BSP),
        .I3(IC_REG_TCR_I[9]),
        .I4(TRR_i2294_in),
        .I5(CANCEL_CONFIRMED_OL_D1_SIG_reg_0),
        .O(\exclude_winning_or_locked_req_reg[9]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \TRR_i[9]_i_3 
       (.I0(exclude_winning_or_locked_req[9]),
        .I1(IC_REG_TCR_I[9]),
        .I2(TRR_i2294_in),
        .O(\exclude_winning_or_locked_req_reg[9]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000002)) 
    \exclude_winning_or_locked_req[0]_i_1 
       (.I0(\exclude_winning_or_locked_req_reg[15]_2 ),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I5(exclude_winning_or_locked_req[0]),
        .O(\exclude_winning_or_locked_req[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00200000)) 
    \exclude_winning_or_locked_req[10]_i_1 
       (.I0(\exclude_winning_or_locked_req_reg[15]_2 ),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I5(exclude_winning_or_locked_req[10]),
        .O(\exclude_winning_or_locked_req[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00800000)) 
    \exclude_winning_or_locked_req[11]_i_1 
       (.I0(\exclude_winning_or_locked_req_reg[15]_2 ),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I5(exclude_winning_or_locked_req[11]),
        .O(\exclude_winning_or_locked_req[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF02000000)) 
    \exclude_winning_or_locked_req[12]_i_1 
       (.I0(\exclude_winning_or_locked_req_reg[15]_2 ),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I5(exclude_winning_or_locked_req[12]),
        .O(\exclude_winning_or_locked_req[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF20000000)) 
    \exclude_winning_or_locked_req[13]_i_1 
       (.I0(\exclude_winning_or_locked_req_reg[15]_2 ),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I5(exclude_winning_or_locked_req[13]),
        .O(\exclude_winning_or_locked_req[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF20000000)) 
    \exclude_winning_or_locked_req[14]_i_1 
       (.I0(\exclude_winning_or_locked_req_reg[15]_2 ),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I5(exclude_winning_or_locked_req[14]),
        .O(\exclude_winning_or_locked_req[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF80000000)) 
    \exclude_winning_or_locked_req[15]_i_1 
       (.I0(\exclude_winning_or_locked_req_reg[15]_2 ),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I5(exclude_winning_or_locked_req[15]),
        .O(\exclude_winning_or_locked_req[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000002)) 
    \exclude_winning_or_locked_req[16]_i_1 
       (.I0(\exclude_winning_or_locked_req_reg[31]_3 ),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I5(exclude_winning_or_locked_req[16]),
        .O(\exclude_winning_or_locked_req[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000020)) 
    \exclude_winning_or_locked_req[17]_i_1 
       (.I0(\exclude_winning_or_locked_req_reg[31]_3 ),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I5(exclude_winning_or_locked_req[17]),
        .O(\exclude_winning_or_locked_req[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000020)) 
    \exclude_winning_or_locked_req[18]_i_1 
       (.I0(\exclude_winning_or_locked_req_reg[31]_3 ),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I5(exclude_winning_or_locked_req[18]),
        .O(\exclude_winning_or_locked_req[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000080)) 
    \exclude_winning_or_locked_req[19]_i_1 
       (.I0(\exclude_winning_or_locked_req_reg[31]_3 ),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I5(exclude_winning_or_locked_req[19]),
        .O(\exclude_winning_or_locked_req[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000020)) 
    \exclude_winning_or_locked_req[1]_i_1 
       (.I0(\exclude_winning_or_locked_req_reg[15]_2 ),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I5(exclude_winning_or_locked_req[1]),
        .O(\exclude_winning_or_locked_req[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF01000000)) 
    \exclude_winning_or_locked_req[20]_i_1 
       (.I0(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\exclude_winning_or_locked_req_reg[31]_3 ),
        .I5(exclude_winning_or_locked_req[20]),
        .O(\exclude_winning_or_locked_req[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF02000000)) 
    \exclude_winning_or_locked_req[21]_i_1 
       (.I0(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\exclude_winning_or_locked_req_reg[31]_3 ),
        .I5(exclude_winning_or_locked_req[21]),
        .O(\exclude_winning_or_locked_req[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF02000000)) 
    \exclude_winning_or_locked_req[22]_i_1 
       (.I0(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\exclude_winning_or_locked_req_reg[31]_3 ),
        .I5(exclude_winning_or_locked_req[22]),
        .O(\exclude_winning_or_locked_req[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF08000000)) 
    \exclude_winning_or_locked_req[23]_i_1 
       (.I0(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\exclude_winning_or_locked_req_reg[31]_3 ),
        .I5(exclude_winning_or_locked_req[23]),
        .O(\exclude_winning_or_locked_req[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00020000)) 
    \exclude_winning_or_locked_req[24]_i_1 
       (.I0(\exclude_winning_or_locked_req_reg[31]_3 ),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I5(exclude_winning_or_locked_req[24]),
        .O(\exclude_winning_or_locked_req[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00200000)) 
    \exclude_winning_or_locked_req[25]_i_1 
       (.I0(\exclude_winning_or_locked_req_reg[31]_3 ),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I5(exclude_winning_or_locked_req[25]),
        .O(\exclude_winning_or_locked_req[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00200000)) 
    \exclude_winning_or_locked_req[26]_i_1 
       (.I0(\exclude_winning_or_locked_req_reg[31]_3 ),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I5(exclude_winning_or_locked_req[26]),
        .O(\exclude_winning_or_locked_req[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00800000)) 
    \exclude_winning_or_locked_req[27]_i_1 
       (.I0(\exclude_winning_or_locked_req_reg[31]_3 ),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I5(exclude_winning_or_locked_req[27]),
        .O(\exclude_winning_or_locked_req[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF02000000)) 
    \exclude_winning_or_locked_req[28]_i_1 
       (.I0(\exclude_winning_or_locked_req_reg[31]_3 ),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I5(exclude_winning_or_locked_req[28]),
        .O(\exclude_winning_or_locked_req[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF20000000)) 
    \exclude_winning_or_locked_req[29]_i_1 
       (.I0(\exclude_winning_or_locked_req_reg[31]_3 ),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I5(exclude_winning_or_locked_req[29]),
        .O(\exclude_winning_or_locked_req[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000020)) 
    \exclude_winning_or_locked_req[2]_i_1 
       (.I0(\exclude_winning_or_locked_req_reg[15]_2 ),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I5(exclude_winning_or_locked_req[2]),
        .O(\exclude_winning_or_locked_req[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF20000000)) 
    \exclude_winning_or_locked_req[30]_i_1 
       (.I0(\exclude_winning_or_locked_req_reg[31]_3 ),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I5(exclude_winning_or_locked_req[30]),
        .O(\exclude_winning_or_locked_req[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF80000000)) 
    \exclude_winning_or_locked_req[31]_i_2 
       (.I0(\exclude_winning_or_locked_req_reg[31]_3 ),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I5(exclude_winning_or_locked_req[31]),
        .O(\exclude_winning_or_locked_req[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000080)) 
    \exclude_winning_or_locked_req[3]_i_1 
       (.I0(\exclude_winning_or_locked_req_reg[15]_2 ),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I5(exclude_winning_or_locked_req[3]),
        .O(\exclude_winning_or_locked_req[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF01000000)) 
    \exclude_winning_or_locked_req[4]_i_1 
       (.I0(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\exclude_winning_or_locked_req_reg[15]_2 ),
        .I5(exclude_winning_or_locked_req[4]),
        .O(\exclude_winning_or_locked_req[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF02000000)) 
    \exclude_winning_or_locked_req[5]_i_1 
       (.I0(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\exclude_winning_or_locked_req_reg[15]_2 ),
        .I5(exclude_winning_or_locked_req[5]),
        .O(\exclude_winning_or_locked_req[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF02000000)) 
    \exclude_winning_or_locked_req[6]_i_1 
       (.I0(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\exclude_winning_or_locked_req_reg[15]_2 ),
        .I5(exclude_winning_or_locked_req[6]),
        .O(\exclude_winning_or_locked_req[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF08000000)) 
    \exclude_winning_or_locked_req[7]_i_1 
       (.I0(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\exclude_winning_or_locked_req_reg[15]_2 ),
        .I5(exclude_winning_or_locked_req[7]),
        .O(\exclude_winning_or_locked_req[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00020000)) 
    \exclude_winning_or_locked_req[8]_i_1 
       (.I0(\exclude_winning_or_locked_req_reg[15]_2 ),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I5(exclude_winning_or_locked_req[8]),
        .O(\exclude_winning_or_locked_req[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00200000)) 
    \exclude_winning_or_locked_req[9]_i_1 
       (.I0(\exclude_winning_or_locked_req_reg[15]_2 ),
        .I1(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [1]),
        .I2(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [0]),
        .I3(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [2]),
        .I4(\LOCKED_BUFFER_INDEX_I_reg[4]_0 [3]),
        .I5(exclude_winning_or_locked_req[9]),
        .O(\exclude_winning_or_locked_req[9]_i_1_n_0 ));
  FDRE \exclude_winning_or_locked_req_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[0]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[0]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[10]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[10]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[11]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[11]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[12]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[12]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[13]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[13]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[14]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[14]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[15]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[15]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[16]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[16]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[17]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[17]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[18] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[18]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[18]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[19] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[19]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[19]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[1]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[1]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[20] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[20]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[20]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[21] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[21]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[21]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[22] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[22]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[22]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[23] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[23]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[23]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[24] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[24]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[24]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[25] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[25]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[25]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[26] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[26]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[26]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[27] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[27]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[27]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[28] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[28]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[28]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[29] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[29]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[29]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[2]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[2]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[30] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[30]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[30]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[31] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[31]_i_2_n_0 ),
        .Q(exclude_winning_or_locked_req[31]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[3]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[3]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[4]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[4]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[5]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[5]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[6]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[6]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[7]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[7]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[8]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[8]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE \exclude_winning_or_locked_req_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\exclude_winning_or_locked_req[9]_i_1_n_0 ),
        .Q(exclude_winning_or_locked_req[9]),
        .R(\exclude_winning_or_locked_req_reg[31]_4 ));
  FDRE index_valid_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(index_valid_d1_reg_0),
        .Q(index_valid_d1),
        .R(winning_or_locked_index_cancel_req_reg_1));
  FDRE index_valid_d2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(index_valid_d1),
        .Q(index_valid_d2),
        .R(winning_or_locked_index_cancel_req_reg_1));
  FDRE index_valid_d3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(index_valid_d2),
        .Q(index_valid_d3),
        .R(winning_or_locked_index_cancel_req_reg_1));
  FDRE index_valid_d4_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(index_valid_d3),
        .Q(index_valid_d4),
        .R(winning_or_locked_index_cancel_req_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT3 #(
    .INIT(8'h04)) 
    trig_pulse_1_i_1
       (.I0(BUFFER_LOCKED_D1),
        .I1(BUFFER_LOCKED_D1_reg_0),
        .I2(trig_pulse_1_reg_0),
        .O(trig_pulse_10));
  FDRE trig_pulse_1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(trig_pulse_10),
        .Q(trig_pulse_1),
        .R(winning_or_locked_index_cancel_req_reg_1));
  FDRE trig_pulse_2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(trig_pulse_20),
        .Q(trig_pulse_2),
        .R(winning_or_locked_index_cancel_req_reg_1));
  LUT6 #(
    .INIT(64'hFFFEFEFEFEFEFEFE)) 
    winning_or_locked_index_cancel_req_i_11
       (.I0(winning_or_locked_index_cancel_req_i_19_n_0),
        .I1(winning_or_locked_index_cancel_req_i_20_n_0),
        .I2(winning_or_locked_index_cancel_req_i_21_n_0),
        .I3(winning_or_locked_index_cancel_req_i_22_n_0),
        .I4(winning_or_locked_index_cancel_req_i_12_n_0),
        .I5(\TRR_i_reg[14] ),
        .O(winning_or_locked_index_cancel_req_i_11_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    winning_or_locked_index_cancel_req_i_12
       (.I0(\LOCKED_BUFFER_INDEX_I_reg_n_0_[3] ),
        .I1(\LOCKED_BUFFER_INDEX_I_reg_n_0_[2] ),
        .O(winning_or_locked_index_cancel_req_i_12_n_0));
  LUT6 #(
    .INIT(64'hFFFEFEFEFEFEFEFE)) 
    winning_or_locked_index_cancel_req_i_13
       (.I0(winning_or_locked_index_cancel_req_i_23_n_0),
        .I1(winning_or_locked_index_cancel_req_i_24_n_0),
        .I2(winning_or_locked_index_cancel_req_i_25_n_0),
        .I3(winning_or_locked_index_cancel_req_i_22_n_0),
        .I4(winning_or_locked_index_cancel_req_i_12_n_0),
        .I5(IC_REG_TCR_I[24]),
        .O(winning_or_locked_index_cancel_req_i_13_n_0));
  LUT6 #(
    .INIT(64'hFAEABAAABAAABAAA)) 
    winning_or_locked_index_cancel_req_i_19
       (.I0(winning_or_locked_index_cancel_req_i_26_n_0),
        .I1(\LOCKED_BUFFER_INDEX_I_reg_n_0_[3] ),
        .I2(\LOCKED_BUFFER_INDEX_I_reg_n_0_[2] ),
        .I3(winning_or_locked_index_cancel_req_i_11_0),
        .I4(IC_REG_TCR_I[12]),
        .I5(winning_or_locked_index_cancel_req_i_28_n_0),
        .O(winning_or_locked_index_cancel_req_i_19_n_0));
  LUT6 #(
    .INIT(64'h0B00000008000000)) 
    winning_or_locked_index_cancel_req_i_20
       (.I0(IC_REG_TCR_I[11]),
        .I1(\LOCKED_BUFFER_INDEX_I_reg_n_0_[3] ),
        .I2(\LOCKED_BUFFER_INDEX_I_reg_n_0_[2] ),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(IC_REG_TCR_I[3]),
        .O(winning_or_locked_index_cancel_req_i_20_n_0));
  LUT6 #(
    .INIT(64'h0000000B00000008)) 
    winning_or_locked_index_cancel_req_i_21
       (.I0(IC_REG_TCR_I[8]),
        .I1(\LOCKED_BUFFER_INDEX_I_reg_n_0_[3] ),
        .I2(\LOCKED_BUFFER_INDEX_I_reg_n_0_[2] ),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(IC_REG_TCR_I[0]),
        .O(winning_or_locked_index_cancel_req_i_21_n_0));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT2 #(
    .INIT(4'h2)) 
    winning_or_locked_index_cancel_req_i_22
       (.I0(Q[1]),
        .I1(Q[0]),
        .O(winning_or_locked_index_cancel_req_i_22_n_0));
  LUT6 #(
    .INIT(64'hFAEABAAABAAABAAA)) 
    winning_or_locked_index_cancel_req_i_23
       (.I0(winning_or_locked_index_cancel_req_i_29_n_0),
        .I1(\LOCKED_BUFFER_INDEX_I_reg_n_0_[3] ),
        .I2(\LOCKED_BUFFER_INDEX_I_reg_n_0_[2] ),
        .I3(winning_or_locked_index_cancel_req_i_13_0),
        .I4(IC_REG_TCR_I[22]),
        .I5(winning_or_locked_index_cancel_req_i_28_n_0),
        .O(winning_or_locked_index_cancel_req_i_23_n_0));
  LUT6 #(
    .INIT(64'h0B00000008000000)) 
    winning_or_locked_index_cancel_req_i_24
       (.I0(IC_REG_TCR_I[21]),
        .I1(\LOCKED_BUFFER_INDEX_I_reg_n_0_[3] ),
        .I2(\LOCKED_BUFFER_INDEX_I_reg_n_0_[2] ),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(\TRR_i_reg[19] ),
        .O(winning_or_locked_index_cancel_req_i_24_n_0));
  LUT6 #(
    .INIT(64'h0000000B00000008)) 
    winning_or_locked_index_cancel_req_i_25
       (.I0(IC_REG_TCR_I[18]),
        .I1(\LOCKED_BUFFER_INDEX_I_reg_n_0_[3] ),
        .I2(\LOCKED_BUFFER_INDEX_I_reg_n_0_[2] ),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(\TRR_i_reg[16] ),
        .O(winning_or_locked_index_cancel_req_i_25_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF0C080008)) 
    winning_or_locked_index_cancel_req_i_26
       (.I0(IC_REG_TCR_I[1]),
        .I1(winning_or_locked_index_cancel_req_i_31_n_0),
        .I2(\LOCKED_BUFFER_INDEX_I_reg_n_0_[2] ),
        .I3(\LOCKED_BUFFER_INDEX_I_reg_n_0_[3] ),
        .I4(IC_REG_TCR_I[9]),
        .I5(winning_or_locked_index_cancel_req_i_32_n_0),
        .O(winning_or_locked_index_cancel_req_i_26_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    winning_or_locked_index_cancel_req_i_28
       (.I0(Q[1]),
        .I1(Q[0]),
        .O(winning_or_locked_index_cancel_req_i_28_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF0C080008)) 
    winning_or_locked_index_cancel_req_i_29
       (.I0(\TRR_i_reg[17] ),
        .I1(winning_or_locked_index_cancel_req_i_31_n_0),
        .I2(\LOCKED_BUFFER_INDEX_I_reg_n_0_[2] ),
        .I3(\LOCKED_BUFFER_INDEX_I_reg_n_0_[3] ),
        .I4(IC_REG_TCR_I[19]),
        .I5(winning_or_locked_index_cancel_req_i_33_n_0),
        .O(winning_or_locked_index_cancel_req_i_29_n_0));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT2 #(
    .INIT(4'h2)) 
    winning_or_locked_index_cancel_req_i_31
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(winning_or_locked_index_cancel_req_i_31_n_0));
  LUT6 #(
    .INIT(64'h000B000000080000)) 
    winning_or_locked_index_cancel_req_i_32
       (.I0(IC_REG_TCR_I[10]),
        .I1(\LOCKED_BUFFER_INDEX_I_reg_n_0_[3] ),
        .I2(\LOCKED_BUFFER_INDEX_I_reg_n_0_[2] ),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(IC_REG_TCR_I[2]),
        .O(winning_or_locked_index_cancel_req_i_32_n_0));
  LUT6 #(
    .INIT(64'h000B000000080000)) 
    winning_or_locked_index_cancel_req_i_33
       (.I0(IC_REG_TCR_I[20]),
        .I1(\LOCKED_BUFFER_INDEX_I_reg_n_0_[3] ),
        .I2(\LOCKED_BUFFER_INDEX_I_reg_n_0_[2] ),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(\TRR_i_reg[18] ),
        .O(winning_or_locked_index_cancel_req_i_33_n_0));
  LUT6 #(
    .INIT(64'hFAAAEAAAAAAAEAAA)) 
    winning_or_locked_index_cancel_req_i_4
       (.I0(winning_or_locked_index_cancel_req_i_11_n_0),
        .I1(IC_REG_TCR_I[13]),
        .I2(winning_or_locked_index_cancel_req_i_12_n_0),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(winning_or_locked_index_cancel_req_reg_2),
        .O(\TCR_i_reg[13] ));
  LUT6 #(
    .INIT(64'hFAAAEAAAAAAAEAAA)) 
    winning_or_locked_index_cancel_req_i_5
       (.I0(winning_or_locked_index_cancel_req_i_13_n_0),
        .I1(IC_REG_TCR_I[23]),
        .I2(winning_or_locked_index_cancel_req_i_12_n_0),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(IC_REG_TCR_I[25]),
        .O(\TCR_i_reg[29] ));
  FDRE winning_or_locked_index_cancel_req_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(winning_or_locked_index_cancel_req0),
        .Q(winning_or_locked_index_cancel_req_reg_0),
        .R(winning_or_locked_index_cancel_req_reg_1));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_rxmsg_fifo_cntl
   (RXF_FULL_AXI,
    RXWM_SET,
    RXF_FULL_I_reg_0,
    \addr_location_incr_count_reg[1]_0 ,
    Q,
    RXF_FULL_AT_MSG_BOUNDARY_reg_0,
    \addr_location_incr_count_reg[0]_0 ,
    \RD_INDEX_reg[1]_0 ,
    \IC_REG_WMR_I2_reg[0]_0 ,
    \wr_index_i_reg[6]_0 ,
    \wr_index_id_loc_reg[9]_0 ,
    \wr_index_id_loc_reg[0]_0 ,
    MATCH_RESULT_TO_BSP0,
    \RXE_DATA_STORED_AT_DLC_reg[0]_0 ,
    \MULTI_BIT.s_level_out_bus_d5_reg[0] ,
    s_axi_aclk,
    SR,
    can_clk,
    addr_location_incr_count,
    \RD_INDEX_reg[6]_0 ,
    \RD_INDEX_reg[6]_1 ,
    TS_RX_WEN,
    RXE_MSGVAL_EARLY_F0,
    RXF_FULL_AT_MSG_BOUNDARY_reg_1,
    RXE_RXFIFO_WEN_FD2,
    RXE_RXFIFO_WEN_FD1,
    \wr_index_i_reg[1]_0 ,
    RXE_RXMSG_VAL_F0,
    dest_arst,
    RXE_RXFIFO_WEN,
    MATCH_RESULT_TO_BSP_reg,
    MATCH_RESULT_FS2_D1,
    MATCH_RESULT_TO_BSP_reg_0,
    MATCH_RESULT_TO_BSP_reg_1,
    \FILL_LEVEL_reg[5]_0 ,
    E,
    s_axi_wdata,
    \RXE_DATA_STORED_AT_DLC_reg[0]_1 ,
    \wr_index_i_reg[6]_1 );
  output RXF_FULL_AXI;
  output RXWM_SET;
  output RXF_FULL_I_reg_0;
  output \addr_location_incr_count_reg[1]_0 ;
  output [6:0]Q;
  output RXF_FULL_AT_MSG_BOUNDARY_reg_0;
  output \addr_location_incr_count_reg[0]_0 ;
  output [5:0]\RD_INDEX_reg[1]_0 ;
  output [5:0]\IC_REG_WMR_I2_reg[0]_0 ;
  output [0:0]\wr_index_i_reg[6]_0 ;
  output [0:0]\wr_index_id_loc_reg[9]_0 ;
  output [8:0]\wr_index_id_loc_reg[0]_0 ;
  output MATCH_RESULT_TO_BSP0;
  output [10:0]\RXE_DATA_STORED_AT_DLC_reg[0]_0 ;
  input \MULTI_BIT.s_level_out_bus_d5_reg[0] ;
  input s_axi_aclk;
  input [0:0]SR;
  input can_clk;
  input [0:0]addr_location_incr_count;
  input \RD_INDEX_reg[6]_0 ;
  input \RD_INDEX_reg[6]_1 ;
  input TS_RX_WEN;
  input RXE_MSGVAL_EARLY_F0;
  input RXF_FULL_AT_MSG_BOUNDARY_reg_1;
  input RXE_RXFIFO_WEN_FD2;
  input RXE_RXFIFO_WEN_FD1;
  input \wr_index_i_reg[1]_0 ;
  input RXE_RXMSG_VAL_F0;
  input dest_arst;
  input RXE_RXFIFO_WEN;
  input MATCH_RESULT_TO_BSP_reg;
  input MATCH_RESULT_FS2_D1;
  input MATCH_RESULT_TO_BSP_reg_0;
  input MATCH_RESULT_TO_BSP_reg_1;
  input [0:0]\FILL_LEVEL_reg[5]_0 ;
  input [0:0]E;
  input [5:0]s_axi_wdata;
  input [10:0]\RXE_DATA_STORED_AT_DLC_reg[0]_1 ;
  input [0:0]\wr_index_i_reg[6]_1 ;

  wire [0:0]E;
  wire \FILL_LEVEL[0]_i_1_n_0 ;
  wire \FILL_LEVEL[1]_i_1__0_n_0 ;
  wire \FILL_LEVEL[2]_i_1__0_n_0 ;
  wire \FILL_LEVEL[3]_i_1__0_n_0 ;
  wire \FILL_LEVEL[3]_i_3_n_0 ;
  wire \FILL_LEVEL[3]_i_4_n_0 ;
  wire \FILL_LEVEL[3]_i_5_n_0 ;
  wire \FILL_LEVEL[3]_i_6_n_0 ;
  wire \FILL_LEVEL[4]_i_1__0_n_0 ;
  wire \FILL_LEVEL[5]_i_2__0_n_0 ;
  wire \FILL_LEVEL[6]_i_1_n_0 ;
  wire \FILL_LEVEL[6]_i_3_n_0 ;
  wire \FILL_LEVEL[6]_i_4_n_0 ;
  wire \FILL_LEVEL[6]_i_5_n_0 ;
  wire \FILL_LEVEL[6]_i_6_n_0 ;
  wire \FILL_LEVEL[6]_i_7_n_0 ;
  wire \FILL_LEVEL_CMB0_inferred__0/i__carry__0_n_2 ;
  wire \FILL_LEVEL_CMB0_inferred__0/i__carry__0_n_3 ;
  wire \FILL_LEVEL_CMB0_inferred__0/i__carry__0_n_5 ;
  wire \FILL_LEVEL_CMB0_inferred__0/i__carry__0_n_6 ;
  wire \FILL_LEVEL_CMB0_inferred__0/i__carry__0_n_7 ;
  wire \FILL_LEVEL_CMB0_inferred__0/i__carry_n_0 ;
  wire \FILL_LEVEL_CMB0_inferred__0/i__carry_n_1 ;
  wire \FILL_LEVEL_CMB0_inferred__0/i__carry_n_2 ;
  wire \FILL_LEVEL_CMB0_inferred__0/i__carry_n_3 ;
  wire \FILL_LEVEL_CMB0_inferred__0/i__carry_n_4 ;
  wire \FILL_LEVEL_CMB0_inferred__0/i__carry_n_5 ;
  wire \FILL_LEVEL_CMB0_inferred__0/i__carry_n_6 ;
  wire \FILL_LEVEL_reg[3]_i_2_n_0 ;
  wire \FILL_LEVEL_reg[3]_i_2_n_1 ;
  wire \FILL_LEVEL_reg[3]_i_2_n_2 ;
  wire \FILL_LEVEL_reg[3]_i_2_n_3 ;
  wire \FILL_LEVEL_reg[3]_i_2_n_4 ;
  wire \FILL_LEVEL_reg[3]_i_2_n_5 ;
  wire \FILL_LEVEL_reg[3]_i_2_n_6 ;
  wire \FILL_LEVEL_reg[3]_i_2_n_7 ;
  wire [0:0]\FILL_LEVEL_reg[5]_0 ;
  wire \FILL_LEVEL_reg[6]_i_2_n_1 ;
  wire \FILL_LEVEL_reg[6]_i_2_n_3 ;
  wire \FILL_LEVEL_reg[6]_i_2_n_6 ;
  wire \FILL_LEVEL_reg[6]_i_2_n_7 ;
  wire [5:0]\IC_REG_WMR_I2_reg[0]_0 ;
  wire MATCH_RESULT_FS2_D1;
  wire MATCH_RESULT_TO_BSP0;
  wire MATCH_RESULT_TO_BSP_reg;
  wire MATCH_RESULT_TO_BSP_reg_0;
  wire MATCH_RESULT_TO_BSP_reg_1;
  wire \MULTI_BIT.s_level_out_bus_d5_reg[0] ;
  wire [6:0]Q;
  wire RD_INDEX0;
  wire \RD_INDEX[0]_i_4__0_n_0 ;
  wire \RD_INDEX[0]_i_5_n_0 ;
  wire \RD_INDEX[6]_i_1_n_0 ;
  wire [5:0]\RD_INDEX_reg[1]_0 ;
  wire \RD_INDEX_reg[6]_0 ;
  wire \RD_INDEX_reg[6]_1 ;
  wire RXE_DATA_STORED_AT_DLC0;
  wire [10:0]\RXE_DATA_STORED_AT_DLC_reg[0]_0 ;
  wire [10:0]\RXE_DATA_STORED_AT_DLC_reg[0]_1 ;
  wire RXE_MSGVAL_EARLY_F0;
  wire RXE_RXFIFO_WEN;
  wire RXE_RXFIFO_WEN_FD1;
  wire RXE_RXFIFO_WEN_FD2;
  wire RXE_RXMSG_VAL_F0;
  wire RXF_FULL_AT_MSG_BOUNDARY_i_1__0_n_0;
  wire RXF_FULL_AT_MSG_BOUNDARY_reg_0;
  wire RXF_FULL_AT_MSG_BOUNDARY_reg_1;
  wire RXF_FULL_AXI;
  wire RXF_FULL_AXI0;
  wire RXF_FULL_AXI_i_2__0_n_0;
  wire RXF_FULL_AXI_i_3__0_n_0;
  wire RXF_FULL_AXI_i_4_n_0;
  wire RXF_FULL_I0;
  wire RXF_FULL_I1__8;
  wire RXF_FULL_I_i_3__0_n_0;
  wire RXF_FULL_I_i_4__0_n_0;
  wire RXF_FULL_I_reg_0;
  wire RXWM_SET;
  wire RXWM_SET0_carry_i_1_n_0;
  wire RXWM_SET0_carry_i_2_n_0;
  wire RXWM_SET0_carry_i_3_n_0;
  wire RXWM_SET0_carry_i_4_n_0;
  wire RXWM_SET0_carry_i_5_n_0;
  wire RXWM_SET0_carry_i_6_n_0;
  wire RXWM_SET0_carry_i_7_n_0;
  wire RXWM_SET0_carry_n_0;
  wire RXWM_SET0_carry_n_1;
  wire RXWM_SET0_carry_n_2;
  wire RXWM_SET0_carry_n_3;
  wire [3:3]RX_ADDR_M_CC;
  wire [0:0]SR;
  wire TS_RX_WEN;
  wire [0:0]addr_location_incr_count;
  wire addr_location_incr_count0;
  wire \addr_location_incr_count[0]_i_1_n_0 ;
  wire \addr_location_incr_count[1]_i_1__0_n_0 ;
  wire \addr_location_incr_count[2]_i_1__0_n_0 ;
  wire \addr_location_incr_count[3]_i_1__0_n_0 ;
  wire \addr_location_incr_count[4]_i_3_n_0 ;
  wire \addr_location_incr_count[4]_i_4_n_0 ;
  wire \addr_location_incr_count_reg[0]_0 ;
  wire \addr_location_incr_count_reg[1]_0 ;
  wire \addr_location_incr_count_reg_n_0_[2] ;
  wire \addr_location_incr_count_reg_n_0_[3] ;
  wire \addr_location_incr_count_reg_n_0_[4] ;
  wire can_clk;
  wire dest_arst;
  wire \gen_fifo_rx0.u_rxxpm_1_i_46_n_3 ;
  wire \gen_fifo_rx0.u_rxxpm_1_i_47_n_0 ;
  wire \gen_fifo_rx0.u_rxxpm_1_i_47_n_1 ;
  wire \gen_fifo_rx0.u_rxxpm_1_i_47_n_2 ;
  wire \gen_fifo_rx0.u_rxxpm_1_i_47_n_3 ;
  wire \gen_fifo_rx0.u_rxxpm_1_i_48_n_0 ;
  wire \gen_fifo_rx0.u_rxxpm_1_i_48_n_1 ;
  wire \gen_fifo_rx0.u_rxxpm_1_i_48_n_2 ;
  wire \gen_fifo_rx0.u_rxxpm_1_i_48_n_3 ;
  wire \gen_fifo_rx0.u_rxxpm_1_i_65_n_0 ;
  wire \gen_fifo_rx0.u_rxxpm_1_i_66_n_0 ;
  wire \gen_fifo_rx0.u_rxxpm_1_i_67_n_0 ;
  wire i__carry__0_i_1__3_n_0;
  wire i__carry__0_i_2__3_n_0;
  wire i__carry_i_1__9_n_0;
  wire i__carry_i_2__8_n_0;
  wire i__carry_i_3__9_n_0;
  wire i__carry_i_4__7_n_0;
  wire p_0_in;
  wire p_0_in0_in;
  wire p_0_in32_in;
  wire p_0_in38_in;
  wire [6:2]p_0_in__0;
  wire [10:1]p_0_in__4;
  wire p_1_in;
  wire p_1_in10_in;
  wire p_1_in11_in;
  wire p_1_in13_in;
  wire p_1_in15_in;
  wire p_1_in17_in;
  wire p_1_in1_in;
  wire p_1_in25_in;
  wire p_2_in;
  wire [0:6]rd_index_gray_reg;
  wire rd_index_gray_reg0;
  wire rd_index_gray_reg01_out;
  wire rd_index_gray_reg03_out;
  wire rd_index_gray_reg05_out;
  wire rd_index_gray_reg07_out;
  wire rd_index_gray_reg09_out;
  wire [0:6]rd_index_gray_synced_fs2;
  wire \rd_index_gray_synced_fs2_d1_reg_n_0_[2] ;
  wire \rd_index_gray_synced_fs2_d1_reg_n_0_[3] ;
  wire \rd_index_gray_synced_fs2_d1_reg_n_0_[4] ;
  wire \rd_index_gray_synced_fs2_d1_reg_n_0_[5] ;
  wire \rd_index_gray_synced_fs2_d1_reg_n_0_[6] ;
  wire s_axi_aclk;
  wire [5:0]s_axi_wdata;
  wire [2:6]wr_index_binary_synced_fs3;
  wire \wr_index_binary_synced_fs3_d1_reg_n_0_[1] ;
  wire \wr_index_binary_synced_fs3_d1_reg_n_0_[2] ;
  wire \wr_index_binary_synced_fs3_d1_reg_n_0_[3] ;
  wire \wr_index_binary_synced_fs3_d1_reg_n_0_[4] ;
  wire \wr_index_binary_synced_fs3_d1_reg_n_0_[5] ;
  wire \wr_index_binary_synced_fs3_d1_reg_n_0_[6] ;
  wire wr_index_gray_2msb_xor_axi;
  wire [1:6]wr_index_gray_reg;
  wire wr_index_gray_reg0;
  wire wr_index_gray_reg012_out;
  wire wr_index_gray_reg014_out;
  wire wr_index_gray_reg016_out;
  wire wr_index_gray_reg018_out;
  wire wr_index_gray_reg020_out;
  wire \wr_index_gray_reg[1]_i_2__0_n_0 ;
  wire [0:6]wr_index_gray_synced_fs3;
  wire \wr_index_gray_synced_fs3_d1_reg_n_0_[2] ;
  wire \wr_index_gray_synced_fs3_d1_reg_n_0_[3] ;
  wire \wr_index_gray_synced_fs3_d1_reg_n_0_[6] ;
  wire [0:5]wr_index_i_reg;
  wire \wr_index_i_reg[1]_0 ;
  wire [0:0]\wr_index_i_reg[6]_0 ;
  wire [0:0]\wr_index_i_reg[6]_1 ;
  wire \wr_index_id_loc[0]_i_1_n_0 ;
  wire \wr_index_id_loc[0]_i_3_n_0 ;
  wire \wr_index_id_loc[0]_i_4_n_0 ;
  wire [0:8]wr_index_id_loc_reg;
  wire [8:0]\wr_index_id_loc_reg[0]_0 ;
  wire [0:0]\wr_index_id_loc_reg[9]_0 ;
  wire [0:0]\NLW_FILL_LEVEL_CMB0_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:2]\NLW_FILL_LEVEL_CMB0_inferred__0/i__carry__0_CO_UNCONNECTED ;
  wire [3:3]\NLW_FILL_LEVEL_CMB0_inferred__0/i__carry__0_O_UNCONNECTED ;
  wire [3:1]\NLW_FILL_LEVEL_reg[6]_i_2_CO_UNCONNECTED ;
  wire [3:2]\NLW_FILL_LEVEL_reg[6]_i_2_O_UNCONNECTED ;
  wire [3:0]NLW_RXWM_SET0_carry_O_UNCONNECTED;
  wire [3:1]\NLW_gen_fifo_rx0.u_rxxpm_1_i_46_CO_UNCONNECTED ;
  wire [3:2]\NLW_gen_fifo_rx0.u_rxxpm_1_i_46_O_UNCONNECTED ;
  wire [0:0]\NLW_gen_fifo_rx0.u_rxxpm_1_i_48_O_UNCONNECTED ;

  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT4 #(
    .INIT(16'h6F60)) 
    \FILL_LEVEL[0]_i_1 
       (.I0(\RD_INDEX_reg[1]_0 [0]),
        .I1(\wr_index_binary_synced_fs3_d1_reg_n_0_[6] ),
        .I2(\FILL_LEVEL[6]_i_3_n_0 ),
        .I3(\FILL_LEVEL_reg[3]_i_2_n_7 ),
        .O(\FILL_LEVEL[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \FILL_LEVEL[1]_i_1__0 
       (.I0(\FILL_LEVEL_CMB0_inferred__0/i__carry_n_6 ),
        .I1(\FILL_LEVEL[6]_i_3_n_0 ),
        .I2(\FILL_LEVEL_reg[3]_i_2_n_6 ),
        .O(\FILL_LEVEL[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \FILL_LEVEL[2]_i_1__0 
       (.I0(\FILL_LEVEL_CMB0_inferred__0/i__carry_n_5 ),
        .I1(\FILL_LEVEL[6]_i_3_n_0 ),
        .I2(\FILL_LEVEL_reg[3]_i_2_n_5 ),
        .O(\FILL_LEVEL[2]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \FILL_LEVEL[3]_i_1__0 
       (.I0(\FILL_LEVEL_CMB0_inferred__0/i__carry_n_4 ),
        .I1(\FILL_LEVEL[6]_i_3_n_0 ),
        .I2(\FILL_LEVEL_reg[3]_i_2_n_4 ),
        .O(\FILL_LEVEL[3]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \FILL_LEVEL[3]_i_3 
       (.I0(\wr_index_binary_synced_fs3_d1_reg_n_0_[3] ),
        .I1(\RD_INDEX_reg[1]_0 [3]),
        .O(\FILL_LEVEL[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \FILL_LEVEL[3]_i_4 
       (.I0(\wr_index_binary_synced_fs3_d1_reg_n_0_[4] ),
        .I1(\RD_INDEX_reg[1]_0 [2]),
        .O(\FILL_LEVEL[3]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \FILL_LEVEL[3]_i_5 
       (.I0(\wr_index_binary_synced_fs3_d1_reg_n_0_[5] ),
        .I1(\RD_INDEX_reg[1]_0 [1]),
        .O(\FILL_LEVEL[3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \FILL_LEVEL[3]_i_6 
       (.I0(\wr_index_binary_synced_fs3_d1_reg_n_0_[6] ),
        .I1(\RD_INDEX_reg[1]_0 [0]),
        .O(\FILL_LEVEL[3]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \FILL_LEVEL[4]_i_1__0 
       (.I0(\FILL_LEVEL_CMB0_inferred__0/i__carry__0_n_7 ),
        .I1(\FILL_LEVEL[6]_i_3_n_0 ),
        .I2(\FILL_LEVEL_reg[6]_i_2_n_7 ),
        .O(\FILL_LEVEL[4]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \FILL_LEVEL[5]_i_2__0 
       (.I0(\FILL_LEVEL_CMB0_inferred__0/i__carry__0_n_6 ),
        .I1(\FILL_LEVEL[6]_i_3_n_0 ),
        .I2(\FILL_LEVEL_reg[6]_i_2_n_6 ),
        .O(\FILL_LEVEL[5]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'hFFE2)) 
    \FILL_LEVEL[6]_i_1 
       (.I0(\FILL_LEVEL_reg[6]_i_2_n_1 ),
        .I1(\FILL_LEVEL[6]_i_3_n_0 ),
        .I2(\FILL_LEVEL_CMB0_inferred__0/i__carry__0_n_5 ),
        .I3(RXF_FULL_AXI),
        .O(\FILL_LEVEL[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT5 #(
    .INIT(32'hB2F330B2)) 
    \FILL_LEVEL[6]_i_3 
       (.I0(\FILL_LEVEL[6]_i_6_n_0 ),
        .I1(\RD_INDEX_reg[1]_0 [5]),
        .I2(\wr_index_binary_synced_fs3_d1_reg_n_0_[1] ),
        .I3(\RD_INDEX_reg[1]_0 [4]),
        .I4(\wr_index_binary_synced_fs3_d1_reg_n_0_[2] ),
        .O(\FILL_LEVEL[6]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \FILL_LEVEL[6]_i_4 
       (.I0(\wr_index_binary_synced_fs3_d1_reg_n_0_[1] ),
        .I1(\RD_INDEX_reg[1]_0 [5]),
        .O(\FILL_LEVEL[6]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \FILL_LEVEL[6]_i_5 
       (.I0(\wr_index_binary_synced_fs3_d1_reg_n_0_[2] ),
        .I1(\RD_INDEX_reg[1]_0 [4]),
        .O(\FILL_LEVEL[6]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT5 #(
    .INIT(32'hB2F330B2)) 
    \FILL_LEVEL[6]_i_6 
       (.I0(\FILL_LEVEL[6]_i_7_n_0 ),
        .I1(\RD_INDEX_reg[1]_0 [3]),
        .I2(\wr_index_binary_synced_fs3_d1_reg_n_0_[3] ),
        .I3(\RD_INDEX_reg[1]_0 [2]),
        .I4(\wr_index_binary_synced_fs3_d1_reg_n_0_[4] ),
        .O(\FILL_LEVEL[6]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT4 #(
    .INIT(16'hC4FD)) 
    \FILL_LEVEL[6]_i_7 
       (.I0(\RD_INDEX_reg[1]_0 [0]),
        .I1(\wr_index_binary_synced_fs3_d1_reg_n_0_[5] ),
        .I2(\wr_index_binary_synced_fs3_d1_reg_n_0_[6] ),
        .I3(\RD_INDEX_reg[1]_0 [1]),
        .O(\FILL_LEVEL[6]_i_7_n_0 ));
  CARRY4 \FILL_LEVEL_CMB0_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\FILL_LEVEL_CMB0_inferred__0/i__carry_n_0 ,\FILL_LEVEL_CMB0_inferred__0/i__carry_n_1 ,\FILL_LEVEL_CMB0_inferred__0/i__carry_n_2 ,\FILL_LEVEL_CMB0_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b1),
        .DI({\wr_index_binary_synced_fs3_d1_reg_n_0_[3] ,\wr_index_binary_synced_fs3_d1_reg_n_0_[4] ,\wr_index_binary_synced_fs3_d1_reg_n_0_[5] ,\wr_index_binary_synced_fs3_d1_reg_n_0_[6] }),
        .O({\FILL_LEVEL_CMB0_inferred__0/i__carry_n_4 ,\FILL_LEVEL_CMB0_inferred__0/i__carry_n_5 ,\FILL_LEVEL_CMB0_inferred__0/i__carry_n_6 ,\NLW_FILL_LEVEL_CMB0_inferred__0/i__carry_O_UNCONNECTED [0]}),
        .S({i__carry_i_1__9_n_0,i__carry_i_2__8_n_0,i__carry_i_3__9_n_0,i__carry_i_4__7_n_0}));
  CARRY4 \FILL_LEVEL_CMB0_inferred__0/i__carry__0 
       (.CI(\FILL_LEVEL_CMB0_inferred__0/i__carry_n_0 ),
        .CO({\NLW_FILL_LEVEL_CMB0_inferred__0/i__carry__0_CO_UNCONNECTED [3:2],\FILL_LEVEL_CMB0_inferred__0/i__carry__0_n_2 ,\FILL_LEVEL_CMB0_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\wr_index_binary_synced_fs3_d1_reg_n_0_[1] ,\wr_index_binary_synced_fs3_d1_reg_n_0_[2] }),
        .O({\NLW_FILL_LEVEL_CMB0_inferred__0/i__carry__0_O_UNCONNECTED [3],\FILL_LEVEL_CMB0_inferred__0/i__carry__0_n_5 ,\FILL_LEVEL_CMB0_inferred__0/i__carry__0_n_6 ,\FILL_LEVEL_CMB0_inferred__0/i__carry__0_n_7 }),
        .S({1'b0,1'b1,i__carry__0_i_1__3_n_0,i__carry__0_i_2__3_n_0}));
  FDRE \FILL_LEVEL_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FILL_LEVEL[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(\FILL_LEVEL_reg[5]_0 ));
  FDRE \FILL_LEVEL_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FILL_LEVEL[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(\FILL_LEVEL_reg[5]_0 ));
  FDRE \FILL_LEVEL_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FILL_LEVEL[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(\FILL_LEVEL_reg[5]_0 ));
  FDRE \FILL_LEVEL_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FILL_LEVEL[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(\FILL_LEVEL_reg[5]_0 ));
  CARRY4 \FILL_LEVEL_reg[3]_i_2 
       (.CI(1'b0),
        .CO({\FILL_LEVEL_reg[3]_i_2_n_0 ,\FILL_LEVEL_reg[3]_i_2_n_1 ,\FILL_LEVEL_reg[3]_i_2_n_2 ,\FILL_LEVEL_reg[3]_i_2_n_3 }),
        .CYINIT(1'b1),
        .DI({\wr_index_binary_synced_fs3_d1_reg_n_0_[3] ,\wr_index_binary_synced_fs3_d1_reg_n_0_[4] ,\wr_index_binary_synced_fs3_d1_reg_n_0_[5] ,\wr_index_binary_synced_fs3_d1_reg_n_0_[6] }),
        .O({\FILL_LEVEL_reg[3]_i_2_n_4 ,\FILL_LEVEL_reg[3]_i_2_n_5 ,\FILL_LEVEL_reg[3]_i_2_n_6 ,\FILL_LEVEL_reg[3]_i_2_n_7 }),
        .S({\FILL_LEVEL[3]_i_3_n_0 ,\FILL_LEVEL[3]_i_4_n_0 ,\FILL_LEVEL[3]_i_5_n_0 ,\FILL_LEVEL[3]_i_6_n_0 }));
  FDRE \FILL_LEVEL_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FILL_LEVEL[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(\FILL_LEVEL_reg[5]_0 ));
  FDRE \FILL_LEVEL_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FILL_LEVEL[5]_i_2__0_n_0 ),
        .Q(Q[5]),
        .R(\FILL_LEVEL_reg[5]_0 ));
  FDRE \FILL_LEVEL_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FILL_LEVEL[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  CARRY4 \FILL_LEVEL_reg[6]_i_2 
       (.CI(\FILL_LEVEL_reg[3]_i_2_n_0 ),
        .CO({\NLW_FILL_LEVEL_reg[6]_i_2_CO_UNCONNECTED [3],\FILL_LEVEL_reg[6]_i_2_n_1 ,\NLW_FILL_LEVEL_reg[6]_i_2_CO_UNCONNECTED [1],\FILL_LEVEL_reg[6]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\wr_index_binary_synced_fs3_d1_reg_n_0_[1] ,\wr_index_binary_synced_fs3_d1_reg_n_0_[2] }),
        .O({\NLW_FILL_LEVEL_reg[6]_i_2_O_UNCONNECTED [3:2],\FILL_LEVEL_reg[6]_i_2_n_6 ,\FILL_LEVEL_reg[6]_i_2_n_7 }),
        .S({1'b0,1'b1,\FILL_LEVEL[6]_i_4_n_0 ,\FILL_LEVEL[6]_i_5_n_0 }));
  FDRE \IC_REG_WMR_I2_reg[0] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[5]),
        .Q(\IC_REG_WMR_I2_reg[0]_0 [5]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \IC_REG_WMR_I2_reg[1] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[4]),
        .Q(\IC_REG_WMR_I2_reg[0]_0 [4]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDSE \IC_REG_WMR_I2_reg[2] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[3]),
        .Q(\IC_REG_WMR_I2_reg[0]_0 [3]),
        .S(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDSE \IC_REG_WMR_I2_reg[3] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[2]),
        .Q(\IC_REG_WMR_I2_reg[0]_0 [2]),
        .S(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDSE \IC_REG_WMR_I2_reg[4] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[1]),
        .Q(\IC_REG_WMR_I2_reg[0]_0 [1]),
        .S(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDSE \IC_REG_WMR_I2_reg[5] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[0]),
        .Q(\IC_REG_WMR_I2_reg[0]_0 [0]),
        .S(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  LUT6 #(
    .INIT(64'h1000100010001F00)) 
    MATCH_RESULT_TO_BSP_i_1
       (.I0(RXF_FULL_I_reg_0),
        .I1(RXF_FULL_AT_MSG_BOUNDARY_reg_0),
        .I2(MATCH_RESULT_TO_BSP_reg),
        .I3(MATCH_RESULT_FS2_D1),
        .I4(MATCH_RESULT_TO_BSP_reg_0),
        .I5(MATCH_RESULT_TO_BSP_reg_1),
        .O(MATCH_RESULT_TO_BSP0));
  LUT6 #(
    .INIT(64'h8888888888888808)) 
    \RD_INDEX[0]_i_1__1 
       (.I0(\RD_INDEX_reg[6]_0 ),
        .I1(\RD_INDEX_reg[6]_1 ),
        .I2(\RD_INDEX[0]_i_4__0_n_0 ),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(Q[2]),
        .O(RD_INDEX0));
  LUT6 #(
    .INIT(64'hF7FFFFFF08000000)) 
    \RD_INDEX[0]_i_2__0 
       (.I0(\RD_INDEX_reg[1]_0 [5]),
        .I1(\RD_INDEX_reg[1]_0 [3]),
        .I2(\RD_INDEX[0]_i_5_n_0 ),
        .I3(\RD_INDEX_reg[1]_0 [2]),
        .I4(\RD_INDEX_reg[1]_0 [4]),
        .I5(p_0_in),
        .O(p_0_in__0[6]));
  LUT4 #(
    .INIT(16'h0001)) 
    \RD_INDEX[0]_i_4__0 
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(Q[4]),
        .I3(Q[3]),
        .O(\RD_INDEX[0]_i_4__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \RD_INDEX[0]_i_5 
       (.I0(\RD_INDEX_reg[1]_0 [0]),
        .I1(\RD_INDEX_reg[1]_0 [1]),
        .O(\RD_INDEX[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \RD_INDEX[1]_i_1__0 
       (.I0(\RD_INDEX_reg[1]_0 [4]),
        .I1(\RD_INDEX_reg[1]_0 [2]),
        .I2(\RD_INDEX_reg[1]_0 [0]),
        .I3(\RD_INDEX_reg[1]_0 [1]),
        .I4(\RD_INDEX_reg[1]_0 [3]),
        .I5(\RD_INDEX_reg[1]_0 [5]),
        .O(p_0_in__0[5]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \RD_INDEX[2]_i_1__0 
       (.I0(\RD_INDEX_reg[1]_0 [3]),
        .I1(\RD_INDEX_reg[1]_0 [1]),
        .I2(\RD_INDEX_reg[1]_0 [0]),
        .I3(\RD_INDEX_reg[1]_0 [2]),
        .I4(\RD_INDEX_reg[1]_0 [4]),
        .O(p_0_in__0[4]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \RD_INDEX[3]_i_1__0 
       (.I0(\RD_INDEX_reg[1]_0 [2]),
        .I1(\RD_INDEX_reg[1]_0 [0]),
        .I2(\RD_INDEX_reg[1]_0 [1]),
        .I3(\RD_INDEX_reg[1]_0 [3]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \RD_INDEX[4]_i_1 
       (.I0(\RD_INDEX_reg[1]_0 [1]),
        .I1(\RD_INDEX_reg[1]_0 [0]),
        .I2(\RD_INDEX_reg[1]_0 [2]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \RD_INDEX[6]_i_1 
       (.I0(\RD_INDEX_reg[1]_0 [0]),
        .O(\RD_INDEX[6]_i_1_n_0 ));
  FDRE \RD_INDEX_reg[0] 
       (.C(s_axi_aclk),
        .CE(RD_INDEX0),
        .D(p_0_in__0[6]),
        .Q(p_0_in),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \RD_INDEX_reg[1] 
       (.C(s_axi_aclk),
        .CE(RD_INDEX0),
        .D(p_0_in__0[5]),
        .Q(\RD_INDEX_reg[1]_0 [5]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \RD_INDEX_reg[2] 
       (.C(s_axi_aclk),
        .CE(RD_INDEX0),
        .D(p_0_in__0[4]),
        .Q(\RD_INDEX_reg[1]_0 [4]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \RD_INDEX_reg[3] 
       (.C(s_axi_aclk),
        .CE(RD_INDEX0),
        .D(p_0_in__0[3]),
        .Q(\RD_INDEX_reg[1]_0 [3]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \RD_INDEX_reg[4] 
       (.C(s_axi_aclk),
        .CE(RD_INDEX0),
        .D(p_0_in__0[2]),
        .Q(\RD_INDEX_reg[1]_0 [2]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \RD_INDEX_reg[5] 
       (.C(s_axi_aclk),
        .CE(RD_INDEX0),
        .D(rd_index_gray_reg0),
        .Q(\RD_INDEX_reg[1]_0 [1]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \RD_INDEX_reg[6] 
       (.C(s_axi_aclk),
        .CE(RD_INDEX0),
        .D(\RD_INDEX[6]_i_1_n_0 ),
        .Q(\RD_INDEX_reg[1]_0 [0]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized2 RD_PTR_2C_CDC_TO
       (.D({rd_index_gray_synced_fs2[0],rd_index_gray_synced_fs2[1],rd_index_gray_synced_fs2[2],rd_index_gray_synced_fs2[3],rd_index_gray_synced_fs2[4],rd_index_gray_synced_fs2[5],rd_index_gray_synced_fs2[6]}),
        .Q({rd_index_gray_reg[0],rd_index_gray_reg[1],rd_index_gray_reg[2],rd_index_gray_reg[3],rd_index_gray_reg[4],rd_index_gray_reg[5],rd_index_gray_reg[6]}),
        .SR(SR),
        .can_clk(can_clk));
  LUT6 #(
    .INIT(64'h0000001000000000)) 
    \RXE_DATA_STORED_AT_DLC[0]_i_1 
       (.I0(\addr_location_incr_count_reg_n_0_[2] ),
        .I1(\addr_location_incr_count_reg_n_0_[3] ),
        .I2(\addr_location_incr_count_reg[0]_0 ),
        .I3(\addr_location_incr_count_reg[1]_0 ),
        .I4(\addr_location_incr_count_reg_n_0_[4] ),
        .I5(RXE_RXFIFO_WEN),
        .O(RXE_DATA_STORED_AT_DLC0));
  FDRE \RXE_DATA_STORED_AT_DLC_reg[0] 
       (.C(can_clk),
        .CE(RXE_DATA_STORED_AT_DLC0),
        .D(\RXE_DATA_STORED_AT_DLC_reg[0]_1 [10]),
        .Q(\RXE_DATA_STORED_AT_DLC_reg[0]_0 [10]),
        .R(SR));
  FDRE \RXE_DATA_STORED_AT_DLC_reg[10] 
       (.C(can_clk),
        .CE(RXE_DATA_STORED_AT_DLC0),
        .D(\RXE_DATA_STORED_AT_DLC_reg[0]_1 [0]),
        .Q(\RXE_DATA_STORED_AT_DLC_reg[0]_0 [0]),
        .R(SR));
  FDRE \RXE_DATA_STORED_AT_DLC_reg[1] 
       (.C(can_clk),
        .CE(RXE_DATA_STORED_AT_DLC0),
        .D(\RXE_DATA_STORED_AT_DLC_reg[0]_1 [9]),
        .Q(\RXE_DATA_STORED_AT_DLC_reg[0]_0 [9]),
        .R(SR));
  FDRE \RXE_DATA_STORED_AT_DLC_reg[2] 
       (.C(can_clk),
        .CE(RXE_DATA_STORED_AT_DLC0),
        .D(\RXE_DATA_STORED_AT_DLC_reg[0]_1 [8]),
        .Q(\RXE_DATA_STORED_AT_DLC_reg[0]_0 [8]),
        .R(SR));
  FDRE \RXE_DATA_STORED_AT_DLC_reg[3] 
       (.C(can_clk),
        .CE(RXE_DATA_STORED_AT_DLC0),
        .D(\RXE_DATA_STORED_AT_DLC_reg[0]_1 [7]),
        .Q(\RXE_DATA_STORED_AT_DLC_reg[0]_0 [7]),
        .R(SR));
  FDRE \RXE_DATA_STORED_AT_DLC_reg[4] 
       (.C(can_clk),
        .CE(RXE_DATA_STORED_AT_DLC0),
        .D(\RXE_DATA_STORED_AT_DLC_reg[0]_1 [6]),
        .Q(\RXE_DATA_STORED_AT_DLC_reg[0]_0 [6]),
        .R(SR));
  FDRE \RXE_DATA_STORED_AT_DLC_reg[5] 
       (.C(can_clk),
        .CE(RXE_DATA_STORED_AT_DLC0),
        .D(\RXE_DATA_STORED_AT_DLC_reg[0]_1 [5]),
        .Q(\RXE_DATA_STORED_AT_DLC_reg[0]_0 [5]),
        .R(SR));
  FDRE \RXE_DATA_STORED_AT_DLC_reg[6] 
       (.C(can_clk),
        .CE(RXE_DATA_STORED_AT_DLC0),
        .D(\RXE_DATA_STORED_AT_DLC_reg[0]_1 [4]),
        .Q(\RXE_DATA_STORED_AT_DLC_reg[0]_0 [4]),
        .R(SR));
  FDRE \RXE_DATA_STORED_AT_DLC_reg[7] 
       (.C(can_clk),
        .CE(RXE_DATA_STORED_AT_DLC0),
        .D(\RXE_DATA_STORED_AT_DLC_reg[0]_1 [3]),
        .Q(\RXE_DATA_STORED_AT_DLC_reg[0]_0 [3]),
        .R(SR));
  FDRE \RXE_DATA_STORED_AT_DLC_reg[8] 
       (.C(can_clk),
        .CE(RXE_DATA_STORED_AT_DLC0),
        .D(\RXE_DATA_STORED_AT_DLC_reg[0]_1 [2]),
        .Q(\RXE_DATA_STORED_AT_DLC_reg[0]_0 [2]),
        .R(SR));
  FDRE \RXE_DATA_STORED_AT_DLC_reg[9] 
       (.C(can_clk),
        .CE(RXE_DATA_STORED_AT_DLC0),
        .D(\RXE_DATA_STORED_AT_DLC_reg[0]_1 [1]),
        .Q(\RXE_DATA_STORED_AT_DLC_reg[0]_0 [1]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT5 #(
    .INIT(32'h0000AEAA)) 
    RXF_FULL_AT_MSG_BOUNDARY_i_1__0
       (.I0(RXF_FULL_AT_MSG_BOUNDARY_reg_0),
        .I1(RXF_FULL_I_reg_0),
        .I2(RXE_RXFIFO_WEN_FD2),
        .I3(RXE_RXFIFO_WEN_FD1),
        .I4(RXF_FULL_AT_MSG_BOUNDARY_reg_1),
        .O(RXF_FULL_AT_MSG_BOUNDARY_i_1__0_n_0));
  FDRE RXF_FULL_AT_MSG_BOUNDARY_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXF_FULL_AT_MSG_BOUNDARY_i_1__0_n_0),
        .Q(RXF_FULL_AT_MSG_BOUNDARY_reg_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0080800080000080)) 
    RXF_FULL_AXI_i_1__0
       (.I0(RXF_FULL_AXI_i_2__0_n_0),
        .I1(RXF_FULL_AXI_i_3__0_n_0),
        .I2(RXF_FULL_AXI_i_4_n_0),
        .I3(\RD_INDEX_reg[1]_0 [4]),
        .I4(\RD_INDEX_reg[1]_0 [3]),
        .I5(\wr_index_gray_synced_fs3_d1_reg_n_0_[3] ),
        .O(RXF_FULL_AXI0));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT4 #(
    .INIT(16'h0690)) 
    RXF_FULL_AXI_i_2__0
       (.I0(\RD_INDEX_reg[1]_0 [5]),
        .I1(p_0_in32_in),
        .I2(p_0_in),
        .I3(p_1_in),
        .O(RXF_FULL_AXI_i_2__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT5 #(
    .INIT(32'h09606009)) 
    RXF_FULL_AXI_i_3__0
       (.I0(\RD_INDEX_reg[1]_0 [1]),
        .I1(p_2_in),
        .I2(\RD_INDEX_reg[1]_0 [2]),
        .I3(\RD_INDEX_reg[1]_0 [3]),
        .I4(p_1_in25_in),
        .O(RXF_FULL_AXI_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h0069690069000069)) 
    RXF_FULL_AXI_i_4
       (.I0(\RD_INDEX_reg[1]_0 [5]),
        .I1(\RD_INDEX_reg[1]_0 [4]),
        .I2(\wr_index_gray_synced_fs3_d1_reg_n_0_[2] ),
        .I3(\RD_INDEX_reg[1]_0 [1]),
        .I4(\RD_INDEX_reg[1]_0 [0]),
        .I5(\wr_index_gray_synced_fs3_d1_reg_n_0_[6] ),
        .O(RXF_FULL_AXI_i_4_n_0));
  FDRE RXF_FULL_AXI_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(RXF_FULL_AXI0),
        .Q(RXF_FULL_AXI),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  LUT6 #(
    .INIT(64'h4824214200000000)) 
    RXF_FULL_I_i_1__0
       (.I0(p_0_in0_in),
        .I1(wr_index_i_reg[0]),
        .I2(\wr_index_gray_reg[1]_i_2__0_n_0 ),
        .I3(wr_index_i_reg[1]),
        .I4(p_0_in38_in),
        .I5(RXF_FULL_I1__8),
        .O(RXF_FULL_I0));
  LUT6 #(
    .INIT(64'h0060900060000090)) 
    RXF_FULL_I_i_2__0
       (.I0(\rd_index_gray_synced_fs2_d1_reg_n_0_[3] ),
        .I1(p_1_in13_in),
        .I2(RXF_FULL_I_i_3__0_n_0),
        .I3(p_1_in17_in),
        .I4(p_1_in15_in),
        .I5(\rd_index_gray_synced_fs2_d1_reg_n_0_[2] ),
        .O(RXF_FULL_I1__8));
  LUT6 #(
    .INIT(64'h2222882888882282)) 
    RXF_FULL_I_i_3__0
       (.I0(RXF_FULL_I_i_4__0_n_0),
        .I1(wr_index_i_reg[3]),
        .I2(wr_index_i_reg[5]),
        .I3(\wr_index_i_reg[1]_0 ),
        .I4(wr_index_i_reg[4]),
        .I5(\rd_index_gray_synced_fs2_d1_reg_n_0_[4] ),
        .O(RXF_FULL_I_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h0006699066600009)) 
    RXF_FULL_I_i_4__0
       (.I0(wr_index_i_reg[4]),
        .I1(\rd_index_gray_synced_fs2_d1_reg_n_0_[5] ),
        .I2(RXE_RXMSG_VAL_F0),
        .I3(\wr_index_i_reg[6]_0 ),
        .I4(wr_index_i_reg[5]),
        .I5(\rd_index_gray_synced_fs2_d1_reg_n_0_[6] ),
        .O(RXF_FULL_I_i_4__0_n_0));
  FDRE RXF_FULL_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXF_FULL_I0),
        .Q(RXF_FULL_I_reg_0),
        .R(SR));
  CARRY4 RXWM_SET0_carry
       (.CI(1'b0),
        .CO({RXWM_SET0_carry_n_0,RXWM_SET0_carry_n_1,RXWM_SET0_carry_n_2,RXWM_SET0_carry_n_3}),
        .CYINIT(1'b0),
        .DI({Q[6],RXWM_SET0_carry_i_1_n_0,RXWM_SET0_carry_i_2_n_0,RXWM_SET0_carry_i_3_n_0}),
        .O(NLW_RXWM_SET0_carry_O_UNCONNECTED[3:0]),
        .S({RXWM_SET0_carry_i_4_n_0,RXWM_SET0_carry_i_5_n_0,RXWM_SET0_carry_i_6_n_0,RXWM_SET0_carry_i_7_n_0}));
  LUT4 #(
    .INIT(16'h22B2)) 
    RXWM_SET0_carry_i_1
       (.I0(Q[5]),
        .I1(\IC_REG_WMR_I2_reg[0]_0 [5]),
        .I2(Q[4]),
        .I3(\IC_REG_WMR_I2_reg[0]_0 [4]),
        .O(RXWM_SET0_carry_i_1_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    RXWM_SET0_carry_i_2
       (.I0(Q[3]),
        .I1(\IC_REG_WMR_I2_reg[0]_0 [3]),
        .I2(Q[2]),
        .I3(\IC_REG_WMR_I2_reg[0]_0 [2]),
        .O(RXWM_SET0_carry_i_2_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    RXWM_SET0_carry_i_3
       (.I0(Q[1]),
        .I1(\IC_REG_WMR_I2_reg[0]_0 [1]),
        .I2(Q[0]),
        .I3(\IC_REG_WMR_I2_reg[0]_0 [0]),
        .O(RXWM_SET0_carry_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    RXWM_SET0_carry_i_4
       (.I0(Q[6]),
        .O(RXWM_SET0_carry_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    RXWM_SET0_carry_i_5
       (.I0(\IC_REG_WMR_I2_reg[0]_0 [5]),
        .I1(Q[5]),
        .I2(\IC_REG_WMR_I2_reg[0]_0 [4]),
        .I3(Q[4]),
        .O(RXWM_SET0_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    RXWM_SET0_carry_i_6
       (.I0(\IC_REG_WMR_I2_reg[0]_0 [3]),
        .I1(Q[3]),
        .I2(\IC_REG_WMR_I2_reg[0]_0 [2]),
        .I3(Q[2]),
        .O(RXWM_SET0_carry_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    RXWM_SET0_carry_i_7
       (.I0(\IC_REG_WMR_I2_reg[0]_0 [1]),
        .I1(Q[1]),
        .I2(\IC_REG_WMR_I2_reg[0]_0 [0]),
        .I3(Q[0]),
        .O(RXWM_SET0_carry_i_7_n_0));
  FDRE RXWM_SET_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(RXWM_SET0_carry_n_0),
        .Q(RXWM_SET),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized3 WR_PTR_2S_CDC_TO
       (.D({wr_index_gray_synced_fs3[0],wr_index_gray_synced_fs3[1],wr_index_gray_synced_fs3[2],wr_index_gray_synced_fs3[3],wr_index_gray_synced_fs3[4],wr_index_gray_synced_fs3[5],wr_index_gray_synced_fs3[6]}),
        .\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 (\MULTI_BIT.s_level_out_bus_d5_reg[0] ),
        .Q({wr_index_gray_reg[1],wr_index_gray_reg[2],wr_index_gray_reg[3],wr_index_gray_reg[4],wr_index_gray_reg[5],wr_index_gray_reg[6]}),
        .s_axi_aclk(s_axi_aclk),
        .wr_index_i_reg(wr_index_i_reg[0]));
  LUT5 #(
    .INIT(32'h00005154)) 
    \addr_location_incr_count[0]_i_1 
       (.I0(TS_RX_WEN),
        .I1(addr_location_incr_count0),
        .I2(RXE_MSGVAL_EARLY_F0),
        .I3(\addr_location_incr_count_reg[0]_0 ),
        .I4(RXF_FULL_AT_MSG_BOUNDARY_reg_1),
        .O(\addr_location_incr_count[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \addr_location_incr_count[1]_i_1__0 
       (.I0(\addr_location_incr_count_reg[0]_0 ),
        .I1(\addr_location_incr_count_reg[1]_0 ),
        .O(\addr_location_incr_count[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \addr_location_incr_count[2]_i_1__0 
       (.I0(\addr_location_incr_count_reg[1]_0 ),
        .I1(\addr_location_incr_count_reg[0]_0 ),
        .I2(\addr_location_incr_count_reg_n_0_[2] ),
        .O(\addr_location_incr_count[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \addr_location_incr_count[3]_i_1__0 
       (.I0(\addr_location_incr_count_reg_n_0_[2] ),
        .I1(\addr_location_incr_count_reg[0]_0 ),
        .I2(\addr_location_incr_count_reg[1]_0 ),
        .I3(\addr_location_incr_count_reg_n_0_[3] ),
        .O(\addr_location_incr_count[3]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h222222222222222A)) 
    \addr_location_incr_count[4]_i_2 
       (.I0(\addr_location_incr_count[4]_i_4_n_0 ),
        .I1(\addr_location_incr_count_reg_n_0_[4] ),
        .I2(\addr_location_incr_count_reg[1]_0 ),
        .I3(\addr_location_incr_count_reg[0]_0 ),
        .I4(\addr_location_incr_count_reg_n_0_[3] ),
        .I5(\addr_location_incr_count_reg_n_0_[2] ),
        .O(addr_location_incr_count0));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \addr_location_incr_count[4]_i_3 
       (.I0(\addr_location_incr_count_reg_n_0_[3] ),
        .I1(\addr_location_incr_count_reg[1]_0 ),
        .I2(\addr_location_incr_count_reg[0]_0 ),
        .I3(\addr_location_incr_count_reg_n_0_[2] ),
        .I4(\addr_location_incr_count_reg_n_0_[4] ),
        .O(\addr_location_incr_count[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \addr_location_incr_count[4]_i_4 
       (.I0(RXF_FULL_I_reg_0),
        .I1(RXE_RXFIFO_WEN_FD1),
        .I2(RXE_RXFIFO_WEN_FD2),
        .I3(RXF_FULL_AT_MSG_BOUNDARY_reg_0),
        .O(\addr_location_incr_count[4]_i_4_n_0 ));
  FDRE \addr_location_incr_count_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\addr_location_incr_count[0]_i_1_n_0 ),
        .Q(\addr_location_incr_count_reg[0]_0 ),
        .R(1'b0));
  FDRE \addr_location_incr_count_reg[1] 
       (.C(can_clk),
        .CE(addr_location_incr_count0),
        .D(\addr_location_incr_count[1]_i_1__0_n_0 ),
        .Q(\addr_location_incr_count_reg[1]_0 ),
        .R(addr_location_incr_count));
  FDRE \addr_location_incr_count_reg[2] 
       (.C(can_clk),
        .CE(addr_location_incr_count0),
        .D(\addr_location_incr_count[2]_i_1__0_n_0 ),
        .Q(\addr_location_incr_count_reg_n_0_[2] ),
        .R(addr_location_incr_count));
  FDRE \addr_location_incr_count_reg[3] 
       (.C(can_clk),
        .CE(addr_location_incr_count0),
        .D(\addr_location_incr_count[3]_i_1__0_n_0 ),
        .Q(\addr_location_incr_count_reg_n_0_[3] ),
        .R(addr_location_incr_count));
  FDRE \addr_location_incr_count_reg[4] 
       (.C(can_clk),
        .CE(addr_location_incr_count0),
        .D(\addr_location_incr_count[4]_i_3_n_0 ),
        .Q(\addr_location_incr_count_reg_n_0_[4] ),
        .R(addr_location_incr_count));
  CARRY4 \gen_fifo_rx0.u_rxxpm_1_i_46 
       (.CI(\gen_fifo_rx0.u_rxxpm_1_i_47_n_0 ),
        .CO({\NLW_gen_fifo_rx0.u_rxxpm_1_i_46_CO_UNCONNECTED [3:1],\gen_fifo_rx0.u_rxxpm_1_i_46_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_fifo_rx0.u_rxxpm_1_i_46_O_UNCONNECTED [3:2],\wr_index_id_loc_reg[0]_0 [8:7]}),
        .S({1'b0,1'b0,wr_index_id_loc_reg[0],wr_index_id_loc_reg[1]}));
  CARRY4 \gen_fifo_rx0.u_rxxpm_1_i_47 
       (.CI(\gen_fifo_rx0.u_rxxpm_1_i_48_n_0 ),
        .CO({\gen_fifo_rx0.u_rxxpm_1_i_47_n_0 ,\gen_fifo_rx0.u_rxxpm_1_i_47_n_1 ,\gen_fifo_rx0.u_rxxpm_1_i_47_n_2 ,\gen_fifo_rx0.u_rxxpm_1_i_47_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\wr_index_id_loc_reg[0]_0 [6:3]),
        .S({wr_index_id_loc_reg[2],wr_index_id_loc_reg[3],wr_index_id_loc_reg[4],wr_index_id_loc_reg[5]}));
  CARRY4 \gen_fifo_rx0.u_rxxpm_1_i_48 
       (.CI(1'b0),
        .CO({\gen_fifo_rx0.u_rxxpm_1_i_48_n_0 ,\gen_fifo_rx0.u_rxxpm_1_i_48_n_1 ,\gen_fifo_rx0.u_rxxpm_1_i_48_n_2 ,\gen_fifo_rx0.u_rxxpm_1_i_48_n_3 }),
        .CYINIT(1'b0),
        .DI({wr_index_id_loc_reg[6],wr_index_id_loc_reg[7],wr_index_id_loc_reg[8],\wr_index_id_loc_reg[9]_0 }),
        .O({\wr_index_id_loc_reg[0]_0 [2:0],\NLW_gen_fifo_rx0.u_rxxpm_1_i_48_O_UNCONNECTED [0]}),
        .S({\gen_fifo_rx0.u_rxxpm_1_i_65_n_0 ,\gen_fifo_rx0.u_rxxpm_1_i_66_n_0 ,\gen_fifo_rx0.u_rxxpm_1_i_67_n_0 ,RX_ADDR_M_CC}));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_fifo_rx0.u_rxxpm_1_i_65 
       (.I0(wr_index_id_loc_reg[6]),
        .I1(\addr_location_incr_count_reg_n_0_[4] ),
        .O(\gen_fifo_rx0.u_rxxpm_1_i_65_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_fifo_rx0.u_rxxpm_1_i_66 
       (.I0(wr_index_id_loc_reg[7]),
        .I1(\addr_location_incr_count_reg_n_0_[3] ),
        .O(\gen_fifo_rx0.u_rxxpm_1_i_66_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_fifo_rx0.u_rxxpm_1_i_67 
       (.I0(wr_index_id_loc_reg[8]),
        .I1(\addr_location_incr_count_reg_n_0_[2] ),
        .O(\gen_fifo_rx0.u_rxxpm_1_i_67_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_fifo_rx0.u_rxxpm_1_i_68 
       (.I0(\wr_index_id_loc_reg[9]_0 ),
        .I1(\addr_location_incr_count_reg[1]_0 ),
        .O(RX_ADDR_M_CC));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__0_i_1__3
       (.I0(\wr_index_binary_synced_fs3_d1_reg_n_0_[1] ),
        .I1(\RD_INDEX_reg[1]_0 [5]),
        .O(i__carry__0_i_1__3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__0_i_2__3
       (.I0(\wr_index_binary_synced_fs3_d1_reg_n_0_[2] ),
        .I1(\RD_INDEX_reg[1]_0 [4]),
        .O(i__carry__0_i_2__3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry_i_1__9
       (.I0(\wr_index_binary_synced_fs3_d1_reg_n_0_[3] ),
        .I1(\RD_INDEX_reg[1]_0 [3]),
        .O(i__carry_i_1__9_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry_i_2__8
       (.I0(\wr_index_binary_synced_fs3_d1_reg_n_0_[4] ),
        .I1(\RD_INDEX_reg[1]_0 [2]),
        .O(i__carry_i_2__8_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry_i_3__9
       (.I0(\wr_index_binary_synced_fs3_d1_reg_n_0_[5] ),
        .I1(\RD_INDEX_reg[1]_0 [1]),
        .O(i__carry_i_3__9_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry_i_4__7
       (.I0(\wr_index_binary_synced_fs3_d1_reg_n_0_[6] ),
        .I1(\RD_INDEX_reg[1]_0 [0]),
        .O(i__carry_i_4__7_n_0));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_index_gray_reg[1]_i_1__0 
       (.I0(\RD_INDEX_reg[1]_0 [5]),
        .I1(p_0_in),
        .O(rd_index_gray_reg09_out));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_index_gray_reg[2]_i_1__0 
       (.I0(\RD_INDEX_reg[1]_0 [4]),
        .I1(\RD_INDEX_reg[1]_0 [5]),
        .O(rd_index_gray_reg07_out));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_index_gray_reg[3]_i_1 
       (.I0(\RD_INDEX_reg[1]_0 [3]),
        .I1(\RD_INDEX_reg[1]_0 [4]),
        .O(rd_index_gray_reg05_out));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_index_gray_reg[4]_i_1__0 
       (.I0(\RD_INDEX_reg[1]_0 [3]),
        .I1(\RD_INDEX_reg[1]_0 [2]),
        .O(rd_index_gray_reg03_out));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_index_gray_reg[5]_i_1__0 
       (.I0(\RD_INDEX_reg[1]_0 [1]),
        .I1(\RD_INDEX_reg[1]_0 [2]),
        .O(rd_index_gray_reg01_out));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_index_gray_reg[6]_i_1 
       (.I0(\RD_INDEX_reg[1]_0 [0]),
        .I1(\RD_INDEX_reg[1]_0 [1]),
        .O(rd_index_gray_reg0));
  FDRE \rd_index_gray_reg_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_0_in),
        .Q(rd_index_gray_reg[0]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \rd_index_gray_reg_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(rd_index_gray_reg09_out),
        .Q(rd_index_gray_reg[1]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \rd_index_gray_reg_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(rd_index_gray_reg07_out),
        .Q(rd_index_gray_reg[2]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \rd_index_gray_reg_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(rd_index_gray_reg05_out),
        .Q(rd_index_gray_reg[3]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \rd_index_gray_reg_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(rd_index_gray_reg03_out),
        .Q(rd_index_gray_reg[4]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \rd_index_gray_reg_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(rd_index_gray_reg01_out),
        .Q(rd_index_gray_reg[5]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \rd_index_gray_reg_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(rd_index_gray_reg0),
        .Q(rd_index_gray_reg[6]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \rd_index_gray_synced_fs2_d1_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(rd_index_gray_synced_fs2[0]),
        .Q(p_0_in0_in),
        .R(SR));
  FDRE \rd_index_gray_synced_fs2_d1_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(rd_index_gray_synced_fs2[1]),
        .Q(p_0_in38_in),
        .R(SR));
  FDRE \rd_index_gray_synced_fs2_d1_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(rd_index_gray_synced_fs2[2]),
        .Q(\rd_index_gray_synced_fs2_d1_reg_n_0_[2] ),
        .R(SR));
  FDRE \rd_index_gray_synced_fs2_d1_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(rd_index_gray_synced_fs2[3]),
        .Q(\rd_index_gray_synced_fs2_d1_reg_n_0_[3] ),
        .R(SR));
  FDRE \rd_index_gray_synced_fs2_d1_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(rd_index_gray_synced_fs2[4]),
        .Q(\rd_index_gray_synced_fs2_d1_reg_n_0_[4] ),
        .R(SR));
  FDRE \rd_index_gray_synced_fs2_d1_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(rd_index_gray_synced_fs2[5]),
        .Q(\rd_index_gray_synced_fs2_d1_reg_n_0_[5] ),
        .R(SR));
  FDRE \rd_index_gray_synced_fs2_d1_reg[6] 
       (.C(can_clk),
        .CE(1'b1),
        .D(rd_index_gray_synced_fs2[6]),
        .Q(\rd_index_gray_synced_fs2_d1_reg_n_0_[6] ),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_index_binary_synced_fs3_d1[1]_i_1__0 
       (.I0(p_0_in32_in),
        .I1(p_1_in),
        .O(wr_index_gray_2msb_xor_axi));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \wr_index_binary_synced_fs3_d1[2]_i_1__0 
       (.I0(\wr_index_gray_synced_fs3_d1_reg_n_0_[2] ),
        .I1(p_1_in),
        .I2(p_0_in32_in),
        .O(wr_index_binary_synced_fs3[2]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \wr_index_binary_synced_fs3_d1[3]_i_1__0 
       (.I0(\wr_index_gray_synced_fs3_d1_reg_n_0_[3] ),
        .I1(\wr_index_gray_synced_fs3_d1_reg_n_0_[2] ),
        .I2(p_1_in),
        .I3(p_0_in32_in),
        .O(wr_index_binary_synced_fs3[3]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \wr_index_binary_synced_fs3_d1[4]_i_1__0 
       (.I0(p_1_in25_in),
        .I1(p_0_in32_in),
        .I2(p_1_in),
        .I3(\wr_index_gray_synced_fs3_d1_reg_n_0_[2] ),
        .I4(\wr_index_gray_synced_fs3_d1_reg_n_0_[3] ),
        .O(wr_index_binary_synced_fs3[4]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \wr_index_binary_synced_fs3_d1[5]_i_1__0 
       (.I0(\wr_index_gray_synced_fs3_d1_reg_n_0_[3] ),
        .I1(\wr_index_gray_synced_fs3_d1_reg_n_0_[2] ),
        .I2(p_1_in),
        .I3(p_0_in32_in),
        .I4(p_2_in),
        .I5(p_1_in25_in),
        .O(wr_index_binary_synced_fs3[5]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \wr_index_binary_synced_fs3_d1[6]_i_1 
       (.I0(\wr_index_gray_synced_fs3_d1_reg_n_0_[3] ),
        .I1(\wr_index_gray_synced_fs3_d1_reg_n_0_[2] ),
        .I2(wr_index_gray_2msb_xor_axi),
        .I3(p_1_in25_in),
        .I4(p_2_in),
        .I5(\wr_index_gray_synced_fs3_d1_reg_n_0_[6] ),
        .O(wr_index_binary_synced_fs3[6]));
  FDRE \wr_index_binary_synced_fs3_d1_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_gray_2msb_xor_axi),
        .Q(\wr_index_binary_synced_fs3_d1_reg_n_0_[1] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_binary_synced_fs3_d1_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_binary_synced_fs3[2]),
        .Q(\wr_index_binary_synced_fs3_d1_reg_n_0_[2] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_binary_synced_fs3_d1_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_binary_synced_fs3[3]),
        .Q(\wr_index_binary_synced_fs3_d1_reg_n_0_[3] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_binary_synced_fs3_d1_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_binary_synced_fs3[4]),
        .Q(\wr_index_binary_synced_fs3_d1_reg_n_0_[4] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_binary_synced_fs3_d1_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_binary_synced_fs3[5]),
        .Q(\wr_index_binary_synced_fs3_d1_reg_n_0_[5] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_binary_synced_fs3_d1_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_binary_synced_fs3[6]),
        .Q(\wr_index_binary_synced_fs3_d1_reg_n_0_[6] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'h59)) 
    \wr_index_gray_reg[1]_i_1__0 
       (.I0(wr_index_i_reg[0]),
        .I1(\wr_index_gray_reg[1]_i_2__0_n_0 ),
        .I2(wr_index_i_reg[1]),
        .O(wr_index_gray_reg020_out));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \wr_index_gray_reg[1]_i_2__0 
       (.I0(wr_index_i_reg[2]),
        .I1(wr_index_i_reg[5]),
        .I2(RXE_RXMSG_VAL_F0),
        .I3(\wr_index_i_reg[6]_0 ),
        .I4(wr_index_i_reg[4]),
        .I5(wr_index_i_reg[3]),
        .O(\wr_index_gray_reg[1]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_index_gray_reg[2]_i_1__0 
       (.I0(p_1_in15_in),
        .I1(p_1_in17_in),
        .O(wr_index_gray_reg018_out));
  LUT6 #(
    .INIT(64'h5666666666666666)) 
    \wr_index_gray_reg[3]_i_1__0 
       (.I0(wr_index_i_reg[2]),
        .I1(wr_index_i_reg[3]),
        .I2(wr_index_i_reg[4]),
        .I3(\wr_index_i_reg[6]_0 ),
        .I4(RXE_RXMSG_VAL_F0),
        .I5(wr_index_i_reg[5]),
        .O(wr_index_gray_reg016_out));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT5 #(
    .INIT(32'h55556AAA)) 
    \wr_index_gray_reg[4]_i_1__0 
       (.I0(wr_index_i_reg[3]),
        .I1(wr_index_i_reg[5]),
        .I2(RXE_RXMSG_VAL_F0),
        .I3(\wr_index_i_reg[6]_0 ),
        .I4(wr_index_i_reg[4]),
        .O(wr_index_gray_reg014_out));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT4 #(
    .INIT(16'h556A)) 
    \wr_index_gray_reg[5]_i_1__0 
       (.I0(wr_index_i_reg[4]),
        .I1(\wr_index_i_reg[6]_0 ),
        .I2(RXE_RXMSG_VAL_F0),
        .I3(wr_index_i_reg[5]),
        .O(wr_index_gray_reg012_out));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'h1E)) 
    \wr_index_gray_reg[6]_i_1 
       (.I0(RXE_RXMSG_VAL_F0),
        .I1(\wr_index_i_reg[6]_0 ),
        .I2(wr_index_i_reg[5]),
        .O(wr_index_gray_reg0));
  FDRE \wr_index_gray_reg_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(wr_index_gray_reg020_out),
        .Q(wr_index_gray_reg[1]),
        .R(SR));
  FDRE \wr_index_gray_reg_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(wr_index_gray_reg018_out),
        .Q(wr_index_gray_reg[2]),
        .R(SR));
  FDRE \wr_index_gray_reg_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(wr_index_gray_reg016_out),
        .Q(wr_index_gray_reg[3]),
        .R(SR));
  FDRE \wr_index_gray_reg_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(wr_index_gray_reg014_out),
        .Q(wr_index_gray_reg[4]),
        .R(SR));
  FDRE \wr_index_gray_reg_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(wr_index_gray_reg012_out),
        .Q(wr_index_gray_reg[5]),
        .R(SR));
  FDRE \wr_index_gray_reg_reg[6] 
       (.C(can_clk),
        .CE(1'b1),
        .D(wr_index_gray_reg0),
        .Q(wr_index_gray_reg[6]),
        .R(SR));
  FDRE \wr_index_gray_synced_fs3_d1_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_gray_synced_fs3[0]),
        .Q(p_1_in),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_gray_synced_fs3_d1_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_gray_synced_fs3[1]),
        .Q(p_0_in32_in),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_gray_synced_fs3_d1_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_gray_synced_fs3[2]),
        .Q(\wr_index_gray_synced_fs3_d1_reg_n_0_[2] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_gray_synced_fs3_d1_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_gray_synced_fs3[3]),
        .Q(\wr_index_gray_synced_fs3_d1_reg_n_0_[3] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_gray_synced_fs3_d1_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_gray_synced_fs3[4]),
        .Q(p_1_in25_in),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_gray_synced_fs3_d1_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_gray_synced_fs3[5]),
        .Q(p_2_in),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_gray_synced_fs3_d1_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_gray_synced_fs3[6]),
        .Q(\wr_index_gray_synced_fs3_d1_reg_n_0_[6] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'hD2)) 
    \wr_index_i[0]_i_1__0 
       (.I0(wr_index_i_reg[1]),
        .I1(\wr_index_gray_reg[1]_i_2__0_n_0 ),
        .I2(wr_index_i_reg[0]),
        .O(p_1_in1_in));
  LUT6 #(
    .INIT(64'hF7FFFFFF08000000)) 
    \wr_index_i[1]_i_1__0 
       (.I0(wr_index_i_reg[3]),
        .I1(wr_index_i_reg[4]),
        .I2(\wr_index_i_reg[1]_0 ),
        .I3(wr_index_i_reg[5]),
        .I4(wr_index_i_reg[2]),
        .I5(wr_index_i_reg[1]),
        .O(p_1_in17_in));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \wr_index_i[2]_i_1__0 
       (.I0(wr_index_i_reg[5]),
        .I1(RXE_RXMSG_VAL_F0),
        .I2(\wr_index_i_reg[6]_0 ),
        .I3(wr_index_i_reg[4]),
        .I4(wr_index_i_reg[3]),
        .I5(wr_index_i_reg[2]),
        .O(p_1_in15_in));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wr_index_i[3]_i_1__0 
       (.I0(wr_index_i_reg[4]),
        .I1(\wr_index_i_reg[6]_0 ),
        .I2(RXE_RXMSG_VAL_F0),
        .I3(wr_index_i_reg[5]),
        .I4(wr_index_i_reg[3]),
        .O(p_1_in13_in));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_index_i[4]_i_1__0 
       (.I0(wr_index_i_reg[5]),
        .I1(RXE_RXMSG_VAL_F0),
        .I2(\wr_index_i_reg[6]_0 ),
        .I3(wr_index_i_reg[4]),
        .O(p_1_in11_in));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_index_i[5]_i_1__0 
       (.I0(\wr_index_i_reg[6]_0 ),
        .I1(RXE_RXMSG_VAL_F0),
        .I2(wr_index_i_reg[5]),
        .O(p_1_in10_in));
  FDRE \wr_index_i_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(p_1_in1_in),
        .Q(wr_index_i_reg[0]),
        .R(SR));
  FDRE \wr_index_i_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(p_1_in17_in),
        .Q(wr_index_i_reg[1]),
        .R(SR));
  FDRE \wr_index_i_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(p_1_in15_in),
        .Q(wr_index_i_reg[2]),
        .R(SR));
  FDRE \wr_index_i_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(p_1_in13_in),
        .Q(wr_index_i_reg[3]),
        .R(SR));
  FDRE \wr_index_i_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(p_1_in11_in),
        .Q(wr_index_i_reg[4]),
        .R(SR));
  FDRE \wr_index_i_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(p_1_in10_in),
        .Q(wr_index_i_reg[5]),
        .R(SR));
  FDRE \wr_index_i_reg[6] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\wr_index_i_reg[6]_1 ),
        .Q(\wr_index_i_reg[6]_0 ),
        .R(SR));
  LUT5 #(
    .INIT(32'h0100FFFF)) 
    \wr_index_id_loc[0]_i_1 
       (.I0(wr_index_i_reg[4]),
        .I1(wr_index_i_reg[5]),
        .I2(\wr_index_i_reg[6]_0 ),
        .I3(\wr_index_id_loc[0]_i_3_n_0 ),
        .I4(dest_arst),
        .O(\wr_index_id_loc[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wr_index_id_loc[0]_i_2 
       (.I0(wr_index_id_loc_reg[1]),
        .I1(\wr_index_id_loc[0]_i_4_n_0 ),
        .I2(wr_index_id_loc_reg[3]),
        .I3(wr_index_id_loc_reg[2]),
        .I4(wr_index_id_loc_reg[0]),
        .O(p_0_in__4[10]));
  LUT4 #(
    .INIT(16'h0001)) 
    \wr_index_id_loc[0]_i_3 
       (.I0(RXE_RXMSG_VAL_F0),
        .I1(wr_index_i_reg[1]),
        .I2(wr_index_i_reg[2]),
        .I3(wr_index_i_reg[3]),
        .O(\wr_index_id_loc[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hA888888800000000)) 
    \wr_index_id_loc[0]_i_4 
       (.I0(wr_index_id_loc_reg[4]),
        .I1(wr_index_id_loc_reg[6]),
        .I2(wr_index_id_loc_reg[7]),
        .I3(wr_index_id_loc_reg[8]),
        .I4(\wr_index_id_loc_reg[9]_0 ),
        .I5(wr_index_id_loc_reg[5]),
        .O(\wr_index_id_loc[0]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_index_id_loc[1]_i_1__0 
       (.I0(wr_index_id_loc_reg[2]),
        .I1(wr_index_id_loc_reg[3]),
        .I2(\wr_index_id_loc[0]_i_4_n_0 ),
        .I3(wr_index_id_loc_reg[1]),
        .O(p_0_in__4[9]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_index_id_loc[2]_i_1__0 
       (.I0(\wr_index_id_loc[0]_i_4_n_0 ),
        .I1(wr_index_id_loc_reg[3]),
        .I2(wr_index_id_loc_reg[2]),
        .O(p_0_in__4[8]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_index_id_loc[3]_i_1__0 
       (.I0(\wr_index_id_loc[0]_i_4_n_0 ),
        .I1(wr_index_id_loc_reg[3]),
        .O(p_0_in__4[7]));
  LUT6 #(
    .INIT(64'h1555FFFFEAAA0000)) 
    \wr_index_id_loc[4]_i_1__0 
       (.I0(wr_index_id_loc_reg[6]),
        .I1(wr_index_id_loc_reg[7]),
        .I2(wr_index_id_loc_reg[8]),
        .I3(\wr_index_id_loc_reg[9]_0 ),
        .I4(wr_index_id_loc_reg[5]),
        .I5(wr_index_id_loc_reg[4]),
        .O(p_0_in__4[6]));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT5 #(
    .INIT(32'h007FFF80)) 
    \wr_index_id_loc[5]_i_1__0 
       (.I0(\wr_index_id_loc_reg[9]_0 ),
        .I1(wr_index_id_loc_reg[8]),
        .I2(wr_index_id_loc_reg[7]),
        .I3(wr_index_id_loc_reg[6]),
        .I4(wr_index_id_loc_reg[5]),
        .O(p_0_in__4[5]));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT4 #(
    .INIT(16'h807F)) 
    \wr_index_id_loc[6]_i_1 
       (.I0(wr_index_id_loc_reg[7]),
        .I1(wr_index_id_loc_reg[8]),
        .I2(\wr_index_id_loc_reg[9]_0 ),
        .I3(wr_index_id_loc_reg[6]),
        .O(p_0_in__4[4]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_index_id_loc[7]_i_1 
       (.I0(\wr_index_id_loc_reg[9]_0 ),
        .I1(wr_index_id_loc_reg[8]),
        .I2(wr_index_id_loc_reg[7]),
        .O(p_0_in__4[3]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_index_id_loc[8]_i_1 
       (.I0(\wr_index_id_loc_reg[9]_0 ),
        .I1(wr_index_id_loc_reg[8]),
        .O(p_0_in__4[2]));
  LUT1 #(
    .INIT(2'h1)) 
    \wr_index_id_loc[9]_i_1 
       (.I0(\wr_index_id_loc_reg[9]_0 ),
        .O(p_0_in__4[1]));
  FDRE \wr_index_id_loc_reg[0] 
       (.C(can_clk),
        .CE(RXE_RXMSG_VAL_F0),
        .D(p_0_in__4[10]),
        .Q(wr_index_id_loc_reg[0]),
        .R(\wr_index_id_loc[0]_i_1_n_0 ));
  FDRE \wr_index_id_loc_reg[1] 
       (.C(can_clk),
        .CE(RXE_RXMSG_VAL_F0),
        .D(p_0_in__4[9]),
        .Q(wr_index_id_loc_reg[1]),
        .R(\wr_index_id_loc[0]_i_1_n_0 ));
  FDRE \wr_index_id_loc_reg[2] 
       (.C(can_clk),
        .CE(RXE_RXMSG_VAL_F0),
        .D(p_0_in__4[8]),
        .Q(wr_index_id_loc_reg[2]),
        .R(\wr_index_id_loc[0]_i_1_n_0 ));
  FDRE \wr_index_id_loc_reg[3] 
       (.C(can_clk),
        .CE(RXE_RXMSG_VAL_F0),
        .D(p_0_in__4[7]),
        .Q(wr_index_id_loc_reg[3]),
        .R(\wr_index_id_loc[0]_i_1_n_0 ));
  FDSE \wr_index_id_loc_reg[4] 
       (.C(can_clk),
        .CE(RXE_RXMSG_VAL_F0),
        .D(p_0_in__4[6]),
        .Q(wr_index_id_loc_reg[4]),
        .S(\wr_index_id_loc[0]_i_1_n_0 ));
  FDRE \wr_index_id_loc_reg[5] 
       (.C(can_clk),
        .CE(RXE_RXMSG_VAL_F0),
        .D(p_0_in__4[5]),
        .Q(wr_index_id_loc_reg[5]),
        .R(\wr_index_id_loc[0]_i_1_n_0 ));
  FDRE \wr_index_id_loc_reg[6] 
       (.C(can_clk),
        .CE(RXE_RXMSG_VAL_F0),
        .D(p_0_in__4[4]),
        .Q(wr_index_id_loc_reg[6]),
        .R(\wr_index_id_loc[0]_i_1_n_0 ));
  FDRE \wr_index_id_loc_reg[7] 
       (.C(can_clk),
        .CE(RXE_RXMSG_VAL_F0),
        .D(p_0_in__4[3]),
        .Q(wr_index_id_loc_reg[7]),
        .R(\wr_index_id_loc[0]_i_1_n_0 ));
  FDRE \wr_index_id_loc_reg[8] 
       (.C(can_clk),
        .CE(RXE_RXMSG_VAL_F0),
        .D(p_0_in__4[2]),
        .Q(wr_index_id_loc_reg[8]),
        .R(\wr_index_id_loc[0]_i_1_n_0 ));
  FDRE \wr_index_id_loc_reg[9] 
       (.C(can_clk),
        .CE(RXE_RXMSG_VAL_F0),
        .D(p_0_in__4[1]),
        .Q(\wr_index_id_loc_reg[9]_0 ),
        .R(\wr_index_id_loc[0]_i_1_n_0 ));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_can_rxmsg_fifo_cntl" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_rxmsg_fifo_cntl__parameterized0
   (RXF_FULL_AXI_0,
    RXWM_SET_F1,
    RXF_FULL_I_reg_0,
    Q,
    RXF_FULL_AT_MSG_BOUNDARY_reg_0,
    \addr_location_incr_count_reg[0]_0 ,
    \IC_REG_WMR_I2_reg[2]_0 ,
    \IC_REG_WMR_I2_reg[1]_0 ,
    \IC_REG_WMR_I2_reg[0]_0 ,
    \RD_INDEX_reg[1]_0 ,
    \IC_REG_WMR_I2_reg[3]_0 ,
    \wr_index_i_reg[6]_0 ,
    RX_ADDR_M_CC_F1,
    \IC_REG_RXFP_I2_reg[0]_0 ,
    \RXE_DATA_STORED_AT_DLC_reg[0]_0 ,
    \MULTI_BIT.s_level_out_bus_d5_reg[0] ,
    s_axi_aclk,
    SR,
    can_clk,
    addr_location_incr_count_2,
    \RD_DATA_RET[18]_i_4 ,
    \RD_DATA_RET[20]_i_7 ,
    \RD_DATA_RET[20]_i_7_0 ,
    \RD_DATA_RET[18]_i_4_0 ,
    \RD_DATA_RET[18]_i_4_1 ,
    \RD_INDEX_reg[6]_0 ,
    \RD_INDEX_reg[6]_1 ,
    TS_RX_WEN_F1,
    RXE_MSGVAL_EARLY_F1,
    RXF_FULL_AT_MSG_BOUNDARY_reg_1,
    RXE_RXFIFO_WEN_FD2,
    RXE_RXFIFO_WEN_FD1,
    \wr_index_i_reg[1]_0 ,
    RXE_RXMSG_VAL_F1,
    dest_arst,
    RXE_RXFIFO_WEN,
    \FILL_LEVEL_reg[5]_0 ,
    E,
    s_axi_wdata,
    \RXE_DATA_STORED_AT_DLC_reg[0]_1 ,
    \wr_index_i_reg[6]_1 );
  output RXF_FULL_AXI_0;
  output RXWM_SET_F1;
  output RXF_FULL_I_reg_0;
  output [6:0]Q;
  output RXF_FULL_AT_MSG_BOUNDARY_reg_0;
  output \addr_location_incr_count_reg[0]_0 ;
  output \IC_REG_WMR_I2_reg[2]_0 ;
  output \IC_REG_WMR_I2_reg[1]_0 ;
  output \IC_REG_WMR_I2_reg[0]_0 ;
  output [5:0]\RD_INDEX_reg[1]_0 ;
  output [2:0]\IC_REG_WMR_I2_reg[3]_0 ;
  output [0:0]\wr_index_i_reg[6]_0 ;
  output [9:0]RX_ADDR_M_CC_F1;
  output [4:0]\IC_REG_RXFP_I2_reg[0]_0 ;
  output [10:0]\RXE_DATA_STORED_AT_DLC_reg[0]_0 ;
  input \MULTI_BIT.s_level_out_bus_d5_reg[0] ;
  input s_axi_aclk;
  input [0:0]SR;
  input can_clk;
  input [0:0]addr_location_incr_count_2;
  input [2:0]\RD_DATA_RET[18]_i_4 ;
  input \RD_DATA_RET[20]_i_7 ;
  input \RD_DATA_RET[20]_i_7_0 ;
  input [2:0]\RD_DATA_RET[18]_i_4_0 ;
  input [2:0]\RD_DATA_RET[18]_i_4_1 ;
  input \RD_INDEX_reg[6]_0 ;
  input \RD_INDEX_reg[6]_1 ;
  input TS_RX_WEN_F1;
  input RXE_MSGVAL_EARLY_F1;
  input RXF_FULL_AT_MSG_BOUNDARY_reg_1;
  input RXE_RXFIFO_WEN_FD2;
  input RXE_RXFIFO_WEN_FD1;
  input \wr_index_i_reg[1]_0 ;
  input RXE_RXMSG_VAL_F1;
  input dest_arst;
  input RXE_RXFIFO_WEN;
  input [0:0]\FILL_LEVEL_reg[5]_0 ;
  input [0:0]E;
  input [10:0]s_axi_wdata;
  input [10:0]\RXE_DATA_STORED_AT_DLC_reg[0]_1 ;
  input [0:0]\wr_index_i_reg[6]_1 ;

  wire [0:0]E;
  wire \FILL_LEVEL[0]_i_1__0_n_0 ;
  wire \FILL_LEVEL[1]_i_1__1_n_0 ;
  wire \FILL_LEVEL[2]_i_1__1_n_0 ;
  wire \FILL_LEVEL[3]_i_1__1_n_0 ;
  wire \FILL_LEVEL[3]_i_3__0_n_0 ;
  wire \FILL_LEVEL[3]_i_4__0_n_0 ;
  wire \FILL_LEVEL[3]_i_5__0_n_0 ;
  wire \FILL_LEVEL[3]_i_6__0_n_0 ;
  wire \FILL_LEVEL[4]_i_1__1_n_0 ;
  wire \FILL_LEVEL[5]_i_2__1_n_0 ;
  wire \FILL_LEVEL[6]_i_1_n_0 ;
  wire \FILL_LEVEL[6]_i_3__0_n_0 ;
  wire \FILL_LEVEL[6]_i_4__0_n_0 ;
  wire \FILL_LEVEL[6]_i_5__0_n_0 ;
  wire \FILL_LEVEL[6]_i_6__0_n_0 ;
  wire \FILL_LEVEL[6]_i_7__0_n_0 ;
  wire \FILL_LEVEL_CMB0_inferred__0/i__carry__0_n_2 ;
  wire \FILL_LEVEL_CMB0_inferred__0/i__carry__0_n_3 ;
  wire \FILL_LEVEL_CMB0_inferred__0/i__carry__0_n_5 ;
  wire \FILL_LEVEL_CMB0_inferred__0/i__carry__0_n_6 ;
  wire \FILL_LEVEL_CMB0_inferred__0/i__carry__0_n_7 ;
  wire \FILL_LEVEL_CMB0_inferred__0/i__carry_n_0 ;
  wire \FILL_LEVEL_CMB0_inferred__0/i__carry_n_1 ;
  wire \FILL_LEVEL_CMB0_inferred__0/i__carry_n_2 ;
  wire \FILL_LEVEL_CMB0_inferred__0/i__carry_n_3 ;
  wire \FILL_LEVEL_CMB0_inferred__0/i__carry_n_4 ;
  wire \FILL_LEVEL_CMB0_inferred__0/i__carry_n_5 ;
  wire \FILL_LEVEL_CMB0_inferred__0/i__carry_n_6 ;
  wire \FILL_LEVEL_reg[3]_i_2__0_n_0 ;
  wire \FILL_LEVEL_reg[3]_i_2__0_n_1 ;
  wire \FILL_LEVEL_reg[3]_i_2__0_n_2 ;
  wire \FILL_LEVEL_reg[3]_i_2__0_n_3 ;
  wire \FILL_LEVEL_reg[3]_i_2__0_n_4 ;
  wire \FILL_LEVEL_reg[3]_i_2__0_n_5 ;
  wire \FILL_LEVEL_reg[3]_i_2__0_n_6 ;
  wire \FILL_LEVEL_reg[3]_i_2__0_n_7 ;
  wire [0:0]\FILL_LEVEL_reg[5]_0 ;
  wire \FILL_LEVEL_reg[6]_i_2__0_n_1 ;
  wire \FILL_LEVEL_reg[6]_i_2__0_n_3 ;
  wire \FILL_LEVEL_reg[6]_i_2__0_n_6 ;
  wire \FILL_LEVEL_reg[6]_i_2__0_n_7 ;
  wire [4:0]\IC_REG_RXFP_I2_reg[0]_0 ;
  wire \IC_REG_WMR_I2_reg[0]_0 ;
  wire \IC_REG_WMR_I2_reg[1]_0 ;
  wire \IC_REG_WMR_I2_reg[2]_0 ;
  wire [2:0]\IC_REG_WMR_I2_reg[3]_0 ;
  wire [0:2]IC_REG_WMR_I_F1;
  wire \MULTI_BIT.s_level_out_bus_d5_reg[0] ;
  wire [6:0]Q;
  wire [2:0]\RD_DATA_RET[18]_i_4 ;
  wire [2:0]\RD_DATA_RET[18]_i_4_0 ;
  wire [2:0]\RD_DATA_RET[18]_i_4_1 ;
  wire \RD_DATA_RET[20]_i_7 ;
  wire \RD_DATA_RET[20]_i_7_0 ;
  wire RD_INDEX0;
  wire \RD_INDEX[0]_i_4__1_n_0 ;
  wire \RD_INDEX[0]_i_5__0_n_0 ;
  wire \RD_INDEX[6]_i_1__0_n_0 ;
  wire [5:0]\RD_INDEX_reg[1]_0 ;
  wire \RD_INDEX_reg[6]_0 ;
  wire \RD_INDEX_reg[6]_1 ;
  wire RXE_DATA_STORED_AT_DLC0;
  wire [10:0]\RXE_DATA_STORED_AT_DLC_reg[0]_0 ;
  wire [10:0]\RXE_DATA_STORED_AT_DLC_reg[0]_1 ;
  wire RXE_MSGVAL_EARLY_F1;
  wire RXE_RXFIFO_WEN;
  wire RXE_RXFIFO_WEN_FD1;
  wire RXE_RXFIFO_WEN_FD2;
  wire RXE_RXMSG_VAL_F1;
  wire RXF_FULL_AT_MSG_BOUNDARY_i_1_n_0;
  wire RXF_FULL_AT_MSG_BOUNDARY_reg_0;
  wire RXF_FULL_AT_MSG_BOUNDARY_reg_1;
  wire RXF_FULL_AXI0;
  wire RXF_FULL_AXI_0;
  wire RXF_FULL_AXI_i_2__1_n_0;
  wire RXF_FULL_AXI_i_3__1_n_0;
  wire RXF_FULL_AXI_i_4__0_n_0;
  wire RXF_FULL_I0;
  wire RXF_FULL_I1__8;
  wire RXF_FULL_I_i_3__1_n_0;
  wire RXF_FULL_I_i_4__1_n_0;
  wire RXF_FULL_I_reg_0;
  wire RXWM_SET0_carry_i_1__0_n_0;
  wire RXWM_SET0_carry_i_2__0_n_0;
  wire RXWM_SET0_carry_i_3__0_n_0;
  wire RXWM_SET0_carry_i_4__0_n_0;
  wire RXWM_SET0_carry_i_5__0_n_0;
  wire RXWM_SET0_carry_i_6__0_n_0;
  wire RXWM_SET0_carry_i_7__0_n_0;
  wire RXWM_SET0_carry_n_0;
  wire RXWM_SET0_carry_n_1;
  wire RXWM_SET0_carry_n_2;
  wire RXWM_SET0_carry_n_3;
  wire RXWM_SET_F1;
  wire [9:0]RX_ADDR_M_CC_F1;
  wire [0:0]SR;
  wire TS_RX_WEN_F1;
  wire addr_location_incr_count0;
  wire \addr_location_incr_count[0]_i_1__0_n_0 ;
  wire \addr_location_incr_count[1]_i_1__1_n_0 ;
  wire \addr_location_incr_count[2]_i_1__1_n_0 ;
  wire \addr_location_incr_count[3]_i_1__1_n_0 ;
  wire \addr_location_incr_count[4]_i_3__0_n_0 ;
  wire \addr_location_incr_count[4]_i_4__0_n_0 ;
  wire [0:0]addr_location_incr_count_2;
  wire \addr_location_incr_count_reg[0]_0 ;
  wire \addr_location_incr_count_reg_n_0_[1] ;
  wire \addr_location_incr_count_reg_n_0_[2] ;
  wire \addr_location_incr_count_reg_n_0_[3] ;
  wire \addr_location_incr_count_reg_n_0_[4] ;
  wire can_clk;
  wire dest_arst;
  wire \gen_rx1.u_rxxpm_2_i_2_n_3 ;
  wire \gen_rx1.u_rxxpm_2_i_38_n_0 ;
  wire \gen_rx1.u_rxxpm_2_i_39_n_0 ;
  wire \gen_rx1.u_rxxpm_2_i_3_n_0 ;
  wire \gen_rx1.u_rxxpm_2_i_3_n_1 ;
  wire \gen_rx1.u_rxxpm_2_i_3_n_2 ;
  wire \gen_rx1.u_rxxpm_2_i_3_n_3 ;
  wire \gen_rx1.u_rxxpm_2_i_40_n_0 ;
  wire \gen_rx1.u_rxxpm_2_i_41_n_0 ;
  wire \gen_rx1.u_rxxpm_2_i_4_n_0 ;
  wire \gen_rx1.u_rxxpm_2_i_4_n_1 ;
  wire \gen_rx1.u_rxxpm_2_i_4_n_2 ;
  wire \gen_rx1.u_rxxpm_2_i_4_n_3 ;
  wire i__carry__0_i_1__2_n_0;
  wire i__carry__0_i_2__2_n_0;
  wire i__carry_i_1__8_n_0;
  wire i__carry_i_2__7_n_0;
  wire i__carry_i_3__8_n_0;
  wire i__carry_i_4__8_n_0;
  wire p_0_in;
  wire p_0_in0_in;
  wire p_0_in32_in;
  wire p_0_in38_in;
  wire [6:2]p_0_in__1;
  wire [10:1]p_0_in__5;
  wire p_1_in;
  wire p_1_in10_in;
  wire p_1_in11_in;
  wire p_1_in13_in;
  wire p_1_in15_in;
  wire p_1_in17_in;
  wire p_1_in1_in;
  wire p_1_in25_in;
  wire p_2_in;
  wire rd_index_gray_reg0;
  wire rd_index_gray_reg01_out;
  wire rd_index_gray_reg03_out;
  wire rd_index_gray_reg05_out;
  wire rd_index_gray_reg07_out;
  wire rd_index_gray_reg09_out;
  wire \rd_index_gray_reg_reg_n_0_[0] ;
  wire \rd_index_gray_reg_reg_n_0_[1] ;
  wire \rd_index_gray_reg_reg_n_0_[2] ;
  wire \rd_index_gray_reg_reg_n_0_[3] ;
  wire \rd_index_gray_reg_reg_n_0_[4] ;
  wire \rd_index_gray_reg_reg_n_0_[5] ;
  wire \rd_index_gray_reg_reg_n_0_[6] ;
  wire [0:6]rd_index_gray_synced_fs2;
  wire \rd_index_gray_synced_fs2_d1_reg_n_0_[2] ;
  wire \rd_index_gray_synced_fs2_d1_reg_n_0_[3] ;
  wire \rd_index_gray_synced_fs2_d1_reg_n_0_[4] ;
  wire \rd_index_gray_synced_fs2_d1_reg_n_0_[5] ;
  wire \rd_index_gray_synced_fs2_d1_reg_n_0_[6] ;
  wire s_axi_aclk;
  wire [10:0]s_axi_wdata;
  wire [2:6]wr_index_binary_synced_fs3;
  wire \wr_index_binary_synced_fs3_d1_reg_n_0_[1] ;
  wire \wr_index_binary_synced_fs3_d1_reg_n_0_[2] ;
  wire \wr_index_binary_synced_fs3_d1_reg_n_0_[3] ;
  wire \wr_index_binary_synced_fs3_d1_reg_n_0_[4] ;
  wire \wr_index_binary_synced_fs3_d1_reg_n_0_[5] ;
  wire \wr_index_binary_synced_fs3_d1_reg_n_0_[6] ;
  wire wr_index_gray_2msb_xor_axi;
  wire wr_index_gray_reg0;
  wire wr_index_gray_reg012_out;
  wire wr_index_gray_reg014_out;
  wire wr_index_gray_reg016_out;
  wire wr_index_gray_reg018_out;
  wire wr_index_gray_reg020_out;
  wire \wr_index_gray_reg[1]_i_2__1_n_0 ;
  wire \wr_index_gray_reg_reg_n_0_[1] ;
  wire \wr_index_gray_reg_reg_n_0_[2] ;
  wire \wr_index_gray_reg_reg_n_0_[3] ;
  wire \wr_index_gray_reg_reg_n_0_[4] ;
  wire \wr_index_gray_reg_reg_n_0_[5] ;
  wire \wr_index_gray_reg_reg_n_0_[6] ;
  wire [0:6]wr_index_gray_synced_fs3;
  wire \wr_index_gray_synced_fs3_d1_reg_n_0_[2] ;
  wire \wr_index_gray_synced_fs3_d1_reg_n_0_[3] ;
  wire \wr_index_gray_synced_fs3_d1_reg_n_0_[6] ;
  wire [0:5]wr_index_i_reg;
  wire \wr_index_i_reg[1]_0 ;
  wire [0:0]\wr_index_i_reg[6]_0 ;
  wire [0:0]\wr_index_i_reg[6]_1 ;
  wire \wr_index_id_loc[0]_i_1__0_n_0 ;
  wire \wr_index_id_loc[0]_i_3__0_n_0 ;
  wire \wr_index_id_loc[0]_i_4__0_n_0 ;
  wire [0:9]wr_index_id_loc_reg;
  wire [0:0]\NLW_FILL_LEVEL_CMB0_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:2]\NLW_FILL_LEVEL_CMB0_inferred__0/i__carry__0_CO_UNCONNECTED ;
  wire [3:3]\NLW_FILL_LEVEL_CMB0_inferred__0/i__carry__0_O_UNCONNECTED ;
  wire [3:1]\NLW_FILL_LEVEL_reg[6]_i_2__0_CO_UNCONNECTED ;
  wire [3:2]\NLW_FILL_LEVEL_reg[6]_i_2__0_O_UNCONNECTED ;
  wire [3:0]NLW_RXWM_SET0_carry_O_UNCONNECTED;
  wire [3:1]\NLW_gen_rx1.u_rxxpm_2_i_2_CO_UNCONNECTED ;
  wire [3:2]\NLW_gen_rx1.u_rxxpm_2_i_2_O_UNCONNECTED ;
  wire [0:0]\NLW_gen_rx1.u_rxxpm_2_i_4_O_UNCONNECTED ;

  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT4 #(
    .INIT(16'h6F60)) 
    \FILL_LEVEL[0]_i_1__0 
       (.I0(\RD_INDEX_reg[1]_0 [0]),
        .I1(\wr_index_binary_synced_fs3_d1_reg_n_0_[6] ),
        .I2(\FILL_LEVEL[6]_i_3__0_n_0 ),
        .I3(\FILL_LEVEL_reg[3]_i_2__0_n_7 ),
        .O(\FILL_LEVEL[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \FILL_LEVEL[1]_i_1__1 
       (.I0(\FILL_LEVEL_CMB0_inferred__0/i__carry_n_6 ),
        .I1(\FILL_LEVEL[6]_i_3__0_n_0 ),
        .I2(\FILL_LEVEL_reg[3]_i_2__0_n_6 ),
        .O(\FILL_LEVEL[1]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \FILL_LEVEL[2]_i_1__1 
       (.I0(\FILL_LEVEL_CMB0_inferred__0/i__carry_n_5 ),
        .I1(\FILL_LEVEL[6]_i_3__0_n_0 ),
        .I2(\FILL_LEVEL_reg[3]_i_2__0_n_5 ),
        .O(\FILL_LEVEL[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \FILL_LEVEL[3]_i_1__1 
       (.I0(\FILL_LEVEL_CMB0_inferred__0/i__carry_n_4 ),
        .I1(\FILL_LEVEL[6]_i_3__0_n_0 ),
        .I2(\FILL_LEVEL_reg[3]_i_2__0_n_4 ),
        .O(\FILL_LEVEL[3]_i_1__1_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \FILL_LEVEL[3]_i_3__0 
       (.I0(\wr_index_binary_synced_fs3_d1_reg_n_0_[3] ),
        .I1(\RD_INDEX_reg[1]_0 [3]),
        .O(\FILL_LEVEL[3]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \FILL_LEVEL[3]_i_4__0 
       (.I0(\wr_index_binary_synced_fs3_d1_reg_n_0_[4] ),
        .I1(\RD_INDEX_reg[1]_0 [2]),
        .O(\FILL_LEVEL[3]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \FILL_LEVEL[3]_i_5__0 
       (.I0(\wr_index_binary_synced_fs3_d1_reg_n_0_[5] ),
        .I1(\RD_INDEX_reg[1]_0 [1]),
        .O(\FILL_LEVEL[3]_i_5__0_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \FILL_LEVEL[3]_i_6__0 
       (.I0(\wr_index_binary_synced_fs3_d1_reg_n_0_[6] ),
        .I1(\RD_INDEX_reg[1]_0 [0]),
        .O(\FILL_LEVEL[3]_i_6__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \FILL_LEVEL[4]_i_1__1 
       (.I0(\FILL_LEVEL_CMB0_inferred__0/i__carry__0_n_7 ),
        .I1(\FILL_LEVEL[6]_i_3__0_n_0 ),
        .I2(\FILL_LEVEL_reg[6]_i_2__0_n_7 ),
        .O(\FILL_LEVEL[4]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \FILL_LEVEL[5]_i_2__1 
       (.I0(\FILL_LEVEL_CMB0_inferred__0/i__carry__0_n_6 ),
        .I1(\FILL_LEVEL[6]_i_3__0_n_0 ),
        .I2(\FILL_LEVEL_reg[6]_i_2__0_n_6 ),
        .O(\FILL_LEVEL[5]_i_2__1_n_0 ));
  LUT4 #(
    .INIT(16'hFFE2)) 
    \FILL_LEVEL[6]_i_1 
       (.I0(\FILL_LEVEL_reg[6]_i_2__0_n_1 ),
        .I1(\FILL_LEVEL[6]_i_3__0_n_0 ),
        .I2(\FILL_LEVEL_CMB0_inferred__0/i__carry__0_n_5 ),
        .I3(RXF_FULL_AXI_0),
        .O(\FILL_LEVEL[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT5 #(
    .INIT(32'hB2F330B2)) 
    \FILL_LEVEL[6]_i_3__0 
       (.I0(\FILL_LEVEL[6]_i_6__0_n_0 ),
        .I1(\RD_INDEX_reg[1]_0 [5]),
        .I2(\wr_index_binary_synced_fs3_d1_reg_n_0_[1] ),
        .I3(\RD_INDEX_reg[1]_0 [4]),
        .I4(\wr_index_binary_synced_fs3_d1_reg_n_0_[2] ),
        .O(\FILL_LEVEL[6]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \FILL_LEVEL[6]_i_4__0 
       (.I0(\wr_index_binary_synced_fs3_d1_reg_n_0_[1] ),
        .I1(\RD_INDEX_reg[1]_0 [5]),
        .O(\FILL_LEVEL[6]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \FILL_LEVEL[6]_i_5__0 
       (.I0(\wr_index_binary_synced_fs3_d1_reg_n_0_[2] ),
        .I1(\RD_INDEX_reg[1]_0 [4]),
        .O(\FILL_LEVEL[6]_i_5__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT5 #(
    .INIT(32'hB2F330B2)) 
    \FILL_LEVEL[6]_i_6__0 
       (.I0(\FILL_LEVEL[6]_i_7__0_n_0 ),
        .I1(\RD_INDEX_reg[1]_0 [3]),
        .I2(\wr_index_binary_synced_fs3_d1_reg_n_0_[3] ),
        .I3(\RD_INDEX_reg[1]_0 [2]),
        .I4(\wr_index_binary_synced_fs3_d1_reg_n_0_[4] ),
        .O(\FILL_LEVEL[6]_i_6__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT4 #(
    .INIT(16'hC4FD)) 
    \FILL_LEVEL[6]_i_7__0 
       (.I0(\RD_INDEX_reg[1]_0 [0]),
        .I1(\wr_index_binary_synced_fs3_d1_reg_n_0_[5] ),
        .I2(\wr_index_binary_synced_fs3_d1_reg_n_0_[6] ),
        .I3(\RD_INDEX_reg[1]_0 [1]),
        .O(\FILL_LEVEL[6]_i_7__0_n_0 ));
  CARRY4 \FILL_LEVEL_CMB0_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\FILL_LEVEL_CMB0_inferred__0/i__carry_n_0 ,\FILL_LEVEL_CMB0_inferred__0/i__carry_n_1 ,\FILL_LEVEL_CMB0_inferred__0/i__carry_n_2 ,\FILL_LEVEL_CMB0_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b1),
        .DI({\wr_index_binary_synced_fs3_d1_reg_n_0_[3] ,\wr_index_binary_synced_fs3_d1_reg_n_0_[4] ,\wr_index_binary_synced_fs3_d1_reg_n_0_[5] ,\wr_index_binary_synced_fs3_d1_reg_n_0_[6] }),
        .O({\FILL_LEVEL_CMB0_inferred__0/i__carry_n_4 ,\FILL_LEVEL_CMB0_inferred__0/i__carry_n_5 ,\FILL_LEVEL_CMB0_inferred__0/i__carry_n_6 ,\NLW_FILL_LEVEL_CMB0_inferred__0/i__carry_O_UNCONNECTED [0]}),
        .S({i__carry_i_1__8_n_0,i__carry_i_2__7_n_0,i__carry_i_3__8_n_0,i__carry_i_4__8_n_0}));
  CARRY4 \FILL_LEVEL_CMB0_inferred__0/i__carry__0 
       (.CI(\FILL_LEVEL_CMB0_inferred__0/i__carry_n_0 ),
        .CO({\NLW_FILL_LEVEL_CMB0_inferred__0/i__carry__0_CO_UNCONNECTED [3:2],\FILL_LEVEL_CMB0_inferred__0/i__carry__0_n_2 ,\FILL_LEVEL_CMB0_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\wr_index_binary_synced_fs3_d1_reg_n_0_[1] ,\wr_index_binary_synced_fs3_d1_reg_n_0_[2] }),
        .O({\NLW_FILL_LEVEL_CMB0_inferred__0/i__carry__0_O_UNCONNECTED [3],\FILL_LEVEL_CMB0_inferred__0/i__carry__0_n_5 ,\FILL_LEVEL_CMB0_inferred__0/i__carry__0_n_6 ,\FILL_LEVEL_CMB0_inferred__0/i__carry__0_n_7 }),
        .S({1'b0,1'b1,i__carry__0_i_1__2_n_0,i__carry__0_i_2__2_n_0}));
  FDRE \FILL_LEVEL_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FILL_LEVEL[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .R(\FILL_LEVEL_reg[5]_0 ));
  FDRE \FILL_LEVEL_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FILL_LEVEL[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(\FILL_LEVEL_reg[5]_0 ));
  FDRE \FILL_LEVEL_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FILL_LEVEL[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(\FILL_LEVEL_reg[5]_0 ));
  FDRE \FILL_LEVEL_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FILL_LEVEL[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(\FILL_LEVEL_reg[5]_0 ));
  CARRY4 \FILL_LEVEL_reg[3]_i_2__0 
       (.CI(1'b0),
        .CO({\FILL_LEVEL_reg[3]_i_2__0_n_0 ,\FILL_LEVEL_reg[3]_i_2__0_n_1 ,\FILL_LEVEL_reg[3]_i_2__0_n_2 ,\FILL_LEVEL_reg[3]_i_2__0_n_3 }),
        .CYINIT(1'b1),
        .DI({\wr_index_binary_synced_fs3_d1_reg_n_0_[3] ,\wr_index_binary_synced_fs3_d1_reg_n_0_[4] ,\wr_index_binary_synced_fs3_d1_reg_n_0_[5] ,\wr_index_binary_synced_fs3_d1_reg_n_0_[6] }),
        .O({\FILL_LEVEL_reg[3]_i_2__0_n_4 ,\FILL_LEVEL_reg[3]_i_2__0_n_5 ,\FILL_LEVEL_reg[3]_i_2__0_n_6 ,\FILL_LEVEL_reg[3]_i_2__0_n_7 }),
        .S({\FILL_LEVEL[3]_i_3__0_n_0 ,\FILL_LEVEL[3]_i_4__0_n_0 ,\FILL_LEVEL[3]_i_5__0_n_0 ,\FILL_LEVEL[3]_i_6__0_n_0 }));
  FDRE \FILL_LEVEL_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FILL_LEVEL[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(\FILL_LEVEL_reg[5]_0 ));
  FDRE \FILL_LEVEL_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FILL_LEVEL[5]_i_2__1_n_0 ),
        .Q(Q[5]),
        .R(\FILL_LEVEL_reg[5]_0 ));
  FDRE \FILL_LEVEL_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FILL_LEVEL[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  CARRY4 \FILL_LEVEL_reg[6]_i_2__0 
       (.CI(\FILL_LEVEL_reg[3]_i_2__0_n_0 ),
        .CO({\NLW_FILL_LEVEL_reg[6]_i_2__0_CO_UNCONNECTED [3],\FILL_LEVEL_reg[6]_i_2__0_n_1 ,\NLW_FILL_LEVEL_reg[6]_i_2__0_CO_UNCONNECTED [1],\FILL_LEVEL_reg[6]_i_2__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\wr_index_binary_synced_fs3_d1_reg_n_0_[1] ,\wr_index_binary_synced_fs3_d1_reg_n_0_[2] }),
        .O({\NLW_FILL_LEVEL_reg[6]_i_2__0_O_UNCONNECTED [3:2],\FILL_LEVEL_reg[6]_i_2__0_n_6 ,\FILL_LEVEL_reg[6]_i_2__0_n_7 }),
        .S({1'b0,1'b1,\FILL_LEVEL[6]_i_4__0_n_0 ,\FILL_LEVEL[6]_i_5__0_n_0 }));
  FDSE \IC_REG_RXFP_I2_reg[0] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[10]),
        .Q(\IC_REG_RXFP_I2_reg[0]_0 [4]),
        .S(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDSE \IC_REG_RXFP_I2_reg[1] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[9]),
        .Q(\IC_REG_RXFP_I2_reg[0]_0 [3]),
        .S(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDSE \IC_REG_RXFP_I2_reg[2] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[8]),
        .Q(\IC_REG_RXFP_I2_reg[0]_0 [2]),
        .S(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDSE \IC_REG_RXFP_I2_reg[3] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[7]),
        .Q(\IC_REG_RXFP_I2_reg[0]_0 [1]),
        .S(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDSE \IC_REG_RXFP_I2_reg[4] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[6]),
        .Q(\IC_REG_RXFP_I2_reg[0]_0 [0]),
        .S(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \IC_REG_WMR_I2_reg[0] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[5]),
        .Q(IC_REG_WMR_I_F1[0]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \IC_REG_WMR_I2_reg[1] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[4]),
        .Q(IC_REG_WMR_I_F1[1]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDSE \IC_REG_WMR_I2_reg[2] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[3]),
        .Q(IC_REG_WMR_I_F1[2]),
        .S(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDSE \IC_REG_WMR_I2_reg[3] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[2]),
        .Q(\IC_REG_WMR_I2_reg[3]_0 [2]),
        .S(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDSE \IC_REG_WMR_I2_reg[4] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[1]),
        .Q(\IC_REG_WMR_I2_reg[3]_0 [1]),
        .S(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDSE \IC_REG_WMR_I2_reg[5] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[0]),
        .Q(\IC_REG_WMR_I2_reg[3]_0 [0]),
        .S(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \RD_DATA_RET[18]_i_8 
       (.I0(IC_REG_WMR_I_F1[0]),
        .I1(\RD_DATA_RET[18]_i_4 [2]),
        .I2(\RD_DATA_RET[20]_i_7 ),
        .I3(\RD_DATA_RET[20]_i_7_0 ),
        .I4(\RD_DATA_RET[18]_i_4_0 [2]),
        .I5(\RD_DATA_RET[18]_i_4_1 [2]),
        .O(\IC_REG_WMR_I2_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \RD_DATA_RET[19]_i_9 
       (.I0(IC_REG_WMR_I_F1[1]),
        .I1(\RD_DATA_RET[18]_i_4 [1]),
        .I2(\RD_DATA_RET[20]_i_7 ),
        .I3(\RD_DATA_RET[20]_i_7_0 ),
        .I4(\RD_DATA_RET[18]_i_4_0 [1]),
        .I5(\RD_DATA_RET[18]_i_4_1 [1]),
        .O(\IC_REG_WMR_I2_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \RD_DATA_RET[20]_i_9 
       (.I0(IC_REG_WMR_I_F1[2]),
        .I1(\RD_DATA_RET[18]_i_4 [0]),
        .I2(\RD_DATA_RET[20]_i_7 ),
        .I3(\RD_DATA_RET[20]_i_7_0 ),
        .I4(\RD_DATA_RET[18]_i_4_0 [0]),
        .I5(\RD_DATA_RET[18]_i_4_1 [0]),
        .O(\IC_REG_WMR_I2_reg[2]_0 ));
  LUT6 #(
    .INIT(64'h8888888888888808)) 
    \RD_INDEX[0]_i_1__0 
       (.I0(\RD_INDEX_reg[6]_0 ),
        .I1(\RD_INDEX_reg[6]_1 ),
        .I2(\RD_INDEX[0]_i_4__1_n_0 ),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(Q[2]),
        .O(RD_INDEX0));
  LUT6 #(
    .INIT(64'hF7FFFFFF08000000)) 
    \RD_INDEX[0]_i_2__1 
       (.I0(\RD_INDEX_reg[1]_0 [5]),
        .I1(\RD_INDEX_reg[1]_0 [3]),
        .I2(\RD_INDEX[0]_i_5__0_n_0 ),
        .I3(\RD_INDEX_reg[1]_0 [2]),
        .I4(\RD_INDEX_reg[1]_0 [4]),
        .I5(p_0_in),
        .O(p_0_in__1[6]));
  LUT4 #(
    .INIT(16'h0001)) 
    \RD_INDEX[0]_i_4__1 
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(Q[4]),
        .I3(Q[3]),
        .O(\RD_INDEX[0]_i_4__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \RD_INDEX[0]_i_5__0 
       (.I0(\RD_INDEX_reg[1]_0 [0]),
        .I1(\RD_INDEX_reg[1]_0 [1]),
        .O(\RD_INDEX[0]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \RD_INDEX[1]_i_1__1 
       (.I0(\RD_INDEX_reg[1]_0 [4]),
        .I1(\RD_INDEX_reg[1]_0 [2]),
        .I2(\RD_INDEX_reg[1]_0 [0]),
        .I3(\RD_INDEX_reg[1]_0 [1]),
        .I4(\RD_INDEX_reg[1]_0 [3]),
        .I5(\RD_INDEX_reg[1]_0 [5]),
        .O(p_0_in__1[5]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \RD_INDEX[2]_i_1__1 
       (.I0(\RD_INDEX_reg[1]_0 [3]),
        .I1(\RD_INDEX_reg[1]_0 [1]),
        .I2(\RD_INDEX_reg[1]_0 [0]),
        .I3(\RD_INDEX_reg[1]_0 [2]),
        .I4(\RD_INDEX_reg[1]_0 [4]),
        .O(p_0_in__1[4]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \RD_INDEX[3]_i_1__1 
       (.I0(\RD_INDEX_reg[1]_0 [2]),
        .I1(\RD_INDEX_reg[1]_0 [0]),
        .I2(\RD_INDEX_reg[1]_0 [1]),
        .I3(\RD_INDEX_reg[1]_0 [3]),
        .O(p_0_in__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \RD_INDEX[4]_i_1__0 
       (.I0(\RD_INDEX_reg[1]_0 [1]),
        .I1(\RD_INDEX_reg[1]_0 [0]),
        .I2(\RD_INDEX_reg[1]_0 [2]),
        .O(p_0_in__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \RD_INDEX[6]_i_1__0 
       (.I0(\RD_INDEX_reg[1]_0 [0]),
        .O(\RD_INDEX[6]_i_1__0_n_0 ));
  FDRE \RD_INDEX_reg[0] 
       (.C(s_axi_aclk),
        .CE(RD_INDEX0),
        .D(p_0_in__1[6]),
        .Q(p_0_in),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \RD_INDEX_reg[1] 
       (.C(s_axi_aclk),
        .CE(RD_INDEX0),
        .D(p_0_in__1[5]),
        .Q(\RD_INDEX_reg[1]_0 [5]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \RD_INDEX_reg[2] 
       (.C(s_axi_aclk),
        .CE(RD_INDEX0),
        .D(p_0_in__1[4]),
        .Q(\RD_INDEX_reg[1]_0 [4]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \RD_INDEX_reg[3] 
       (.C(s_axi_aclk),
        .CE(RD_INDEX0),
        .D(p_0_in__1[3]),
        .Q(\RD_INDEX_reg[1]_0 [3]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \RD_INDEX_reg[4] 
       (.C(s_axi_aclk),
        .CE(RD_INDEX0),
        .D(p_0_in__1[2]),
        .Q(\RD_INDEX_reg[1]_0 [2]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \RD_INDEX_reg[5] 
       (.C(s_axi_aclk),
        .CE(RD_INDEX0),
        .D(rd_index_gray_reg0),
        .Q(\RD_INDEX_reg[1]_0 [1]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \RD_INDEX_reg[6] 
       (.C(s_axi_aclk),
        .CE(RD_INDEX0),
        .D(\RD_INDEX[6]_i_1__0_n_0 ),
        .Q(\RD_INDEX_reg[1]_0 [0]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized2_8 RD_PTR_2C_CDC_TO
       (.D({rd_index_gray_synced_fs2[0],rd_index_gray_synced_fs2[1],rd_index_gray_synced_fs2[2],rd_index_gray_synced_fs2[3],rd_index_gray_synced_fs2[4],rd_index_gray_synced_fs2[5],rd_index_gray_synced_fs2[6]}),
        .Q({\rd_index_gray_reg_reg_n_0_[0] ,\rd_index_gray_reg_reg_n_0_[1] ,\rd_index_gray_reg_reg_n_0_[2] ,\rd_index_gray_reg_reg_n_0_[3] ,\rd_index_gray_reg_reg_n_0_[4] ,\rd_index_gray_reg_reg_n_0_[5] ,\rd_index_gray_reg_reg_n_0_[6] }),
        .SR(SR),
        .can_clk(can_clk));
  LUT6 #(
    .INIT(64'h0000001000000000)) 
    \RXE_DATA_STORED_AT_DLC[0]_i_1__0 
       (.I0(\addr_location_incr_count_reg_n_0_[2] ),
        .I1(\addr_location_incr_count_reg_n_0_[3] ),
        .I2(\addr_location_incr_count_reg[0]_0 ),
        .I3(\addr_location_incr_count_reg_n_0_[1] ),
        .I4(\addr_location_incr_count_reg_n_0_[4] ),
        .I5(RXE_RXFIFO_WEN),
        .O(RXE_DATA_STORED_AT_DLC0));
  FDRE \RXE_DATA_STORED_AT_DLC_reg[0] 
       (.C(can_clk),
        .CE(RXE_DATA_STORED_AT_DLC0),
        .D(\RXE_DATA_STORED_AT_DLC_reg[0]_1 [10]),
        .Q(\RXE_DATA_STORED_AT_DLC_reg[0]_0 [10]),
        .R(SR));
  FDRE \RXE_DATA_STORED_AT_DLC_reg[10] 
       (.C(can_clk),
        .CE(RXE_DATA_STORED_AT_DLC0),
        .D(\RXE_DATA_STORED_AT_DLC_reg[0]_1 [0]),
        .Q(\RXE_DATA_STORED_AT_DLC_reg[0]_0 [0]),
        .R(SR));
  FDRE \RXE_DATA_STORED_AT_DLC_reg[1] 
       (.C(can_clk),
        .CE(RXE_DATA_STORED_AT_DLC0),
        .D(\RXE_DATA_STORED_AT_DLC_reg[0]_1 [9]),
        .Q(\RXE_DATA_STORED_AT_DLC_reg[0]_0 [9]),
        .R(SR));
  FDRE \RXE_DATA_STORED_AT_DLC_reg[2] 
       (.C(can_clk),
        .CE(RXE_DATA_STORED_AT_DLC0),
        .D(\RXE_DATA_STORED_AT_DLC_reg[0]_1 [8]),
        .Q(\RXE_DATA_STORED_AT_DLC_reg[0]_0 [8]),
        .R(SR));
  FDRE \RXE_DATA_STORED_AT_DLC_reg[3] 
       (.C(can_clk),
        .CE(RXE_DATA_STORED_AT_DLC0),
        .D(\RXE_DATA_STORED_AT_DLC_reg[0]_1 [7]),
        .Q(\RXE_DATA_STORED_AT_DLC_reg[0]_0 [7]),
        .R(SR));
  FDRE \RXE_DATA_STORED_AT_DLC_reg[4] 
       (.C(can_clk),
        .CE(RXE_DATA_STORED_AT_DLC0),
        .D(\RXE_DATA_STORED_AT_DLC_reg[0]_1 [6]),
        .Q(\RXE_DATA_STORED_AT_DLC_reg[0]_0 [6]),
        .R(SR));
  FDRE \RXE_DATA_STORED_AT_DLC_reg[5] 
       (.C(can_clk),
        .CE(RXE_DATA_STORED_AT_DLC0),
        .D(\RXE_DATA_STORED_AT_DLC_reg[0]_1 [5]),
        .Q(\RXE_DATA_STORED_AT_DLC_reg[0]_0 [5]),
        .R(SR));
  FDRE \RXE_DATA_STORED_AT_DLC_reg[6] 
       (.C(can_clk),
        .CE(RXE_DATA_STORED_AT_DLC0),
        .D(\RXE_DATA_STORED_AT_DLC_reg[0]_1 [4]),
        .Q(\RXE_DATA_STORED_AT_DLC_reg[0]_0 [4]),
        .R(SR));
  FDRE \RXE_DATA_STORED_AT_DLC_reg[7] 
       (.C(can_clk),
        .CE(RXE_DATA_STORED_AT_DLC0),
        .D(\RXE_DATA_STORED_AT_DLC_reg[0]_1 [3]),
        .Q(\RXE_DATA_STORED_AT_DLC_reg[0]_0 [3]),
        .R(SR));
  FDRE \RXE_DATA_STORED_AT_DLC_reg[8] 
       (.C(can_clk),
        .CE(RXE_DATA_STORED_AT_DLC0),
        .D(\RXE_DATA_STORED_AT_DLC_reg[0]_1 [2]),
        .Q(\RXE_DATA_STORED_AT_DLC_reg[0]_0 [2]),
        .R(SR));
  FDRE \RXE_DATA_STORED_AT_DLC_reg[9] 
       (.C(can_clk),
        .CE(RXE_DATA_STORED_AT_DLC0),
        .D(\RXE_DATA_STORED_AT_DLC_reg[0]_1 [1]),
        .Q(\RXE_DATA_STORED_AT_DLC_reg[0]_0 [1]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT5 #(
    .INIT(32'h0000AEAA)) 
    RXF_FULL_AT_MSG_BOUNDARY_i_1
       (.I0(RXF_FULL_AT_MSG_BOUNDARY_reg_0),
        .I1(RXF_FULL_I_reg_0),
        .I2(RXE_RXFIFO_WEN_FD2),
        .I3(RXE_RXFIFO_WEN_FD1),
        .I4(RXF_FULL_AT_MSG_BOUNDARY_reg_1),
        .O(RXF_FULL_AT_MSG_BOUNDARY_i_1_n_0));
  FDRE RXF_FULL_AT_MSG_BOUNDARY_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXF_FULL_AT_MSG_BOUNDARY_i_1_n_0),
        .Q(RXF_FULL_AT_MSG_BOUNDARY_reg_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0080800080000080)) 
    RXF_FULL_AXI_i_1__1
       (.I0(RXF_FULL_AXI_i_2__1_n_0),
        .I1(RXF_FULL_AXI_i_3__1_n_0),
        .I2(RXF_FULL_AXI_i_4__0_n_0),
        .I3(\RD_INDEX_reg[1]_0 [4]),
        .I4(\RD_INDEX_reg[1]_0 [3]),
        .I5(\wr_index_gray_synced_fs3_d1_reg_n_0_[3] ),
        .O(RXF_FULL_AXI0));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'h0690)) 
    RXF_FULL_AXI_i_2__1
       (.I0(\RD_INDEX_reg[1]_0 [5]),
        .I1(p_0_in32_in),
        .I2(p_0_in),
        .I3(p_1_in),
        .O(RXF_FULL_AXI_i_2__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT5 #(
    .INIT(32'h09606009)) 
    RXF_FULL_AXI_i_3__1
       (.I0(\RD_INDEX_reg[1]_0 [1]),
        .I1(p_2_in),
        .I2(\RD_INDEX_reg[1]_0 [2]),
        .I3(\RD_INDEX_reg[1]_0 [3]),
        .I4(p_1_in25_in),
        .O(RXF_FULL_AXI_i_3__1_n_0));
  LUT6 #(
    .INIT(64'h0069690069000069)) 
    RXF_FULL_AXI_i_4__0
       (.I0(\RD_INDEX_reg[1]_0 [5]),
        .I1(\RD_INDEX_reg[1]_0 [4]),
        .I2(\wr_index_gray_synced_fs3_d1_reg_n_0_[2] ),
        .I3(\RD_INDEX_reg[1]_0 [1]),
        .I4(\RD_INDEX_reg[1]_0 [0]),
        .I5(\wr_index_gray_synced_fs3_d1_reg_n_0_[6] ),
        .O(RXF_FULL_AXI_i_4__0_n_0));
  FDRE RXF_FULL_AXI_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(RXF_FULL_AXI0),
        .Q(RXF_FULL_AXI_0),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  LUT6 #(
    .INIT(64'h4824214200000000)) 
    RXF_FULL_I_i_1__1
       (.I0(p_0_in0_in),
        .I1(wr_index_i_reg[0]),
        .I2(\wr_index_gray_reg[1]_i_2__1_n_0 ),
        .I3(wr_index_i_reg[1]),
        .I4(p_0_in38_in),
        .I5(RXF_FULL_I1__8),
        .O(RXF_FULL_I0));
  LUT6 #(
    .INIT(64'h0060900060000090)) 
    RXF_FULL_I_i_2__1
       (.I0(\rd_index_gray_synced_fs2_d1_reg_n_0_[3] ),
        .I1(p_1_in13_in),
        .I2(RXF_FULL_I_i_3__1_n_0),
        .I3(p_1_in17_in),
        .I4(p_1_in15_in),
        .I5(\rd_index_gray_synced_fs2_d1_reg_n_0_[2] ),
        .O(RXF_FULL_I1__8));
  LUT6 #(
    .INIT(64'h2222882888882282)) 
    RXF_FULL_I_i_3__1
       (.I0(RXF_FULL_I_i_4__1_n_0),
        .I1(wr_index_i_reg[3]),
        .I2(wr_index_i_reg[5]),
        .I3(\wr_index_i_reg[1]_0 ),
        .I4(wr_index_i_reg[4]),
        .I5(\rd_index_gray_synced_fs2_d1_reg_n_0_[4] ),
        .O(RXF_FULL_I_i_3__1_n_0));
  LUT6 #(
    .INIT(64'h0006699066600009)) 
    RXF_FULL_I_i_4__1
       (.I0(wr_index_i_reg[4]),
        .I1(\rd_index_gray_synced_fs2_d1_reg_n_0_[5] ),
        .I2(RXE_RXMSG_VAL_F1),
        .I3(\wr_index_i_reg[6]_0 ),
        .I4(wr_index_i_reg[5]),
        .I5(\rd_index_gray_synced_fs2_d1_reg_n_0_[6] ),
        .O(RXF_FULL_I_i_4__1_n_0));
  FDRE RXF_FULL_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXF_FULL_I0),
        .Q(RXF_FULL_I_reg_0),
        .R(SR));
  CARRY4 RXWM_SET0_carry
       (.CI(1'b0),
        .CO({RXWM_SET0_carry_n_0,RXWM_SET0_carry_n_1,RXWM_SET0_carry_n_2,RXWM_SET0_carry_n_3}),
        .CYINIT(1'b0),
        .DI({Q[6],RXWM_SET0_carry_i_1__0_n_0,RXWM_SET0_carry_i_2__0_n_0,RXWM_SET0_carry_i_3__0_n_0}),
        .O(NLW_RXWM_SET0_carry_O_UNCONNECTED[3:0]),
        .S({RXWM_SET0_carry_i_4__0_n_0,RXWM_SET0_carry_i_5__0_n_0,RXWM_SET0_carry_i_6__0_n_0,RXWM_SET0_carry_i_7__0_n_0}));
  LUT4 #(
    .INIT(16'h22B2)) 
    RXWM_SET0_carry_i_1__0
       (.I0(Q[5]),
        .I1(IC_REG_WMR_I_F1[0]),
        .I2(Q[4]),
        .I3(IC_REG_WMR_I_F1[1]),
        .O(RXWM_SET0_carry_i_1__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    RXWM_SET0_carry_i_2__0
       (.I0(Q[3]),
        .I1(IC_REG_WMR_I_F1[2]),
        .I2(Q[2]),
        .I3(\IC_REG_WMR_I2_reg[3]_0 [2]),
        .O(RXWM_SET0_carry_i_2__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    RXWM_SET0_carry_i_3__0
       (.I0(Q[1]),
        .I1(\IC_REG_WMR_I2_reg[3]_0 [1]),
        .I2(Q[0]),
        .I3(\IC_REG_WMR_I2_reg[3]_0 [0]),
        .O(RXWM_SET0_carry_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    RXWM_SET0_carry_i_4__0
       (.I0(Q[6]),
        .O(RXWM_SET0_carry_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    RXWM_SET0_carry_i_5__0
       (.I0(IC_REG_WMR_I_F1[0]),
        .I1(Q[5]),
        .I2(IC_REG_WMR_I_F1[1]),
        .I3(Q[4]),
        .O(RXWM_SET0_carry_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    RXWM_SET0_carry_i_6__0
       (.I0(IC_REG_WMR_I_F1[2]),
        .I1(Q[3]),
        .I2(\IC_REG_WMR_I2_reg[3]_0 [2]),
        .I3(Q[2]),
        .O(RXWM_SET0_carry_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    RXWM_SET0_carry_i_7__0
       (.I0(\IC_REG_WMR_I2_reg[3]_0 [1]),
        .I1(Q[1]),
        .I2(\IC_REG_WMR_I2_reg[3]_0 [0]),
        .I3(Q[0]),
        .O(RXWM_SET0_carry_i_7__0_n_0));
  FDRE RXWM_SET_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(RXWM_SET0_carry_n_0),
        .Q(RXWM_SET_F1),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized3_9 WR_PTR_2S_CDC_TO
       (.D({wr_index_gray_synced_fs3[0],wr_index_gray_synced_fs3[1],wr_index_gray_synced_fs3[2],wr_index_gray_synced_fs3[3],wr_index_gray_synced_fs3[4],wr_index_gray_synced_fs3[5],wr_index_gray_synced_fs3[6]}),
        .\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 (\MULTI_BIT.s_level_out_bus_d5_reg[0] ),
        .Q({\wr_index_gray_reg_reg_n_0_[1] ,\wr_index_gray_reg_reg_n_0_[2] ,\wr_index_gray_reg_reg_n_0_[3] ,\wr_index_gray_reg_reg_n_0_[4] ,\wr_index_gray_reg_reg_n_0_[5] ,\wr_index_gray_reg_reg_n_0_[6] }),
        .s_axi_aclk(s_axi_aclk),
        .wr_index_i_reg(wr_index_i_reg[0]));
  LUT5 #(
    .INIT(32'h00005154)) 
    \addr_location_incr_count[0]_i_1__0 
       (.I0(TS_RX_WEN_F1),
        .I1(addr_location_incr_count0),
        .I2(RXE_MSGVAL_EARLY_F1),
        .I3(\addr_location_incr_count_reg[0]_0 ),
        .I4(RXF_FULL_AT_MSG_BOUNDARY_reg_1),
        .O(\addr_location_incr_count[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \addr_location_incr_count[1]_i_1__1 
       (.I0(\addr_location_incr_count_reg[0]_0 ),
        .I1(\addr_location_incr_count_reg_n_0_[1] ),
        .O(\addr_location_incr_count[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \addr_location_incr_count[2]_i_1__1 
       (.I0(\addr_location_incr_count_reg_n_0_[1] ),
        .I1(\addr_location_incr_count_reg[0]_0 ),
        .I2(\addr_location_incr_count_reg_n_0_[2] ),
        .O(\addr_location_incr_count[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \addr_location_incr_count[3]_i_1__1 
       (.I0(\addr_location_incr_count_reg_n_0_[2] ),
        .I1(\addr_location_incr_count_reg[0]_0 ),
        .I2(\addr_location_incr_count_reg_n_0_[1] ),
        .I3(\addr_location_incr_count_reg_n_0_[3] ),
        .O(\addr_location_incr_count[3]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h222222222222222A)) 
    \addr_location_incr_count[4]_i_2__0 
       (.I0(\addr_location_incr_count[4]_i_4__0_n_0 ),
        .I1(\addr_location_incr_count_reg_n_0_[4] ),
        .I2(\addr_location_incr_count_reg_n_0_[1] ),
        .I3(\addr_location_incr_count_reg[0]_0 ),
        .I4(\addr_location_incr_count_reg_n_0_[3] ),
        .I5(\addr_location_incr_count_reg_n_0_[2] ),
        .O(addr_location_incr_count0));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \addr_location_incr_count[4]_i_3__0 
       (.I0(\addr_location_incr_count_reg_n_0_[3] ),
        .I1(\addr_location_incr_count_reg_n_0_[1] ),
        .I2(\addr_location_incr_count_reg[0]_0 ),
        .I3(\addr_location_incr_count_reg_n_0_[2] ),
        .I4(\addr_location_incr_count_reg_n_0_[4] ),
        .O(\addr_location_incr_count[4]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \addr_location_incr_count[4]_i_4__0 
       (.I0(RXF_FULL_I_reg_0),
        .I1(RXE_RXFIFO_WEN_FD1),
        .I2(RXE_RXFIFO_WEN_FD2),
        .I3(RXF_FULL_AT_MSG_BOUNDARY_reg_0),
        .O(\addr_location_incr_count[4]_i_4__0_n_0 ));
  FDRE \addr_location_incr_count_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\addr_location_incr_count[0]_i_1__0_n_0 ),
        .Q(\addr_location_incr_count_reg[0]_0 ),
        .R(1'b0));
  FDRE \addr_location_incr_count_reg[1] 
       (.C(can_clk),
        .CE(addr_location_incr_count0),
        .D(\addr_location_incr_count[1]_i_1__1_n_0 ),
        .Q(\addr_location_incr_count_reg_n_0_[1] ),
        .R(addr_location_incr_count_2));
  FDRE \addr_location_incr_count_reg[2] 
       (.C(can_clk),
        .CE(addr_location_incr_count0),
        .D(\addr_location_incr_count[2]_i_1__1_n_0 ),
        .Q(\addr_location_incr_count_reg_n_0_[2] ),
        .R(addr_location_incr_count_2));
  FDRE \addr_location_incr_count_reg[3] 
       (.C(can_clk),
        .CE(addr_location_incr_count0),
        .D(\addr_location_incr_count[3]_i_1__1_n_0 ),
        .Q(\addr_location_incr_count_reg_n_0_[3] ),
        .R(addr_location_incr_count_2));
  FDRE \addr_location_incr_count_reg[4] 
       (.C(can_clk),
        .CE(addr_location_incr_count0),
        .D(\addr_location_incr_count[4]_i_3__0_n_0 ),
        .Q(\addr_location_incr_count_reg_n_0_[4] ),
        .R(addr_location_incr_count_2));
  CARRY4 \gen_rx1.u_rxxpm_2_i_2 
       (.CI(\gen_rx1.u_rxxpm_2_i_3_n_0 ),
        .CO({\NLW_gen_rx1.u_rxxpm_2_i_2_CO_UNCONNECTED [3:1],\gen_rx1.u_rxxpm_2_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_rx1.u_rxxpm_2_i_2_O_UNCONNECTED [3:2],RX_ADDR_M_CC_F1[9:8]}),
        .S({1'b0,1'b0,wr_index_id_loc_reg[0],wr_index_id_loc_reg[1]}));
  CARRY4 \gen_rx1.u_rxxpm_2_i_3 
       (.CI(\gen_rx1.u_rxxpm_2_i_4_n_0 ),
        .CO({\gen_rx1.u_rxxpm_2_i_3_n_0 ,\gen_rx1.u_rxxpm_2_i_3_n_1 ,\gen_rx1.u_rxxpm_2_i_3_n_2 ,\gen_rx1.u_rxxpm_2_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(RX_ADDR_M_CC_F1[7:4]),
        .S({wr_index_id_loc_reg[2],wr_index_id_loc_reg[3],wr_index_id_loc_reg[4],wr_index_id_loc_reg[5]}));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_rx1.u_rxxpm_2_i_38 
       (.I0(wr_index_id_loc_reg[6]),
        .I1(\addr_location_incr_count_reg_n_0_[4] ),
        .O(\gen_rx1.u_rxxpm_2_i_38_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_rx1.u_rxxpm_2_i_39 
       (.I0(wr_index_id_loc_reg[7]),
        .I1(\addr_location_incr_count_reg_n_0_[3] ),
        .O(\gen_rx1.u_rxxpm_2_i_39_n_0 ));
  CARRY4 \gen_rx1.u_rxxpm_2_i_4 
       (.CI(1'b0),
        .CO({\gen_rx1.u_rxxpm_2_i_4_n_0 ,\gen_rx1.u_rxxpm_2_i_4_n_1 ,\gen_rx1.u_rxxpm_2_i_4_n_2 ,\gen_rx1.u_rxxpm_2_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI({wr_index_id_loc_reg[6],wr_index_id_loc_reg[7],wr_index_id_loc_reg[8],wr_index_id_loc_reg[9]}),
        .O({RX_ADDR_M_CC_F1[3:1],\NLW_gen_rx1.u_rxxpm_2_i_4_O_UNCONNECTED [0]}),
        .S({\gen_rx1.u_rxxpm_2_i_38_n_0 ,\gen_rx1.u_rxxpm_2_i_39_n_0 ,\gen_rx1.u_rxxpm_2_i_40_n_0 ,\gen_rx1.u_rxxpm_2_i_41_n_0 }));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_rx1.u_rxxpm_2_i_40 
       (.I0(wr_index_id_loc_reg[8]),
        .I1(\addr_location_incr_count_reg_n_0_[2] ),
        .O(\gen_rx1.u_rxxpm_2_i_40_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_rx1.u_rxxpm_2_i_41 
       (.I0(wr_index_id_loc_reg[9]),
        .I1(\addr_location_incr_count_reg_n_0_[1] ),
        .O(\gen_rx1.u_rxxpm_2_i_41_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_rx1.u_rxxpm_2_i_5 
       (.I0(wr_index_id_loc_reg[9]),
        .I1(\addr_location_incr_count_reg_n_0_[1] ),
        .O(RX_ADDR_M_CC_F1[0]));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__0_i_1__2
       (.I0(\wr_index_binary_synced_fs3_d1_reg_n_0_[1] ),
        .I1(\RD_INDEX_reg[1]_0 [5]),
        .O(i__carry__0_i_1__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__0_i_2__2
       (.I0(\wr_index_binary_synced_fs3_d1_reg_n_0_[2] ),
        .I1(\RD_INDEX_reg[1]_0 [4]),
        .O(i__carry__0_i_2__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry_i_1__8
       (.I0(\wr_index_binary_synced_fs3_d1_reg_n_0_[3] ),
        .I1(\RD_INDEX_reg[1]_0 [3]),
        .O(i__carry_i_1__8_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry_i_2__7
       (.I0(\wr_index_binary_synced_fs3_d1_reg_n_0_[4] ),
        .I1(\RD_INDEX_reg[1]_0 [2]),
        .O(i__carry_i_2__7_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry_i_3__8
       (.I0(\wr_index_binary_synced_fs3_d1_reg_n_0_[5] ),
        .I1(\RD_INDEX_reg[1]_0 [1]),
        .O(i__carry_i_3__8_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry_i_4__8
       (.I0(\wr_index_binary_synced_fs3_d1_reg_n_0_[6] ),
        .I1(\RD_INDEX_reg[1]_0 [0]),
        .O(i__carry_i_4__8_n_0));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_index_gray_reg[1]_i_1__1 
       (.I0(\RD_INDEX_reg[1]_0 [5]),
        .I1(p_0_in),
        .O(rd_index_gray_reg09_out));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_index_gray_reg[2]_i_1__1 
       (.I0(\RD_INDEX_reg[1]_0 [4]),
        .I1(\RD_INDEX_reg[1]_0 [5]),
        .O(rd_index_gray_reg07_out));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_index_gray_reg[3]_i_1__0 
       (.I0(\RD_INDEX_reg[1]_0 [3]),
        .I1(\RD_INDEX_reg[1]_0 [4]),
        .O(rd_index_gray_reg05_out));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_index_gray_reg[4]_i_1__1 
       (.I0(\RD_INDEX_reg[1]_0 [3]),
        .I1(\RD_INDEX_reg[1]_0 [2]),
        .O(rd_index_gray_reg03_out));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_index_gray_reg[5]_i_1__1 
       (.I0(\RD_INDEX_reg[1]_0 [1]),
        .I1(\RD_INDEX_reg[1]_0 [2]),
        .O(rd_index_gray_reg01_out));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_index_gray_reg[6]_i_1__0 
       (.I0(\RD_INDEX_reg[1]_0 [0]),
        .I1(\RD_INDEX_reg[1]_0 [1]),
        .O(rd_index_gray_reg0));
  FDRE \rd_index_gray_reg_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_0_in),
        .Q(\rd_index_gray_reg_reg_n_0_[0] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \rd_index_gray_reg_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(rd_index_gray_reg09_out),
        .Q(\rd_index_gray_reg_reg_n_0_[1] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \rd_index_gray_reg_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(rd_index_gray_reg07_out),
        .Q(\rd_index_gray_reg_reg_n_0_[2] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \rd_index_gray_reg_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(rd_index_gray_reg05_out),
        .Q(\rd_index_gray_reg_reg_n_0_[3] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \rd_index_gray_reg_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(rd_index_gray_reg03_out),
        .Q(\rd_index_gray_reg_reg_n_0_[4] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \rd_index_gray_reg_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(rd_index_gray_reg01_out),
        .Q(\rd_index_gray_reg_reg_n_0_[5] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \rd_index_gray_reg_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(rd_index_gray_reg0),
        .Q(\rd_index_gray_reg_reg_n_0_[6] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \rd_index_gray_synced_fs2_d1_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(rd_index_gray_synced_fs2[0]),
        .Q(p_0_in0_in),
        .R(SR));
  FDRE \rd_index_gray_synced_fs2_d1_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(rd_index_gray_synced_fs2[1]),
        .Q(p_0_in38_in),
        .R(SR));
  FDRE \rd_index_gray_synced_fs2_d1_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(rd_index_gray_synced_fs2[2]),
        .Q(\rd_index_gray_synced_fs2_d1_reg_n_0_[2] ),
        .R(SR));
  FDRE \rd_index_gray_synced_fs2_d1_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(rd_index_gray_synced_fs2[3]),
        .Q(\rd_index_gray_synced_fs2_d1_reg_n_0_[3] ),
        .R(SR));
  FDRE \rd_index_gray_synced_fs2_d1_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(rd_index_gray_synced_fs2[4]),
        .Q(\rd_index_gray_synced_fs2_d1_reg_n_0_[4] ),
        .R(SR));
  FDRE \rd_index_gray_synced_fs2_d1_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(rd_index_gray_synced_fs2[5]),
        .Q(\rd_index_gray_synced_fs2_d1_reg_n_0_[5] ),
        .R(SR));
  FDRE \rd_index_gray_synced_fs2_d1_reg[6] 
       (.C(can_clk),
        .CE(1'b1),
        .D(rd_index_gray_synced_fs2[6]),
        .Q(\rd_index_gray_synced_fs2_d1_reg_n_0_[6] ),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_index_binary_synced_fs3_d1[1]_i_1__1 
       (.I0(p_0_in32_in),
        .I1(p_1_in),
        .O(wr_index_gray_2msb_xor_axi));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \wr_index_binary_synced_fs3_d1[2]_i_1__1 
       (.I0(\wr_index_gray_synced_fs3_d1_reg_n_0_[2] ),
        .I1(p_1_in),
        .I2(p_0_in32_in),
        .O(wr_index_binary_synced_fs3[2]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \wr_index_binary_synced_fs3_d1[3]_i_1__1 
       (.I0(\wr_index_gray_synced_fs3_d1_reg_n_0_[3] ),
        .I1(\wr_index_gray_synced_fs3_d1_reg_n_0_[2] ),
        .I2(p_1_in),
        .I3(p_0_in32_in),
        .O(wr_index_binary_synced_fs3[3]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \wr_index_binary_synced_fs3_d1[4]_i_1__1 
       (.I0(p_1_in25_in),
        .I1(p_0_in32_in),
        .I2(p_1_in),
        .I3(\wr_index_gray_synced_fs3_d1_reg_n_0_[2] ),
        .I4(\wr_index_gray_synced_fs3_d1_reg_n_0_[3] ),
        .O(wr_index_binary_synced_fs3[4]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \wr_index_binary_synced_fs3_d1[5]_i_1__1 
       (.I0(\wr_index_gray_synced_fs3_d1_reg_n_0_[3] ),
        .I1(\wr_index_gray_synced_fs3_d1_reg_n_0_[2] ),
        .I2(p_1_in),
        .I3(p_0_in32_in),
        .I4(p_2_in),
        .I5(p_1_in25_in),
        .O(wr_index_binary_synced_fs3[5]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \wr_index_binary_synced_fs3_d1[6]_i_1__0 
       (.I0(\wr_index_gray_synced_fs3_d1_reg_n_0_[3] ),
        .I1(\wr_index_gray_synced_fs3_d1_reg_n_0_[2] ),
        .I2(wr_index_gray_2msb_xor_axi),
        .I3(p_1_in25_in),
        .I4(p_2_in),
        .I5(\wr_index_gray_synced_fs3_d1_reg_n_0_[6] ),
        .O(wr_index_binary_synced_fs3[6]));
  FDRE \wr_index_binary_synced_fs3_d1_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_gray_2msb_xor_axi),
        .Q(\wr_index_binary_synced_fs3_d1_reg_n_0_[1] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_binary_synced_fs3_d1_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_binary_synced_fs3[2]),
        .Q(\wr_index_binary_synced_fs3_d1_reg_n_0_[2] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_binary_synced_fs3_d1_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_binary_synced_fs3[3]),
        .Q(\wr_index_binary_synced_fs3_d1_reg_n_0_[3] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_binary_synced_fs3_d1_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_binary_synced_fs3[4]),
        .Q(\wr_index_binary_synced_fs3_d1_reg_n_0_[4] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_binary_synced_fs3_d1_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_binary_synced_fs3[5]),
        .Q(\wr_index_binary_synced_fs3_d1_reg_n_0_[5] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_binary_synced_fs3_d1_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_binary_synced_fs3[6]),
        .Q(\wr_index_binary_synced_fs3_d1_reg_n_0_[6] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'h59)) 
    \wr_index_gray_reg[1]_i_1__1 
       (.I0(wr_index_i_reg[0]),
        .I1(\wr_index_gray_reg[1]_i_2__1_n_0 ),
        .I2(wr_index_i_reg[1]),
        .O(wr_index_gray_reg020_out));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \wr_index_gray_reg[1]_i_2__1 
       (.I0(wr_index_i_reg[2]),
        .I1(wr_index_i_reg[5]),
        .I2(RXE_RXMSG_VAL_F1),
        .I3(\wr_index_i_reg[6]_0 ),
        .I4(wr_index_i_reg[4]),
        .I5(wr_index_i_reg[3]),
        .O(\wr_index_gray_reg[1]_i_2__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_index_gray_reg[2]_i_1__1 
       (.I0(p_1_in15_in),
        .I1(p_1_in17_in),
        .O(wr_index_gray_reg018_out));
  LUT6 #(
    .INIT(64'h5666666666666666)) 
    \wr_index_gray_reg[3]_i_1__1 
       (.I0(wr_index_i_reg[2]),
        .I1(wr_index_i_reg[3]),
        .I2(wr_index_i_reg[4]),
        .I3(\wr_index_i_reg[6]_0 ),
        .I4(RXE_RXMSG_VAL_F1),
        .I5(wr_index_i_reg[5]),
        .O(wr_index_gray_reg016_out));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT5 #(
    .INIT(32'h55556AAA)) 
    \wr_index_gray_reg[4]_i_1__1 
       (.I0(wr_index_i_reg[3]),
        .I1(wr_index_i_reg[5]),
        .I2(RXE_RXMSG_VAL_F1),
        .I3(\wr_index_i_reg[6]_0 ),
        .I4(wr_index_i_reg[4]),
        .O(wr_index_gray_reg014_out));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT4 #(
    .INIT(16'h556A)) 
    \wr_index_gray_reg[5]_i_1__1 
       (.I0(wr_index_i_reg[4]),
        .I1(\wr_index_i_reg[6]_0 ),
        .I2(RXE_RXMSG_VAL_F1),
        .I3(wr_index_i_reg[5]),
        .O(wr_index_gray_reg012_out));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'h1E)) 
    \wr_index_gray_reg[6]_i_1__0 
       (.I0(RXE_RXMSG_VAL_F1),
        .I1(\wr_index_i_reg[6]_0 ),
        .I2(wr_index_i_reg[5]),
        .O(wr_index_gray_reg0));
  FDRE \wr_index_gray_reg_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(wr_index_gray_reg020_out),
        .Q(\wr_index_gray_reg_reg_n_0_[1] ),
        .R(SR));
  FDRE \wr_index_gray_reg_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(wr_index_gray_reg018_out),
        .Q(\wr_index_gray_reg_reg_n_0_[2] ),
        .R(SR));
  FDRE \wr_index_gray_reg_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(wr_index_gray_reg016_out),
        .Q(\wr_index_gray_reg_reg_n_0_[3] ),
        .R(SR));
  FDRE \wr_index_gray_reg_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(wr_index_gray_reg014_out),
        .Q(\wr_index_gray_reg_reg_n_0_[4] ),
        .R(SR));
  FDRE \wr_index_gray_reg_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(wr_index_gray_reg012_out),
        .Q(\wr_index_gray_reg_reg_n_0_[5] ),
        .R(SR));
  FDRE \wr_index_gray_reg_reg[6] 
       (.C(can_clk),
        .CE(1'b1),
        .D(wr_index_gray_reg0),
        .Q(\wr_index_gray_reg_reg_n_0_[6] ),
        .R(SR));
  FDRE \wr_index_gray_synced_fs3_d1_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_gray_synced_fs3[0]),
        .Q(p_1_in),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_gray_synced_fs3_d1_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_gray_synced_fs3[1]),
        .Q(p_0_in32_in),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_gray_synced_fs3_d1_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_gray_synced_fs3[2]),
        .Q(\wr_index_gray_synced_fs3_d1_reg_n_0_[2] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_gray_synced_fs3_d1_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_gray_synced_fs3[3]),
        .Q(\wr_index_gray_synced_fs3_d1_reg_n_0_[3] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_gray_synced_fs3_d1_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_gray_synced_fs3[4]),
        .Q(p_1_in25_in),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_gray_synced_fs3_d1_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_gray_synced_fs3[5]),
        .Q(p_2_in),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_gray_synced_fs3_d1_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_gray_synced_fs3[6]),
        .Q(\wr_index_gray_synced_fs3_d1_reg_n_0_[6] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'hD2)) 
    \wr_index_i[0]_i_1__1 
       (.I0(wr_index_i_reg[1]),
        .I1(\wr_index_gray_reg[1]_i_2__1_n_0 ),
        .I2(wr_index_i_reg[0]),
        .O(p_1_in1_in));
  LUT6 #(
    .INIT(64'hF7FFFFFF08000000)) 
    \wr_index_i[1]_i_1__1 
       (.I0(wr_index_i_reg[3]),
        .I1(wr_index_i_reg[4]),
        .I2(\wr_index_i_reg[1]_0 ),
        .I3(wr_index_i_reg[5]),
        .I4(wr_index_i_reg[2]),
        .I5(wr_index_i_reg[1]),
        .O(p_1_in17_in));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \wr_index_i[2]_i_1__1 
       (.I0(wr_index_i_reg[5]),
        .I1(RXE_RXMSG_VAL_F1),
        .I2(\wr_index_i_reg[6]_0 ),
        .I3(wr_index_i_reg[4]),
        .I4(wr_index_i_reg[3]),
        .I5(wr_index_i_reg[2]),
        .O(p_1_in15_in));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wr_index_i[3]_i_1__1 
       (.I0(wr_index_i_reg[4]),
        .I1(\wr_index_i_reg[6]_0 ),
        .I2(RXE_RXMSG_VAL_F1),
        .I3(wr_index_i_reg[5]),
        .I4(wr_index_i_reg[3]),
        .O(p_1_in13_in));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_index_i[4]_i_1__1 
       (.I0(wr_index_i_reg[5]),
        .I1(RXE_RXMSG_VAL_F1),
        .I2(\wr_index_i_reg[6]_0 ),
        .I3(wr_index_i_reg[4]),
        .O(p_1_in11_in));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_index_i[5]_i_1__1 
       (.I0(\wr_index_i_reg[6]_0 ),
        .I1(RXE_RXMSG_VAL_F1),
        .I2(wr_index_i_reg[5]),
        .O(p_1_in10_in));
  FDRE \wr_index_i_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(p_1_in1_in),
        .Q(wr_index_i_reg[0]),
        .R(SR));
  FDRE \wr_index_i_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(p_1_in17_in),
        .Q(wr_index_i_reg[1]),
        .R(SR));
  FDRE \wr_index_i_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(p_1_in15_in),
        .Q(wr_index_i_reg[2]),
        .R(SR));
  FDRE \wr_index_i_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(p_1_in13_in),
        .Q(wr_index_i_reg[3]),
        .R(SR));
  FDRE \wr_index_i_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(p_1_in11_in),
        .Q(wr_index_i_reg[4]),
        .R(SR));
  FDRE \wr_index_i_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(p_1_in10_in),
        .Q(wr_index_i_reg[5]),
        .R(SR));
  FDRE \wr_index_i_reg[6] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\wr_index_i_reg[6]_1 ),
        .Q(\wr_index_i_reg[6]_0 ),
        .R(SR));
  LUT5 #(
    .INIT(32'h0100FFFF)) 
    \wr_index_id_loc[0]_i_1__0 
       (.I0(wr_index_i_reg[4]),
        .I1(wr_index_i_reg[5]),
        .I2(\wr_index_i_reg[6]_0 ),
        .I3(\wr_index_id_loc[0]_i_3__0_n_0 ),
        .I4(dest_arst),
        .O(\wr_index_id_loc[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wr_index_id_loc[0]_i_2__0 
       (.I0(wr_index_id_loc_reg[1]),
        .I1(\wr_index_id_loc[0]_i_4__0_n_0 ),
        .I2(wr_index_id_loc_reg[3]),
        .I3(wr_index_id_loc_reg[2]),
        .I4(wr_index_id_loc_reg[0]),
        .O(p_0_in__5[10]));
  LUT4 #(
    .INIT(16'h0001)) 
    \wr_index_id_loc[0]_i_3__0 
       (.I0(RXE_RXMSG_VAL_F1),
        .I1(wr_index_i_reg[1]),
        .I2(wr_index_i_reg[2]),
        .I3(wr_index_i_reg[3]),
        .O(\wr_index_id_loc[0]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hA888888800000000)) 
    \wr_index_id_loc[0]_i_4__0 
       (.I0(wr_index_id_loc_reg[4]),
        .I1(wr_index_id_loc_reg[6]),
        .I2(wr_index_id_loc_reg[7]),
        .I3(wr_index_id_loc_reg[8]),
        .I4(wr_index_id_loc_reg[9]),
        .I5(wr_index_id_loc_reg[5]),
        .O(\wr_index_id_loc[0]_i_4__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_index_id_loc[1]_i_1__1 
       (.I0(wr_index_id_loc_reg[2]),
        .I1(wr_index_id_loc_reg[3]),
        .I2(\wr_index_id_loc[0]_i_4__0_n_0 ),
        .I3(wr_index_id_loc_reg[1]),
        .O(p_0_in__5[9]));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_index_id_loc[2]_i_1__1 
       (.I0(\wr_index_id_loc[0]_i_4__0_n_0 ),
        .I1(wr_index_id_loc_reg[3]),
        .I2(wr_index_id_loc_reg[2]),
        .O(p_0_in__5[8]));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_index_id_loc[3]_i_1__1 
       (.I0(\wr_index_id_loc[0]_i_4__0_n_0 ),
        .I1(wr_index_id_loc_reg[3]),
        .O(p_0_in__5[7]));
  LUT6 #(
    .INIT(64'h1555FFFFEAAA0000)) 
    \wr_index_id_loc[4]_i_1__1 
       (.I0(wr_index_id_loc_reg[6]),
        .I1(wr_index_id_loc_reg[7]),
        .I2(wr_index_id_loc_reg[8]),
        .I3(wr_index_id_loc_reg[9]),
        .I4(wr_index_id_loc_reg[5]),
        .I5(wr_index_id_loc_reg[4]),
        .O(p_0_in__5[6]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT5 #(
    .INIT(32'h007FFF80)) 
    \wr_index_id_loc[5]_i_1__1 
       (.I0(wr_index_id_loc_reg[9]),
        .I1(wr_index_id_loc_reg[8]),
        .I2(wr_index_id_loc_reg[7]),
        .I3(wr_index_id_loc_reg[6]),
        .I4(wr_index_id_loc_reg[5]),
        .O(p_0_in__5[5]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT4 #(
    .INIT(16'h807F)) 
    \wr_index_id_loc[6]_i_1__0 
       (.I0(wr_index_id_loc_reg[7]),
        .I1(wr_index_id_loc_reg[8]),
        .I2(wr_index_id_loc_reg[9]),
        .I3(wr_index_id_loc_reg[6]),
        .O(p_0_in__5[4]));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_index_id_loc[7]_i_1__0 
       (.I0(wr_index_id_loc_reg[9]),
        .I1(wr_index_id_loc_reg[8]),
        .I2(wr_index_id_loc_reg[7]),
        .O(p_0_in__5[3]));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_index_id_loc[8]_i_1__0 
       (.I0(wr_index_id_loc_reg[9]),
        .I1(wr_index_id_loc_reg[8]),
        .O(p_0_in__5[2]));
  LUT1 #(
    .INIT(2'h1)) 
    \wr_index_id_loc[9]_i_1__0 
       (.I0(wr_index_id_loc_reg[9]),
        .O(p_0_in__5[1]));
  FDRE \wr_index_id_loc_reg[0] 
       (.C(can_clk),
        .CE(RXE_RXMSG_VAL_F1),
        .D(p_0_in__5[10]),
        .Q(wr_index_id_loc_reg[0]),
        .R(\wr_index_id_loc[0]_i_1__0_n_0 ));
  FDRE \wr_index_id_loc_reg[1] 
       (.C(can_clk),
        .CE(RXE_RXMSG_VAL_F1),
        .D(p_0_in__5[9]),
        .Q(wr_index_id_loc_reg[1]),
        .R(\wr_index_id_loc[0]_i_1__0_n_0 ));
  FDRE \wr_index_id_loc_reg[2] 
       (.C(can_clk),
        .CE(RXE_RXMSG_VAL_F1),
        .D(p_0_in__5[8]),
        .Q(wr_index_id_loc_reg[2]),
        .R(\wr_index_id_loc[0]_i_1__0_n_0 ));
  FDRE \wr_index_id_loc_reg[3] 
       (.C(can_clk),
        .CE(RXE_RXMSG_VAL_F1),
        .D(p_0_in__5[7]),
        .Q(wr_index_id_loc_reg[3]),
        .R(\wr_index_id_loc[0]_i_1__0_n_0 ));
  FDSE \wr_index_id_loc_reg[4] 
       (.C(can_clk),
        .CE(RXE_RXMSG_VAL_F1),
        .D(p_0_in__5[6]),
        .Q(wr_index_id_loc_reg[4]),
        .S(\wr_index_id_loc[0]_i_1__0_n_0 ));
  FDRE \wr_index_id_loc_reg[5] 
       (.C(can_clk),
        .CE(RXE_RXMSG_VAL_F1),
        .D(p_0_in__5[5]),
        .Q(wr_index_id_loc_reg[5]),
        .R(\wr_index_id_loc[0]_i_1__0_n_0 ));
  FDRE \wr_index_id_loc_reg[6] 
       (.C(can_clk),
        .CE(RXE_RXMSG_VAL_F1),
        .D(p_0_in__5[4]),
        .Q(wr_index_id_loc_reg[6]),
        .R(\wr_index_id_loc[0]_i_1__0_n_0 ));
  FDRE \wr_index_id_loc_reg[7] 
       (.C(can_clk),
        .CE(RXE_RXMSG_VAL_F1),
        .D(p_0_in__5[3]),
        .Q(wr_index_id_loc_reg[7]),
        .R(\wr_index_id_loc[0]_i_1__0_n_0 ));
  FDRE \wr_index_id_loc_reg[8] 
       (.C(can_clk),
        .CE(RXE_RXMSG_VAL_F1),
        .D(p_0_in__5[2]),
        .Q(wr_index_id_loc_reg[8]),
        .R(\wr_index_id_loc[0]_i_1__0_n_0 ));
  FDRE \wr_index_id_loc_reg[9] 
       (.C(can_clk),
        .CE(RXE_RXMSG_VAL_F1),
        .D(p_0_in__5[1]),
        .Q(wr_index_id_loc_reg[9]),
        .R(\wr_index_id_loc[0]_i_1__0_n_0 ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_timestamp
   (MATCH_RESULT_FS2_D1,
    MATCH_RESULT_1_D1,
    RXE_MSGVAL_EARLY_F1,
    TS_RX_WEN_F1_reg_0,
    TS_COUNTER_SW_RST_D1,
    RXE_RXMSG_VAL_F1,
    MATCH_RESULT_0_D1,
    RXE_RXMSG_INVAL_F1,
    RXE_RXMSG_VAL_F0,
    RXE_MSGVAL_EARLY_F0,
    RXE_RXMSG_INVAL_F0,
    MATCH_RESULT_TO_BSP,
    TS_COUNTER_SW_RST_D2,
    CLKM_EN_D1,
    TS_RX_WEN,
    D,
    IC_SYNC_ISR_MSGLST_F1,
    IC_SYNC_ISR_MSGLST,
    IC_SYNC_TSR_WEN,
    RXE_RXMSG_VAL_F0_reg_0,
    RXE_RXMSG_VAL_F0_reg_1,
    RXE_RXMSG_VAL_F1_reg_0,
    RXE_RXMSG_VAL_F1_reg_1,
    \RXE_DATA_STORED_AT_DLC_reg[0] ,
    TS_RX_WDATA_F1,
    \MATCHED_FILTER_INDEX_FS2_D1_reg[0]_0 ,
    \syncstages_ff_reg[0][4] ,
    can_clk,
    \syncstages_ff_reg[0] ,
    SYNC_RST_TL,
    RXE_MSGVAL_EARLY_F10,
    IC_TIMESTAMP_RST_P,
    RXE_RXMSG_VAL_F10,
    RXE_RXMSG_INVAL_F10,
    RXE_RXMSG_VAL_F00,
    RXE_MSGVAL_EARLY_F00,
    RXE_RXMSG_INVAL_F00,
    MATCH_RESULT_TO_BSP0,
    \CLKD_COUNTER_I_reg[3]_0 ,
    IC_SYNC_ISR_MSGLST_F1_reg_0,
    IC_SYNC_ISR_MSGLST_reg_0,
    TIME_STAMP_CNT_REG_WEN_reg_0,
    \wr_index_i_reg[6] ,
    \wr_index_i_reg[6]_0 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1_0 ,
    \gen_wr_a.gen_word_narrow.mem_reg_0 ,
    \gen_wr_a.gen_word_narrow.mem_reg_0_0 ,
    Q,
    \TIME_STAMP_CNT_CAPTURE_reg[15]_0 );
  output MATCH_RESULT_FS2_D1;
  output MATCH_RESULT_1_D1;
  output RXE_MSGVAL_EARLY_F1;
  output TS_RX_WEN_F1_reg_0;
  output TS_COUNTER_SW_RST_D1;
  output RXE_RXMSG_VAL_F1;
  output MATCH_RESULT_0_D1;
  output RXE_RXMSG_INVAL_F1;
  output RXE_RXMSG_VAL_F0;
  output RXE_MSGVAL_EARLY_F0;
  output RXE_RXMSG_INVAL_F0;
  output MATCH_RESULT_TO_BSP;
  output TS_COUNTER_SW_RST_D2;
  output CLKM_EN_D1;
  output TS_RX_WEN;
  output [15:0]D;
  output IC_SYNC_ISR_MSGLST_F1;
  output IC_SYNC_ISR_MSGLST;
  output IC_SYNC_TSR_WEN;
  output RXE_RXMSG_VAL_F0_reg_0;
  output [0:0]RXE_RXMSG_VAL_F0_reg_1;
  output RXE_RXMSG_VAL_F1_reg_0;
  output [0:0]RXE_RXMSG_VAL_F1_reg_1;
  output [23:0]\RXE_DATA_STORED_AT_DLC_reg[0] ;
  output [20:0]TS_RX_WDATA_F1;
  output \MATCHED_FILTER_INDEX_FS2_D1_reg[0]_0 ;
  input [4:0]\syncstages_ff_reg[0][4] ;
  input can_clk;
  input \syncstages_ff_reg[0] ;
  input SYNC_RST_TL;
  input RXE_MSGVAL_EARLY_F10;
  input IC_TIMESTAMP_RST_P;
  input RXE_RXMSG_VAL_F10;
  input RXE_RXMSG_INVAL_F10;
  input RXE_RXMSG_VAL_F00;
  input RXE_MSGVAL_EARLY_F00;
  input RXE_RXMSG_INVAL_F00;
  input MATCH_RESULT_TO_BSP0;
  input \CLKD_COUNTER_I_reg[3]_0 ;
  input IC_SYNC_ISR_MSGLST_F1_reg_0;
  input IC_SYNC_ISR_MSGLST_reg_0;
  input TIME_STAMP_CNT_REG_WEN_reg_0;
  input [0:0]\wr_index_i_reg[6] ;
  input [0:0]\wr_index_i_reg[6]_0 ;
  input [10:0]\gen_wr_a.gen_word_narrow.mem_reg_1 ;
  input [15:0]\gen_wr_a.gen_word_narrow.mem_reg_1_0 ;
  input [7:0]\gen_wr_a.gen_word_narrow.mem_reg_0 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_0_0 ;
  input [4:0]Q;
  input [0:0]\TIME_STAMP_CNT_CAPTURE_reg[15]_0 ;

  wire CLKD_CMP_I;
  wire [0:3]CLKD_COUNTER_I_reg;
  wire \CLKD_COUNTER_I_reg[3]_0 ;
  wire CLKM_EN;
  wire CLKM_EN_D1;
  wire [15:0]D;
  wire IC_SYNC_ISR_MSGLST;
  wire IC_SYNC_ISR_MSGLST_F1;
  wire IC_SYNC_ISR_MSGLST_F1_reg_0;
  wire IC_SYNC_ISR_MSGLST_reg_0;
  wire IC_SYNC_TSR_WEN;
  wire IC_TIMESTAMP_RST_P;
  wire [0:4]MATCHED_FILTER_INDEX_FS2;
  wire \MATCHED_FILTER_INDEX_FS2_D1_reg[0]_0 ;
  wire MATCH_RESULT_0;
  wire MATCH_RESULT_0_D1;
  wire MATCH_RESULT_1;
  wire MATCH_RESULT_1_D1;
  wire MATCH_RESULT_1_D1_i_3_n_0;
  wire MATCH_RESULT_FS2;
  wire MATCH_RESULT_FS2_D1;
  wire MATCH_RESULT_TO_BSP;
  wire MATCH_RESULT_TO_BSP0;
  wire [4:0]Q;
  wire [23:0]\RXE_DATA_STORED_AT_DLC_reg[0] ;
  wire RXE_MSGVAL_EARLY_F0;
  wire RXE_MSGVAL_EARLY_F00;
  wire RXE_MSGVAL_EARLY_F1;
  wire RXE_MSGVAL_EARLY_F10;
  wire RXE_RXMSG_INVAL_F0;
  wire RXE_RXMSG_INVAL_F00;
  wire RXE_RXMSG_INVAL_F1;
  wire RXE_RXMSG_INVAL_F10;
  wire RXE_RXMSG_VAL_F0;
  wire RXE_RXMSG_VAL_F00;
  wire RXE_RXMSG_VAL_F0_reg_0;
  wire [0:0]RXE_RXMSG_VAL_F0_reg_1;
  wire RXE_RXMSG_VAL_F1;
  wire RXE_RXMSG_VAL_F10;
  wire RXE_RXMSG_VAL_F1_reg_0;
  wire [0:0]RXE_RXMSG_VAL_F1_reg_1;
  wire SYNC_RST_TL;
  wire \TIME_STAMP_CNT[15]_i_3_n_0 ;
  wire [0:0]\TIME_STAMP_CNT_CAPTURE_reg[15]_0 ;
  wire TIME_STAMP_CNT_REG_WEN_reg_0;
  wire \TIME_STAMP_CNT_reg[11]_i_1_n_0 ;
  wire \TIME_STAMP_CNT_reg[11]_i_1_n_1 ;
  wire \TIME_STAMP_CNT_reg[11]_i_1_n_2 ;
  wire \TIME_STAMP_CNT_reg[11]_i_1_n_3 ;
  wire \TIME_STAMP_CNT_reg[11]_i_1_n_4 ;
  wire \TIME_STAMP_CNT_reg[11]_i_1_n_5 ;
  wire \TIME_STAMP_CNT_reg[11]_i_1_n_6 ;
  wire \TIME_STAMP_CNT_reg[11]_i_1_n_7 ;
  wire \TIME_STAMP_CNT_reg[15]_i_2_n_0 ;
  wire \TIME_STAMP_CNT_reg[15]_i_2_n_1 ;
  wire \TIME_STAMP_CNT_reg[15]_i_2_n_2 ;
  wire \TIME_STAMP_CNT_reg[15]_i_2_n_3 ;
  wire \TIME_STAMP_CNT_reg[15]_i_2_n_4 ;
  wire \TIME_STAMP_CNT_reg[15]_i_2_n_5 ;
  wire \TIME_STAMP_CNT_reg[15]_i_2_n_6 ;
  wire \TIME_STAMP_CNT_reg[15]_i_2_n_7 ;
  wire \TIME_STAMP_CNT_reg[3]_i_1_n_1 ;
  wire \TIME_STAMP_CNT_reg[3]_i_1_n_2 ;
  wire \TIME_STAMP_CNT_reg[3]_i_1_n_3 ;
  wire \TIME_STAMP_CNT_reg[3]_i_1_n_4 ;
  wire \TIME_STAMP_CNT_reg[3]_i_1_n_5 ;
  wire \TIME_STAMP_CNT_reg[3]_i_1_n_6 ;
  wire \TIME_STAMP_CNT_reg[3]_i_1_n_7 ;
  wire \TIME_STAMP_CNT_reg[7]_i_1_n_0 ;
  wire \TIME_STAMP_CNT_reg[7]_i_1_n_1 ;
  wire \TIME_STAMP_CNT_reg[7]_i_1_n_2 ;
  wire \TIME_STAMP_CNT_reg[7]_i_1_n_3 ;
  wire \TIME_STAMP_CNT_reg[7]_i_1_n_4 ;
  wire \TIME_STAMP_CNT_reg[7]_i_1_n_5 ;
  wire \TIME_STAMP_CNT_reg[7]_i_1_n_6 ;
  wire \TIME_STAMP_CNT_reg[7]_i_1_n_7 ;
  wire TS_COUNTER_SW_RST_D1;
  wire TS_COUNTER_SW_RST_D2;
  wire TS_RX_REN_D1_I;
  wire TS_RX_REN_D1_I_F1;
  wire TS_RX_REN_I_F1_reg_n_0;
  wire TS_RX_REN_I_reg_n_0;
  wire [20:0]TS_RX_WDATA_F1;
  wire TS_RX_WEN;
  wire TS_RX_WEN_F1_reg_0;
  wire can_clk;
  wire [7:0]\gen_wr_a.gen_word_narrow.mem_reg_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_0 ;
  wire [10:0]\gen_wr_a.gen_word_narrow.mem_reg_1 ;
  wire [15:0]\gen_wr_a.gen_word_narrow.mem_reg_1_0 ;
  wire [3:0]p_0_in__0;
  wire \syncstages_ff_reg[0] ;
  wire [4:0]\syncstages_ff_reg[0][4] ;
  wire [0:0]\wr_index_i_reg[6] ;
  wire [0:0]\wr_index_i_reg[6]_0 ;
  wire [3:3]\NLW_TIME_STAMP_CNT_reg[3]_i_1_CO_UNCONNECTED ;

  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \CLKD_COUNTER_I[0]_i_1__0 
       (.I0(CLKD_COUNTER_I_reg[0]),
        .I1(CLKD_COUNTER_I_reg[3]),
        .I2(CLKD_COUNTER_I_reg[2]),
        .I3(CLKD_COUNTER_I_reg[1]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \CLKD_COUNTER_I[1]_i_1__0 
       (.I0(CLKD_COUNTER_I_reg[1]),
        .I1(CLKD_COUNTER_I_reg[2]),
        .I2(CLKD_COUNTER_I_reg[3]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \CLKD_COUNTER_I[2]_i_1__0 
       (.I0(CLKD_COUNTER_I_reg[3]),
        .I1(CLKD_COUNTER_I_reg[2]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \CLKD_COUNTER_I[3]_i_1__0 
       (.I0(CLKD_COUNTER_I_reg[3]),
        .O(p_0_in__0[0]));
  FDRE \CLKD_COUNTER_I_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(CLKD_COUNTER_I_reg[0]),
        .R(\CLKD_COUNTER_I_reg[3]_0 ));
  FDRE \CLKD_COUNTER_I_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(CLKD_COUNTER_I_reg[1]),
        .R(\CLKD_COUNTER_I_reg[3]_0 ));
  FDRE \CLKD_COUNTER_I_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(CLKD_COUNTER_I_reg[2]),
        .R(\CLKD_COUNTER_I_reg[3]_0 ));
  FDRE \CLKD_COUNTER_I_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(CLKD_COUNTER_I_reg[3]),
        .R(\CLKD_COUNTER_I_reg[3]_0 ));
  FDRE CLKM_EN_D1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(CLKM_EN),
        .Q(CLKM_EN_D1),
        .R(SYNC_RST_TL));
  LUT4 #(
    .INIT(16'h8000)) 
    CLKM_EN_i_1__0
       (.I0(CLKD_COUNTER_I_reg[0]),
        .I1(CLKD_COUNTER_I_reg[3]),
        .I2(CLKD_COUNTER_I_reg[2]),
        .I3(CLKD_COUNTER_I_reg[1]),
        .O(CLKD_CMP_I));
  FDRE CLKM_EN_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(CLKD_CMP_I),
        .Q(CLKM_EN),
        .R(SYNC_RST_TL));
  FDRE IC_SYNC_ISR_MSGLST_F1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(IC_SYNC_ISR_MSGLST_F1_reg_0),
        .Q(IC_SYNC_ISR_MSGLST_F1),
        .R(SYNC_RST_TL));
  FDRE IC_SYNC_ISR_MSGLST_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(IC_SYNC_ISR_MSGLST_reg_0),
        .Q(IC_SYNC_ISR_MSGLST),
        .R(SYNC_RST_TL));
  FDRE \MATCHED_FILTER_INDEX_FS2_D1_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(MATCHED_FILTER_INDEX_FS2[0]),
        .Q(TS_RX_WDATA_F1[20]),
        .R(SYNC_RST_TL));
  FDRE \MATCHED_FILTER_INDEX_FS2_D1_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(MATCHED_FILTER_INDEX_FS2[1]),
        .Q(TS_RX_WDATA_F1[19]),
        .R(SYNC_RST_TL));
  FDRE \MATCHED_FILTER_INDEX_FS2_D1_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(MATCHED_FILTER_INDEX_FS2[2]),
        .Q(TS_RX_WDATA_F1[18]),
        .R(SYNC_RST_TL));
  FDRE \MATCHED_FILTER_INDEX_FS2_D1_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(MATCHED_FILTER_INDEX_FS2[3]),
        .Q(TS_RX_WDATA_F1[17]),
        .R(SYNC_RST_TL));
  FDRE \MATCHED_FILTER_INDEX_FS2_D1_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(MATCHED_FILTER_INDEX_FS2[4]),
        .Q(TS_RX_WDATA_F1[16]),
        .R(SYNC_RST_TL));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MATCH_RESULT_0_D1_i_1
       (.I0(MATCH_RESULT_FS2_D1),
        .I1(\MATCHED_FILTER_INDEX_FS2_D1_reg[0]_0 ),
        .O(MATCH_RESULT_0));
  FDRE MATCH_RESULT_0_D1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(MATCH_RESULT_0),
        .Q(MATCH_RESULT_0_D1),
        .R(SYNC_RST_TL));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT2 #(
    .INIT(4'h2)) 
    MATCH_RESULT_1_D1_i_1
       (.I0(MATCH_RESULT_FS2_D1),
        .I1(\MATCHED_FILTER_INDEX_FS2_D1_reg[0]_0 ),
        .O(MATCH_RESULT_1));
  LUT5 #(
    .INIT(32'h4D44DD4D)) 
    MATCH_RESULT_1_D1_i_2
       (.I0(TS_RX_WDATA_F1[20]),
        .I1(Q[4]),
        .I2(TS_RX_WDATA_F1[19]),
        .I3(Q[3]),
        .I4(MATCH_RESULT_1_D1_i_3_n_0),
        .O(\MATCHED_FILTER_INDEX_FS2_D1_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h22B2B2BB22B222B2)) 
    MATCH_RESULT_1_D1_i_3
       (.I0(TS_RX_WDATA_F1[18]),
        .I1(Q[2]),
        .I2(TS_RX_WDATA_F1[17]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(TS_RX_WDATA_F1[16]),
        .O(MATCH_RESULT_1_D1_i_3_n_0));
  FDRE MATCH_RESULT_1_D1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(MATCH_RESULT_1),
        .Q(MATCH_RESULT_1_D1),
        .R(SYNC_RST_TL));
  FDRE MATCH_RESULT_FS2_D1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(MATCH_RESULT_FS2),
        .Q(MATCH_RESULT_FS2_D1),
        .R(SYNC_RST_TL));
  FDRE MATCH_RESULT_TO_BSP_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(MATCH_RESULT_TO_BSP0),
        .Q(MATCH_RESULT_TO_BSP),
        .R(SYNC_RST_TL));
  FDRE RXE_MSGVAL_EARLY_F0_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXE_MSGVAL_EARLY_F00),
        .Q(RXE_MSGVAL_EARLY_F0),
        .R(SYNC_RST_TL));
  FDRE RXE_MSGVAL_EARLY_F1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXE_MSGVAL_EARLY_F10),
        .Q(RXE_MSGVAL_EARLY_F1),
        .R(SYNC_RST_TL));
  FDRE RXE_RXMSG_INVAL_F0_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXE_RXMSG_INVAL_F00),
        .Q(RXE_RXMSG_INVAL_F0),
        .R(SYNC_RST_TL));
  FDRE RXE_RXMSG_INVAL_F1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXE_RXMSG_INVAL_F10),
        .Q(RXE_RXMSG_INVAL_F1),
        .R(SYNC_RST_TL));
  FDRE RXE_RXMSG_VAL_F0_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXE_RXMSG_VAL_F00),
        .Q(RXE_RXMSG_VAL_F0),
        .R(SYNC_RST_TL));
  FDRE RXE_RXMSG_VAL_F1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXE_RXMSG_VAL_F10),
        .Q(RXE_RXMSG_VAL_F1),
        .R(SYNC_RST_TL));
  LUT1 #(
    .INIT(2'h1)) 
    \TIME_STAMP_CNT[15]_i_3 
       (.I0(D[0]),
        .O(\TIME_STAMP_CNT[15]_i_3_n_0 ));
  FDRE \TIME_STAMP_CNT_CAPTURE_reg[0] 
       (.C(can_clk),
        .CE(\TIME_STAMP_CNT_CAPTURE_reg[15]_0 ),
        .D(D[15]),
        .Q(TS_RX_WDATA_F1[15]),
        .R(SYNC_RST_TL));
  FDRE \TIME_STAMP_CNT_CAPTURE_reg[10] 
       (.C(can_clk),
        .CE(\TIME_STAMP_CNT_CAPTURE_reg[15]_0 ),
        .D(D[5]),
        .Q(TS_RX_WDATA_F1[5]),
        .R(SYNC_RST_TL));
  FDRE \TIME_STAMP_CNT_CAPTURE_reg[11] 
       (.C(can_clk),
        .CE(\TIME_STAMP_CNT_CAPTURE_reg[15]_0 ),
        .D(D[4]),
        .Q(TS_RX_WDATA_F1[4]),
        .R(SYNC_RST_TL));
  FDRE \TIME_STAMP_CNT_CAPTURE_reg[12] 
       (.C(can_clk),
        .CE(\TIME_STAMP_CNT_CAPTURE_reg[15]_0 ),
        .D(D[3]),
        .Q(TS_RX_WDATA_F1[3]),
        .R(SYNC_RST_TL));
  FDRE \TIME_STAMP_CNT_CAPTURE_reg[13] 
       (.C(can_clk),
        .CE(\TIME_STAMP_CNT_CAPTURE_reg[15]_0 ),
        .D(D[2]),
        .Q(TS_RX_WDATA_F1[2]),
        .R(SYNC_RST_TL));
  FDRE \TIME_STAMP_CNT_CAPTURE_reg[14] 
       (.C(can_clk),
        .CE(\TIME_STAMP_CNT_CAPTURE_reg[15]_0 ),
        .D(D[1]),
        .Q(TS_RX_WDATA_F1[1]),
        .R(SYNC_RST_TL));
  FDRE \TIME_STAMP_CNT_CAPTURE_reg[15] 
       (.C(can_clk),
        .CE(\TIME_STAMP_CNT_CAPTURE_reg[15]_0 ),
        .D(D[0]),
        .Q(TS_RX_WDATA_F1[0]),
        .R(SYNC_RST_TL));
  FDRE \TIME_STAMP_CNT_CAPTURE_reg[1] 
       (.C(can_clk),
        .CE(\TIME_STAMP_CNT_CAPTURE_reg[15]_0 ),
        .D(D[14]),
        .Q(TS_RX_WDATA_F1[14]),
        .R(SYNC_RST_TL));
  FDRE \TIME_STAMP_CNT_CAPTURE_reg[2] 
       (.C(can_clk),
        .CE(\TIME_STAMP_CNT_CAPTURE_reg[15]_0 ),
        .D(D[13]),
        .Q(TS_RX_WDATA_F1[13]),
        .R(SYNC_RST_TL));
  FDRE \TIME_STAMP_CNT_CAPTURE_reg[3] 
       (.C(can_clk),
        .CE(\TIME_STAMP_CNT_CAPTURE_reg[15]_0 ),
        .D(D[12]),
        .Q(TS_RX_WDATA_F1[12]),
        .R(SYNC_RST_TL));
  FDRE \TIME_STAMP_CNT_CAPTURE_reg[4] 
       (.C(can_clk),
        .CE(\TIME_STAMP_CNT_CAPTURE_reg[15]_0 ),
        .D(D[11]),
        .Q(TS_RX_WDATA_F1[11]),
        .R(SYNC_RST_TL));
  FDRE \TIME_STAMP_CNT_CAPTURE_reg[5] 
       (.C(can_clk),
        .CE(\TIME_STAMP_CNT_CAPTURE_reg[15]_0 ),
        .D(D[10]),
        .Q(TS_RX_WDATA_F1[10]),
        .R(SYNC_RST_TL));
  FDRE \TIME_STAMP_CNT_CAPTURE_reg[6] 
       (.C(can_clk),
        .CE(\TIME_STAMP_CNT_CAPTURE_reg[15]_0 ),
        .D(D[9]),
        .Q(TS_RX_WDATA_F1[9]),
        .R(SYNC_RST_TL));
  FDRE \TIME_STAMP_CNT_CAPTURE_reg[7] 
       (.C(can_clk),
        .CE(\TIME_STAMP_CNT_CAPTURE_reg[15]_0 ),
        .D(D[8]),
        .Q(TS_RX_WDATA_F1[8]),
        .R(SYNC_RST_TL));
  FDRE \TIME_STAMP_CNT_CAPTURE_reg[8] 
       (.C(can_clk),
        .CE(\TIME_STAMP_CNT_CAPTURE_reg[15]_0 ),
        .D(D[7]),
        .Q(TS_RX_WDATA_F1[7]),
        .R(SYNC_RST_TL));
  FDRE \TIME_STAMP_CNT_CAPTURE_reg[9] 
       (.C(can_clk),
        .CE(\TIME_STAMP_CNT_CAPTURE_reg[15]_0 ),
        .D(D[6]),
        .Q(TS_RX_WDATA_F1[6]),
        .R(SYNC_RST_TL));
  FDRE TIME_STAMP_CNT_REG_WEN_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TIME_STAMP_CNT_REG_WEN_reg_0),
        .Q(IC_SYNC_TSR_WEN),
        .R(SYNC_RST_TL));
  FDRE \TIME_STAMP_CNT_reg[0] 
       (.C(can_clk),
        .CE(CLKM_EN),
        .D(\TIME_STAMP_CNT_reg[3]_i_1_n_4 ),
        .Q(D[15]),
        .R(\CLKD_COUNTER_I_reg[3]_0 ));
  FDRE \TIME_STAMP_CNT_reg[10] 
       (.C(can_clk),
        .CE(CLKM_EN),
        .D(\TIME_STAMP_CNT_reg[11]_i_1_n_6 ),
        .Q(D[5]),
        .R(\CLKD_COUNTER_I_reg[3]_0 ));
  FDRE \TIME_STAMP_CNT_reg[11] 
       (.C(can_clk),
        .CE(CLKM_EN),
        .D(\TIME_STAMP_CNT_reg[11]_i_1_n_7 ),
        .Q(D[4]),
        .R(\CLKD_COUNTER_I_reg[3]_0 ));
  CARRY4 \TIME_STAMP_CNT_reg[11]_i_1 
       (.CI(\TIME_STAMP_CNT_reg[15]_i_2_n_0 ),
        .CO({\TIME_STAMP_CNT_reg[11]_i_1_n_0 ,\TIME_STAMP_CNT_reg[11]_i_1_n_1 ,\TIME_STAMP_CNT_reg[11]_i_1_n_2 ,\TIME_STAMP_CNT_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\TIME_STAMP_CNT_reg[11]_i_1_n_4 ,\TIME_STAMP_CNT_reg[11]_i_1_n_5 ,\TIME_STAMP_CNT_reg[11]_i_1_n_6 ,\TIME_STAMP_CNT_reg[11]_i_1_n_7 }),
        .S(D[7:4]));
  FDRE \TIME_STAMP_CNT_reg[12] 
       (.C(can_clk),
        .CE(CLKM_EN),
        .D(\TIME_STAMP_CNT_reg[15]_i_2_n_4 ),
        .Q(D[3]),
        .R(\CLKD_COUNTER_I_reg[3]_0 ));
  FDRE \TIME_STAMP_CNT_reg[13] 
       (.C(can_clk),
        .CE(CLKM_EN),
        .D(\TIME_STAMP_CNT_reg[15]_i_2_n_5 ),
        .Q(D[2]),
        .R(\CLKD_COUNTER_I_reg[3]_0 ));
  FDRE \TIME_STAMP_CNT_reg[14] 
       (.C(can_clk),
        .CE(CLKM_EN),
        .D(\TIME_STAMP_CNT_reg[15]_i_2_n_6 ),
        .Q(D[1]),
        .R(\CLKD_COUNTER_I_reg[3]_0 ));
  FDRE \TIME_STAMP_CNT_reg[15] 
       (.C(can_clk),
        .CE(CLKM_EN),
        .D(\TIME_STAMP_CNT_reg[15]_i_2_n_7 ),
        .Q(D[0]),
        .R(\CLKD_COUNTER_I_reg[3]_0 ));
  CARRY4 \TIME_STAMP_CNT_reg[15]_i_2 
       (.CI(1'b0),
        .CO({\TIME_STAMP_CNT_reg[15]_i_2_n_0 ,\TIME_STAMP_CNT_reg[15]_i_2_n_1 ,\TIME_STAMP_CNT_reg[15]_i_2_n_2 ,\TIME_STAMP_CNT_reg[15]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\TIME_STAMP_CNT_reg[15]_i_2_n_4 ,\TIME_STAMP_CNT_reg[15]_i_2_n_5 ,\TIME_STAMP_CNT_reg[15]_i_2_n_6 ,\TIME_STAMP_CNT_reg[15]_i_2_n_7 }),
        .S({D[3:1],\TIME_STAMP_CNT[15]_i_3_n_0 }));
  FDRE \TIME_STAMP_CNT_reg[1] 
       (.C(can_clk),
        .CE(CLKM_EN),
        .D(\TIME_STAMP_CNT_reg[3]_i_1_n_5 ),
        .Q(D[14]),
        .R(\CLKD_COUNTER_I_reg[3]_0 ));
  FDRE \TIME_STAMP_CNT_reg[2] 
       (.C(can_clk),
        .CE(CLKM_EN),
        .D(\TIME_STAMP_CNT_reg[3]_i_1_n_6 ),
        .Q(D[13]),
        .R(\CLKD_COUNTER_I_reg[3]_0 ));
  FDRE \TIME_STAMP_CNT_reg[3] 
       (.C(can_clk),
        .CE(CLKM_EN),
        .D(\TIME_STAMP_CNT_reg[3]_i_1_n_7 ),
        .Q(D[12]),
        .R(\CLKD_COUNTER_I_reg[3]_0 ));
  CARRY4 \TIME_STAMP_CNT_reg[3]_i_1 
       (.CI(\TIME_STAMP_CNT_reg[7]_i_1_n_0 ),
        .CO({\NLW_TIME_STAMP_CNT_reg[3]_i_1_CO_UNCONNECTED [3],\TIME_STAMP_CNT_reg[3]_i_1_n_1 ,\TIME_STAMP_CNT_reg[3]_i_1_n_2 ,\TIME_STAMP_CNT_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\TIME_STAMP_CNT_reg[3]_i_1_n_4 ,\TIME_STAMP_CNT_reg[3]_i_1_n_5 ,\TIME_STAMP_CNT_reg[3]_i_1_n_6 ,\TIME_STAMP_CNT_reg[3]_i_1_n_7 }),
        .S(D[15:12]));
  FDRE \TIME_STAMP_CNT_reg[4] 
       (.C(can_clk),
        .CE(CLKM_EN),
        .D(\TIME_STAMP_CNT_reg[7]_i_1_n_4 ),
        .Q(D[11]),
        .R(\CLKD_COUNTER_I_reg[3]_0 ));
  FDRE \TIME_STAMP_CNT_reg[5] 
       (.C(can_clk),
        .CE(CLKM_EN),
        .D(\TIME_STAMP_CNT_reg[7]_i_1_n_5 ),
        .Q(D[10]),
        .R(\CLKD_COUNTER_I_reg[3]_0 ));
  FDRE \TIME_STAMP_CNT_reg[6] 
       (.C(can_clk),
        .CE(CLKM_EN),
        .D(\TIME_STAMP_CNT_reg[7]_i_1_n_6 ),
        .Q(D[9]),
        .R(\CLKD_COUNTER_I_reg[3]_0 ));
  FDRE \TIME_STAMP_CNT_reg[7] 
       (.C(can_clk),
        .CE(CLKM_EN),
        .D(\TIME_STAMP_CNT_reg[7]_i_1_n_7 ),
        .Q(D[8]),
        .R(\CLKD_COUNTER_I_reg[3]_0 ));
  CARRY4 \TIME_STAMP_CNT_reg[7]_i_1 
       (.CI(\TIME_STAMP_CNT_reg[11]_i_1_n_0 ),
        .CO({\TIME_STAMP_CNT_reg[7]_i_1_n_0 ,\TIME_STAMP_CNT_reg[7]_i_1_n_1 ,\TIME_STAMP_CNT_reg[7]_i_1_n_2 ,\TIME_STAMP_CNT_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\TIME_STAMP_CNT_reg[7]_i_1_n_4 ,\TIME_STAMP_CNT_reg[7]_i_1_n_5 ,\TIME_STAMP_CNT_reg[7]_i_1_n_6 ,\TIME_STAMP_CNT_reg[7]_i_1_n_7 }),
        .S(D[11:8]));
  FDRE \TIME_STAMP_CNT_reg[8] 
       (.C(can_clk),
        .CE(CLKM_EN),
        .D(\TIME_STAMP_CNT_reg[11]_i_1_n_4 ),
        .Q(D[7]),
        .R(\CLKD_COUNTER_I_reg[3]_0 ));
  FDRE \TIME_STAMP_CNT_reg[9] 
       (.C(can_clk),
        .CE(CLKM_EN),
        .D(\TIME_STAMP_CNT_reg[11]_i_1_n_5 ),
        .Q(D[6]),
        .R(\CLKD_COUNTER_I_reg[3]_0 ));
  FDRE TS_COUNTER_SW_RST_D1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(IC_TIMESTAMP_RST_P),
        .Q(TS_COUNTER_SW_RST_D1),
        .R(SYNC_RST_TL));
  FDRE TS_COUNTER_SW_RST_D2_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TS_COUNTER_SW_RST_D1),
        .Q(TS_COUNTER_SW_RST_D2),
        .R(SYNC_RST_TL));
  FDRE TS_RX_REN_D1_I_F1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TS_RX_REN_I_F1_reg_n_0),
        .Q(TS_RX_REN_D1_I_F1),
        .R(SYNC_RST_TL));
  FDRE TS_RX_REN_D1_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TS_RX_REN_I_reg_n_0),
        .Q(TS_RX_REN_D1_I),
        .R(SYNC_RST_TL));
  FDRE TS_RX_REN_I_F1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXE_MSGVAL_EARLY_F1),
        .Q(TS_RX_REN_I_F1_reg_n_0),
        .R(SYNC_RST_TL));
  FDRE TS_RX_REN_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXE_MSGVAL_EARLY_F0),
        .Q(TS_RX_REN_I_reg_n_0),
        .R(SYNC_RST_TL));
  FDRE TS_RX_WEN_F1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TS_RX_REN_D1_I_F1),
        .Q(TS_RX_WEN_F1_reg_0),
        .R(SYNC_RST_TL));
  FDRE TS_RX_WEN_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TS_RX_REN_D1_I),
        .Q(TS_RX_WEN),
        .R(SYNC_RST_TL));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single__parameterized0 \XPM_CDC_MODULES.MATCHED_FILTER_INDEX_2C_CDC_TO 
       (.dest_clk(can_clk),
        .dest_out({MATCHED_FILTER_INDEX_FS2[0],MATCHED_FILTER_INDEX_FS2[1],MATCHED_FILTER_INDEX_FS2[2],MATCHED_FILTER_INDEX_FS2[3],MATCHED_FILTER_INDEX_FS2[4]}),
        .src_clk(1'b0),
        .src_in(\syncstages_ff_reg[0][4] ));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__29 \XPM_CDC_MODULES.MATCH_RESULT_2C_CDC_TO 
       (.dest_clk(can_clk),
        .dest_out(MATCH_RESULT_FS2),
        .src_clk(1'b0),
        .src_in(\syncstages_ff_reg[0] ));
  LUT3 #(
    .INIT(8'hB8)) 
    \gen_rx1.u_rxxpm_2_i_10 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1 [6]),
        .I1(TS_RX_WEN_F1_reg_0),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1_0 [11]),
        .O(\RXE_DATA_STORED_AT_DLC_reg[0] [19]));
  LUT3 #(
    .INIT(8'hB8)) 
    \gen_rx1.u_rxxpm_2_i_11 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1 [5]),
        .I1(TS_RX_WEN_F1_reg_0),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1_0 [10]),
        .O(\RXE_DATA_STORED_AT_DLC_reg[0] [18]));
  LUT3 #(
    .INIT(8'hB8)) 
    \gen_rx1.u_rxxpm_2_i_12 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1 [4]),
        .I1(TS_RX_WEN_F1_reg_0),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1_0 [9]),
        .O(\RXE_DATA_STORED_AT_DLC_reg[0] [17]));
  LUT3 #(
    .INIT(8'hB8)) 
    \gen_rx1.u_rxxpm_2_i_13 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1 [3]),
        .I1(TS_RX_WEN_F1_reg_0),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1_0 [8]),
        .O(\RXE_DATA_STORED_AT_DLC_reg[0] [16]));
  LUT3 #(
    .INIT(8'hB8)) 
    \gen_rx1.u_rxxpm_2_i_14 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1 [2]),
        .I1(TS_RX_WEN_F1_reg_0),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1_0 [7]),
        .O(\RXE_DATA_STORED_AT_DLC_reg[0] [15]));
  LUT3 #(
    .INIT(8'hB8)) 
    \gen_rx1.u_rxxpm_2_i_15 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1 [1]),
        .I1(TS_RX_WEN_F1_reg_0),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1_0 [6]),
        .O(\RXE_DATA_STORED_AT_DLC_reg[0] [14]));
  LUT3 #(
    .INIT(8'hB8)) 
    \gen_rx1.u_rxxpm_2_i_16 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1 [0]),
        .I1(TS_RX_WEN_F1_reg_0),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1_0 [5]),
        .O(\RXE_DATA_STORED_AT_DLC_reg[0] [13]));
  LUT3 #(
    .INIT(8'hB8)) 
    \gen_rx1.u_rxxpm_2_i_17 
       (.I0(TS_RX_WDATA_F1[20]),
        .I1(TS_RX_WEN_F1_reg_0),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1_0 [4]),
        .O(\RXE_DATA_STORED_AT_DLC_reg[0] [12]));
  LUT3 #(
    .INIT(8'hB8)) 
    \gen_rx1.u_rxxpm_2_i_18 
       (.I0(TS_RX_WDATA_F1[19]),
        .I1(TS_RX_WEN_F1_reg_0),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1_0 [3]),
        .O(\RXE_DATA_STORED_AT_DLC_reg[0] [11]));
  LUT3 #(
    .INIT(8'hB8)) 
    \gen_rx1.u_rxxpm_2_i_19 
       (.I0(TS_RX_WDATA_F1[18]),
        .I1(TS_RX_WEN_F1_reg_0),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1_0 [2]),
        .O(\RXE_DATA_STORED_AT_DLC_reg[0] [10]));
  LUT3 #(
    .INIT(8'hB8)) 
    \gen_rx1.u_rxxpm_2_i_20 
       (.I0(TS_RX_WDATA_F1[17]),
        .I1(TS_RX_WEN_F1_reg_0),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1_0 [1]),
        .O(\RXE_DATA_STORED_AT_DLC_reg[0] [9]));
  LUT3 #(
    .INIT(8'hB8)) 
    \gen_rx1.u_rxxpm_2_i_21 
       (.I0(TS_RX_WDATA_F1[16]),
        .I1(TS_RX_WEN_F1_reg_0),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1_0 [0]),
        .O(\RXE_DATA_STORED_AT_DLC_reg[0] [8]));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_rx1.u_rxxpm_2_i_30 
       (.I0(TS_RX_WDATA_F1[7]),
        .I1(TS_RX_WEN_F1_reg_0),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_0 [7]),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_0_0 ),
        .O(\RXE_DATA_STORED_AT_DLC_reg[0] [7]));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_rx1.u_rxxpm_2_i_31 
       (.I0(TS_RX_WDATA_F1[6]),
        .I1(TS_RX_WEN_F1_reg_0),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_0 [6]),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_0_0 ),
        .O(\RXE_DATA_STORED_AT_DLC_reg[0] [6]));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_rx1.u_rxxpm_2_i_32 
       (.I0(TS_RX_WDATA_F1[5]),
        .I1(TS_RX_WEN_F1_reg_0),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_0 [5]),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_0_0 ),
        .O(\RXE_DATA_STORED_AT_DLC_reg[0] [5]));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_rx1.u_rxxpm_2_i_33 
       (.I0(TS_RX_WDATA_F1[4]),
        .I1(TS_RX_WEN_F1_reg_0),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_0 [4]),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_0_0 ),
        .O(\RXE_DATA_STORED_AT_DLC_reg[0] [4]));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_rx1.u_rxxpm_2_i_34 
       (.I0(TS_RX_WDATA_F1[3]),
        .I1(TS_RX_WEN_F1_reg_0),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_0 [3]),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_0_0 ),
        .O(\RXE_DATA_STORED_AT_DLC_reg[0] [3]));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_rx1.u_rxxpm_2_i_35 
       (.I0(TS_RX_WDATA_F1[2]),
        .I1(TS_RX_WEN_F1_reg_0),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_0 [2]),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_0_0 ),
        .O(\RXE_DATA_STORED_AT_DLC_reg[0] [2]));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_rx1.u_rxxpm_2_i_36 
       (.I0(TS_RX_WDATA_F1[1]),
        .I1(TS_RX_WEN_F1_reg_0),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_0 [1]),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_0_0 ),
        .O(\RXE_DATA_STORED_AT_DLC_reg[0] [1]));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_rx1.u_rxxpm_2_i_37 
       (.I0(TS_RX_WDATA_F1[0]),
        .I1(TS_RX_WEN_F1_reg_0),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_0 [0]),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_0_0 ),
        .O(\RXE_DATA_STORED_AT_DLC_reg[0] [0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \gen_rx1.u_rxxpm_2_i_6 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1 [10]),
        .I1(TS_RX_WEN_F1_reg_0),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1_0 [15]),
        .O(\RXE_DATA_STORED_AT_DLC_reg[0] [23]));
  LUT3 #(
    .INIT(8'hB8)) 
    \gen_rx1.u_rxxpm_2_i_7 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1 [9]),
        .I1(TS_RX_WEN_F1_reg_0),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1_0 [14]),
        .O(\RXE_DATA_STORED_AT_DLC_reg[0] [22]));
  LUT3 #(
    .INIT(8'hB8)) 
    \gen_rx1.u_rxxpm_2_i_8 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1 [8]),
        .I1(TS_RX_WEN_F1_reg_0),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1_0 [13]),
        .O(\RXE_DATA_STORED_AT_DLC_reg[0] [21]));
  LUT3 #(
    .INIT(8'hB8)) 
    \gen_rx1.u_rxxpm_2_i_9 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1 [7]),
        .I1(TS_RX_WEN_F1_reg_0),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1_0 [12]),
        .O(\RXE_DATA_STORED_AT_DLC_reg[0] [20]));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \wr_index_i[1]_i_2 
       (.I0(RXE_RXMSG_VAL_F0),
        .I1(\wr_index_i_reg[6] ),
        .O(RXE_RXMSG_VAL_F0_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \wr_index_i[1]_i_2__0 
       (.I0(RXE_RXMSG_VAL_F1),
        .I1(\wr_index_i_reg[6]_0 ),
        .O(RXE_RXMSG_VAL_F1_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_index_i[6]_i_1 
       (.I0(RXE_RXMSG_VAL_F0),
        .I1(\wr_index_i_reg[6] ),
        .O(RXE_RXMSG_VAL_F0_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_index_i[6]_i_1__0 
       (.I0(RXE_RXMSG_VAL_F1),
        .I1(\wr_index_i_reg[6]_0 ),
        .O(RXE_RXMSG_VAL_F1_reg_1));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_tl_bsp
   (dest_out,
    BIS_HSYNC_FLG_I_D1,
    TXE_TX_REN_D1_reg_0,
    CANCEL_CONFIRMED_TL2OL_I_reg_0,
    RXE_OL_SLEEP,
    RXE_OL_LBACK,
    RXE_MSGVAL_FD1_reg_0,
    RXE_MSGVAL_FD2_reg_0,
    TXE_MSGVAL_FD1,
    \state_reg[1]_0 ,
    TXE_MSGVAL_FD2,
    IC_SYNC_ISR_ARBLST,
    TXE_IC_ARBLSS_I,
    BSP_IN_IFSPACE,
    BSP_IN_ID_STATE_I,
    BSP_IN_ID_STATE_D1,
    BSP_IDVALID_FD1,
    BSP_IDVALID_FD2,
    ID_MATCH_EN,
    BSP_IN_EOF,
    RXE_RXFIFO_WEN_FD1_reg_0,
    RXE_RXFIFO_WEN_FD2,
    RXE_RTR_I,
    RXE_IDE_I,
    TXE_PASSTX_I_reg_0,
    TXE_TX_REN_D1,
    TXE_TRNSMT_FLG_reg_0,
    BSP_TXBIT_D1_reg_0,
    BSP_CRCERR_I_CAN_FLG_reg_0,
    BSP_CRCERR_I_CANFD_FLG_reg_0,
    TXE_TXING_reg_0,
    RXE_PASSFLG_I,
    IC_SYNC_ISR_RXOK,
    IC_SYNC_ISR_TXOK,
    BRS_EN_BTR,
    BRS_EN_I_FLAG_reg_0,
    IC_SYNC_ESR_BERR,
    IC_SYNC_ESR_CRCER,
    IC_SYNC_ESR_FMER,
    IC_SYNC_ESR_STER,
    IC_SYNC_ESR_ACKER,
    IC_SYNC_ESR_F_STER,
    IC_SYNC_ESR_F_FMER,
    IC_SYNC_ESR_F_CRCER,
    IC_SYNC_ESR_F_BERR,
    MSG_ON_CAN_BUS,
    RXE_FDF_I,
    RXE_ESI_I_reg_0,
    RXE_BRS_I,
    TDCV_CNT_REG_WEN,
    \state_reg[4]_0 ,
    TXE_TXING_reg_1,
    \state_reg[4]_1 ,
    CLKM_EN_reg,
    Q,
    \arststages_ff_reg[1] ,
    \state_reg[0]_0 ,
    \state_reg[0]_1 ,
    BTL_SAMP_EN_D1_reg,
    SR,
    \state_reg[2]_0 ,
    \RXE_COUNTER_I_reg[4]_0 ,
    \RXE_COUNTER_I_reg[5]_0 ,
    BRS_L_SP_FE_reg_0,
    CAN_PHY_TX_POS_FLOP_X2,
    TXING_BRS_EN_BTR_D1_reg,
    \RXE_COUNTER_I_reg[3]_0 ,
    \RXE_COUNTER_I_reg[1]_0 ,
    \state_reg[0]_2 ,
    \state_reg[0]_3 ,
    \RXE_COUNTER_I_reg[0]_0 ,
    \state_reg[2]_1 ,
    S,
    \arststages_ff_reg[1]_0 ,
    \ic_reg_f_btr_ts2_cdc_tig_reg[2] ,
    \arststages_ff_reg[1]_1 ,
    BRS_L_SP_FE_reg_1,
    \ic_reg_n_btr_sjw_cdc_tig_reg[0] ,
    \arststages_ff_reg[1]_2 ,
    \BTL_COUNTER_I_REG_reg[2] ,
    BRSD_P_ERR_1TQ_FD_reg,
    \arststages_ff_reg[1]_3 ,
    DI,
    \ic_reg_n_btr_ts1_cdc_tig_reg[1] ,
    BRSD_P_ERR_1TQ_FD_reg_0,
    BRSD_P_ERR_1TQ_FD_reg_1,
    BRSD_P_ERR_1TQ_FD_reg_2,
    \ic_reg_n_btr_ts1_cdc_tig_reg[1]_0 ,
    \arststages_ff_reg[1]_4 ,
    \ic_reg_n_btr_sjw_cdc_tig_reg[1] ,
    BRSD_P_ERR_1TQ_FD_reg_3,
    ena,
    TXE_MSGVAL_D1_I_reg_0,
    RXF_FULL_AT_MSG_BOUNDARY_reg,
    \TIME_STAMP_CNT_CAPTURE_reg[0] ,
    \RXE_SREG_I_reg[24]_0 ,
    \RXE_MSGPAD_SEL_FS1_reg[1]_0 ,
    \state_reg[0]_4 ,
    RXE_OL_BIDLE,
    EMU_CTR_FLG_I_reg,
    EMU_CTR_FLG_I0,
    TXE_TXING_reg_2,
    BTL_RXBIT_I_reg,
    \state_reg[4]_2 ,
    BSP_CRCERR_I_CAN_FLG0,
    BSP_CRCERR_I_CANFD_FLG0,
    \state_reg[2]_2 ,
    RSYNC_FLG_I_reg,
    BSP_TXBIT_FD_reg,
    BSP_TXBIT_FD_reg_0,
    \state_reg[4]_3 ,
    BTL_SAMP_EN_D1_reg_0,
    \ic_reg_n_brpr_cdc_tig_reg[1] ,
    BTL_RXBIT_I_reg_0,
    BRSD_P_ERR_1TQ,
    BRS_L_SP_FE_reg_2,
    BTL_RXBIT_I_reg_1,
    TXE_TXING055_out,
    \state_reg[2]_3 ,
    RXE_BTL_HSYNC_EN,
    \RXE_COUNTER_I_reg[0]_1 ,
    TXE_TX_REN_I,
    BTL_SAMP_EN_D1_reg_1,
    CRC_CRCWORD_I1,
    SM_FLAG_I_FSB_reg,
    \RXE_COUNTER_I_reg[4]_1 ,
    \RXE_COUNTER_I_reg[6]_0 ,
    TXE_TXING_reg_3,
    \RXE_COUNTER_I_reg[4]_2 ,
    \RXE_COUNTER_I_reg[4]_3 ,
    \RXE_COUNTER_I_reg[4]_4 ,
    \state_reg[3]_0 ,
    TXE_TXING_reg_4,
    RXE_MSGVAL_EARLY_F00,
    RXE_MSGVAL_EARLY_F10,
    TXE_TXING_reg_5,
    BRSD_P_ERR_1TQ_FD_reg_4,
    \state_reg[0]_5 ,
    RXE_OL_RSTST,
    RXE_IDE_I_reg_0,
    BTL_TRNSMT_EN_I1,
    TDC_SSP_SAMP_PT_D1_reg,
    SSP_EN,
    TXING_BRS_EN_BTR_D1_reg_0,
    TXE_TXING_reg_6,
    BTL_RXBIT_I_reg_2,
    RXE_OL_BSFR,
    TDC_TRIG_COND,
    \state_reg[4]_4 ,
    \RXE_COUNTER_I_reg[0]_2 ,
    \RXE_COUNTER_I_reg[3]_1 ,
    BRS_L_SP_FE_reg_3,
    BRS_L_SP_FE_reg_4,
    BRS_L_SP_FE_reg_5,
    \ic_reg_n_btr_sjw_cdc_tig_reg[0]_0 ,
    \arststages_ff_reg[1]_5 ,
    \ic_reg_n_btr_ts2_cdc_tig_reg[4] ,
    \RXE_COUNTER_I_reg[4]_5 ,
    \RXE_COUNTER_I_reg[1]_1 ,
    \ic_reg_n_btr_ts1_cdc_tig_reg[1]_1 ,
    BRSD_P_ERR_1TQ_FD_reg_5,
    \ic_reg_n_btr_ts1_cdc_tig_reg[1]_2 ,
    \arststages_ff_reg[1]_6 ,
    BRSD_P_ERR_1TQ_FD_reg_6,
    BRSD_P_ERR_1TQ_FD_reg_7,
    BRSD_P_ERR_1TQ_FD_reg_8,
    BRSD_P_ERR_1TQ_FD_reg_9,
    \ic_reg_f_btr_ts1_cdc_tig_reg[3] ,
    BRSD_P_ERR_1TQ_FD_reg_10,
    BRSD_P_ERR_1TQ_FD_reg_11,
    \arststages_ff_reg[1]_7 ,
    \ic_reg_f_btr_ts1_cdc_tig_reg[2] ,
    BTL_NTQ_I0_carry__0,
    \ic_reg_n_btr_ts1_cdc_tig_reg[1]_3 ,
    RXE_RXMSG_INVAL_F10,
    RXE_RXMSG_VAL_F10,
    RXE_RXMSG_VAL_F00,
    RXE_RXMSG_INVAL_F00,
    \RXE_SREG_I_reg[24]_1 ,
    BRSD_P_ERR_1TQ_FD_reg_12,
    \ic_reg_n_btr_ts1_cdc_tig_reg[1]_4 ,
    \ID_FOR_MATCH_reg[0]_0 ,
    \syncstages_ff_reg[0] ,
    can_clk,
    src_in,
    SYNC_RST_TL,
    BIS_HSYNC_FLG_I_D1_reg_0,
    SM_STUFFBIT_PD,
    \TXE_DLC_I_reg[0]_0 ,
    E,
    \ID_FOR_MATCH_reg[31]_0 ,
    ID_MATCH_EN_reg_0,
    RXE_RTR_I_reg_0,
    RXE_IDE_I_reg_1,
    TXE_PASSTX_I_reg_1,
    TXE_TX_REN_D1_reg_1,
    BSP_TXBIT_D1_reg_1,
    BSP_CRCERR_I_CAN_FLG_reg_1,
    BSP_CRCERR_I_CANFD_FLG_reg_1,
    CANCEL_CONFIRMED_TL2OL_I_reg_1,
    TXE_TXING_reg_7,
    RXE_IC_RXOK_I_reg_0,
    TXE_IC_TXOK_I_reg_0,
    TXE_IC_ARBLSS_I_reg_0,
    BSP_IC_BIT_ERROR_I_reg_0,
    BSP_IC_CRC_ERROR_I_reg_0,
    BSP_IC_FRM_ERROR_I_reg_0,
    BSP_IC_STUFF_ERROR_I_reg_0,
    BSP_IC_ACK_ERROR_I_reg_0,
    BSP_IC_F_STUFF_ERROR_I_reg_0,
    BSP_IC_F_FRM_ERROR_I_reg_0,
    BSP_IC_F_CRC_ERROR_I_reg_0,
    BSP_IC_F_BIT_ERROR_I_reg_0,
    MSG_ON_CAN_BUS_reg_0,
    RXE_FDF_I_reg_0,
    RXE_ESI_I_reg_1,
    RXE_BRS_I_reg_0,
    TDCV_CNT_REG_WEN_reg_0,
    RXE_ERRFLG_I_reg_0,
    \BTL_COUNTER_I_REG_reg[1] ,
    FBR_ERR_1TQ,
    dest_arst,
    \RXE_SREG_I_reg[31]_0 ,
    CO,
    \BTL_COUNTER_I_REG_reg[8] ,
    \BTL_COUNTER_I_REG_reg[5] ,
    \RXE_MSGPAD_SEL_FS1_reg[0]_0 ,
    SM_FLAG_I,
    \BTL_COUNTER_I_REG_reg[8]_0 ,
    RSYNC_FLG_I_reg_0,
    \BTL_COUNTER_I_REG_reg[8]_1 ,
    TXING_BRS_EN_BTR_D1,
    MSR_DAR_FS2,
    BSP_CRCERR_I_CANFD_FLG_i_4_0,
    SM_FLAG_I_reg,
    BTL_NTQ_I0_carry__0_0,
    BTL_NTQ_I0_carry__0_i_8_0,
    i__carry_i_1__4_0,
    BTL_TRNSMT_EN_FD13_carry_i_6_0,
    BTL_COUNTER_I15_carry,
    i__carry_i_7__1_0,
    CAN_PHY_TX_POS_FLOP_X27,
    \BTL_COUNTER_I_REG_reg[0] ,
    O,
    TS_RX_WEN,
    OL_RX_FIFO_FULL,
    RXF_FULL_AT_MSG_BOUNDARY,
    TXE_BRAM_WEN,
    \addr_location_incr_count_reg[0] ,
    RXF_FULL_AT_MSG_BOUNDARY_F1,
    OL_RX_FIFO_FULL_F1,
    \gen_wr_a.gen_word_narrow.mem_reg_0 ,
    TS_RX_WDATA_F1,
    ERR_ACKERRPASS_I_reg_0,
    RXE_PASSFLG_I_reg_0,
    EMU_CTR_FLG_I,
    \state_reg[2]_4 ,
    \RXE_COUNTER_I_reg[8]_0 ,
    \state[0]_i_2_0 ,
    \state_reg[1]_1 ,
    RXE_OL_LBACK_reg_0,
    TXE_TX_REN_I_CFD_D1_i_9_0,
    TXE_TX_REN_I_CFD_D1_i_4_0,
    RXE_PASSFLG_I_reg_1,
    RSYNC_FLG_I,
    RSYNC_FLG_I_reg_1,
    RSYNC_FLG_I_reg_2,
    CAN_PHY_TX_INT_reg,
    CAN_PHY_TX_LP_i_2_0,
    CAN_PHY_TX_LP_i_2_1,
    \CLKD_COUNTER_I_reg[7] ,
    \CLKD_COUNTER_I_reg[7]_0 ,
    CLKD_COUNTER_I_reg,
    BRSD_P_ERR_1TQ_FD_reg_13,
    BRSD_P_ERR_1TQ_FD_reg_14,
    \RXE_COUNTER_I_reg[0]_3 ,
    MSR_SLEEP_FS2,
    MATCH_RESULT_TO_BSP,
    SM_FLAG_I_FSB,
    BUFFER_EMPTY_INTERNAL_i_2_0,
    BUFFER_EMPTY_INTERNAL_i_2_1,
    \state[1]_i_5_0 ,
    TXE_TXING_reg_8,
    BRSD_P_ERR_1TQ_FD_reg_15,
    BSP_IC_F_FRM_ERROR_I_reg_1,
    BSP_IC_F_FRM_ERROR_I_reg_2,
    D,
    BSP_IC_F_BIT_ERROR_I_reg_1,
    RXE_RXMSG_VAL_F0_reg,
    RXE_RXMSG_INVAL_F0_reg,
    \BTL_COUNTER_I_REG_reg[1]_0 ,
    MSR_SBR_FS2,
    \BIS_COUNTER_I_reg[3]_0 ,
    BTL_SAMP_EN_FD2,
    BTL_TRNSMT_EN_FD1,
    FAST_TRANSMT_PT_D1_reg,
    BTL_TRNSMT_EN_FD1_reg,
    CAN_PHY_TX_LP_i_2_2,
    BTL_TRNSMT_EN_FD1_reg_0,
    BTL_TRNSMT_EN_FD1_reg_1,
    BTL_TRNSMT_EN_FD1_reg_2,
    TDC_SSP_SAMP_PT_D1,
    TDC_EN_FS2,
    SSP_EN_D1_reg,
    SSP_EN_D1_reg_0,
    BSP_CRCERR_I_CAN_FLG_i_3_0,
    BSP_CRCERR_I_CAN_FLG_i_3_1,
    BSP_CRCERR_I_CAN_FLG_i_3_2,
    BSP_CRCERR_I_CAN_FLG_i_7_0,
    MSR_DPEE_FS2,
    \state[0]_i_10_0 ,
    BSP_CRCERR_I_CANFD_FLG_i_2_0,
    BSP_CRCERR_I_CANFD_FLG_i_2_1,
    MSR_BRSD_FS2,
    \BTL_COUNTER_I_REG_reg[8]_2 ,
    BRS_EN_BTR_D1,
    BRSD_P_ERR_1TQ_FD,
    CAN_PHY_TX_POS_FLOP_X26_carry,
    i__carry_i_2__3_0,
    i__carry_i_1__5_0,
    BTL_COUNTER_I17_carry_i_19,
    \BTL_COUNTER_I_REG_reg[3] ,
    \BTL_COUNTER_I_REG_reg[3]_0 ,
    \BIS_COUNTER_I_reg[3]_1 );
  output dest_out;
  output BIS_HSYNC_FLG_I_D1;
  output TXE_TX_REN_D1_reg_0;
  output CANCEL_CONFIRMED_TL2OL_I_reg_0;
  output RXE_OL_SLEEP;
  output RXE_OL_LBACK;
  output RXE_MSGVAL_FD1_reg_0;
  output RXE_MSGVAL_FD2_reg_0;
  output TXE_MSGVAL_FD1;
  output \state_reg[1]_0 ;
  output TXE_MSGVAL_FD2;
  output IC_SYNC_ISR_ARBLST;
  output TXE_IC_ARBLSS_I;
  output BSP_IN_IFSPACE;
  output BSP_IN_ID_STATE_I;
  output BSP_IN_ID_STATE_D1;
  output BSP_IDVALID_FD1;
  output BSP_IDVALID_FD2;
  output ID_MATCH_EN;
  output BSP_IN_EOF;
  output RXE_RXFIFO_WEN_FD1_reg_0;
  output RXE_RXFIFO_WEN_FD2;
  output RXE_RTR_I;
  output RXE_IDE_I;
  output TXE_PASSTX_I_reg_0;
  output TXE_TX_REN_D1;
  output TXE_TRNSMT_FLG_reg_0;
  output BSP_TXBIT_D1_reg_0;
  output BSP_CRCERR_I_CAN_FLG_reg_0;
  output BSP_CRCERR_I_CANFD_FLG_reg_0;
  output TXE_TXING_reg_0;
  output RXE_PASSFLG_I;
  output IC_SYNC_ISR_RXOK;
  output IC_SYNC_ISR_TXOK;
  output BRS_EN_BTR;
  output BRS_EN_I_FLAG_reg_0;
  output IC_SYNC_ESR_BERR;
  output IC_SYNC_ESR_CRCER;
  output IC_SYNC_ESR_FMER;
  output IC_SYNC_ESR_STER;
  output IC_SYNC_ESR_ACKER;
  output IC_SYNC_ESR_F_STER;
  output IC_SYNC_ESR_F_FMER;
  output IC_SYNC_ESR_F_CRCER;
  output IC_SYNC_ESR_F_BERR;
  output MSG_ON_CAN_BUS;
  output RXE_FDF_I;
  output RXE_ESI_I_reg_0;
  output RXE_BRS_I;
  output TDCV_CNT_REG_WEN;
  output \state_reg[4]_0 ;
  output TXE_TXING_reg_1;
  output \state_reg[4]_1 ;
  output CLKM_EN_reg;
  output [0:0]Q;
  output \arststages_ff_reg[1] ;
  output \state_reg[0]_0 ;
  output \state_reg[0]_1 ;
  output BTL_SAMP_EN_D1_reg;
  output [0:0]SR;
  output \state_reg[2]_0 ;
  output \RXE_COUNTER_I_reg[4]_0 ;
  output \RXE_COUNTER_I_reg[5]_0 ;
  output BRS_L_SP_FE_reg_0;
  output CAN_PHY_TX_POS_FLOP_X2;
  output TXING_BRS_EN_BTR_D1_reg;
  output [3:0]\RXE_COUNTER_I_reg[3]_0 ;
  output \RXE_COUNTER_I_reg[1]_0 ;
  output \state_reg[0]_2 ;
  output \state_reg[0]_3 ;
  output \RXE_COUNTER_I_reg[0]_0 ;
  output \state_reg[2]_1 ;
  output [3:0]S;
  output \arststages_ff_reg[1]_0 ;
  output [0:0]\ic_reg_f_btr_ts2_cdc_tig_reg[2] ;
  output \arststages_ff_reg[1]_1 ;
  output BRS_L_SP_FE_reg_1;
  output \ic_reg_n_btr_sjw_cdc_tig_reg[0] ;
  output \arststages_ff_reg[1]_2 ;
  output \BTL_COUNTER_I_REG_reg[2] ;
  output BRSD_P_ERR_1TQ_FD_reg;
  output \arststages_ff_reg[1]_3 ;
  output [3:0]DI;
  output [0:0]\ic_reg_n_btr_ts1_cdc_tig_reg[1] ;
  output [0:0]BRSD_P_ERR_1TQ_FD_reg_0;
  output [0:0]BRSD_P_ERR_1TQ_FD_reg_1;
  output [0:0]BRSD_P_ERR_1TQ_FD_reg_2;
  output [0:0]\ic_reg_n_btr_ts1_cdc_tig_reg[1]_0 ;
  output \arststages_ff_reg[1]_4 ;
  output [0:0]\ic_reg_n_btr_sjw_cdc_tig_reg[1] ;
  output [2:0]BRSD_P_ERR_1TQ_FD_reg_3;
  output ena;
  output [0:0]TXE_MSGVAL_D1_I_reg_0;
  output [0:0]RXF_FULL_AT_MSG_BOUNDARY_reg;
  output [7:0]\TIME_STAMP_CNT_CAPTURE_reg[0] ;
  output [7:0]\RXE_SREG_I_reg[24]_0 ;
  output \RXE_MSGPAD_SEL_FS1_reg[1]_0 ;
  output \state_reg[0]_4 ;
  output RXE_OL_BIDLE;
  output [0:0]EMU_CTR_FLG_I_reg;
  output EMU_CTR_FLG_I0;
  output TXE_TXING_reg_2;
  output BTL_RXBIT_I_reg;
  output \state_reg[4]_2 ;
  output BSP_CRCERR_I_CAN_FLG0;
  output BSP_CRCERR_I_CANFD_FLG0;
  output \state_reg[2]_2 ;
  output RSYNC_FLG_I_reg;
  output BSP_TXBIT_FD_reg;
  output BSP_TXBIT_FD_reg_0;
  output \state_reg[4]_3 ;
  output BTL_SAMP_EN_D1_reg_0;
  output \ic_reg_n_brpr_cdc_tig_reg[1] ;
  output BTL_RXBIT_I_reg_0;
  output BRSD_P_ERR_1TQ;
  output BRS_L_SP_FE_reg_2;
  output BTL_RXBIT_I_reg_1;
  output TXE_TXING055_out;
  output \state_reg[2]_3 ;
  output RXE_BTL_HSYNC_EN;
  output \RXE_COUNTER_I_reg[0]_1 ;
  output TXE_TX_REN_I;
  output BTL_SAMP_EN_D1_reg_1;
  output CRC_CRCWORD_I1;
  output SM_FLAG_I_FSB_reg;
  output \RXE_COUNTER_I_reg[4]_1 ;
  output \RXE_COUNTER_I_reg[6]_0 ;
  output TXE_TXING_reg_3;
  output \RXE_COUNTER_I_reg[4]_2 ;
  output \RXE_COUNTER_I_reg[4]_3 ;
  output \RXE_COUNTER_I_reg[4]_4 ;
  output \state_reg[3]_0 ;
  output TXE_TXING_reg_4;
  output RXE_MSGVAL_EARLY_F00;
  output RXE_MSGVAL_EARLY_F10;
  output TXE_TXING_reg_5;
  output [8:0]BRSD_P_ERR_1TQ_FD_reg_4;
  output \state_reg[0]_5 ;
  output RXE_OL_RSTST;
  output RXE_IDE_I_reg_0;
  output BTL_TRNSMT_EN_I1;
  output TDC_SSP_SAMP_PT_D1_reg;
  output SSP_EN;
  output TXING_BRS_EN_BTR_D1_reg_0;
  output TXE_TXING_reg_6;
  output BTL_RXBIT_I_reg_2;
  output RXE_OL_BSFR;
  output TDC_TRIG_COND;
  output \state_reg[4]_4 ;
  output \RXE_COUNTER_I_reg[0]_2 ;
  output \RXE_COUNTER_I_reg[3]_1 ;
  output [2:0]BRS_L_SP_FE_reg_3;
  output [2:0]BRS_L_SP_FE_reg_4;
  output BRS_L_SP_FE_reg_5;
  output [3:0]\ic_reg_n_btr_sjw_cdc_tig_reg[0]_0 ;
  output [3:0]\arststages_ff_reg[1]_5 ;
  output [2:0]\ic_reg_n_btr_ts2_cdc_tig_reg[4] ;
  output \RXE_COUNTER_I_reg[4]_5 ;
  output \RXE_COUNTER_I_reg[1]_1 ;
  output [2:0]\ic_reg_n_btr_ts1_cdc_tig_reg[1]_1 ;
  output [3:0]BRSD_P_ERR_1TQ_FD_reg_5;
  output [2:0]\ic_reg_n_btr_ts1_cdc_tig_reg[1]_2 ;
  output \arststages_ff_reg[1]_6 ;
  output [2:0]BRSD_P_ERR_1TQ_FD_reg_6;
  output [2:0]BRSD_P_ERR_1TQ_FD_reg_7;
  output [2:0]BRSD_P_ERR_1TQ_FD_reg_8;
  output [2:0]BRSD_P_ERR_1TQ_FD_reg_9;
  output [0:0]\ic_reg_f_btr_ts1_cdc_tig_reg[3] ;
  output [3:0]BRSD_P_ERR_1TQ_FD_reg_10;
  output [2:0]BRSD_P_ERR_1TQ_FD_reg_11;
  output [1:0]\arststages_ff_reg[1]_7 ;
  output \ic_reg_f_btr_ts1_cdc_tig_reg[2] ;
  output [0:0]BTL_NTQ_I0_carry__0;
  output [0:0]\ic_reg_n_btr_ts1_cdc_tig_reg[1]_3 ;
  output RXE_RXMSG_INVAL_F10;
  output RXE_RXMSG_VAL_F10;
  output RXE_RXMSG_VAL_F00;
  output RXE_RXMSG_INVAL_F00;
  output [31:0]\RXE_SREG_I_reg[24]_1 ;
  output [0:0]BRSD_P_ERR_1TQ_FD_reg_12;
  output [3:0]\ic_reg_n_btr_ts1_cdc_tig_reg[1]_4 ;
  output [31:0]\ID_FOR_MATCH_reg[0]_0 ;
  input \syncstages_ff_reg[0] ;
  input can_clk;
  input src_in;
  input SYNC_RST_TL;
  input BIS_HSYNC_FLG_I_D1_reg_0;
  input SM_STUFFBIT_PD;
  input [31:0]\TXE_DLC_I_reg[0]_0 ;
  input [0:0]E;
  input [0:0]\ID_FOR_MATCH_reg[31]_0 ;
  input ID_MATCH_EN_reg_0;
  input RXE_RTR_I_reg_0;
  input RXE_IDE_I_reg_1;
  input TXE_PASSTX_I_reg_1;
  input TXE_TX_REN_D1_reg_1;
  input BSP_TXBIT_D1_reg_1;
  input BSP_CRCERR_I_CAN_FLG_reg_1;
  input BSP_CRCERR_I_CANFD_FLG_reg_1;
  input CANCEL_CONFIRMED_TL2OL_I_reg_1;
  input TXE_TXING_reg_7;
  input RXE_IC_RXOK_I_reg_0;
  input TXE_IC_TXOK_I_reg_0;
  input TXE_IC_ARBLSS_I_reg_0;
  input BSP_IC_BIT_ERROR_I_reg_0;
  input BSP_IC_CRC_ERROR_I_reg_0;
  input BSP_IC_FRM_ERROR_I_reg_0;
  input BSP_IC_STUFF_ERROR_I_reg_0;
  input BSP_IC_ACK_ERROR_I_reg_0;
  input BSP_IC_F_STUFF_ERROR_I_reg_0;
  input BSP_IC_F_FRM_ERROR_I_reg_0;
  input BSP_IC_F_CRC_ERROR_I_reg_0;
  input BSP_IC_F_BIT_ERROR_I_reg_0;
  input MSG_ON_CAN_BUS_reg_0;
  input RXE_FDF_I_reg_0;
  input RXE_ESI_I_reg_1;
  input RXE_BRS_I_reg_0;
  input TDCV_CNT_REG_WEN_reg_0;
  input RXE_ERRFLG_I_reg_0;
  input \BTL_COUNTER_I_REG_reg[1] ;
  input FBR_ERR_1TQ;
  input dest_arst;
  input [0:0]\RXE_SREG_I_reg[31]_0 ;
  input [0:0]CO;
  input \BTL_COUNTER_I_REG_reg[8] ;
  input [0:0]\BTL_COUNTER_I_REG_reg[5] ;
  input \RXE_MSGPAD_SEL_FS1_reg[0]_0 ;
  input SM_FLAG_I;
  input [0:0]\BTL_COUNTER_I_REG_reg[8]_0 ;
  input [0:0]RSYNC_FLG_I_reg_0;
  input [0:0]\BTL_COUNTER_I_REG_reg[8]_1 ;
  input TXING_BRS_EN_BTR_D1;
  input MSR_DAR_FS2;
  input [5:0]BSP_CRCERR_I_CANFD_FLG_i_4_0;
  input SM_FLAG_I_reg;
  input [6:0]BTL_NTQ_I0_carry__0_0;
  input [3:0]BTL_NTQ_I0_carry__0_i_8_0;
  input [7:0]i__carry_i_1__4_0;
  input [4:0]BTL_TRNSMT_EN_FD13_carry_i_6_0;
  input [6:0]BTL_COUNTER_I15_carry;
  input [3:0]i__carry_i_7__1_0;
  input [8:0]CAN_PHY_TX_POS_FLOP_X27;
  input [0:0]\BTL_COUNTER_I_REG_reg[0] ;
  input [2:0]O;
  input TS_RX_WEN;
  input OL_RX_FIFO_FULL;
  input RXF_FULL_AT_MSG_BOUNDARY;
  input TXE_BRAM_WEN;
  input \addr_location_incr_count_reg[0] ;
  input RXF_FULL_AT_MSG_BOUNDARY_F1;
  input OL_RX_FIFO_FULL_F1;
  input \gen_wr_a.gen_word_narrow.mem_reg_0 ;
  input [7:0]TS_RX_WDATA_F1;
  input ERR_ACKERRPASS_I_reg_0;
  input RXE_PASSFLG_I_reg_0;
  input EMU_CTR_FLG_I;
  input \state_reg[2]_4 ;
  input \RXE_COUNTER_I_reg[8]_0 ;
  input \state[0]_i_2_0 ;
  input \state_reg[1]_1 ;
  input RXE_OL_LBACK_reg_0;
  input TXE_TX_REN_I_CFD_D1_i_9_0;
  input TXE_TX_REN_I_CFD_D1_i_4_0;
  input RXE_PASSFLG_I_reg_1;
  input RSYNC_FLG_I;
  input RSYNC_FLG_I_reg_1;
  input RSYNC_FLG_I_reg_2;
  input CAN_PHY_TX_INT_reg;
  input CAN_PHY_TX_LP_i_2_0;
  input CAN_PHY_TX_LP_i_2_1;
  input [1:0]\CLKD_COUNTER_I_reg[7] ;
  input [1:0]\CLKD_COUNTER_I_reg[7]_0 ;
  input [1:0]CLKD_COUNTER_I_reg;
  input BRSD_P_ERR_1TQ_FD_reg_13;
  input BRSD_P_ERR_1TQ_FD_reg_14;
  input \RXE_COUNTER_I_reg[0]_3 ;
  input MSR_SLEEP_FS2;
  input MATCH_RESULT_TO_BSP;
  input SM_FLAG_I_FSB;
  input [0:0]BUFFER_EMPTY_INTERNAL_i_2_0;
  input [0:0]BUFFER_EMPTY_INTERNAL_i_2_1;
  input \state[1]_i_5_0 ;
  input TXE_TXING_reg_8;
  input BRSD_P_ERR_1TQ_FD_reg_15;
  input BSP_IC_F_FRM_ERROR_I_reg_1;
  input BSP_IC_F_FRM_ERROR_I_reg_2;
  input [0:0]D;
  input BSP_IC_F_BIT_ERROR_I_reg_1;
  input RXE_RXMSG_VAL_F0_reg;
  input RXE_RXMSG_INVAL_F0_reg;
  input \BTL_COUNTER_I_REG_reg[1]_0 ;
  input MSR_SBR_FS2;
  input \BIS_COUNTER_I_reg[3]_0 ;
  input BTL_SAMP_EN_FD2;
  input BTL_TRNSMT_EN_FD1;
  input [0:0]FAST_TRANSMT_PT_D1_reg;
  input BTL_TRNSMT_EN_FD1_reg;
  input [0:0]CAN_PHY_TX_LP_i_2_2;
  input [0:0]BTL_TRNSMT_EN_FD1_reg_0;
  input [0:0]BTL_TRNSMT_EN_FD1_reg_1;
  input [0:0]BTL_TRNSMT_EN_FD1_reg_2;
  input TDC_SSP_SAMP_PT_D1;
  input TDC_EN_FS2;
  input SSP_EN_D1_reg;
  input SSP_EN_D1_reg_0;
  input BSP_CRCERR_I_CAN_FLG_i_3_0;
  input BSP_CRCERR_I_CAN_FLG_i_3_1;
  input BSP_CRCERR_I_CAN_FLG_i_3_2;
  input [4:0]BSP_CRCERR_I_CAN_FLG_i_7_0;
  input MSR_DPEE_FS2;
  input \state[0]_i_10_0 ;
  input BSP_CRCERR_I_CANFD_FLG_i_2_0;
  input BSP_CRCERR_I_CANFD_FLG_i_2_1;
  input MSR_BRSD_FS2;
  input [7:0]\BTL_COUNTER_I_REG_reg[8]_2 ;
  input BRS_EN_BTR_D1;
  input BRSD_P_ERR_1TQ_FD;
  input CAN_PHY_TX_POS_FLOP_X26_carry;
  input [0:0]i__carry_i_2__3_0;
  input i__carry_i_1__5_0;
  input [0:0]BTL_COUNTER_I17_carry_i_19;
  input [0:0]\BTL_COUNTER_I_REG_reg[3] ;
  input [0:0]\BTL_COUNTER_I_REG_reg[3]_0 ;
  input [0:0]\BIS_COUNTER_I_reg[3]_1 ;

  wire BIS;
  wire \BIS_COUNTER_I[0]_i_1_n_0 ;
  wire \BIS_COUNTER_I[3]_i_1_n_0 ;
  wire \BIS_COUNTER_I[3]_i_6_n_0 ;
  wire [3:0]BIS_COUNTER_I_reg;
  wire \BIS_COUNTER_I_reg[3]_0 ;
  wire [0:0]\BIS_COUNTER_I_reg[3]_1 ;
  wire BIS_D1;
  wire BIS_HSYNC_FLG_I_D1;
  wire BIS_HSYNC_FLG_I_D1_reg_0;
  wire BRSD_P_ERR_1TQ;
  wire BRSD_P_ERR_1TQ_FD;
  wire BRSD_P_ERR_1TQ_FD_i_10_n_0;
  wire BRSD_P_ERR_1TQ_FD_i_11_n_0;
  wire BRSD_P_ERR_1TQ_FD_i_12_n_0;
  wire BRSD_P_ERR_1TQ_FD_i_13_n_0;
  wire BRSD_P_ERR_1TQ_FD_i_14_n_0;
  wire BRSD_P_ERR_1TQ_FD_i_15_n_0;
  wire BRSD_P_ERR_1TQ_FD_i_16_n_0;
  wire BRSD_P_ERR_1TQ_FD_i_17_n_0;
  wire BRSD_P_ERR_1TQ_FD_i_18_n_0;
  wire BRSD_P_ERR_1TQ_FD_i_19_n_0;
  wire BRSD_P_ERR_1TQ_FD_i_20_n_0;
  wire BRSD_P_ERR_1TQ_FD_i_21_n_0;
  wire BRSD_P_ERR_1TQ_FD_i_22_n_0;
  wire BRSD_P_ERR_1TQ_FD_i_23_n_0;
  wire BRSD_P_ERR_1TQ_FD_i_24_n_0;
  wire BRSD_P_ERR_1TQ_FD_i_5_n_0;
  wire BRSD_P_ERR_1TQ_FD_i_6_n_0;
  wire BRSD_P_ERR_1TQ_FD_i_7_n_0;
  wire BRSD_P_ERR_1TQ_FD_i_8_n_0;
  wire BRSD_P_ERR_1TQ_FD_i_9_n_0;
  wire BRSD_P_ERR_1TQ_FD_reg;
  wire [0:0]BRSD_P_ERR_1TQ_FD_reg_0;
  wire [0:0]BRSD_P_ERR_1TQ_FD_reg_1;
  wire [3:0]BRSD_P_ERR_1TQ_FD_reg_10;
  wire [2:0]BRSD_P_ERR_1TQ_FD_reg_11;
  wire [0:0]BRSD_P_ERR_1TQ_FD_reg_12;
  wire BRSD_P_ERR_1TQ_FD_reg_13;
  wire BRSD_P_ERR_1TQ_FD_reg_14;
  wire BRSD_P_ERR_1TQ_FD_reg_15;
  wire [0:0]BRSD_P_ERR_1TQ_FD_reg_2;
  wire [2:0]BRSD_P_ERR_1TQ_FD_reg_3;
  wire [8:0]BRSD_P_ERR_1TQ_FD_reg_4;
  wire [3:0]BRSD_P_ERR_1TQ_FD_reg_5;
  wire [2:0]BRSD_P_ERR_1TQ_FD_reg_6;
  wire [2:0]BRSD_P_ERR_1TQ_FD_reg_7;
  wire [2:0]BRSD_P_ERR_1TQ_FD_reg_8;
  wire [2:0]BRSD_P_ERR_1TQ_FD_reg_9;
  wire BRS_EN_BTR;
  wire BRS_EN_BTR_D1;
  wire BRS_EN_I_FLAG_i_1_n_0;
  wire BRS_EN_I_FLAG_i_2_n_0;
  wire BRS_EN_I_FLAG_i_3_n_0;
  wire BRS_EN_I_FLAG_i_4_n_0;
  wire BRS_EN_I_FLAG_reg_0;
  wire BRS_L_SP_FE_i_1_n_0;
  wire BRS_L_SP_FE_i_2_n_0;
  wire BRS_L_SP_FE_reg_0;
  wire BRS_L_SP_FE_reg_1;
  wire BRS_L_SP_FE_reg_2;
  wire [2:0]BRS_L_SP_FE_reg_3;
  wire [2:0]BRS_L_SP_FE_reg_4;
  wire BRS_L_SP_FE_reg_5;
  wire BSP_CRCERR_I_CANFD_FLG0;
  wire BSP_CRCERR_I_CANFD_FLG_i_10_n_0;
  wire BSP_CRCERR_I_CANFD_FLG_i_12_n_0;
  wire BSP_CRCERR_I_CANFD_FLG_i_13_n_0;
  wire BSP_CRCERR_I_CANFD_FLG_i_14_n_0;
  wire BSP_CRCERR_I_CANFD_FLG_i_15_n_0;
  wire BSP_CRCERR_I_CANFD_FLG_i_21_n_0;
  wire BSP_CRCERR_I_CANFD_FLG_i_2_0;
  wire BSP_CRCERR_I_CANFD_FLG_i_2_1;
  wire BSP_CRCERR_I_CANFD_FLG_i_3_n_0;
  wire [5:0]BSP_CRCERR_I_CANFD_FLG_i_4_0;
  wire BSP_CRCERR_I_CANFD_FLG_i_4_n_0;
  wire BSP_CRCERR_I_CANFD_FLG_i_5_n_0;
  wire BSP_CRCERR_I_CANFD_FLG_i_6_n_0;
  wire BSP_CRCERR_I_CANFD_FLG_i_8_n_0;
  wire BSP_CRCERR_I_CANFD_FLG_reg_0;
  wire BSP_CRCERR_I_CANFD_FLG_reg_1;
  wire BSP_CRCERR_I_CAN_FLG0;
  wire BSP_CRCERR_I_CAN_FLG_i_11_n_0;
  wire BSP_CRCERR_I_CAN_FLG_i_12_n_0;
  wire BSP_CRCERR_I_CAN_FLG_i_3_0;
  wire BSP_CRCERR_I_CAN_FLG_i_3_1;
  wire BSP_CRCERR_I_CAN_FLG_i_3_2;
  wire BSP_CRCERR_I_CAN_FLG_i_4_n_0;
  wire BSP_CRCERR_I_CAN_FLG_i_5_n_0;
  wire BSP_CRCERR_I_CAN_FLG_i_6_n_0;
  wire [4:0]BSP_CRCERR_I_CAN_FLG_i_7_0;
  wire BSP_CRCERR_I_CAN_FLG_i_7_n_0;
  wire BSP_CRCERR_I_CAN_FLG_reg_0;
  wire BSP_CRCERR_I_CAN_FLG_reg_1;
  wire BSP_IC_ACK_ERROR_I_reg_0;
  wire BSP_IC_BIT_ERROR_I_i_5_n_0;
  wire BSP_IC_BIT_ERROR_I_i_6_n_0;
  wire BSP_IC_BIT_ERROR_I_i_7_n_0;
  wire BSP_IC_BIT_ERROR_I_reg_0;
  wire BSP_IC_CRC_ERROR_I_i_4_n_0;
  wire BSP_IC_CRC_ERROR_I_reg_0;
  wire BSP_IC_FRM_ERROR_I_i_10_n_0;
  wire BSP_IC_FRM_ERROR_I_i_5_n_0;
  wire BSP_IC_FRM_ERROR_I_i_6_n_0;
  wire BSP_IC_FRM_ERROR_I_i_7_n_0;
  wire BSP_IC_FRM_ERROR_I_i_8_n_0;
  wire BSP_IC_FRM_ERROR_I_i_9_n_0;
  wire BSP_IC_FRM_ERROR_I_reg_0;
  wire BSP_IC_F_BIT_ERROR_I_i_3_n_0;
  wire BSP_IC_F_BIT_ERROR_I_reg_0;
  wire BSP_IC_F_BIT_ERROR_I_reg_1;
  wire BSP_IC_F_CRC_ERROR_I_reg_0;
  wire BSP_IC_F_FRM_ERROR_I_reg_0;
  wire BSP_IC_F_FRM_ERROR_I_reg_1;
  wire BSP_IC_F_FRM_ERROR_I_reg_2;
  wire BSP_IC_F_STUFF_ERROR_I_reg_0;
  wire BSP_IC_STUFF_ERROR_I_reg_0;
  wire BSP_IDVALID_FD1;
  wire BSP_IDVALID_FD1_i_2_n_0;
  wire BSP_IDVALID_FD1_i_3_n_0;
  wire BSP_IDVALID_FD2;
  wire BSP_IN_EOF;
  wire BSP_IN_ID_STATE_D1;
  wire BSP_IN_ID_STATE_I;
  wire BSP_IN_ID_STATE_I_i_1_n_0;
  wire BSP_IN_IFSPACE;
  wire BSP_IN_IFSPACE_i_1_n_0;
  wire BSP_TXBIT_D1_reg_0;
  wire BSP_TXBIT_D1_reg_1;
  wire BSP_TXBIT_FD_reg;
  wire BSP_TXBIT_FD_reg_0;
  wire [6:0]BTL_COUNTER_I15_carry;
  wire BTL_COUNTER_I15_carry_i_10_n_0;
  wire BTL_COUNTER_I15_carry_i_11_n_0;
  wire BTL_COUNTER_I15_carry_i_9_n_0;
  wire [0:0]BTL_COUNTER_I17_carry_i_19;
  wire BTL_COUNTER_I17_carry_i_28_n_0;
  wire BTL_COUNTER_I17_carry_i_29_n_0;
  wire BTL_COUNTER_I17_carry_i_30_n_0;
  wire BTL_COUNTER_I17_carry_i_6_n_0;
  wire BTL_COUNTER_I17_carry_i_8_n_0;
  wire BTL_COUNTER_I17_carry_i_9_n_0;
  wire \BTL_COUNTER_I_REG[0]_i_2_n_0 ;
  wire \BTL_COUNTER_I_REG[1]_i_2_n_0 ;
  wire \BTL_COUNTER_I_REG[1]_i_5_n_0 ;
  wire \BTL_COUNTER_I_REG[2]_i_2_n_0 ;
  wire \BTL_COUNTER_I_REG[3]_i_10_n_0 ;
  wire \BTL_COUNTER_I_REG[3]_i_12_n_0 ;
  wire \BTL_COUNTER_I_REG[3]_i_13_n_0 ;
  wire \BTL_COUNTER_I_REG[3]_i_14_n_0 ;
  wire \BTL_COUNTER_I_REG[3]_i_15_n_0 ;
  wire \BTL_COUNTER_I_REG[3]_i_16_n_0 ;
  wire \BTL_COUNTER_I_REG[3]_i_17_n_0 ;
  wire \BTL_COUNTER_I_REG[3]_i_4_n_0 ;
  wire \BTL_COUNTER_I_REG[3]_i_8_n_0 ;
  wire \BTL_COUNTER_I_REG[3]_i_9_n_0 ;
  wire \BTL_COUNTER_I_REG[4]_i_2_n_0 ;
  wire \BTL_COUNTER_I_REG[5]_i_10_n_0 ;
  wire \BTL_COUNTER_I_REG[5]_i_11_n_0 ;
  wire \BTL_COUNTER_I_REG[5]_i_12_n_0 ;
  wire \BTL_COUNTER_I_REG[5]_i_13_n_0 ;
  wire \BTL_COUNTER_I_REG[5]_i_14_n_0 ;
  wire \BTL_COUNTER_I_REG[5]_i_15_n_0 ;
  wire \BTL_COUNTER_I_REG[5]_i_19_n_0 ;
  wire \BTL_COUNTER_I_REG[5]_i_20_n_0 ;
  wire \BTL_COUNTER_I_REG[5]_i_21_n_0 ;
  wire \BTL_COUNTER_I_REG[5]_i_22_n_0 ;
  wire \BTL_COUNTER_I_REG[5]_i_2_n_0 ;
  wire \BTL_COUNTER_I_REG[5]_i_4_n_0 ;
  wire \BTL_COUNTER_I_REG[5]_i_6_n_0 ;
  wire \BTL_COUNTER_I_REG[5]_i_8_n_0 ;
  wire \BTL_COUNTER_I_REG[5]_i_9_n_0 ;
  wire \BTL_COUNTER_I_REG[6]_i_2_n_0 ;
  wire \BTL_COUNTER_I_REG[7]_i_2_n_0 ;
  wire \BTL_COUNTER_I_REG[8]_i_10_n_0 ;
  wire \BTL_COUNTER_I_REG[8]_i_13_n_0 ;
  wire \BTL_COUNTER_I_REG[8]_i_16_n_0 ;
  wire \BTL_COUNTER_I_REG[8]_i_3_n_0 ;
  wire \BTL_COUNTER_I_REG[8]_i_4_n_0 ;
  wire \BTL_COUNTER_I_REG[8]_i_5_n_0 ;
  wire \BTL_COUNTER_I_REG[8]_i_6_n_0 ;
  wire \BTL_COUNTER_I_REG[8]_i_7_n_0 ;
  wire \BTL_COUNTER_I_REG[8]_i_8_n_0 ;
  wire \BTL_COUNTER_I_REG[8]_i_9_n_0 ;
  wire [0:0]\BTL_COUNTER_I_REG_reg[0] ;
  wire \BTL_COUNTER_I_REG_reg[1] ;
  wire \BTL_COUNTER_I_REG_reg[1]_0 ;
  wire \BTL_COUNTER_I_REG_reg[2] ;
  wire [0:0]\BTL_COUNTER_I_REG_reg[3] ;
  wire [0:0]\BTL_COUNTER_I_REG_reg[3]_0 ;
  wire \BTL_COUNTER_I_REG_reg[3]_i_2_n_0 ;
  wire \BTL_COUNTER_I_REG_reg[3]_i_2_n_1 ;
  wire \BTL_COUNTER_I_REG_reg[3]_i_2_n_2 ;
  wire \BTL_COUNTER_I_REG_reg[3]_i_2_n_3 ;
  wire \BTL_COUNTER_I_REG_reg[3]_i_3_n_0 ;
  wire \BTL_COUNTER_I_REG_reg[3]_i_3_n_1 ;
  wire \BTL_COUNTER_I_REG_reg[3]_i_3_n_2 ;
  wire \BTL_COUNTER_I_REG_reg[3]_i_3_n_3 ;
  wire [0:0]\BTL_COUNTER_I_REG_reg[5] ;
  wire \BTL_COUNTER_I_REG_reg[5]_i_3_n_0 ;
  wire \BTL_COUNTER_I_REG_reg[5]_i_3_n_1 ;
  wire \BTL_COUNTER_I_REG_reg[5]_i_3_n_2 ;
  wire \BTL_COUNTER_I_REG_reg[5]_i_3_n_3 ;
  wire \BTL_COUNTER_I_REG_reg[5]_i_5_n_0 ;
  wire \BTL_COUNTER_I_REG_reg[5]_i_5_n_1 ;
  wire \BTL_COUNTER_I_REG_reg[5]_i_5_n_2 ;
  wire \BTL_COUNTER_I_REG_reg[5]_i_5_n_3 ;
  wire \BTL_COUNTER_I_REG_reg[8] ;
  wire [0:0]\BTL_COUNTER_I_REG_reg[8]_0 ;
  wire [0:0]\BTL_COUNTER_I_REG_reg[8]_1 ;
  wire [7:0]\BTL_COUNTER_I_REG_reg[8]_2 ;
  wire [0:0]BTL_NTQ_I0_carry__0;
  wire [6:0]BTL_NTQ_I0_carry__0_0;
  wire BTL_NTQ_I0_carry__0_i_10_n_0;
  wire [3:0]BTL_NTQ_I0_carry__0_i_8_0;
  wire BTL_NTQ_I0_carry__0_i_9_n_0;
  wire BTL_RXBIT_I_reg;
  wire BTL_RXBIT_I_reg_0;
  wire BTL_RXBIT_I_reg_1;
  wire BTL_RXBIT_I_reg_2;
  wire BTL_SAMP_EN_D1_reg;
  wire BTL_SAMP_EN_D1_reg_0;
  wire BTL_SAMP_EN_D1_reg_1;
  wire BTL_SAMP_EN_FD2;
  wire BTL_TRNSMT_EN_FD1;
  wire BTL_TRNSMT_EN_FD13_carry_i_10_n_0;
  wire BTL_TRNSMT_EN_FD13_carry_i_12_n_0;
  wire BTL_TRNSMT_EN_FD13_carry_i_13_n_0;
  wire BTL_TRNSMT_EN_FD13_carry_i_4_n_0;
  wire BTL_TRNSMT_EN_FD13_carry_i_5_n_0;
  wire [4:0]BTL_TRNSMT_EN_FD13_carry_i_6_0;
  wire BTL_TRNSMT_EN_FD13_carry_i_6_n_0;
  wire BTL_TRNSMT_EN_FD13_carry_i_8_n_0;
  wire BTL_TRNSMT_EN_FD13_carry_i_9_n_0;
  wire BTL_TRNSMT_EN_FD1_i_10_n_0;
  wire BTL_TRNSMT_EN_FD1_i_2_n_0;
  wire BTL_TRNSMT_EN_FD1_i_3_n_0;
  wire BTL_TRNSMT_EN_FD1_i_4_n_0;
  wire BTL_TRNSMT_EN_FD1_i_5_n_0;
  wire BTL_TRNSMT_EN_FD1_i_6_n_0;
  wire BTL_TRNSMT_EN_FD1_i_7_n_0;
  wire BTL_TRNSMT_EN_FD1_i_8_n_0;
  wire BTL_TRNSMT_EN_FD1_i_9_n_0;
  wire BTL_TRNSMT_EN_FD1_reg;
  wire [0:0]BTL_TRNSMT_EN_FD1_reg_0;
  wire [0:0]BTL_TRNSMT_EN_FD1_reg_1;
  wire [0:0]BTL_TRNSMT_EN_FD1_reg_2;
  wire BTL_TRNSMT_EN_I1;
  wire BUFFER_EMPTY_INTERNAL;
  wire BUFFER_EMPTY_INTERNAL_i_1_n_0;
  wire [0:0]BUFFER_EMPTY_INTERNAL_i_2_0;
  wire [0:0]BUFFER_EMPTY_INTERNAL_i_2_1;
  wire BUFFER_EMPTY_INTERNAL_i_3_n_0;
  wire BUFFER_EMPTY_INTERNAL_i_4_n_0;
  wire BUFFER_EMPTY_INTERNAL_i_5_n_0;
  wire BUFFER_EMPTY_INTERNAL_i_6_n_0;
  wire BUFFER_IS_READY_SYNCED;
  wire BUFFER_IS_READY_SYNCED_D1;
  wire CANCEL_CONFIRMED_TL2OL_I_D1;
  wire CANCEL_CONFIRMED_TL2OL_I_reg_0;
  wire CANCEL_CONFIRMED_TL2OL_I_reg_1;
  wire CAN_PHY_TX_INT_reg;
  wire CAN_PHY_TX_LP_i_13_n_0;
  wire CAN_PHY_TX_LP_i_2_0;
  wire CAN_PHY_TX_LP_i_2_1;
  wire [0:0]CAN_PHY_TX_LP_i_2_2;
  wire CAN_PHY_TX_LP_i_3_n_0;
  wire CAN_PHY_TX_LP_i_4_n_0;
  wire CAN_PHY_TX_LP_i_8_n_0;
  wire CAN_PHY_TX_POS_FLOP_X2;
  wire CAN_PHY_TX_POS_FLOP_X26_carry;
  wire CAN_PHY_TX_POS_FLOP_X26_carry__0_i_3_n_0;
  wire CAN_PHY_TX_POS_FLOP_X26_carry__0_i_4_n_0;
  wire CAN_PHY_TX_POS_FLOP_X26_carry_i_10_n_0;
  wire CAN_PHY_TX_POS_FLOP_X26_carry_i_11_n_0;
  wire CAN_PHY_TX_POS_FLOP_X26_carry_i_12_n_0;
  wire CAN_PHY_TX_POS_FLOP_X26_carry_i_13_n_0;
  wire CAN_PHY_TX_POS_FLOP_X26_carry_i_16_n_0;
  wire CAN_PHY_TX_POS_FLOP_X26_carry_i_17_n_0;
  wire CAN_PHY_TX_POS_FLOP_X26_carry_i_9_n_0;
  wire [8:0]CAN_PHY_TX_POS_FLOP_X27;
  wire [1:0]CLKD_COUNTER_I_reg;
  wire [1:0]\CLKD_COUNTER_I_reg[7] ;
  wire [1:0]\CLKD_COUNTER_I_reg[7]_0 ;
  wire CLKM_EN_i_10_n_0;
  wire CLKM_EN_i_11_n_0;
  wire CLKM_EN_i_12_n_0;
  wire CLKM_EN_i_13_n_0;
  wire CLKM_EN_reg;
  wire [0:0]CO;
  wire \COUNTER_I[1]_i_4_n_0 ;
  wire \COUNTER_I[1]_i_5_n_0 ;
  wire CRC_CRCWORD_I1;
  wire [0:0]D;
  wire [3:0]DI;
  wire [0:0]E;
  wire EMU_CTR_FLG_I;
  wire EMU_CTR_FLG_I0;
  wire [0:0]EMU_CTR_FLG_I_reg;
  wire \EMU_OL_ECR_I[0]_i_4_n_0 ;
  wire \EMU_OL_ECR_I[0]_i_5_n_0 ;
  wire EMU_REC_I20_carry_i_10_n_0;
  wire EMU_REC_I20_carry_i_9_n_0;
  wire \EMU_REC_I[7]_i_7_n_0 ;
  wire \EMU_REC_I[7]_i_8_n_0 ;
  wire EMU_TEC_I2_carry_i_10_n_0;
  wire EMU_TEC_I2_carry_i_11_n_0;
  wire EMU_TEC_I2_carry_i_7_n_0;
  wire EMU_TEC_I2_carry_i_8_n_0;
  wire EMU_TEC_I2_carry_i_9_n_0;
  wire ERR_ACKERRPASS_I;
  wire ERR_ACKERRPASS_I_i_1_n_0;
  wire ERR_ACKERRPASS_I_i_2_n_0;
  wire ERR_ACKERRPASS_I_i_3_n_0;
  wire ERR_ACKERRPASS_I_reg_0;
  wire FAST_TRANSMT_PT_D1_i_3_n_0;
  wire [0:0]FAST_TRANSMT_PT_D1_reg;
  wire FBR_ERR_1TQ;
  wire [7:7]IC_REG_BTR_TS1;
  wire [6:6]IC_REG_BTR_TS2;
  wire IC_SYNC_ESR_ACKER;
  wire IC_SYNC_ESR_BERR;
  wire IC_SYNC_ESR_CRCER;
  wire IC_SYNC_ESR_FMER;
  wire IC_SYNC_ESR_F_BERR;
  wire IC_SYNC_ESR_F_CRCER;
  wire IC_SYNC_ESR_F_FMER;
  wire IC_SYNC_ESR_F_STER;
  wire IC_SYNC_ESR_STER;
  wire IC_SYNC_ISR_ARBLST;
  wire IC_SYNC_ISR_RXOK;
  wire IC_SYNC_ISR_TXOK;
  wire \ID_FOR_MATCH[11]_i_2_n_0 ;
  wire \ID_FOR_MATCH[11]_i_3_n_0 ;
  wire \ID_FOR_MATCH[12]_i_2_n_0 ;
  wire [31:0]\ID_FOR_MATCH_reg[0]_0 ;
  wire [0:0]\ID_FOR_MATCH_reg[31]_0 ;
  wire ID_MATCH_EN;
  wire ID_MATCH_EN_reg_0;
  wire MATCH_RESULT_TO_BSP;
  wire MSG_ON_CAN_BUS;
  wire MSG_ON_CAN_BUS_reg_0;
  wire MSR_BRSD_FS2;
  wire MSR_DAR_FS2;
  wire MSR_DPEE_FS2;
  wire MSR_SBR_FS2;
  wire MSR_SLEEP_FS2;
  wire [2:0]O;
  wire OL_RX_FIFO_FULL;
  wire OL_RX_FIFO_FULL_F1;
  wire [0:0]Q;
  wire RSYNC_FLG_I;
  wire RSYNC_FLG_I_reg;
  wire [0:0]RSYNC_FLG_I_reg_0;
  wire RSYNC_FLG_I_reg_1;
  wire RSYNC_FLG_I_reg_2;
  wire RXE_BRS_I;
  wire RXE_BRS_I_reg_0;
  wire RXE_BTL_HSYNC_EN;
  wire RXE_BTL_HSYNC_FD1_i_3_n_0;
  wire RXE_COUNTER_I0177_out;
  wire \RXE_COUNTER_I[0]_i_1_n_0 ;
  wire \RXE_COUNTER_I[4]_i_1_n_0 ;
  wire \RXE_COUNTER_I[6]_i_2_n_0 ;
  wire \RXE_COUNTER_I[8]_i_11_n_0 ;
  wire \RXE_COUNTER_I[8]_i_12_n_0 ;
  wire \RXE_COUNTER_I[8]_i_13_n_0 ;
  wire \RXE_COUNTER_I[8]_i_14_n_0 ;
  wire \RXE_COUNTER_I[8]_i_15_n_0 ;
  wire \RXE_COUNTER_I[8]_i_16_n_0 ;
  wire \RXE_COUNTER_I[8]_i_17_n_0 ;
  wire \RXE_COUNTER_I[8]_i_18_n_0 ;
  wire \RXE_COUNTER_I[8]_i_19_n_0 ;
  wire \RXE_COUNTER_I[8]_i_1_n_0 ;
  wire \RXE_COUNTER_I[8]_i_20_n_0 ;
  wire \RXE_COUNTER_I[8]_i_21_n_0 ;
  wire \RXE_COUNTER_I[8]_i_22_n_0 ;
  wire \RXE_COUNTER_I[8]_i_23_n_0 ;
  wire \RXE_COUNTER_I[8]_i_24_n_0 ;
  wire \RXE_COUNTER_I[8]_i_25_n_0 ;
  wire \RXE_COUNTER_I[8]_i_26_n_0 ;
  wire \RXE_COUNTER_I[8]_i_4_n_0 ;
  wire \RXE_COUNTER_I[8]_i_5_n_0 ;
  wire \RXE_COUNTER_I[8]_i_6_n_0 ;
  wire \RXE_COUNTER_I[8]_i_8_n_0 ;
  wire \RXE_COUNTER_I[8]_i_9_n_0 ;
  wire \RXE_COUNTER_I_reg[0]_0 ;
  wire \RXE_COUNTER_I_reg[0]_1 ;
  wire \RXE_COUNTER_I_reg[0]_2 ;
  wire \RXE_COUNTER_I_reg[0]_3 ;
  wire \RXE_COUNTER_I_reg[1]_0 ;
  wire \RXE_COUNTER_I_reg[1]_1 ;
  wire [3:0]\RXE_COUNTER_I_reg[3]_0 ;
  wire \RXE_COUNTER_I_reg[3]_1 ;
  wire \RXE_COUNTER_I_reg[4]_0 ;
  wire \RXE_COUNTER_I_reg[4]_1 ;
  wire \RXE_COUNTER_I_reg[4]_2 ;
  wire \RXE_COUNTER_I_reg[4]_3 ;
  wire \RXE_COUNTER_I_reg[4]_4 ;
  wire \RXE_COUNTER_I_reg[4]_5 ;
  wire \RXE_COUNTER_I_reg[5]_0 ;
  wire \RXE_COUNTER_I_reg[6]_0 ;
  wire \RXE_COUNTER_I_reg[8]_0 ;
  wire \RXE_COUNTER_I_reg_n_0_[4] ;
  wire \RXE_COUNTER_I_reg_n_0_[5] ;
  wire \RXE_COUNTER_I_reg_n_0_[6] ;
  wire \RXE_COUNTER_I_reg_n_0_[7] ;
  wire \RXE_COUNTER_I_reg_n_0_[8] ;
  wire RXE_COUNTER_RST2;
  wire RXE_COUNTER_RST30_out;
  wire \RXE_COUNTER_RST3_inferred__0/i__carry__0_n_0 ;
  wire \RXE_COUNTER_RST3_inferred__0/i__carry__0_n_1 ;
  wire \RXE_COUNTER_RST3_inferred__0/i__carry__0_n_2 ;
  wire \RXE_COUNTER_RST3_inferred__0/i__carry__0_n_3 ;
  wire \RXE_COUNTER_RST3_inferred__0/i__carry__1_n_2 ;
  wire \RXE_COUNTER_RST3_inferred__0/i__carry__1_n_3 ;
  wire \RXE_COUNTER_RST3_inferred__0/i__carry_n_0 ;
  wire \RXE_COUNTER_RST3_inferred__0/i__carry_n_1 ;
  wire \RXE_COUNTER_RST3_inferred__0/i__carry_n_2 ;
  wire \RXE_COUNTER_RST3_inferred__0/i__carry_n_3 ;
  wire \RXE_DATA_STORED_AT_DLC[0]_i_4_n_0 ;
  wire \RXE_DATA_STORED_AT_DLC[0]_i_5_n_0 ;
  wire \RXE_DATA_STORED_AT_DLC[0]_i_6_n_0 ;
  wire \RXE_DATA_STORED_AT_DLC[10]_i_2_n_0 ;
  wire \RXE_DATA_STORED_AT_DLC[1]_i_2_n_0 ;
  wire \RXE_DATA_STORED_AT_DLC[1]_i_3_n_0 ;
  wire \RXE_DATA_STORED_AT_DLC[2]_i_2_n_0 ;
  wire \RXE_DATA_STORED_AT_DLC[2]_i_3_n_0 ;
  wire \RXE_DATA_STORED_AT_DLC[3]_i_2_n_0 ;
  wire \RXE_DATA_STORED_AT_DLC[3]_i_3_n_0 ;
  wire \RXE_DATA_STORED_AT_DLC[4]_i_2_n_0 ;
  wire \RXE_DATA_STORED_AT_DLC[4]_i_3_n_0 ;
  wire \RXE_DATA_STORED_AT_DLC[5]_i_2_n_0 ;
  wire \RXE_DATA_STORED_AT_DLC[5]_i_3_n_0 ;
  wire \RXE_DATA_STORED_AT_DLC[6]_i_2_n_0 ;
  wire \RXE_DATA_STORED_AT_DLC[6]_i_3_n_0 ;
  wire \RXE_DATA_STORED_AT_DLC[7]_i_2_n_0 ;
  wire \RXE_DATA_STORED_AT_DLC[7]_i_3_n_0 ;
  wire \RXE_DATA_STORED_AT_DLC[8]_i_2_n_0 ;
  wire \RXE_DATA_STORED_AT_DLC[9]_i_2_n_0 ;
  wire [3:0]RXE_DLC_I;
  wire \RXE_DLC_I[3]_i_1_n_0 ;
  wire RXE_ERRFLG_I;
  wire RXE_ERRFLG_I_i_1_n_0;
  wire RXE_ERRFLG_I_i_2_n_0;
  wire RXE_ERRFLG_I_reg_0;
  wire RXE_ESI_I_reg_0;
  wire RXE_ESI_I_reg_1;
  wire RXE_FDF_I;
  wire RXE_FDF_I_reg_0;
  wire RXE_IC_RXOK_I_reg_0;
  wire RXE_IDE_I;
  wire RXE_IDE_I_reg_0;
  wire RXE_IDE_I_reg_1;
  wire RXE_MSGINVAL_FD1;
  wire RXE_MSGINVAL_FD1_i_2_n_0;
  wire RXE_MSGINVAL_FD1_i_4_n_0;
  wire RXE_MSGINVAL_FD2;
  wire RXE_MSGINVAL_I;
  wire [2:2]RXE_MSGPAD_SEL;
  wire [2:0]RXE_MSGPAD_SEL_FS1;
  wire RXE_MSGPAD_SEL_FS10;
  wire \RXE_MSGPAD_SEL_FS1[1]_i_1_n_0 ;
  wire \RXE_MSGPAD_SEL_FS1[1]_i_3_n_0 ;
  wire \RXE_MSGPAD_SEL_FS1[1]_i_4_n_0 ;
  wire \RXE_MSGPAD_SEL_FS1[1]_i_5_n_0 ;
  wire \RXE_MSGPAD_SEL_FS1[1]_i_7_n_0 ;
  wire \RXE_MSGPAD_SEL_FS1[2]_i_2_n_0 ;
  wire \RXE_MSGPAD_SEL_FS1[2]_i_3_n_0 ;
  wire \RXE_MSGPAD_SEL_FS1_reg[0]_0 ;
  wire \RXE_MSGPAD_SEL_FS1_reg[1]_0 ;
  wire RXE_MSGVAL_D1_I;
  wire RXE_MSGVAL_EARLY_F00;
  wire RXE_MSGVAL_EARLY_F10;
  wire RXE_MSGVAL_FD1_i_2_n_0;
  wire RXE_MSGVAL_FD1_reg_0;
  wire RXE_MSGVAL_FD2_reg_0;
  wire RXE_OL_BIDLE;
  wire RXE_OL_BSFR;
  wire RXE_OL_LBACK;
  wire RXE_OL_LBACK_I;
  wire RXE_OL_LBACK_reg_0;
  wire RXE_OL_RSTST;
  wire RXE_OL_SLEEP;
  wire RXE_OL_SLEEP_I;
  wire RXE_OL_SLEEP_i_2_n_0;
  wire RXE_PASSFLG_I;
  wire RXE_PASSFLG_I_i_1_n_0;
  wire RXE_PASSFLG_I_reg_0;
  wire RXE_PASSFLG_I_reg_1;
  wire RXE_RTR_I;
  wire RXE_RTR_I_reg_0;
  wire RXE_RXFIFO_WEN_FD10;
  wire RXE_RXFIFO_WEN_FD18;
  wire RXE_RXFIFO_WEN_FD1_i_10_n_0;
  wire RXE_RXFIFO_WEN_FD1_i_2_n_0;
  wire RXE_RXFIFO_WEN_FD1_i_4_n_0;
  wire RXE_RXFIFO_WEN_FD1_i_5_n_0;
  wire RXE_RXFIFO_WEN_FD1_i_6_n_0;
  wire RXE_RXFIFO_WEN_FD1_i_7_n_0;
  wire RXE_RXFIFO_WEN_FD1_i_8_n_0;
  wire RXE_RXFIFO_WEN_FD1_i_9_n_0;
  wire RXE_RXFIFO_WEN_FD1_reg_0;
  wire RXE_RXFIFO_WEN_FD1_reg_i_3_n_2;
  wire RXE_RXFIFO_WEN_FD1_reg_i_3_n_3;
  wire RXE_RXFIFO_WEN_FD2;
  wire RXE_RXMSG_INVAL_F00;
  wire RXE_RXMSG_INVAL_F0_reg;
  wire RXE_RXMSG_INVAL_F10;
  wire RXE_RXMSG_INVAL_F1_i_2_n_0;
  wire RXE_RXMSG_VAL_F00;
  wire RXE_RXMSG_VAL_F0_reg;
  wire RXE_RXMSG_VAL_F10;
  wire RXE_SREG_I0;
  wire \RXE_SREG_I[0]_i_3_n_0 ;
  wire [7:0]\RXE_SREG_I_reg[24]_0 ;
  wire [31:0]\RXE_SREG_I_reg[24]_1 ;
  wire [0:0]\RXE_SREG_I_reg[31]_0 ;
  wire \RXE_SREG_I_reg_n_0_[0] ;
  wire \RXE_SREG_I_reg_n_0_[10] ;
  wire \RXE_SREG_I_reg_n_0_[11] ;
  wire \RXE_SREG_I_reg_n_0_[12] ;
  wire \RXE_SREG_I_reg_n_0_[13] ;
  wire \RXE_SREG_I_reg_n_0_[14] ;
  wire \RXE_SREG_I_reg_n_0_[15] ;
  wire \RXE_SREG_I_reg_n_0_[16] ;
  wire \RXE_SREG_I_reg_n_0_[17] ;
  wire \RXE_SREG_I_reg_n_0_[18] ;
  wire \RXE_SREG_I_reg_n_0_[1] ;
  wire \RXE_SREG_I_reg_n_0_[2] ;
  wire \RXE_SREG_I_reg_n_0_[3] ;
  wire \RXE_SREG_I_reg_n_0_[4] ;
  wire \RXE_SREG_I_reg_n_0_[5] ;
  wire \RXE_SREG_I_reg_n_0_[6] ;
  wire \RXE_SREG_I_reg_n_0_[7] ;
  wire \RXE_SREG_I_reg_n_0_[8] ;
  wire \RXE_SREG_I_reg_n_0_[9] ;
  wire RXF_FULL_AT_MSG_BOUNDARY;
  wire RXF_FULL_AT_MSG_BOUNDARY_F1;
  wire [0:0]RXF_FULL_AT_MSG_BOUNDARY_reg;
  wire [3:0]S;
  wire SM_FLAG_I;
  wire SM_FLAG_I_FSB;
  wire SM_FLAG_I_FSB_reg;
  wire SM_FLAG_I_i_3_n_0;
  wire SM_FLAG_I_i_4_n_0;
  wire SM_FLAG_I_i_5_n_0;
  wire SM_FLAG_I_i_6_n_0;
  wire SM_FLAG_I_i_7_n_0;
  wire SM_FLAG_I_reg;
  wire SM_STUFFBIT_PD;
  wire SM_STUFFBIT_PD1_reg_n_0;
  wire [0:0]SR;
  wire SSP_EN;
  wire SSP_EN_D1_reg;
  wire SSP_EN_D1_reg_0;
  wire SYNC_RST_TL;
  wire TDCV_CNT_REG_WEN;
  wire TDCV_CNT_REG_WEN_reg_0;
  wire TDC_EN_FS2;
  wire TDC_SSP_SAMP_PT_D1;
  wire TDC_SSP_SAMP_PT_D1_reg;
  wire TDC_TRIG_COND;
  wire TDC_TRIG_COND_D1_i_3_n_0;
  wire TDC_TRIG_COND_D1_i_4_n_0;
  wire [7:0]\TIME_STAMP_CNT_CAPTURE_reg[0] ;
  wire [7:0]TS_RX_WDATA_F1;
  wire TS_RX_WEN;
  wire TXE_BRAM_WEN;
  wire TXE_CFD_5;
  wire TXE_DLC_I_EN;
  wire TXE_DLC_I_EN_i_3_n_0;
  wire TXE_DLC_I_EN_i_4_n_0;
  wire TXE_DLC_I_EN_i_5_n_0;
  wire [0:4]TXE_DLC_I_EXT;
  wire [31:0]\TXE_DLC_I_reg[0]_0 ;
  wire TXE_IC_ARBLSS_I;
  wire TXE_IC_ARBLSS_I_reg_0;
  wire TXE_IC_TXOK_I_reg_0;
  wire TXE_MSGINVAL_D1;
  wire TXE_MSGINVAL_D1_i_2_n_0;
  wire TXE_MSGINVAL_D2;
  wire TXE_MSGINVAL_FD1;
  wire TXE_MSGINVAL_FD2;
  wire TXE_MSGINVAL_I;
  wire TXE_MSGVAL_D1_I;
  wire [0:0]TXE_MSGVAL_D1_I_reg_0;
  wire TXE_MSGVAL_FD1;
  wire TXE_MSGVAL_FD1_i_2_n_0;
  wire TXE_MSGVAL_FD1_i_3_n_0;
  wire TXE_MSGVAL_FD1_i_4_n_0;
  wire TXE_MSGVAL_FD1_i_5_n_0;
  wire TXE_MSGVAL_FD2;
  wire TXE_PASSTX_I_i_4_n_0;
  wire TXE_PASSTX_I_reg_0;
  wire TXE_PASSTX_I_reg_1;
  wire TXE_PREFETCH_FD;
  wire TXE_PREFETCH_FD_i_1_n_0;
  wire TXE_PREFETCH_FD_i_2_n_0;
  wire TXE_PREFETCH_FD_i_3_n_0;
  wire TXE_TRNSMT_FLG_SET;
  wire TXE_TRNSMT_FLG_i_1_n_0;
  wire TXE_TRNSMT_FLG_i_2_n_0;
  wire TXE_TRNSMT_FLG_i_4_n_0;
  wire TXE_TRNSMT_FLG_i_5_n_0;
  wire TXE_TRNSMT_FLG_i_6_n_0;
  wire TXE_TRNSMT_FLG_reg_0;
  wire TXE_TXING055_out;
  wire TXE_TXING_i_4_n_0;
  wire TXE_TXING_i_5_n_0;
  wire TXE_TXING_reg_0;
  wire TXE_TXING_reg_1;
  wire TXE_TXING_reg_2;
  wire TXE_TXING_reg_3;
  wire TXE_TXING_reg_4;
  wire TXE_TXING_reg_5;
  wire TXE_TXING_reg_6;
  wire TXE_TXING_reg_7;
  wire TXE_TXING_reg_8;
  wire TXE_TX_REN_D1;
  wire TXE_TX_REN_D1_reg_0;
  wire TXE_TX_REN_D1_reg_1;
  wire TXE_TX_REN_I;
  wire TXE_TX_REN_I_CFD;
  wire TXE_TX_REN_I_CFD_D1;
  wire TXE_TX_REN_I_CFD_D1_i_10_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_11_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_12_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_13_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_14_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_15_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_16_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_17_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_18_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_20_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_21_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_22_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_23_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_24_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_25_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_26_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_27_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_28_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_29_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_2_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_30_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_31_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_32_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_33_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_34_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_38_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_39_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_40_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_41_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_42_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_43_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_44_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_45_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_46_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_47_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_4_0;
  wire TXE_TX_REN_I_CFD_D1_i_51_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_52_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_53_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_54_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_5_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_6_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_7_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_8_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_9_0;
  wire TXE_TX_REN_I_CFD_D1_i_9_n_0;
  wire TXING_BRS_EN_BTR_D1;
  wire TXING_BRS_EN_BTR_D1_reg;
  wire TXING_BRS_EN_BTR_D1_reg_0;
  wire \addr_location_incr_count_reg[0] ;
  wire \arststages_ff_reg[1] ;
  wire \arststages_ff_reg[1]_0 ;
  wire \arststages_ff_reg[1]_1 ;
  wire \arststages_ff_reg[1]_2 ;
  wire \arststages_ff_reg[1]_3 ;
  wire \arststages_ff_reg[1]_4 ;
  wire [3:0]\arststages_ff_reg[1]_5 ;
  wire \arststages_ff_reg[1]_6 ;
  wire [1:0]\arststages_ff_reg[1]_7 ;
  wire [8:1]\btl/BTL_COUNTER_I ;
  wire [8:0]\btl/data0 ;
  wire [8:0]\btl/data1 ;
  wire can_clk;
  wire [31:27]data0;
  wire dest_arst;
  wire dest_out;
  wire ena;
  wire \gen_rx1.u_rxxpm_2_i_42_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0 ;
  wire i__carry__0_i_1__4_n_0;
  wire i__carry__0_i_2__4_n_0;
  wire i__carry__0_i_3__1_n_0;
  wire i__carry__0_i_4__1_n_0;
  wire i__carry__1_i_1__0_n_0;
  wire i__carry__1_i_2__0_n_0;
  wire i__carry__1_i_3__0_n_0;
  wire i__carry_i_10__0_n_0;
  wire i__carry_i_11__0_n_0;
  wire i__carry_i_12__0_n_0;
  wire i__carry_i_12_n_0;
  wire i__carry_i_13__0_n_0;
  wire i__carry_i_13_n_0;
  wire i__carry_i_14__0_n_0;
  wire i__carry_i_14_n_0;
  wire i__carry_i_15__0_n_0;
  wire i__carry_i_15_n_0;
  wire i__carry_i_16__0_n_0;
  wire i__carry_i_17__0_n_0;
  wire i__carry_i_18_n_0;
  wire i__carry_i_19_n_0;
  wire [7:0]i__carry_i_1__4_0;
  wire i__carry_i_1__5_0;
  wire i__carry_i_1__7_n_0;
  wire i__carry_i_20_n_0;
  wire i__carry_i_21_n_0;
  wire i__carry_i_22_n_0;
  wire i__carry_i_23_n_0;
  wire i__carry_i_24_n_0;
  wire i__carry_i_25_n_0;
  wire i__carry_i_26_n_0;
  wire [0:0]i__carry_i_2__3_0;
  wire i__carry_i_2__6_n_0;
  wire i__carry_i_3__7_n_0;
  wire i__carry_i_4__1_n_0;
  wire i__carry_i_4__2_n_0;
  wire i__carry_i_4__3_n_0;
  wire i__carry_i_4__5_n_0;
  wire i__carry_i_4__6_n_0;
  wire i__carry_i_4__9_n_0;
  wire i__carry_i_5__1_n_0;
  wire i__carry_i_5__3_n_0;
  wire i__carry_i_5__4_n_0;
  wire i__carry_i_5__5_n_0;
  wire i__carry_i_6__3_n_0;
  wire i__carry_i_6__5_n_0;
  wire i__carry_i_6__6_n_0;
  wire [3:0]i__carry_i_7__1_0;
  wire i__carry_i_7__1_n_0;
  wire i__carry_i_7__4_n_0;
  wire i__carry_i_8__1_n_0;
  wire i__carry_i_8__3_n_0;
  wire i__carry_i_9__0_n_0;
  wire i__carry_i_9__1_n_0;
  wire i__carry_i_9_n_0;
  wire \ic_reg_f_btr_ts1_cdc_tig_reg[2] ;
  wire [0:0]\ic_reg_f_btr_ts1_cdc_tig_reg[3] ;
  wire [0:0]\ic_reg_f_btr_ts2_cdc_tig_reg[2] ;
  wire \ic_reg_n_brpr_cdc_tig_reg[1] ;
  wire \ic_reg_n_btr_sjw_cdc_tig_reg[0] ;
  wire [3:0]\ic_reg_n_btr_sjw_cdc_tig_reg[0]_0 ;
  wire [0:0]\ic_reg_n_btr_sjw_cdc_tig_reg[1] ;
  wire [0:0]\ic_reg_n_btr_ts1_cdc_tig_reg[1] ;
  wire [0:0]\ic_reg_n_btr_ts1_cdc_tig_reg[1]_0 ;
  wire [2:0]\ic_reg_n_btr_ts1_cdc_tig_reg[1]_1 ;
  wire [2:0]\ic_reg_n_btr_ts1_cdc_tig_reg[1]_2 ;
  wire [0:0]\ic_reg_n_btr_ts1_cdc_tig_reg[1]_3 ;
  wire [3:0]\ic_reg_n_btr_ts1_cdc_tig_reg[1]_4 ;
  wire [2:0]\ic_reg_n_btr_ts2_cdc_tig_reg[4] ;
  wire [3:1]p_0_in__1;
  wire [8:1]p_0_in__2;
  wire p_192_in;
  wire p_198_in;
  wire p_62_in;
  wire src_in;
  wire \state[0]_i_10_0 ;
  wire \state[0]_i_10_n_0 ;
  wire \state[0]_i_11_n_0 ;
  wire \state[0]_i_12_n_0 ;
  wire \state[0]_i_13_n_0 ;
  wire \state[0]_i_14_n_0 ;
  wire \state[0]_i_15_n_0 ;
  wire \state[0]_i_16_n_0 ;
  wire \state[0]_i_17_n_0 ;
  wire \state[0]_i_18_n_0 ;
  wire \state[0]_i_19_n_0 ;
  wire \state[0]_i_1_n_0 ;
  wire \state[0]_i_20_n_0 ;
  wire \state[0]_i_21_n_0 ;
  wire \state[0]_i_23_n_0 ;
  wire \state[0]_i_24_n_0 ;
  wire \state[0]_i_25_n_0 ;
  wire \state[0]_i_26_n_0 ;
  wire \state[0]_i_2_0 ;
  wire \state[0]_i_2_n_0 ;
  wire \state[0]_i_30_n_0 ;
  wire \state[0]_i_31_n_0 ;
  wire \state[0]_i_32_n_0 ;
  wire \state[0]_i_34_n_0 ;
  wire \state[0]_i_35_n_0 ;
  wire \state[0]_i_36_n_0 ;
  wire \state[0]_i_37_n_0 ;
  wire \state[0]_i_38_n_0 ;
  wire \state[0]_i_39_n_0 ;
  wire \state[0]_i_3_n_0 ;
  wire \state[0]_i_40_n_0 ;
  wire \state[0]_i_41_n_0 ;
  wire \state[0]_i_4_n_0 ;
  wire \state[0]_i_5_n_0 ;
  wire \state[0]_i_6_n_0 ;
  wire \state[0]_i_7_n_0 ;
  wire \state[0]_i_8_n_0 ;
  wire \state[0]_i_9_n_0 ;
  wire \state[1]_i_10_n_0 ;
  wire \state[1]_i_11_n_0 ;
  wire \state[1]_i_13_n_0 ;
  wire \state[1]_i_14_n_0 ;
  wire \state[1]_i_15_n_0 ;
  wire \state[1]_i_16_n_0 ;
  wire \state[1]_i_17_n_0 ;
  wire \state[1]_i_18_n_0 ;
  wire \state[1]_i_19_n_0 ;
  wire \state[1]_i_1_n_0 ;
  wire \state[1]_i_2_n_0 ;
  wire \state[1]_i_3_n_0 ;
  wire \state[1]_i_4_n_0 ;
  wire \state[1]_i_5_0 ;
  wire \state[1]_i_5_n_0 ;
  wire \state[1]_i_6_n_0 ;
  wire \state[1]_i_7_n_0 ;
  wire \state[1]_i_8_n_0 ;
  wire \state[1]_i_9_n_0 ;
  wire \state[2]_i_10_n_0 ;
  wire \state[2]_i_11_n_0 ;
  wire \state[2]_i_12_n_0 ;
  wire \state[2]_i_13_n_0 ;
  wire \state[2]_i_14_n_0 ;
  wire \state[2]_i_15_n_0 ;
  wire \state[2]_i_16_n_0 ;
  wire \state[2]_i_17_n_0 ;
  wire \state[2]_i_18_n_0 ;
  wire \state[2]_i_19_n_0 ;
  wire \state[2]_i_1_n_0 ;
  wire \state[2]_i_20_n_0 ;
  wire \state[2]_i_2_n_0 ;
  wire \state[2]_i_3_n_0 ;
  wire \state[2]_i_4_n_0 ;
  wire \state[2]_i_5_n_0 ;
  wire \state[2]_i_6_n_0 ;
  wire \state[2]_i_7_n_0 ;
  wire \state[2]_i_8_n_0 ;
  wire \state[2]_i_9_n_0 ;
  wire \state[3]_i_1_n_0 ;
  wire \state[3]_i_2_n_0 ;
  wire \state[3]_i_3_n_0 ;
  wire \state[3]_i_4_n_0 ;
  wire \state[3]_i_5_n_0 ;
  wire \state[3]_i_6_n_0 ;
  wire \state[3]_i_7_n_0 ;
  wire \state[3]_i_8_n_0 ;
  wire \state[4]_i_10_n_0 ;
  wire \state[4]_i_1_n_0 ;
  wire \state[4]_i_2_n_0 ;
  wire \state[4]_i_3_n_0 ;
  wire \state[4]_i_5_n_0 ;
  wire \state[4]_i_7_n_0 ;
  wire \state[4]_i_8_n_0 ;
  wire \state[4]_i_9_n_0 ;
  wire \state_reg[0]_0 ;
  wire \state_reg[0]_1 ;
  wire \state_reg[0]_2 ;
  wire \state_reg[0]_3 ;
  wire \state_reg[0]_4 ;
  wire \state_reg[0]_5 ;
  wire \state_reg[0]_i_28_n_2 ;
  wire \state_reg[0]_i_28_n_3 ;
  wire \state_reg[0]_i_29_n_0 ;
  wire \state_reg[0]_i_29_n_1 ;
  wire \state_reg[0]_i_29_n_2 ;
  wire \state_reg[0]_i_29_n_3 ;
  wire \state_reg[0]_i_33_n_0 ;
  wire \state_reg[0]_i_33_n_1 ;
  wire \state_reg[0]_i_33_n_2 ;
  wire \state_reg[0]_i_33_n_3 ;
  wire \state_reg[1]_0 ;
  wire \state_reg[1]_1 ;
  wire \state_reg[2]_0 ;
  wire \state_reg[2]_1 ;
  wire \state_reg[2]_2 ;
  wire \state_reg[2]_3 ;
  wire \state_reg[2]_4 ;
  wire \state_reg[3]_0 ;
  wire \state_reg[4]_0 ;
  wire \state_reg[4]_1 ;
  wire \state_reg[4]_2 ;
  wire \state_reg[4]_3 ;
  wire \state_reg[4]_4 ;
  wire \state_reg_n_0_[0] ;
  wire \state_reg_n_0_[1] ;
  wire \state_reg_n_0_[2] ;
  wire \state_reg_n_0_[3] ;
  wire \syncstages_ff_reg[0] ;
  wire \tlom/SM_FLAG_I1 ;
  wire [3:0]\NLW_BTL_COUNTER_I_REG_reg[8]_i_14_CO_UNCONNECTED ;
  wire [3:1]\NLW_BTL_COUNTER_I_REG_reg[8]_i_14_O_UNCONNECTED ;
  wire [3:0]\NLW_BTL_COUNTER_I_REG_reg[8]_i_15_CO_UNCONNECTED ;
  wire [3:1]\NLW_BTL_COUNTER_I_REG_reg[8]_i_15_O_UNCONNECTED ;
  wire [3:0]\NLW_RXE_COUNTER_RST3_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:0]\NLW_RXE_COUNTER_RST3_inferred__0/i__carry__0_O_UNCONNECTED ;
  wire [3:3]\NLW_RXE_COUNTER_RST3_inferred__0/i__carry__1_CO_UNCONNECTED ;
  wire [3:0]\NLW_RXE_COUNTER_RST3_inferred__0/i__carry__1_O_UNCONNECTED ;
  wire [3:3]NLW_RXE_RXFIFO_WEN_FD1_reg_i_3_CO_UNCONNECTED;
  wire [3:0]NLW_RXE_RXFIFO_WEN_FD1_reg_i_3_O_UNCONNECTED;
  wire [3:1]NLW_i__carry_i_5__6_CO_UNCONNECTED;
  wire [3:0]NLW_i__carry_i_5__6_O_UNCONNECTED;
  wire [3:3]\NLW_state_reg[0]_i_28_CO_UNCONNECTED ;
  wire [3:0]\NLW_state_reg[0]_i_28_O_UNCONNECTED ;
  wire [3:0]\NLW_state_reg[0]_i_29_O_UNCONNECTED ;
  wire [3:0]\NLW_state_reg[0]_i_33_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \BIS_COUNTER_I[0]_i_1 
       (.I0(BIS_COUNTER_I_reg[0]),
        .O(\BIS_COUNTER_I[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \BIS_COUNTER_I[1]_i_1 
       (.I0(BIS_COUNTER_I_reg[1]),
        .I1(BIS_COUNTER_I_reg[0]),
        .O(p_0_in__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \BIS_COUNTER_I[2]_i_1 
       (.I0(BIS_COUNTER_I_reg[2]),
        .I1(BIS_COUNTER_I_reg[0]),
        .I2(BIS_COUNTER_I_reg[1]),
        .O(p_0_in__1[2]));
  LUT5 #(
    .INIT(32'hFFF1F1F1)) 
    \BIS_COUNTER_I[3]_i_1 
       (.I0(\state_reg[0]_5 ),
        .I1(BIS_D1),
        .I2(\BIS_COUNTER_I_reg[3]_0 ),
        .I3(\BIS_COUNTER_I[3]_i_6_n_0 ),
        .I4(E),
        .O(\BIS_COUNTER_I[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \BIS_COUNTER_I[3]_i_3 
       (.I0(BIS_COUNTER_I_reg[3]),
        .I1(BIS_COUNTER_I_reg[1]),
        .I2(BIS_COUNTER_I_reg[0]),
        .I3(BIS_COUNTER_I_reg[2]),
        .O(p_0_in__1[3]));
  LUT6 #(
    .INIT(64'hFF7F7FFEFFFF7FFE)) 
    \BIS_COUNTER_I[3]_i_4 
       (.I0(\state_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[1] ),
        .I2(\state_reg_n_0_[2] ),
        .I3(Q),
        .I4(\state_reg_n_0_[3] ),
        .I5(MSR_SBR_FS2),
        .O(\state_reg[0]_5 ));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT5 #(
    .INIT(32'h00004000)) 
    \BIS_COUNTER_I[3]_i_6 
       (.I0(BIS_COUNTER_I_reg[0]),
        .I1(BIS_COUNTER_I_reg[1]),
        .I2(RXE_ERRFLG_I_reg_0),
        .I3(BIS_COUNTER_I_reg[3]),
        .I4(BIS_COUNTER_I_reg[2]),
        .O(\BIS_COUNTER_I[3]_i_6_n_0 ));
  FDRE \BIS_COUNTER_I_reg[0] 
       (.C(can_clk),
        .CE(\BIS_COUNTER_I_reg[3]_1 ),
        .D(\BIS_COUNTER_I[0]_i_1_n_0 ),
        .Q(BIS_COUNTER_I_reg[0]),
        .R(\BIS_COUNTER_I[3]_i_1_n_0 ));
  FDRE \BIS_COUNTER_I_reg[1] 
       (.C(can_clk),
        .CE(\BIS_COUNTER_I_reg[3]_1 ),
        .D(p_0_in__1[1]),
        .Q(BIS_COUNTER_I_reg[1]),
        .R(\BIS_COUNTER_I[3]_i_1_n_0 ));
  FDRE \BIS_COUNTER_I_reg[2] 
       (.C(can_clk),
        .CE(\BIS_COUNTER_I_reg[3]_1 ),
        .D(p_0_in__1[2]),
        .Q(BIS_COUNTER_I_reg[2]),
        .R(\BIS_COUNTER_I[3]_i_1_n_0 ));
  FDRE \BIS_COUNTER_I_reg[3] 
       (.C(can_clk),
        .CE(\BIS_COUNTER_I_reg[3]_1 ),
        .D(p_0_in__1[3]),
        .Q(BIS_COUNTER_I_reg[3]),
        .R(\BIS_COUNTER_I[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h3800000000000003)) 
    BIS_D1_i_1
       (.I0(MSR_SBR_FS2),
        .I1(\state_reg_n_0_[3] ),
        .I2(Q),
        .I3(\state_reg_n_0_[2] ),
        .I4(\state_reg_n_0_[1] ),
        .I5(\state_reg_n_0_[0] ),
        .O(BIS));
  FDRE BIS_D1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(BIS),
        .Q(BIS_D1),
        .R(SYNC_RST_TL));
  FDRE BIS_HSYNC_FLG_I_D1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(BIS_HSYNC_FLG_I_D1_reg_0),
        .Q(BIS_HSYNC_FLG_I_D1),
        .R(SYNC_RST_TL));
  LUT6 #(
    .INIT(64'hBABABABABAAABABA)) 
    BRSD_P_ERR_1TQ_FD_i_1
       (.I0(BRSD_P_ERR_1TQ_FD_reg_14),
        .I1(BRSD_P_ERR_1TQ_FD_reg_13),
        .I2(E),
        .I3(BTL_RXBIT_I_reg_0),
        .I4(BRSD_P_ERR_1TQ_FD_i_5_n_0),
        .I5(BRSD_P_ERR_1TQ_FD_i_6_n_0),
        .O(BRSD_P_ERR_1TQ));
  LUT6 #(
    .INIT(64'h00000000000055F7)) 
    BRSD_P_ERR_1TQ_FD_i_10
       (.I0(BRSD_P_ERR_1TQ_FD_i_17_n_0),
        .I1(\state_reg[4]_1 ),
        .I2(\state[4]_i_7_n_0 ),
        .I3(BRSD_P_ERR_1TQ_FD_i_18_n_0),
        .I4(BRSD_P_ERR_1TQ_FD_i_19_n_0),
        .I5(BRSD_P_ERR_1TQ_FD_i_14_n_0),
        .O(BRSD_P_ERR_1TQ_FD_i_10_n_0));
  LUT6 #(
    .INIT(64'hAABAAAAAAAAAAAAA)) 
    BRSD_P_ERR_1TQ_FD_i_11
       (.I0(\RXE_COUNTER_I_reg[6]_0 ),
        .I1(Q),
        .I2(\state_reg_n_0_[3] ),
        .I3(RXE_OL_SLEEP_i_2_n_0),
        .I4(BSP_IC_BIT_ERROR_I_i_5_n_0),
        .I5(RXE_ERRFLG_I_reg_0),
        .O(BRSD_P_ERR_1TQ_FD_i_11_n_0));
  LUT6 #(
    .INIT(64'h4000FFFF40004000)) 
    BRSD_P_ERR_1TQ_FD_i_12
       (.I0(BRSD_P_ERR_1TQ_FD_i_20_n_0),
        .I1(TXE_TXING_reg_0),
        .I2(RXE_ERRFLG_I_reg_0),
        .I3(\RXE_COUNTER_I_reg[4]_0 ),
        .I4(BRSD_P_ERR_1TQ_FD_i_21_n_0),
        .I5(TXE_PASSTX_I_i_4_n_0),
        .O(BRSD_P_ERR_1TQ_FD_i_12_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFD)) 
    BRSD_P_ERR_1TQ_FD_i_13
       (.I0(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I2(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I3(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I5(TDC_TRIG_COND_D1_i_4_n_0),
        .O(BRSD_P_ERR_1TQ_FD_i_13_n_0));
  LUT6 #(
    .INIT(64'h0000000010001010)) 
    BRSD_P_ERR_1TQ_FD_i_14
       (.I0(BRSD_P_ERR_1TQ_FD_i_22_n_0),
        .I1(TDC_TRIG_COND_D1_i_4_n_0),
        .I2(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I4(BRSD_P_ERR_1TQ_FD_i_23_n_0),
        .I5(BRSD_P_ERR_1TQ_FD_i_24_n_0),
        .O(BRSD_P_ERR_1TQ_FD_i_14_n_0));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT5 #(
    .INIT(32'hFFFFBBBA)) 
    BRSD_P_ERR_1TQ_FD_i_15
       (.I0(\state_reg[4]_4 ),
        .I1(BSP_CRCERR_I_CANFD_FLG_reg_0),
        .I2(\RXE_SREG_I_reg[24]_0 [1]),
        .I3(\RXE_SREG_I_reg[24]_0 [2]),
        .I4(TXE_TXING_reg_0),
        .O(BRSD_P_ERR_1TQ_FD_i_15_n_0));
  LUT6 #(
    .INIT(64'hFFEFFFFFFFDFFFFF)) 
    BRSD_P_ERR_1TQ_FD_i_16
       (.I0(\state_reg_n_0_[3] ),
        .I1(Q),
        .I2(\state_reg_n_0_[2] ),
        .I3(RXE_ERRFLG_I_reg_0),
        .I4(\state_reg_n_0_[1] ),
        .I5(\state_reg_n_0_[0] ),
        .O(BRSD_P_ERR_1TQ_FD_i_16_n_0));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT3 #(
    .INIT(8'h60)) 
    BRSD_P_ERR_1TQ_FD_i_17
       (.I0(RXE_ERRFLG_I_reg_0),
        .I1(BSP_TXBIT_D1_reg_0),
        .I2(TXE_TXING_reg_0),
        .O(BRSD_P_ERR_1TQ_FD_i_17_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000FF01)) 
    BRSD_P_ERR_1TQ_FD_i_18
       (.I0(\RXE_COUNTER_I_reg[1]_0 ),
        .I1(BRSD_P_ERR_1TQ_FD_i_22_n_0),
        .I2(TDC_TRIG_COND_D1_i_4_n_0),
        .I3(\EMU_REC_I[7]_i_7_n_0 ),
        .I4(TXE_MSGVAL_FD1_i_2_n_0),
        .I5(\RXE_MSGPAD_SEL_FS1[1]_i_3_n_0 ),
        .O(BRSD_P_ERR_1TQ_FD_i_18_n_0));
  LUT6 #(
    .INIT(64'h0000400040000000)) 
    BRSD_P_ERR_1TQ_FD_i_19
       (.I0(BSP_TXBIT_D1_reg_0),
        .I1(RXE_ERRFLG_I_reg_0),
        .I2(TXE_TXING_reg_0),
        .I3(\state[0]_i_6_n_0 ),
        .I4(\state_reg_n_0_[1] ),
        .I5(\state_reg_n_0_[0] ),
        .O(BRSD_P_ERR_1TQ_FD_i_19_n_0));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT5 #(
    .INIT(32'hFFFFFDFF)) 
    BRSD_P_ERR_1TQ_FD_i_20
       (.I0(\state_reg_n_0_[1] ),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[3] ),
        .I3(\state_reg_n_0_[2] ),
        .I4(Q),
        .O(BRSD_P_ERR_1TQ_FD_i_20_n_0));
  LUT6 #(
    .INIT(64'hEFFFFFFFFFFFFFFF)) 
    BRSD_P_ERR_1TQ_FD_i_21
       (.I0(\EMU_REC_I[7]_i_7_n_0 ),
        .I1(\EMU_REC_I[7]_i_8_n_0 ),
        .I2(Q),
        .I3(RXE_ERRFLG_I_reg_0),
        .I4(TXE_TXING_reg_0),
        .I5(\RXE_SREG_I_reg[24]_0 [1]),
        .O(BRSD_P_ERR_1TQ_FD_i_21_n_0));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    BRSD_P_ERR_1TQ_FD_i_22
       (.I0(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I1(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [2]),
        .O(BRSD_P_ERR_1TQ_FD_i_22_n_0));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT3 #(
    .INIT(8'hFD)) 
    BRSD_P_ERR_1TQ_FD_i_23
       (.I0(TXE_TXING_reg_0),
        .I1(\RXE_SREG_I_reg[24]_0 [1]),
        .I2(\RXE_SREG_I_reg[24]_0 [2]),
        .O(BRSD_P_ERR_1TQ_FD_i_23_n_0));
  LUT6 #(
    .INIT(64'hFFFFEFFFFFFFFFFF)) 
    BRSD_P_ERR_1TQ_FD_i_24
       (.I0(RXE_ERRFLG_I_reg_0),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .I3(\state_reg_n_0_[2] ),
        .I4(\state_reg_n_0_[3] ),
        .I5(Q),
        .O(BRSD_P_ERR_1TQ_FD_i_24_n_0));
  LUT6 #(
    .INIT(64'hFFABFFABFFAFFFAB)) 
    BRSD_P_ERR_1TQ_FD_i_4
       (.I0(BRSD_P_ERR_1TQ_FD_i_7_n_0),
        .I1(BRSD_P_ERR_1TQ_FD_i_8_n_0),
        .I2(RXE_ERRFLG_I_reg_0),
        .I3(BRSD_P_ERR_1TQ_FD_i_9_n_0),
        .I4(\RXE_MSGPAD_SEL_FS1_reg[0]_0 ),
        .I5(SM_FLAG_I_i_4_n_0),
        .O(BTL_RXBIT_I_reg_0));
  LUT6 #(
    .INIT(64'h000000000000008A)) 
    BRSD_P_ERR_1TQ_FD_i_5
       (.I0(BTL_RXBIT_I_reg_1),
        .I1(\RXE_COUNTER_I_reg[4]_2 ),
        .I2(BSP_CRCERR_I_CAN_FLG_reg_0),
        .I3(\RXE_COUNTER_I_reg[4]_3 ),
        .I4(\RXE_COUNTER_I_reg[4]_4 ),
        .I5(BRSD_P_ERR_1TQ_FD_reg_15),
        .O(BRSD_P_ERR_1TQ_FD_i_5_n_0));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT4 #(
    .INIT(16'hFFFD)) 
    BRSD_P_ERR_1TQ_FD_i_6
       (.I0(BRSD_P_ERR_1TQ_FD_i_10_n_0),
        .I1(BRSD_P_ERR_1TQ_FD_i_11_n_0),
        .I2(BRS_L_SP_FE_reg_2),
        .I3(BRSD_P_ERR_1TQ_FD_i_12_n_0),
        .O(BRSD_P_ERR_1TQ_FD_i_6_n_0));
  LUT6 #(
    .INIT(64'h0000080000000000)) 
    BRSD_P_ERR_1TQ_FD_i_7
       (.I0(MSR_DPEE_FS2),
        .I1(\RXE_COUNTER_I_reg[4]_0 ),
        .I2(\state_reg[2]_0 ),
        .I3(RXE_ERRFLG_I_reg_0),
        .I4(TXE_TXING_reg_0),
        .I5(\RXE_MSGPAD_SEL_FS1_reg[0]_0 ),
        .O(BRSD_P_ERR_1TQ_FD_i_7_n_0));
  LUT6 #(
    .INIT(64'hFFEFCFEFFFEFFFEF)) 
    BRSD_P_ERR_1TQ_FD_i_8
       (.I0(BRSD_P_ERR_1TQ_FD_i_13_n_0),
        .I1(TXE_MSGVAL_FD1_i_2_n_0),
        .I2(\state_reg_n_0_[1] ),
        .I3(\state_reg_n_0_[0] ),
        .I4(TXE_MSGVAL_FD1_i_3_n_0),
        .I5(TXE_TXING_reg_0),
        .O(BRSD_P_ERR_1TQ_FD_i_8_n_0));
  LUT6 #(
    .INIT(64'hAAABAAABFFFFAAAB)) 
    BRSD_P_ERR_1TQ_FD_i_9
       (.I0(BRSD_P_ERR_1TQ_FD_i_14_n_0),
        .I1(\state[3]_i_4_n_0 ),
        .I2(RXE_ERRFLG_I_reg_0),
        .I3(BRSD_P_ERR_1TQ_FD_i_15_n_0),
        .I4(BSP_IC_BIT_ERROR_I_i_5_n_0),
        .I5(BRSD_P_ERR_1TQ_FD_i_16_n_0),
        .O(BRSD_P_ERR_1TQ_FD_i_9_n_0));
  LUT6 #(
    .INIT(64'h0000AAAA8AAAAAAA)) 
    BRS_EN_I_FLAG_i_1
       (.I0(BRS_EN_I_FLAG_i_2_n_0),
        .I1(\state_reg[4]_0 ),
        .I2(E),
        .I3(BRS_EN_BTR),
        .I4(\BTL_COUNTER_I_REG_reg[1] ),
        .I5(FBR_ERR_1TQ),
        .O(BRS_EN_I_FLAG_i_1_n_0));
  LUT6 #(
    .INIT(64'h000000000B0B0B00)) 
    BRS_EN_I_FLAG_i_2
       (.I0(BRS_EN_I_FLAG_i_3_n_0),
        .I1(TXE_PASSTX_I_i_4_n_0),
        .I2(BRS_EN_I_FLAG_i_4_n_0),
        .I3(BRS_EN_I_FLAG_reg_0),
        .I4(BRS_EN_BTR),
        .I5(\state_reg[0]_3 ),
        .O(BRS_EN_I_FLAG_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT4 #(
    .INIT(16'hFBFF)) 
    BRS_EN_I_FLAG_i_3
       (.I0(\state_reg_n_0_[2] ),
        .I1(\state_reg_n_0_[3] ),
        .I2(Q),
        .I3(\state_reg_n_0_[0] ),
        .O(BRS_EN_I_FLAG_i_3_n_0));
  LUT6 #(
    .INIT(64'h5575555555555555)) 
    BRS_EN_I_FLAG_i_4
       (.I0(dest_arst),
        .I1(Q),
        .I2(\state_reg_n_0_[2] ),
        .I3(\state_reg_n_0_[3] ),
        .I4(\state_reg_n_0_[1] ),
        .I5(\state_reg_n_0_[0] ),
        .O(BRS_EN_I_FLAG_i_4_n_0));
  FDRE BRS_EN_I_FLAG_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(BRS_EN_I_FLAG_i_1_n_0),
        .Q(BRS_EN_I_FLAG_reg_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000AAAA8AAAAAAA)) 
    BRS_L_SP_FE_i_1
       (.I0(BRS_L_SP_FE_i_2_n_0),
        .I1(\state_reg[4]_0 ),
        .I2(E),
        .I3(BRS_EN_BTR),
        .I4(\BTL_COUNTER_I_REG_reg[1] ),
        .I5(FBR_ERR_1TQ),
        .O(BRS_L_SP_FE_i_1_n_0));
  LUT6 #(
    .INIT(64'hBBBB008000000000)) 
    BRS_L_SP_FE_i_2
       (.I0(\COUNTER_I[1]_i_4_n_0 ),
        .I1(\RXE_SREG_I_reg[31]_0 ),
        .I2(D),
        .I3(\state_reg[3]_0 ),
        .I4(BRS_EN_BTR),
        .I5(dest_arst),
        .O(BRS_L_SP_FE_i_2_n_0));
  FDRE BRS_L_SP_FE_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(BRS_L_SP_FE_i_1_n_0),
        .Q(BRS_EN_BTR),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT3 #(
    .INIT(8'h87)) 
    BSP_CRCERR_I_CANFD_FLG_i_10
       (.I0(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [3]),
        .O(BSP_CRCERR_I_CANFD_FLG_i_10_n_0));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT4 #(
    .INIT(16'h556A)) 
    BSP_CRCERR_I_CANFD_FLG_i_12
       (.I0(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I1(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [3]),
        .O(BSP_CRCERR_I_CANFD_FLG_i_12_n_0));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT5 #(
    .INIT(32'h00099909)) 
    BSP_CRCERR_I_CANFD_FLG_i_13
       (.I0(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I2(BSP_CRCERR_I_CANFD_FLG_i_4_0[5]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I4(BSP_CRCERR_I_CANFD_FLG_i_4_0[4]),
        .O(BSP_CRCERR_I_CANFD_FLG_i_13_n_0));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT5 #(
    .INIT(32'hFFFF3808)) 
    BSP_CRCERR_I_CANFD_FLG_i_14
       (.I0(BSP_CRCERR_I_CANFD_FLG_i_4_0[0]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I3(BSP_CRCERR_I_CANFD_FLG_i_4_0[3]),
        .I4(BSP_CRCERR_I_CANFD_FLG_i_21_n_0),
        .O(BSP_CRCERR_I_CANFD_FLG_i_14_n_0));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT2 #(
    .INIT(4'hB)) 
    BSP_CRCERR_I_CANFD_FLG_i_15
       (.I0(TXE_TXING_reg_0),
        .I1(\RXE_MSGPAD_SEL_FS1_reg[0]_0 ),
        .O(BSP_CRCERR_I_CANFD_FLG_i_15_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    BSP_CRCERR_I_CANFD_FLG_i_16
       (.I0(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [2]),
        .O(\RXE_COUNTER_I_reg[1]_1 ));
  LUT6 #(
    .INIT(64'h00000000AAAAEBAA)) 
    BSP_CRCERR_I_CANFD_FLG_i_2
       (.I0(BSP_CRCERR_I_CANFD_FLG_i_3_n_0),
        .I1(\RXE_SREG_I_reg[24]_0 [0]),
        .I2(BSP_CRCERR_I_CANFD_FLG_i_4_n_0),
        .I3(BSP_CRCERR_I_CANFD_FLG_i_5_n_0),
        .I4(BSP_CRCERR_I_CAN_FLG_i_6_n_0),
        .I5(BSP_CRCERR_I_CANFD_FLG_i_6_n_0),
        .O(BSP_CRCERR_I_CANFD_FLG0));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT5 #(
    .INIT(32'hFFC022FF)) 
    BSP_CRCERR_I_CANFD_FLG_i_21
       (.I0(BSP_CRCERR_I_CANFD_FLG_i_4_0[1]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I2(BSP_CRCERR_I_CANFD_FLG_i_4_0[2]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [1]),
        .O(BSP_CRCERR_I_CANFD_FLG_i_21_n_0));
  LUT6 #(
    .INIT(64'hF22211112222F111)) 
    BSP_CRCERR_I_CANFD_FLG_i_3
       (.I0(TXE_TX_REN_I_CFD_D1_i_9_0),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg[4]_0 ),
        .I3(BSP_CRCERR_I_CANFD_FLG_i_8_n_0),
        .I4(\RXE_SREG_I_reg[24]_0 [0]),
        .I5(TXE_TX_REN_I_CFD_D1_i_4_0),
        .O(BSP_CRCERR_I_CANFD_FLG_i_3_n_0));
  LUT6 #(
    .INIT(64'hB8FFB800B8FFB8FF)) 
    BSP_CRCERR_I_CANFD_FLG_i_4
       (.I0(BSP_CRCERR_I_CANFD_FLG_i_2_0),
        .I1(BSP_CRCERR_I_CANFD_FLG_i_10_n_0),
        .I2(BSP_CRCERR_I_CANFD_FLG_i_2_1),
        .I3(BSP_CRCERR_I_CANFD_FLG_i_12_n_0),
        .I4(BSP_CRCERR_I_CANFD_FLG_i_13_n_0),
        .I5(BSP_CRCERR_I_CANFD_FLG_i_14_n_0),
        .O(BSP_CRCERR_I_CANFD_FLG_i_4_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFDFFFFF)) 
    BSP_CRCERR_I_CANFD_FLG_i_5
       (.I0(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I4(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I5(TDC_TRIG_COND_D1_i_4_n_0),
        .O(BSP_CRCERR_I_CANFD_FLG_i_5_n_0));
  LUT6 #(
    .INIT(64'hFFEFEFFFFFFFFFFF)) 
    BSP_CRCERR_I_CANFD_FLG_i_6
       (.I0(BSP_CRCERR_I_CANFD_FLG_i_15_n_0),
        .I1(\state_reg_n_0_[3] ),
        .I2(Q),
        .I3(\state_reg_n_0_[2] ),
        .I4(\state_reg_n_0_[1] ),
        .I5(E),
        .O(BSP_CRCERR_I_CANFD_FLG_i_6_n_0));
  LUT6 #(
    .INIT(64'h5555555555545555)) 
    BSP_CRCERR_I_CANFD_FLG_i_8
       (.I0(\RXE_SREG_I[0]_i_3_n_0 ),
        .I1(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I3(TDC_TRIG_COND_D1_i_4_n_0),
        .I4(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I5(\RXE_COUNTER_I_reg[1]_0 ),
        .O(BSP_CRCERR_I_CANFD_FLG_i_8_n_0));
  FDRE BSP_CRCERR_I_CANFD_FLG_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(BSP_CRCERR_I_CANFD_FLG_reg_1),
        .Q(BSP_CRCERR_I_CANFD_FLG_reg_0),
        .R(SYNC_RST_TL));
  LUT6 #(
    .INIT(64'h2000002220000000)) 
    BSP_CRCERR_I_CAN_FLG_i_11
       (.I0(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I2(BSP_CRCERR_I_CAN_FLG_i_7_0[1]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I5(BSP_CRCERR_I_CAN_FLG_i_7_0[4]),
        .O(BSP_CRCERR_I_CAN_FLG_i_11_n_0));
  LUT6 #(
    .INIT(64'h0C80000000800000)) 
    BSP_CRCERR_I_CAN_FLG_i_12
       (.I0(BSP_CRCERR_I_CAN_FLG_i_7_0[0]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I5(BSP_CRCERR_I_CAN_FLG_i_7_0[3]),
        .O(BSP_CRCERR_I_CAN_FLG_i_12_n_0));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT5 #(
    .INIT(32'h08000A00)) 
    BSP_CRCERR_I_CAN_FLG_i_2
       (.I0(\state_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[1] ),
        .I2(Q),
        .I3(\state_reg_n_0_[3] ),
        .I4(\state_reg_n_0_[2] ),
        .O(\state_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0000000000020200)) 
    BSP_CRCERR_I_CAN_FLG_i_3
       (.I0(\RXE_MSGPAD_SEL_FS1_reg[0]_0 ),
        .I1(TXE_TXING_reg_0),
        .I2(BSP_CRCERR_I_CAN_FLG_i_4_n_0),
        .I3(\RXE_SREG_I_reg[24]_0 [0]),
        .I4(BSP_CRCERR_I_CAN_FLG_i_5_n_0),
        .I5(BSP_CRCERR_I_CAN_FLG_i_6_n_0),
        .O(BSP_CRCERR_I_CAN_FLG0));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT5 #(
    .INIT(32'hFDFFFFFF)) 
    BSP_CRCERR_I_CAN_FLG_i_4
       (.I0(E),
        .I1(Q),
        .I2(\state_reg_n_0_[3] ),
        .I3(\state_reg_n_0_[2] ),
        .I4(SM_FLAG_I_i_7_n_0),
        .O(BSP_CRCERR_I_CAN_FLG_i_4_n_0));
  LUT6 #(
    .INIT(64'hAAAFBBAAAAAFBBFF)) 
    BSP_CRCERR_I_CAN_FLG_i_5
       (.I0(BSP_CRCERR_I_CAN_FLG_i_7_n_0),
        .I1(BSP_CRCERR_I_CAN_FLG_i_3_0),
        .I2(BSP_CRCERR_I_CAN_FLG_i_3_1),
        .I3(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I5(BSP_CRCERR_I_CAN_FLG_i_3_2),
        .O(BSP_CRCERR_I_CAN_FLG_i_5_n_0));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    BSP_CRCERR_I_CAN_FLG_i_6
       (.I0(\state_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[1] ),
        .I2(\state_reg[4]_0 ),
        .O(BSP_CRCERR_I_CAN_FLG_i_6_n_0));
  LUT6 #(
    .INIT(64'hEEEEEEEEFEEEEEEE)) 
    BSP_CRCERR_I_CAN_FLG_i_7
       (.I0(BSP_CRCERR_I_CAN_FLG_i_11_n_0),
        .I1(BSP_CRCERR_I_CAN_FLG_i_12_n_0),
        .I2(BSP_CRCERR_I_CAN_FLG_i_7_0[2]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I5(\RXE_MSGPAD_SEL_FS1[1]_i_5_n_0 ),
        .O(BSP_CRCERR_I_CAN_FLG_i_7_n_0));
  FDRE BSP_CRCERR_I_CAN_FLG_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(BSP_CRCERR_I_CAN_FLG_reg_1),
        .Q(BSP_CRCERR_I_CAN_FLG_reg_0),
        .R(SYNC_RST_TL));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT2 #(
    .INIT(4'h8)) 
    BSP_IC_ACK_ERROR_I_i_2
       (.I0(BRSD_P_ERR_1TQ_FD_i_12_n_0),
        .I1(E),
        .O(BTL_SAMP_EN_D1_reg));
  FDRE BSP_IC_ACK_ERROR_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(BSP_IC_ACK_ERROR_I_reg_0),
        .Q(IC_SYNC_ESR_ACKER),
        .R(SYNC_RST_TL));
  LUT6 #(
    .INIT(64'hAA8AAAAAAAAAAAAA)) 
    BSP_IC_BIT_ERROR_I_i_2
       (.I0(BRSD_P_ERR_1TQ_FD_i_10_n_0),
        .I1(Q),
        .I2(\state_reg_n_0_[3] ),
        .I3(RXE_OL_SLEEP_i_2_n_0),
        .I4(BSP_IC_BIT_ERROR_I_i_5_n_0),
        .I5(RXE_ERRFLG_I_reg_0),
        .O(\state_reg[4]_2 ));
  LUT6 #(
    .INIT(64'h0028282800000000)) 
    BSP_IC_BIT_ERROR_I_i_3
       (.I0(TXE_TXING_reg_0),
        .I1(BSP_TXBIT_D1_reg_0),
        .I2(RXE_ERRFLG_I_reg_0),
        .I3(\state_reg_n_0_[1] ),
        .I4(\state_reg_n_0_[2] ),
        .I5(\state[2]_i_6_n_0 ),
        .O(TXE_TXING_reg_4));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    BSP_IC_BIT_ERROR_I_i_4
       (.I0(\RXE_MSGPAD_SEL_FS1[1]_i_5_n_0 ),
        .I1(TDC_TRIG_COND_D1_i_4_n_0),
        .I2(BSP_IC_BIT_ERROR_I_i_6_n_0),
        .I3(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I4(RXE_ERRFLG_I_reg_0),
        .I5(BSP_IC_BIT_ERROR_I_i_7_n_0),
        .O(\RXE_COUNTER_I_reg[4]_4 ));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT5 #(
    .INIT(32'h00000111)) 
    BSP_IC_BIT_ERROR_I_i_5
       (.I0(TDC_TRIG_COND_D1_i_4_n_0),
        .I1(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I2(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [3]),
        .O(BSP_IC_BIT_ERROR_I_i_5_n_0));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT2 #(
    .INIT(4'hE)) 
    BSP_IC_BIT_ERROR_I_i_6
       (.I0(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [3]),
        .O(BSP_IC_BIT_ERROR_I_i_6_n_0));
  LUT6 #(
    .INIT(64'hFFFFFEFFFFFFFFFF)) 
    BSP_IC_BIT_ERROR_I_i_7
       (.I0(TXE_TXING_reg_0),
        .I1(BSP_TXBIT_D1_reg_0),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg_n_0_[1] ),
        .I4(\state_reg_n_0_[3] ),
        .I5(\state_reg_n_0_[2] ),
        .O(BSP_IC_BIT_ERROR_I_i_7_n_0));
  FDRE BSP_IC_BIT_ERROR_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(BSP_IC_BIT_ERROR_I_reg_0),
        .Q(IC_SYNC_ESR_BERR),
        .R(SYNC_RST_TL));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    BSP_IC_CRC_ERROR_I_i_2
       (.I0(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I1(BSP_IC_BIT_ERROR_I_i_6_n_0),
        .I2(TDC_TRIG_COND_D1_i_4_n_0),
        .I3(BSP_IC_CRC_ERROR_I_i_4_n_0),
        .I4(BSP_CRCERR_I_CANFD_FLG_reg_0),
        .I5(\state_reg[4]_4 ),
        .O(\RXE_COUNTER_I_reg[4]_3 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    BSP_IC_CRC_ERROR_I_i_3
       (.I0(TDC_TRIG_COND_D1_i_4_n_0),
        .I1(BSP_IC_BIT_ERROR_I_i_6_n_0),
        .I2(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I3(\RXE_COUNTER_I_reg[1]_0 ),
        .I4(TXE_MSGVAL_FD1_i_2_n_0),
        .I5(\EMU_REC_I[7]_i_7_n_0 ),
        .O(\RXE_COUNTER_I_reg[4]_2 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'hB)) 
    BSP_IC_CRC_ERROR_I_i_4
       (.I0(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [1]),
        .O(BSP_IC_CRC_ERROR_I_i_4_n_0));
  FDRE BSP_IC_CRC_ERROR_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(BSP_IC_CRC_ERROR_I_reg_0),
        .Q(IC_SYNC_ESR_CRCER),
        .R(SYNC_RST_TL));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    BSP_IC_FRM_ERROR_I_i_10
       (.I0(\state_reg_n_0_[2] ),
        .I1(\state_reg_n_0_[3] ),
        .I2(Q),
        .O(BSP_IC_FRM_ERROR_I_i_10_n_0));
  LUT6 #(
    .INIT(64'hEEEEEEEEE0E0E000)) 
    BSP_IC_FRM_ERROR_I_i_2
       (.I0(BSP_IC_F_FRM_ERROR_I_reg_1),
        .I1(BSP_IC_F_FRM_ERROR_I_reg_2),
        .I2(BSP_IC_FRM_ERROR_I_i_5_n_0),
        .I3(BSP_IC_FRM_ERROR_I_i_6_n_0),
        .I4(BSP_IC_FRM_ERROR_I_i_7_n_0),
        .I5(RXE_ERRFLG_I_reg_0),
        .O(BTL_RXBIT_I_reg_1));
  LUT6 #(
    .INIT(64'h0000000000040001)) 
    BSP_IC_FRM_ERROR_I_i_3
       (.I0(\RXE_COUNTER_I_reg_n_0_[6] ),
        .I1(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I2(BSP_IC_FRM_ERROR_I_i_8_n_0),
        .I3(TXE_MSGVAL_FD1_i_5_n_0),
        .I4(RXE_ERRFLG_I),
        .I5(BSP_IC_FRM_ERROR_I_i_9_n_0),
        .O(\RXE_COUNTER_I_reg[6]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
    BSP_IC_FRM_ERROR_I_i_5
       (.I0(BSP_IC_FRM_ERROR_I_i_10_n_0),
        .I1(RXE_OL_SLEEP_i_2_n_0),
        .I2(TDC_TRIG_COND_D1_i_4_n_0),
        .I3(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I4(\RXE_COUNTER_I_reg[1]_0 ),
        .I5(\RXE_MSGPAD_SEL_FS1[1]_i_7_n_0 ),
        .O(BSP_IC_FRM_ERROR_I_i_5_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFFFF)) 
    BSP_IC_FRM_ERROR_I_i_6
       (.I0(\RXE_SREG_I[0]_i_3_n_0 ),
        .I1(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I3(TDC_TRIG_COND_D1_i_4_n_0),
        .I4(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I5(\RXE_COUNTER_I_reg[1]_0 ),
        .O(BSP_IC_FRM_ERROR_I_i_6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    BSP_IC_FRM_ERROR_I_i_7
       (.I0(\state_reg_n_0_[3] ),
        .I1(Q),
        .I2(\state_reg_n_0_[2] ),
        .O(BSP_IC_FRM_ERROR_I_i_7_n_0));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT4 #(
    .INIT(16'hFFEF)) 
    BSP_IC_FRM_ERROR_I_i_8
       (.I0(\RXE_COUNTER_I_reg_n_0_[8] ),
        .I1(\RXE_COUNTER_I_reg_n_0_[7] ),
        .I2(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I3(\RXE_COUNTER_I_reg_n_0_[5] ),
        .O(BSP_IC_FRM_ERROR_I_i_8_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFBFFFF)) 
    BSP_IC_FRM_ERROR_I_i_9
       (.I0(Q),
        .I1(\state_reg_n_0_[3] ),
        .I2(\state_reg_n_0_[2] ),
        .I3(\state_reg_n_0_[0] ),
        .I4(\state_reg_n_0_[1] ),
        .I5(RXE_ERRFLG_I_reg_0),
        .O(BSP_IC_FRM_ERROR_I_i_9_n_0));
  FDRE BSP_IC_FRM_ERROR_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(BSP_IC_FRM_ERROR_I_reg_0),
        .Q(IC_SYNC_ESR_FMER),
        .R(SYNC_RST_TL));
  LUT6 #(
    .INIT(64'h888F8F8800000000)) 
    BSP_IC_F_BIT_ERROR_I_i_2
       (.I0(BRS_EN_BTR),
        .I1(BSP_IC_F_BIT_ERROR_I_reg_1),
        .I2(BSP_IC_F_BIT_ERROR_I_i_3_n_0),
        .I3(RXE_ERRFLG_I_reg_0),
        .I4(BSP_TXBIT_D1_reg_0),
        .I5(TXE_TXING_reg_0),
        .O(BRS_L_SP_FE_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT4 #(
    .INIT(16'hFBBB)) 
    BSP_IC_F_BIT_ERROR_I_i_3
       (.I0(\state_reg_n_0_[3] ),
        .I1(Q),
        .I2(\state_reg_n_0_[2] ),
        .I3(\state_reg_n_0_[1] ),
        .O(BSP_IC_F_BIT_ERROR_I_i_3_n_0));
  FDRE BSP_IC_F_BIT_ERROR_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(BSP_IC_F_BIT_ERROR_I_reg_0),
        .Q(IC_SYNC_ESR_F_BERR),
        .R(SYNC_RST_TL));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    BSP_IC_F_CRC_ERROR_I_i_2
       (.I0(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I2(TDC_TRIG_COND_D1_i_4_n_0),
        .I3(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I5(\RXE_COUNTER_I_reg_n_0_[4] ),
        .O(\RXE_COUNTER_I_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT5 #(
    .INIT(32'hFFFFDFFF)) 
    BSP_IC_F_CRC_ERROR_I_i_3
       (.I0(Q),
        .I1(\state_reg_n_0_[3] ),
        .I2(\state_reg_n_0_[2] ),
        .I3(\state_reg_n_0_[1] ),
        .I4(\state_reg_n_0_[0] ),
        .O(\state_reg[4]_4 ));
  FDRE BSP_IC_F_CRC_ERROR_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(BSP_IC_F_CRC_ERROR_I_reg_0),
        .Q(IC_SYNC_ESR_F_CRCER),
        .R(SYNC_RST_TL));
  FDRE BSP_IC_F_FRM_ERROR_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(BSP_IC_F_FRM_ERROR_I_reg_0),
        .Q(IC_SYNC_ESR_F_FMER),
        .R(SYNC_RST_TL));
  FDRE BSP_IC_F_STUFF_ERROR_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(BSP_IC_F_STUFF_ERROR_I_reg_0),
        .Q(IC_SYNC_ESR_F_STER),
        .R(SYNC_RST_TL));
  FDRE BSP_IC_STUFF_ERROR_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(BSP_IC_STUFF_ERROR_I_reg_0),
        .Q(IC_SYNC_ESR_STER),
        .R(SYNC_RST_TL));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT4 #(
    .INIT(16'h00F7)) 
    BSP_IDVALID_FD1_i_1
       (.I0(BSP_IDVALID_FD1_i_2_n_0),
        .I1(TXE_TXING_reg_0),
        .I2(RXE_OL_LBACK_reg_0),
        .I3(BSP_IDVALID_FD1_i_3_n_0),
        .O(p_62_in));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT5 #(
    .INIT(32'hD7FFFFFF)) 
    BSP_IDVALID_FD1_i_2
       (.I0(\state[4]_i_7_n_0 ),
        .I1(RXE_ERRFLG_I_reg_0),
        .I2(BSP_TXBIT_D1_reg_0),
        .I3(TXE_TXING_reg_0),
        .I4(\state_reg[4]_0 ),
        .O(BSP_IDVALID_FD1_i_2_n_0));
  LUT6 #(
    .INIT(64'hB0BBFFFFFFFFFFFF)) 
    BSP_IDVALID_FD1_i_3
       (.I0(RXE_ERRFLG_I_reg_0),
        .I1(\RXE_COUNTER_I_reg[4]_1 ),
        .I2(TDC_TRIG_COND_D1_i_4_n_0),
        .I3(\RXE_COUNTER_I[8]_i_11_n_0 ),
        .I4(\state_reg[4]_1 ),
        .I5(\RXE_MSGPAD_SEL_FS1_reg[0]_0 ),
        .O(BSP_IDVALID_FD1_i_3_n_0));
  FDRE BSP_IDVALID_FD1_reg
       (.C(can_clk),
        .CE(E),
        .D(p_62_in),
        .Q(BSP_IDVALID_FD1),
        .R(SYNC_RST_TL));
  FDRE BSP_IDVALID_FD2_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(BSP_IDVALID_FD1),
        .Q(BSP_IDVALID_FD2),
        .R(SYNC_RST_TL));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    BSP_IN_EOF_i_1
       (.I0(TXE_MSGVAL_FD1_i_3_n_0),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .I3(\state_reg_n_0_[3] ),
        .I4(\state_reg_n_0_[2] ),
        .I5(Q),
        .O(p_198_in));
  FDRE BSP_IN_EOF_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(p_198_in),
        .Q(BSP_IN_EOF),
        .R(SYNC_RST_TL));
  FDRE BSP_IN_ID_STATE_D1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(BSP_IN_ID_STATE_I),
        .Q(BSP_IN_ID_STATE_D1),
        .R(SYNC_RST_TL));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    BSP_IN_ID_STATE_I_i_1
       (.I0(\RXE_COUNTER_I_reg[4]_0 ),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .I3(\state_reg_n_0_[2] ),
        .I4(\state_reg_n_0_[3] ),
        .I5(Q),
        .O(BSP_IN_ID_STATE_I_i_1_n_0));
  FDRE BSP_IN_ID_STATE_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(BSP_IN_ID_STATE_I_i_1_n_0),
        .Q(BSP_IN_ID_STATE_I),
        .R(SYNC_RST_TL));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT5 #(
    .INIT(32'h00000100)) 
    BSP_IN_IFSPACE_i_1
       (.I0(\state_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[1] ),
        .I2(Q),
        .I3(\state_reg_n_0_[3] ),
        .I4(\state_reg_n_0_[2] ),
        .O(BSP_IN_IFSPACE_i_1_n_0));
  FDRE BSP_IN_IFSPACE_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(BSP_IN_IFSPACE_i_1_n_0),
        .Q(BSP_IN_IFSPACE),
        .R(SYNC_RST_TL));
  FDRE BSP_TXBIT_D1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(BSP_TXBIT_D1_reg_1),
        .Q(BSP_TXBIT_D1_reg_0),
        .R(SYNC_RST_TL));
  LUT6 #(
    .INIT(64'hA0A3A3A0AFA3A3AF)) 
    BTL_COUNTER_I15_carry__0_i_1
       (.I0(CAN_PHY_TX_POS_FLOP_X26_carry__0_i_3_n_0),
        .I1(BTL_TRNSMT_EN_FD13_carry_i_4_n_0),
        .I2(BRSD_P_ERR_1TQ_FD),
        .I3(BRS_EN_BTR),
        .I4(BRS_EN_BTR_D1),
        .I5(\BTL_COUNTER_I_REG_reg[8]_2 [7]),
        .O(BRSD_P_ERR_1TQ_FD_reg_12));
  LUT5 #(
    .INIT(32'h00800000)) 
    BTL_COUNTER_I15_carry_i_1
       (.I0(\BTL_COUNTER_I_REG[8]_i_7_n_0 ),
        .I1(\BTL_COUNTER_I_REG[8]_i_5_n_0 ),
        .I2(dest_arst),
        .I3(BRS_EN_BTR),
        .I4(BTL_COUNTER_I15_carry[6]),
        .O(\arststages_ff_reg[1]_5 [3]));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT4 #(
    .INIT(16'hE200)) 
    BTL_COUNTER_I15_carry_i_10
       (.I0(BTL_COUNTER_I15_carry[3]),
        .I1(BRS_EN_BTR),
        .I2(i__carry_i_7__1_0[3]),
        .I3(dest_arst),
        .O(BTL_COUNTER_I15_carry_i_10_n_0));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    BTL_COUNTER_I15_carry_i_11
       (.I0(i__carry_i_7__1_0[0]),
        .I1(BRS_EN_BTR),
        .I2(BTL_COUNTER_I15_carry[0]),
        .O(BTL_COUNTER_I15_carry_i_11_n_0));
  LUT6 #(
    .INIT(64'h3030200020000000)) 
    BTL_COUNTER_I15_carry_i_2
       (.I0(BTL_COUNTER_I17_carry_i_8_n_0),
        .I1(BRS_EN_BTR),
        .I2(dest_arst),
        .I3(BTL_COUNTER_I15_carry[4]),
        .I4(BTL_COUNTER_I15_carry[5]),
        .I5(BTL_COUNTER_I17_carry_i_9_n_0),
        .O(\arststages_ff_reg[1]_5 [2]));
  LUT4 #(
    .INIT(16'hF880)) 
    BTL_COUNTER_I15_carry_i_3
       (.I0(\BTL_COUNTER_I_REG_reg[2] ),
        .I1(BTL_COUNTER_I15_carry_i_9_n_0),
        .I2(BTL_COUNTER_I15_carry_i_10_n_0),
        .I3(BTL_COUNTER_I17_carry_i_6_n_0),
        .O(\arststages_ff_reg[1]_5 [1]));
  LUT5 #(
    .INIT(32'hAA080800)) 
    BTL_COUNTER_I15_carry_i_4
       (.I0(dest_arst),
        .I1(BTL_COUNTER_I15_carry_i_11_n_0),
        .I2(\BTL_COUNTER_I_REG_reg[0] ),
        .I3(i__carry_i_15_n_0),
        .I4(BRSD_P_ERR_1TQ_FD_reg),
        .O(\arststages_ff_reg[1]_5 [0]));
  LUT5 #(
    .INIT(32'h88288888)) 
    BTL_COUNTER_I15_carry_i_5
       (.I0(\BTL_COUNTER_I_REG[8]_i_7_n_0 ),
        .I1(\BTL_COUNTER_I_REG[8]_i_5_n_0 ),
        .I2(BTL_COUNTER_I15_carry[6]),
        .I3(BRS_EN_BTR),
        .I4(dest_arst),
        .O(\ic_reg_n_btr_sjw_cdc_tig_reg[0]_0 [3]));
  LUT6 #(
    .INIT(64'hBB00BF4004400000)) 
    BTL_COUNTER_I15_carry_i_6
       (.I0(BRS_EN_BTR),
        .I1(dest_arst),
        .I2(BTL_COUNTER_I15_carry[4]),
        .I3(BTL_COUNTER_I17_carry_i_8_n_0),
        .I4(BTL_COUNTER_I15_carry[5]),
        .I5(BTL_COUNTER_I17_carry_i_9_n_0),
        .O(\ic_reg_n_btr_sjw_cdc_tig_reg[0]_0 [2]));
  LUT4 #(
    .INIT(16'h0660)) 
    BTL_COUNTER_I15_carry_i_7
       (.I0(BTL_COUNTER_I15_carry_i_9_n_0),
        .I1(\BTL_COUNTER_I_REG_reg[2] ),
        .I2(BTL_COUNTER_I15_carry_i_10_n_0),
        .I3(BTL_COUNTER_I17_carry_i_6_n_0),
        .O(\ic_reg_n_btr_sjw_cdc_tig_reg[0]_0 [1]));
  LUT5 #(
    .INIT(32'h11958400)) 
    BTL_COUNTER_I15_carry_i_8
       (.I0(\BTL_COUNTER_I_REG_reg[0] ),
        .I1(dest_arst),
        .I2(BTL_COUNTER_I15_carry_i_11_n_0),
        .I3(i__carry_i_15_n_0),
        .I4(BRSD_P_ERR_1TQ_FD_reg),
        .O(\ic_reg_n_btr_sjw_cdc_tig_reg[0]_0 [0]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT4 #(
    .INIT(16'hE200)) 
    BTL_COUNTER_I15_carry_i_9
       (.I0(BTL_COUNTER_I15_carry[2]),
        .I1(BRS_EN_BTR),
        .I2(i__carry_i_7__1_0[2]),
        .I3(dest_arst),
        .O(BTL_COUNTER_I15_carry_i_9_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    BTL_COUNTER_I16_carry__0_i_1
       (.I0(i__carry_i_6__6_n_0),
        .I1(\BTL_COUNTER_I_REG[8]_i_9_n_0 ),
        .O(\ic_reg_n_btr_ts1_cdc_tig_reg[1]_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    BTL_COUNTER_I16_carry__0_i_2
       (.I0(\BTL_COUNTER_I_REG[8]_i_9_n_0 ),
        .I1(i__carry_i_6__6_n_0),
        .O(BRSD_P_ERR_1TQ_FD_reg_2));
  LUT4 #(
    .INIT(16'h011F)) 
    BTL_COUNTER_I16_carry_i_1
       (.I0(i__carry_i_4__3_n_0),
        .I1(\BTL_COUNTER_I_REG[8]_i_5_n_0 ),
        .I2(i__carry_i_5__3_n_0),
        .I3(\BTL_COUNTER_I_REG[8]_i_7_n_0 ),
        .O(\ic_reg_n_btr_ts1_cdc_tig_reg[1]_1 [2]));
  LUT4 #(
    .INIT(16'h022F)) 
    BTL_COUNTER_I16_carry_i_2
       (.I0(i__carry_i_8__3_n_0),
        .I1(BTL_COUNTER_I17_carry_i_8_n_0),
        .I2(i__carry_i_9__1_n_0),
        .I3(BTL_COUNTER_I17_carry_i_9_n_0),
        .O(\ic_reg_n_btr_ts1_cdc_tig_reg[1]_1 [1]));
  LUT4 #(
    .INIT(16'h022F)) 
    BTL_COUNTER_I16_carry_i_3
       (.I0(i__carry_i_12__0_n_0),
        .I1(\BTL_COUNTER_I_REG_reg[2] ),
        .I2(i__carry_i_7__4_n_0),
        .I3(BTL_COUNTER_I17_carry_i_6_n_0),
        .O(\ic_reg_n_btr_ts1_cdc_tig_reg[1]_1 [0]));
  LUT4 #(
    .INIT(16'h0660)) 
    BTL_COUNTER_I16_carry_i_5
       (.I0(\BTL_COUNTER_I_REG[8]_i_7_n_0 ),
        .I1(i__carry_i_5__3_n_0),
        .I2(\BTL_COUNTER_I_REG[8]_i_5_n_0 ),
        .I3(i__carry_i_4__3_n_0),
        .O(BRSD_P_ERR_1TQ_FD_reg_5[3]));
  LUT4 #(
    .INIT(16'h6006)) 
    BTL_COUNTER_I16_carry_i_6
       (.I0(BTL_COUNTER_I17_carry_i_9_n_0),
        .I1(i__carry_i_9__1_n_0),
        .I2(BTL_COUNTER_I17_carry_i_8_n_0),
        .I3(i__carry_i_8__3_n_0),
        .O(BRSD_P_ERR_1TQ_FD_reg_5[2]));
  LUT4 #(
    .INIT(16'h6006)) 
    BTL_COUNTER_I16_carry_i_7
       (.I0(BTL_COUNTER_I17_carry_i_6_n_0),
        .I1(i__carry_i_7__4_n_0),
        .I2(\BTL_COUNTER_I_REG_reg[2] ),
        .I3(i__carry_i_12__0_n_0),
        .O(BRSD_P_ERR_1TQ_FD_reg_5[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    BTL_COUNTER_I16_carry_i_8
       (.I0(\BTL_COUNTER_I_REG_reg[0] ),
        .I1(\arststages_ff_reg[1]_6 ),
        .I2(BRSD_P_ERR_1TQ_FD_reg),
        .I3(\arststages_ff_reg[1]_4 ),
        .O(BRSD_P_ERR_1TQ_FD_reg_5[0]));
  LUT6 #(
    .INIT(64'h0000066006600000)) 
    BTL_COUNTER_I17_carry_i_1
       (.I0(CAN_PHY_TX_POS_FLOP_X27[7]),
        .I1(\BTL_COUNTER_I_REG[8]_i_7_n_0 ),
        .I2(CAN_PHY_TX_POS_FLOP_X27[6]),
        .I3(\BTL_COUNTER_I_REG[8]_i_5_n_0 ),
        .I4(\BTL_COUNTER_I_REG[8]_i_9_n_0 ),
        .I5(CAN_PHY_TX_POS_FLOP_X27[8]),
        .O(BRSD_P_ERR_1TQ_FD_reg_6[2]));
  LUT6 #(
    .INIT(64'h55553FF355553003)) 
    BTL_COUNTER_I17_carry_i_10
       (.I0(BTL_COUNTER_I17_carry_i_30_n_0),
        .I1(\BTL_COUNTER_I_REG_reg[8]_2 [1]),
        .I2(BRS_EN_BTR),
        .I3(BRS_EN_BTR_D1),
        .I4(BRSD_P_ERR_1TQ_FD),
        .I5(BTL_TRNSMT_EN_FD13_carry_i_12_n_0),
        .O(\BTL_COUNTER_I_REG_reg[2] ));
  LUT5 #(
    .INIT(32'h3BF7F73B)) 
    BTL_COUNTER_I17_carry_i_17
       (.I0(BTL_COUNTER_I15_carry[5]),
        .I1(dest_arst),
        .I2(BRS_EN_BTR),
        .I3(i__carry_i_21_n_0),
        .I4(O[1]),
        .O(\ic_reg_n_btr_sjw_cdc_tig_reg[1] ));
  LUT6 #(
    .INIT(64'h0000066006600000)) 
    BTL_COUNTER_I17_carry_i_2
       (.I0(BTL_COUNTER_I17_carry_i_6_n_0),
        .I1(CAN_PHY_TX_POS_FLOP_X27[3]),
        .I2(CAN_PHY_TX_POS_FLOP_X27[4]),
        .I3(BTL_COUNTER_I17_carry_i_8_n_0),
        .I4(CAN_PHY_TX_POS_FLOP_X27[5]),
        .I5(BTL_COUNTER_I17_carry_i_9_n_0),
        .O(BRSD_P_ERR_1TQ_FD_reg_6[1]));
  LUT6 #(
    .INIT(64'h00000000E2000000)) 
    BTL_COUNTER_I17_carry_i_28
       (.I0(i__carry_i_1__4_0[2]),
        .I1(BRS_EN_BTR),
        .I2(BTL_TRNSMT_EN_FD13_carry_i_6_0[2]),
        .I3(CAN_PHY_TX_POS_FLOP_X26_carry_i_17_n_0),
        .I4(i__carry_i_7__4_n_0),
        .I5(i__carry_i_8__3_n_0),
        .O(BTL_COUNTER_I17_carry_i_28_n_0));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT2 #(
    .INIT(4'h6)) 
    BTL_COUNTER_I17_carry_i_29
       (.I0(BRS_EN_BTR),
        .I1(BRS_EN_BTR_D1),
        .O(BTL_COUNTER_I17_carry_i_29_n_0));
  LUT6 #(
    .INIT(64'h0000600660060000)) 
    BTL_COUNTER_I17_carry_i_3
       (.I0(CAN_PHY_TX_POS_FLOP_X27[1]),
        .I1(BRSD_P_ERR_1TQ_FD_reg),
        .I2(CAN_PHY_TX_POS_FLOP_X27[0]),
        .I3(\BTL_COUNTER_I_REG_reg[0] ),
        .I4(\BTL_COUNTER_I_REG_reg[2] ),
        .I5(CAN_PHY_TX_POS_FLOP_X27[2]),
        .O(BRSD_P_ERR_1TQ_FD_reg_6[0]));
  LUT6 #(
    .INIT(64'h474747B800000000)) 
    BTL_COUNTER_I17_carry_i_30
       (.I0(BTL_TRNSMT_EN_FD13_carry_i_6_0[2]),
        .I1(BRS_EN_BTR),
        .I2(i__carry_i_1__4_0[2]),
        .I3(\ic_reg_f_btr_ts1_cdc_tig_reg[3] ),
        .I4(IC_REG_BTR_TS1),
        .I5(dest_arst),
        .O(BTL_COUNTER_I17_carry_i_30_n_0));
  LUT6 #(
    .INIT(64'hAAAA3003AAAA3FF3)) 
    BTL_COUNTER_I17_carry_i_6
       (.I0(i__carry_i_4__1_n_0),
        .I1(\BTL_COUNTER_I_REG_reg[8]_2 [2]),
        .I2(BRS_EN_BTR),
        .I3(BRS_EN_BTR_D1),
        .I4(BRSD_P_ERR_1TQ_FD),
        .I5(\ic_reg_f_btr_ts1_cdc_tig_reg[2] ),
        .O(BTL_COUNTER_I17_carry_i_6_n_0));
  LUT6 #(
    .INIT(64'hC0F3E2E2E2E2C0F3)) 
    BTL_COUNTER_I17_carry_i_8
       (.I0(BTL_TRNSMT_EN_FD13_carry_i_8_n_0),
        .I1(BRSD_P_ERR_1TQ_FD),
        .I2(CAN_PHY_TX_POS_FLOP_X26_carry_i_11_n_0),
        .I3(\BTL_COUNTER_I_REG_reg[8]_2 [3]),
        .I4(BRS_EN_BTR),
        .I5(BRS_EN_BTR_D1),
        .O(BTL_COUNTER_I17_carry_i_8_n_0));
  LUT6 #(
    .INIT(64'h0F990F990F000FFF)) 
    BTL_COUNTER_I17_carry_i_9
       (.I0(i__carry_i_9__1_n_0),
        .I1(BTL_COUNTER_I17_carry_i_28_n_0),
        .I2(CAN_PHY_TX_POS_FLOP_X26_carry_i_12_n_0),
        .I3(BRSD_P_ERR_1TQ_FD),
        .I4(\BTL_COUNTER_I_REG_reg[8]_2 [4]),
        .I5(BTL_COUNTER_I17_carry_i_29_n_0),
        .O(BTL_COUNTER_I17_carry_i_9_n_0));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \BTL_COUNTER_I_REG[0]_i_1 
       (.I0(\BTL_COUNTER_I_REG[5]_i_6_n_0 ),
        .I1(\btl/data1 [0]),
        .I2(\BTL_COUNTER_I_REG[0]_i_2_n_0 ),
        .I3(\BTL_COUNTER_I_REG[8]_i_8_n_0 ),
        .I4(\BTL_COUNTER_I_REG_reg[0] ),
        .O(BRSD_P_ERR_1TQ_FD_reg_4[0]));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    \BTL_COUNTER_I_REG[0]_i_2 
       (.I0(\BTL_COUNTER_I_REG[8]_i_3_n_0 ),
        .I1(\BTL_COUNTER_I_REG_reg[5] ),
        .I2(\BTL_COUNTER_I_REG_reg[8] ),
        .I3(CO),
        .I4(\btl/data0 [0]),
        .O(\BTL_COUNTER_I_REG[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFF4F4F4F4F4FFF4)) 
    \BTL_COUNTER_I_REG[1]_i_1 
       (.I0(\BTL_COUNTER_I_REG[5]_i_6_n_0 ),
        .I1(\btl/data1 [1]),
        .I2(\BTL_COUNTER_I_REG[1]_i_2_n_0 ),
        .I3(\BTL_COUNTER_I_REG[8]_i_8_n_0 ),
        .I4(\BTL_COUNTER_I_REG_reg[0] ),
        .I5(BRSD_P_ERR_1TQ_FD_reg),
        .O(BRSD_P_ERR_1TQ_FD_reg_4[1]));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \BTL_COUNTER_I_REG[1]_i_2 
       (.I0(\btl/data0 [1]),
        .I1(\BTL_COUNTER_I_REG[5]_i_4_n_0 ),
        .O(\BTL_COUNTER_I_REG[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h505353505F53535F)) 
    \BTL_COUNTER_I_REG[1]_i_4 
       (.I0(\arststages_ff_reg[1]_4 ),
        .I1(\BTL_COUNTER_I_REG[1]_i_5_n_0 ),
        .I2(BRSD_P_ERR_1TQ_FD),
        .I3(BRS_EN_BTR),
        .I4(BRS_EN_BTR_D1),
        .I5(\BTL_COUNTER_I_REG_reg[8]_2 [0]),
        .O(BRSD_P_ERR_1TQ_FD_reg));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT4 #(
    .INIT(16'h02A2)) 
    \BTL_COUNTER_I_REG[1]_i_5 
       (.I0(dest_arst),
        .I1(i__carry_i_1__4_0[1]),
        .I2(BRS_EN_BTR),
        .I3(BTL_TRNSMT_EN_FD13_carry_i_6_0[1]),
        .O(\BTL_COUNTER_I_REG[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h44F444F4FFFF44F4)) 
    \BTL_COUNTER_I_REG[2]_i_1 
       (.I0(\BTL_COUNTER_I_REG[5]_i_6_n_0 ),
        .I1(\btl/data1 [2]),
        .I2(\btl/data0 [2]),
        .I3(\BTL_COUNTER_I_REG[5]_i_4_n_0 ),
        .I4(\BTL_COUNTER_I_REG[8]_i_8_n_0 ),
        .I5(\BTL_COUNTER_I_REG[2]_i_2_n_0 ),
        .O(BRSD_P_ERR_1TQ_FD_reg_4[2]));
  LUT3 #(
    .INIT(8'h9A)) 
    \BTL_COUNTER_I_REG[2]_i_2 
       (.I0(\BTL_COUNTER_I_REG_reg[2] ),
        .I1(BRSD_P_ERR_1TQ_FD_reg),
        .I2(\BTL_COUNTER_I_REG_reg[0] ),
        .O(\BTL_COUNTER_I_REG[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h44F444F4FFFF44F4)) 
    \BTL_COUNTER_I_REG[3]_i_1 
       (.I0(\BTL_COUNTER_I_REG[5]_i_6_n_0 ),
        .I1(\btl/data1 [3]),
        .I2(\btl/data0 [3]),
        .I3(\BTL_COUNTER_I_REG[5]_i_4_n_0 ),
        .I4(\BTL_COUNTER_I_REG[8]_i_8_n_0 ),
        .I5(\BTL_COUNTER_I_REG[3]_i_4_n_0 ),
        .O(BRSD_P_ERR_1TQ_FD_reg_4[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \BTL_COUNTER_I_REG[3]_i_10 
       (.I0(BRSD_P_ERR_1TQ_FD_reg),
        .I1(\arststages_ff_reg[1]_3 ),
        .O(\BTL_COUNTER_I_REG[3]_i_10_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \BTL_COUNTER_I_REG[3]_i_12 
       (.I0(BTL_COUNTER_I17_carry_i_6_n_0),
        .O(\BTL_COUNTER_I_REG[3]_i_12_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \BTL_COUNTER_I_REG[3]_i_13 
       (.I0(\BTL_COUNTER_I_REG_reg[2] ),
        .O(\BTL_COUNTER_I_REG[3]_i_13_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \BTL_COUNTER_I_REG[3]_i_14 
       (.I0(BRSD_P_ERR_1TQ_FD_reg),
        .O(\BTL_COUNTER_I_REG[3]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h6A666AAA)) 
    \BTL_COUNTER_I_REG[3]_i_15 
       (.I0(BTL_COUNTER_I17_carry_i_6_n_0),
        .I1(dest_arst),
        .I2(i__carry_i_7__1_0[3]),
        .I3(BRS_EN_BTR),
        .I4(BTL_COUNTER_I15_carry[3]),
        .O(\BTL_COUNTER_I_REG[3]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'h6A666AAA)) 
    \BTL_COUNTER_I_REG[3]_i_16 
       (.I0(\BTL_COUNTER_I_REG_reg[2] ),
        .I1(dest_arst),
        .I2(i__carry_i_7__1_0[2]),
        .I3(BRS_EN_BTR),
        .I4(BTL_COUNTER_I15_carry[2]),
        .O(\BTL_COUNTER_I_REG[3]_i_16_n_0 ));
  LUT5 #(
    .INIT(32'h6A666AAA)) 
    \BTL_COUNTER_I_REG[3]_i_17 
       (.I0(BRSD_P_ERR_1TQ_FD_reg),
        .I1(dest_arst),
        .I2(i__carry_i_7__1_0[1]),
        .I3(BRS_EN_BTR),
        .I4(BTL_COUNTER_I15_carry[1]),
        .O(\BTL_COUNTER_I_REG[3]_i_17_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT4 #(
    .INIT(16'hAA9A)) 
    \BTL_COUNTER_I_REG[3]_i_4 
       (.I0(BTL_COUNTER_I17_carry_i_6_n_0),
        .I1(\BTL_COUNTER_I_REG_reg[2] ),
        .I2(\BTL_COUNTER_I_REG_reg[0] ),
        .I3(BRSD_P_ERR_1TQ_FD_reg),
        .O(\BTL_COUNTER_I_REG[3]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \BTL_COUNTER_I_REG[3]_i_5 
       (.I0(BTL_COUNTER_I17_carry_i_6_n_0),
        .O(\btl/BTL_COUNTER_I [3]));
  LUT1 #(
    .INIT(2'h1)) 
    \BTL_COUNTER_I_REG[3]_i_6 
       (.I0(\BTL_COUNTER_I_REG_reg[2] ),
        .O(\btl/BTL_COUNTER_I [2]));
  LUT1 #(
    .INIT(2'h1)) 
    \BTL_COUNTER_I_REG[3]_i_7 
       (.I0(BRSD_P_ERR_1TQ_FD_reg),
        .O(\btl/BTL_COUNTER_I [1]));
  LUT2 #(
    .INIT(4'h9)) 
    \BTL_COUNTER_I_REG[3]_i_8 
       (.I0(BTL_COUNTER_I17_carry_i_6_n_0),
        .I1(\arststages_ff_reg[1]_1 ),
        .O(\BTL_COUNTER_I_REG[3]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \BTL_COUNTER_I_REG[3]_i_9 
       (.I0(\BTL_COUNTER_I_REG_reg[2] ),
        .I1(\arststages_ff_reg[1]_0 ),
        .O(\BTL_COUNTER_I_REG[3]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h44F444F4FFFF44F4)) 
    \BTL_COUNTER_I_REG[4]_i_1 
       (.I0(\BTL_COUNTER_I_REG[5]_i_6_n_0 ),
        .I1(\btl/data1 [4]),
        .I2(\btl/data0 [4]),
        .I3(\BTL_COUNTER_I_REG[5]_i_4_n_0 ),
        .I4(\BTL_COUNTER_I_REG[8]_i_8_n_0 ),
        .I5(\BTL_COUNTER_I_REG[4]_i_2_n_0 ),
        .O(BRSD_P_ERR_1TQ_FD_reg_4[4]));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT5 #(
    .INIT(32'hAAAAA9AA)) 
    \BTL_COUNTER_I_REG[4]_i_2 
       (.I0(BTL_COUNTER_I17_carry_i_8_n_0),
        .I1(BTL_COUNTER_I17_carry_i_6_n_0),
        .I2(BRSD_P_ERR_1TQ_FD_reg),
        .I3(\BTL_COUNTER_I_REG_reg[0] ),
        .I4(\BTL_COUNTER_I_REG_reg[2] ),
        .O(\BTL_COUNTER_I_REG[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h44F444F4FFFF44F4)) 
    \BTL_COUNTER_I_REG[5]_i_1 
       (.I0(\BTL_COUNTER_I_REG[5]_i_2_n_0 ),
        .I1(\BTL_COUNTER_I_REG[8]_i_8_n_0 ),
        .I2(\btl/data0 [5]),
        .I3(\BTL_COUNTER_I_REG[5]_i_4_n_0 ),
        .I4(\btl/data1 [5]),
        .I5(\BTL_COUNTER_I_REG[5]_i_6_n_0 ),
        .O(BRSD_P_ERR_1TQ_FD_reg_4[5]));
  LUT1 #(
    .INIT(2'h1)) 
    \BTL_COUNTER_I_REG[5]_i_10 
       (.I0(BTL_COUNTER_I17_carry_i_8_n_0),
        .O(\BTL_COUNTER_I_REG[5]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h303F3A3A3A3A303F)) 
    \BTL_COUNTER_I_REG[5]_i_11 
       (.I0(BTL_TRNSMT_EN_FD13_carry_i_5_n_0),
        .I1(CAN_PHY_TX_POS_FLOP_X26_carry_i_10_n_0),
        .I2(BRSD_P_ERR_1TQ_FD),
        .I3(\BTL_COUNTER_I_REG_reg[8]_2 [6]),
        .I4(BRS_EN_BTR),
        .I5(BRS_EN_BTR_D1),
        .O(\BTL_COUNTER_I_REG[5]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hA6AA)) 
    \BTL_COUNTER_I_REG[5]_i_12 
       (.I0(\BTL_COUNTER_I_REG[8]_i_5_n_0 ),
        .I1(BTL_COUNTER_I15_carry[6]),
        .I2(BRS_EN_BTR),
        .I3(dest_arst),
        .O(\BTL_COUNTER_I_REG[5]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h9AAA)) 
    \BTL_COUNTER_I_REG[5]_i_13 
       (.I0(BTL_COUNTER_I17_carry_i_9_n_0),
        .I1(BRS_EN_BTR),
        .I2(dest_arst),
        .I3(BTL_COUNTER_I15_carry[5]),
        .O(\BTL_COUNTER_I_REG[5]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h9AAA)) 
    \BTL_COUNTER_I_REG[5]_i_14 
       (.I0(BTL_COUNTER_I17_carry_i_8_n_0),
        .I1(BRS_EN_BTR),
        .I2(dest_arst),
        .I3(BTL_COUNTER_I15_carry[4]),
        .O(\BTL_COUNTER_I_REG[5]_i_14_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \BTL_COUNTER_I_REG[5]_i_15 
       (.I0(\BTL_COUNTER_I_REG[8]_i_7_n_0 ),
        .O(\BTL_COUNTER_I_REG[5]_i_15_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \BTL_COUNTER_I_REG[5]_i_16 
       (.I0(\BTL_COUNTER_I_REG[8]_i_5_n_0 ),
        .O(\btl/BTL_COUNTER_I [6]));
  LUT1 #(
    .INIT(2'h1)) 
    \BTL_COUNTER_I_REG[5]_i_17 
       (.I0(BTL_COUNTER_I17_carry_i_9_n_0),
        .O(\btl/BTL_COUNTER_I [5]));
  LUT1 #(
    .INIT(2'h1)) 
    \BTL_COUNTER_I_REG[5]_i_18 
       (.I0(BTL_COUNTER_I17_carry_i_8_n_0),
        .O(\btl/BTL_COUNTER_I [4]));
  LUT2 #(
    .INIT(4'h9)) 
    \BTL_COUNTER_I_REG[5]_i_19 
       (.I0(\BTL_COUNTER_I_REG[8]_i_7_n_0 ),
        .I1(\ic_reg_n_btr_sjw_cdc_tig_reg[0] ),
        .O(\BTL_COUNTER_I_REG[5]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA9AA)) 
    \BTL_COUNTER_I_REG[5]_i_2 
       (.I0(BTL_COUNTER_I17_carry_i_9_n_0),
        .I1(BTL_COUNTER_I17_carry_i_8_n_0),
        .I2(\BTL_COUNTER_I_REG_reg[2] ),
        .I3(\BTL_COUNTER_I_REG_reg[0] ),
        .I4(BRSD_P_ERR_1TQ_FD_reg),
        .I5(BTL_COUNTER_I17_carry_i_6_n_0),
        .O(\BTL_COUNTER_I_REG[5]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \BTL_COUNTER_I_REG[5]_i_20 
       (.I0(\BTL_COUNTER_I_REG[8]_i_5_n_0 ),
        .I1(BRS_L_SP_FE_reg_1),
        .O(\BTL_COUNTER_I_REG[5]_i_20_n_0 ));
  LUT5 #(
    .INIT(32'h08C4F73B)) 
    \BTL_COUNTER_I_REG[5]_i_21 
       (.I0(BTL_COUNTER_I15_carry[5]),
        .I1(dest_arst),
        .I2(BRS_EN_BTR),
        .I3(i__carry_i_21_n_0),
        .I4(BTL_COUNTER_I17_carry_i_9_n_0),
        .O(\BTL_COUNTER_I_REG[5]_i_21_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \BTL_COUNTER_I_REG[5]_i_22 
       (.I0(BTL_COUNTER_I17_carry_i_8_n_0),
        .I1(\arststages_ff_reg[1]_2 ),
        .O(\BTL_COUNTER_I_REG[5]_i_22_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \BTL_COUNTER_I_REG[5]_i_4 
       (.I0(\BTL_COUNTER_I_REG[8]_i_3_n_0 ),
        .I1(CO),
        .I2(\BTL_COUNTER_I_REG_reg[8] ),
        .I3(\BTL_COUNTER_I_REG_reg[5] ),
        .O(\BTL_COUNTER_I_REG[5]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT4 #(
    .INIT(16'hFFBF)) 
    \BTL_COUNTER_I_REG[5]_i_6 
       (.I0(\BTL_COUNTER_I_REG[8]_i_3_n_0 ),
        .I1(\BTL_COUNTER_I_REG_reg[8]_0 ),
        .I2(CO),
        .I3(\BTL_COUNTER_I_REG_reg[8] ),
        .O(\BTL_COUNTER_I_REG[5]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \BTL_COUNTER_I_REG[5]_i_7 
       (.I0(\BTL_COUNTER_I_REG[8]_i_7_n_0 ),
        .O(\btl/BTL_COUNTER_I [7]));
  LUT1 #(
    .INIT(2'h1)) 
    \BTL_COUNTER_I_REG[5]_i_8 
       (.I0(\BTL_COUNTER_I_REG[8]_i_5_n_0 ),
        .O(\BTL_COUNTER_I_REG[5]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \BTL_COUNTER_I_REG[5]_i_9 
       (.I0(BTL_COUNTER_I17_carry_i_9_n_0),
        .O(\BTL_COUNTER_I_REG[5]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'hFF90)) 
    \BTL_COUNTER_I_REG[6]_i_1 
       (.I0(\BTL_COUNTER_I_REG[8]_i_6_n_0 ),
        .I1(\BTL_COUNTER_I_REG[8]_i_5_n_0 ),
        .I2(\BTL_COUNTER_I_REG[8]_i_8_n_0 ),
        .I3(\BTL_COUNTER_I_REG[6]_i_2_n_0 ),
        .O(BRSD_P_ERR_1TQ_FD_reg_4[6]));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \BTL_COUNTER_I_REG[6]_i_2 
       (.I0(\BTL_COUNTER_I_REG[5]_i_6_n_0 ),
        .I1(\btl/data1 [6]),
        .I2(\BTL_COUNTER_I_REG[5]_i_4_n_0 ),
        .I3(\btl/data0 [6]),
        .O(\BTL_COUNTER_I_REG[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF4B00)) 
    \BTL_COUNTER_I_REG[7]_i_1 
       (.I0(\BTL_COUNTER_I_REG[8]_i_5_n_0 ),
        .I1(\BTL_COUNTER_I_REG[8]_i_6_n_0 ),
        .I2(\BTL_COUNTER_I_REG[8]_i_7_n_0 ),
        .I3(\BTL_COUNTER_I_REG[8]_i_8_n_0 ),
        .I4(\BTL_COUNTER_I_REG[7]_i_2_n_0 ),
        .O(BRSD_P_ERR_1TQ_FD_reg_4[7]));
  LUT4 #(
    .INIT(16'h4F44)) 
    \BTL_COUNTER_I_REG[7]_i_2 
       (.I0(\BTL_COUNTER_I_REG[5]_i_6_n_0 ),
        .I1(\btl/data1 [7]),
        .I2(\BTL_COUNTER_I_REG[5]_i_4_n_0 ),
        .I3(\btl/data0 [7]),
        .O(\BTL_COUNTER_I_REG[7]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hE0FF)) 
    \BTL_COUNTER_I_REG[8]_i_1 
       (.I0(\BTL_COUNTER_I_REG[8]_i_3_n_0 ),
        .I1(\BTL_COUNTER_I_REG[8]_i_4_n_0 ),
        .I2(\BTL_COUNTER_I_REG_reg[1] ),
        .I3(dest_arst),
        .O(SR));
  LUT4 #(
    .INIT(16'h4F44)) 
    \BTL_COUNTER_I_REG[8]_i_10 
       (.I0(\BTL_COUNTER_I_REG[5]_i_4_n_0 ),
        .I1(\btl/data0 [8]),
        .I2(\BTL_COUNTER_I_REG[5]_i_6_n_0 ),
        .I3(\btl/data1 [8]),
        .O(\BTL_COUNTER_I_REG[8]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT4 #(
    .INIT(16'hAAAB)) 
    \BTL_COUNTER_I_REG[8]_i_13 
       (.I0(\BTL_COUNTER_I_REG[8]_i_3_n_0 ),
        .I1(CO),
        .I2(\BTL_COUNTER_I_REG_reg[8] ),
        .I3(\BTL_COUNTER_I_REG_reg[5] ),
        .O(\BTL_COUNTER_I_REG[8]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hA0A3A3A0AFA3A3AF)) 
    \BTL_COUNTER_I_REG[8]_i_16 
       (.I0(CAN_PHY_TX_POS_FLOP_X26_carry__0_i_3_n_0),
        .I1(BTL_TRNSMT_EN_FD13_carry_i_4_n_0),
        .I2(BRSD_P_ERR_1TQ_FD),
        .I3(BRS_EN_BTR),
        .I4(BRS_EN_BTR_D1),
        .I5(\BTL_COUNTER_I_REG_reg[8]_2 [7]),
        .O(\BTL_COUNTER_I_REG[8]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \BTL_COUNTER_I_REG[8]_i_17 
       (.I0(\BTL_COUNTER_I_REG[8]_i_9_n_0 ),
        .O(\btl/BTL_COUNTER_I [8]));
  LUT6 #(
    .INIT(64'hFFFFFFFF0400FB00)) 
    \BTL_COUNTER_I_REG[8]_i_2 
       (.I0(\BTL_COUNTER_I_REG[8]_i_5_n_0 ),
        .I1(\BTL_COUNTER_I_REG[8]_i_6_n_0 ),
        .I2(\BTL_COUNTER_I_REG[8]_i_7_n_0 ),
        .I3(\BTL_COUNTER_I_REG[8]_i_8_n_0 ),
        .I4(\BTL_COUNTER_I_REG[8]_i_9_n_0 ),
        .I5(\BTL_COUNTER_I_REG[8]_i_10_n_0 ),
        .O(BRSD_P_ERR_1TQ_FD_reg_4[8]));
  LUT6 #(
    .INIT(64'hCCCCCECECCCFCECE)) 
    \BTL_COUNTER_I_REG[8]_i_3 
       (.I0(\BTL_COUNTER_I_REG_reg[5] ),
        .I1(\BTL_COUNTER_I_REG_reg[1]_0 ),
        .I2(\BTL_COUNTER_I_REG_reg[8] ),
        .I3(\BTL_COUNTER_I_REG_reg[8]_0 ),
        .I4(CO),
        .I5(\BTL_COUNTER_I_REG_reg[8]_1 ),
        .O(\BTL_COUNTER_I_REG[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hC5CCC4CCC5C0C4C0)) 
    \BTL_COUNTER_I_REG[8]_i_4 
       (.I0(\BTL_COUNTER_I_REG_reg[8]_0 ),
        .I1(RSYNC_FLG_I_reg_0),
        .I2(\BTL_COUNTER_I_REG_reg[8] ),
        .I3(CO),
        .I4(\BTL_COUNTER_I_REG_reg[8]_1 ),
        .I5(\BTL_COUNTER_I_REG_reg[5] ),
        .O(\BTL_COUNTER_I_REG[8]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h303F3A3A3A3A303F)) 
    \BTL_COUNTER_I_REG[8]_i_5 
       (.I0(BTL_TRNSMT_EN_FD13_carry_i_6_n_0),
        .I1(CAN_PHY_TX_POS_FLOP_X26_carry_i_9_n_0),
        .I2(BRSD_P_ERR_1TQ_FD),
        .I3(\BTL_COUNTER_I_REG_reg[8]_2 [5]),
        .I4(BRS_EN_BTR),
        .I5(BRS_EN_BTR_D1),
        .O(\BTL_COUNTER_I_REG[8]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \BTL_COUNTER_I_REG[8]_i_6 
       (.I0(BTL_COUNTER_I17_carry_i_8_n_0),
        .I1(\BTL_COUNTER_I_REG_reg[2] ),
        .I2(\BTL_COUNTER_I_REG_reg[0] ),
        .I3(BRSD_P_ERR_1TQ_FD_reg),
        .I4(BTL_COUNTER_I17_carry_i_6_n_0),
        .I5(BTL_COUNTER_I17_carry_i_9_n_0),
        .O(\BTL_COUNTER_I_REG[8]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h303F3A3A3A3A303F)) 
    \BTL_COUNTER_I_REG[8]_i_7 
       (.I0(BTL_TRNSMT_EN_FD13_carry_i_5_n_0),
        .I1(CAN_PHY_TX_POS_FLOP_X26_carry_i_10_n_0),
        .I2(BRSD_P_ERR_1TQ_FD),
        .I3(\BTL_COUNTER_I_REG_reg[8]_2 [6]),
        .I4(BRS_EN_BTR),
        .I5(BRS_EN_BTR_D1),
        .O(\BTL_COUNTER_I_REG[8]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h1011101110111111)) 
    \BTL_COUNTER_I_REG[8]_i_8 
       (.I0(\BTL_COUNTER_I_REG[8]_i_13_n_0 ),
        .I1(RSYNC_FLG_I_reg_0),
        .I2(\BTL_COUNTER_I_REG_reg[8] ),
        .I3(CO),
        .I4(\BTL_COUNTER_I_REG_reg[8]_1 ),
        .I5(\BTL_COUNTER_I_REG_reg[8]_0 ),
        .O(\BTL_COUNTER_I_REG[8]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hA0A3A3A0AFA3A3AF)) 
    \BTL_COUNTER_I_REG[8]_i_9 
       (.I0(CAN_PHY_TX_POS_FLOP_X26_carry__0_i_3_n_0),
        .I1(BTL_TRNSMT_EN_FD13_carry_i_4_n_0),
        .I2(BRSD_P_ERR_1TQ_FD),
        .I3(BRS_EN_BTR),
        .I4(BRS_EN_BTR_D1),
        .I5(\BTL_COUNTER_I_REG_reg[8]_2 [7]),
        .O(\BTL_COUNTER_I_REG[8]_i_9_n_0 ));
  CARRY4 \BTL_COUNTER_I_REG_reg[3]_i_2 
       (.CI(1'b0),
        .CO({\BTL_COUNTER_I_REG_reg[3]_i_2_n_0 ,\BTL_COUNTER_I_REG_reg[3]_i_2_n_1 ,\BTL_COUNTER_I_REG_reg[3]_i_2_n_2 ,\BTL_COUNTER_I_REG_reg[3]_i_2_n_3 }),
        .CYINIT(1'b1),
        .DI({\btl/BTL_COUNTER_I [3:1],\BTL_COUNTER_I_REG_reg[0] }),
        .O(\btl/data1 [3:0]),
        .S({\BTL_COUNTER_I_REG[3]_i_8_n_0 ,\BTL_COUNTER_I_REG[3]_i_9_n_0 ,\BTL_COUNTER_I_REG[3]_i_10_n_0 ,\BTL_COUNTER_I_REG_reg[3]_0 }));
  CARRY4 \BTL_COUNTER_I_REG_reg[3]_i_3 
       (.CI(1'b0),
        .CO({\BTL_COUNTER_I_REG_reg[3]_i_3_n_0 ,\BTL_COUNTER_I_REG_reg[3]_i_3_n_1 ,\BTL_COUNTER_I_REG_reg[3]_i_3_n_2 ,\BTL_COUNTER_I_REG_reg[3]_i_3_n_3 }),
        .CYINIT(1'b1),
        .DI({\BTL_COUNTER_I_REG[3]_i_12_n_0 ,\BTL_COUNTER_I_REG[3]_i_13_n_0 ,\BTL_COUNTER_I_REG[3]_i_14_n_0 ,\BTL_COUNTER_I_REG_reg[0] }),
        .O(\btl/data0 [3:0]),
        .S({\BTL_COUNTER_I_REG[3]_i_15_n_0 ,\BTL_COUNTER_I_REG[3]_i_16_n_0 ,\BTL_COUNTER_I_REG[3]_i_17_n_0 ,\BTL_COUNTER_I_REG_reg[3] }));
  CARRY4 \BTL_COUNTER_I_REG_reg[5]_i_3 
       (.CI(\BTL_COUNTER_I_REG_reg[3]_i_3_n_0 ),
        .CO({\BTL_COUNTER_I_REG_reg[5]_i_3_n_0 ,\BTL_COUNTER_I_REG_reg[5]_i_3_n_1 ,\BTL_COUNTER_I_REG_reg[5]_i_3_n_2 ,\BTL_COUNTER_I_REG_reg[5]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({\btl/BTL_COUNTER_I [7],\BTL_COUNTER_I_REG[5]_i_8_n_0 ,\BTL_COUNTER_I_REG[5]_i_9_n_0 ,\BTL_COUNTER_I_REG[5]_i_10_n_0 }),
        .O(\btl/data0 [7:4]),
        .S({\BTL_COUNTER_I_REG[5]_i_11_n_0 ,\BTL_COUNTER_I_REG[5]_i_12_n_0 ,\BTL_COUNTER_I_REG[5]_i_13_n_0 ,\BTL_COUNTER_I_REG[5]_i_14_n_0 }));
  CARRY4 \BTL_COUNTER_I_REG_reg[5]_i_5 
       (.CI(\BTL_COUNTER_I_REG_reg[3]_i_2_n_0 ),
        .CO({\BTL_COUNTER_I_REG_reg[5]_i_5_n_0 ,\BTL_COUNTER_I_REG_reg[5]_i_5_n_1 ,\BTL_COUNTER_I_REG_reg[5]_i_5_n_2 ,\BTL_COUNTER_I_REG_reg[5]_i_5_n_3 }),
        .CYINIT(1'b0),
        .DI({\BTL_COUNTER_I_REG[5]_i_15_n_0 ,\btl/BTL_COUNTER_I [6:4]}),
        .O(\btl/data1 [7:4]),
        .S({\BTL_COUNTER_I_REG[5]_i_19_n_0 ,\BTL_COUNTER_I_REG[5]_i_20_n_0 ,\BTL_COUNTER_I_REG[5]_i_21_n_0 ,\BTL_COUNTER_I_REG[5]_i_22_n_0 }));
  CARRY4 \BTL_COUNTER_I_REG_reg[8]_i_14 
       (.CI(\BTL_COUNTER_I_REG_reg[5]_i_3_n_0 ),
        .CO(\NLW_BTL_COUNTER_I_REG_reg[8]_i_14_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_BTL_COUNTER_I_REG_reg[8]_i_14_O_UNCONNECTED [3:1],\btl/data0 [8]}),
        .S({1'b0,1'b0,1'b0,\BTL_COUNTER_I_REG[8]_i_16_n_0 }));
  CARRY4 \BTL_COUNTER_I_REG_reg[8]_i_15 
       (.CI(\BTL_COUNTER_I_REG_reg[5]_i_5_n_0 ),
        .CO(\NLW_BTL_COUNTER_I_REG_reg[8]_i_15_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_BTL_COUNTER_I_REG_reg[8]_i_15_O_UNCONNECTED [3:1],\btl/data1 [8]}),
        .S({1'b0,1'b0,1'b0,\btl/BTL_COUNTER_I [8]}));
  LUT3 #(
    .INIT(8'h40)) 
    BTL_NTQ_I0_carry__0_i_1
       (.I0(BRS_EN_BTR),
        .I1(BTL_NTQ_I0_carry__0_0[6]),
        .I2(i__carry_i_1__4_0[6]),
        .O(DI[3]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    BTL_NTQ_I0_carry__0_i_10
       (.I0(BTL_NTQ_I0_carry__0_i_8_0[3]),
        .I1(BRS_EN_BTR),
        .I2(BTL_NTQ_I0_carry__0_0[3]),
        .O(BTL_NTQ_I0_carry__0_i_10_n_0));
  LUT3 #(
    .INIT(8'h20)) 
    BTL_NTQ_I0_carry__0_i_2
       (.I0(BTL_NTQ_I0_carry__0_0[5]),
        .I1(BRS_EN_BTR),
        .I2(i__carry_i_1__4_0[5]),
        .O(DI[2]));
  LUT3 #(
    .INIT(8'h20)) 
    BTL_NTQ_I0_carry__0_i_3
       (.I0(i__carry_i_1__4_0[4]),
        .I1(BRS_EN_BTR),
        .I2(BTL_NTQ_I0_carry__0_0[4]),
        .O(DI[1]));
  LUT5 #(
    .INIT(32'hCCA000A0)) 
    BTL_NTQ_I0_carry__0_i_4
       (.I0(BTL_NTQ_I0_carry__0_0[3]),
        .I1(BTL_NTQ_I0_carry__0_i_8_0[3]),
        .I2(i__carry_i_1__4_0[3]),
        .I3(BRS_EN_BTR),
        .I4(BTL_TRNSMT_EN_FD13_carry_i_6_0[3]),
        .O(DI[0]));
  LUT4 #(
    .INIT(16'h0708)) 
    BTL_NTQ_I0_carry__0_i_5
       (.I0(i__carry_i_1__4_0[6]),
        .I1(BTL_NTQ_I0_carry__0_0[6]),
        .I2(BRS_EN_BTR),
        .I3(i__carry_i_1__4_0[7]),
        .O(\ic_reg_n_btr_ts1_cdc_tig_reg[1]_4 [3]));
  LUT5 #(
    .INIT(32'h08070708)) 
    BTL_NTQ_I0_carry__0_i_6
       (.I0(i__carry_i_1__4_0[5]),
        .I1(BTL_NTQ_I0_carry__0_0[5]),
        .I2(BRS_EN_BTR),
        .I3(BTL_NTQ_I0_carry__0_0[6]),
        .I4(i__carry_i_1__4_0[6]),
        .O(\ic_reg_n_btr_ts1_cdc_tig_reg[1]_4 [2]));
  LUT5 #(
    .INIT(32'h08070708)) 
    BTL_NTQ_I0_carry__0_i_7
       (.I0(BTL_NTQ_I0_carry__0_0[4]),
        .I1(i__carry_i_1__4_0[4]),
        .I2(BRS_EN_BTR),
        .I3(BTL_NTQ_I0_carry__0_0[5]),
        .I4(i__carry_i_1__4_0[5]),
        .O(\ic_reg_n_btr_ts1_cdc_tig_reg[1]_4 [1]));
  LUT6 #(
    .INIT(64'h7888787778777888)) 
    BTL_NTQ_I0_carry__0_i_8
       (.I0(BTL_NTQ_I0_carry__0_i_9_n_0),
        .I1(BTL_NTQ_I0_carry__0_i_10_n_0),
        .I2(BTL_TRNSMT_EN_FD13_carry_i_6_0[4]),
        .I3(BRS_EN_BTR),
        .I4(i__carry_i_1__4_0[4]),
        .I5(BTL_NTQ_I0_carry__0_0[4]),
        .O(\ic_reg_n_btr_ts1_cdc_tig_reg[1]_4 [0]));
  LUT3 #(
    .INIT(8'hB8)) 
    BTL_NTQ_I0_carry__0_i_9
       (.I0(BTL_TRNSMT_EN_FD13_carry_i_6_0[3]),
        .I1(BRS_EN_BTR),
        .I2(i__carry_i_1__4_0[3]),
        .O(BTL_NTQ_I0_carry__0_i_9_n_0));
  LUT5 #(
    .INIT(32'hCCA000A0)) 
    BTL_NTQ_I0_carry_i_1
       (.I0(BTL_NTQ_I0_carry__0_0[2]),
        .I1(BTL_NTQ_I0_carry__0_i_8_0[2]),
        .I2(i__carry_i_1__4_0[2]),
        .I3(BRS_EN_BTR),
        .I4(BTL_TRNSMT_EN_FD13_carry_i_6_0[2]),
        .O(\ic_reg_n_btr_ts2_cdc_tig_reg[4] [2]));
  LUT3 #(
    .INIT(8'hB8)) 
    BTL_NTQ_I0_carry_i_2
       (.I0(BTL_NTQ_I0_carry__0_i_8_0[1]),
        .I1(BRS_EN_BTR),
        .I2(BTL_NTQ_I0_carry__0_0[1]),
        .O(\ic_reg_f_btr_ts2_cdc_tig_reg[2] ));
  LUT3 #(
    .INIT(8'hB8)) 
    BTL_NTQ_I0_carry_i_3
       (.I0(BTL_TRNSMT_EN_FD13_carry_i_6_0[1]),
        .I1(BRS_EN_BTR),
        .I2(i__carry_i_1__4_0[1]),
        .O(\ic_reg_n_btr_ts2_cdc_tig_reg[4] [1]));
  LUT3 #(
    .INIT(8'hB8)) 
    BTL_NTQ_I0_carry_i_4
       (.I0(BTL_TRNSMT_EN_FD13_carry_i_6_0[0]),
        .I1(BRS_EN_BTR),
        .I2(i__carry_i_1__4_0[0]),
        .O(\ic_reg_n_btr_ts2_cdc_tig_reg[4] [0]));
  LUT6 #(
    .INIT(64'h9A956A65959A656A)) 
    BTL_NTQ_I0_carry_i_5
       (.I0(\ic_reg_n_btr_ts2_cdc_tig_reg[4] [2]),
        .I1(BTL_TRNSMT_EN_FD13_carry_i_6_0[3]),
        .I2(BRS_EN_BTR),
        .I3(i__carry_i_1__4_0[3]),
        .I4(BTL_NTQ_I0_carry__0_i_8_0[3]),
        .I5(BTL_NTQ_I0_carry__0_0[3]),
        .O(S[3]));
  LUT6 #(
    .INIT(64'h9A956A65959A656A)) 
    BTL_NTQ_I0_carry_i_6
       (.I0(\ic_reg_f_btr_ts2_cdc_tig_reg[2] ),
        .I1(BTL_TRNSMT_EN_FD13_carry_i_6_0[2]),
        .I2(BRS_EN_BTR),
        .I3(i__carry_i_1__4_0[2]),
        .I4(BTL_NTQ_I0_carry__0_i_8_0[2]),
        .I5(BTL_NTQ_I0_carry__0_0[2]),
        .O(S[2]));
  LUT5 #(
    .INIT(32'hCCA533A5)) 
    BTL_NTQ_I0_carry_i_7
       (.I0(BTL_NTQ_I0_carry__0_0[1]),
        .I1(BTL_NTQ_I0_carry__0_i_8_0[1]),
        .I2(i__carry_i_1__4_0[1]),
        .I3(BRS_EN_BTR),
        .I4(BTL_TRNSMT_EN_FD13_carry_i_6_0[1]),
        .O(S[1]));
  LUT5 #(
    .INIT(32'h335ACC5A)) 
    BTL_NTQ_I0_carry_i_8
       (.I0(i__carry_i_1__4_0[0]),
        .I1(BTL_TRNSMT_EN_FD13_carry_i_6_0[0]),
        .I2(BTL_NTQ_I0_carry__0_0[0]),
        .I3(BRS_EN_BTR),
        .I4(BTL_NTQ_I0_carry__0_i_8_0[0]),
        .O(S[0]));
  LUT6 #(
    .INIT(64'h6006000000006006)) 
    BTL_TRNSMT_EN_FD13_carry_i_1
       (.I0(\BTL_COUNTER_I_REG[8]_i_9_n_0 ),
        .I1(BTL_TRNSMT_EN_FD13_carry_i_4_n_0),
        .I2(BTL_TRNSMT_EN_FD13_carry_i_5_n_0),
        .I3(\BTL_COUNTER_I_REG[8]_i_7_n_0 ),
        .I4(BTL_TRNSMT_EN_FD13_carry_i_6_n_0),
        .I5(\BTL_COUNTER_I_REG[8]_i_5_n_0 ),
        .O(BRSD_P_ERR_1TQ_FD_reg_9[2]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT5 #(
    .INIT(32'h4700B8FF)) 
    BTL_TRNSMT_EN_FD13_carry_i_10
       (.I0(BTL_TRNSMT_EN_FD13_carry_i_6_0[0]),
        .I1(BRS_EN_BTR),
        .I2(i__carry_i_1__4_0[0]),
        .I3(dest_arst),
        .I4(\BTL_COUNTER_I_REG_reg[0] ),
        .O(BTL_TRNSMT_EN_FD13_carry_i_10_n_0));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    BTL_TRNSMT_EN_FD13_carry_i_11
       (.I0(BTL_TRNSMT_EN_FD13_carry_i_6_0[1]),
        .I1(BRS_EN_BTR),
        .I2(i__carry_i_1__4_0[1]),
        .O(\ic_reg_f_btr_ts1_cdc_tig_reg[3] ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT5 #(
    .INIT(32'hB847FFFF)) 
    BTL_TRNSMT_EN_FD13_carry_i_12
       (.I0(BTL_TRNSMT_EN_FD13_carry_i_6_0[2]),
        .I1(BRS_EN_BTR),
        .I2(i__carry_i_1__4_0[2]),
        .I3(\ic_reg_f_btr_ts1_cdc_tig_reg[3] ),
        .I4(dest_arst),
        .O(BTL_TRNSMT_EN_FD13_carry_i_12_n_0));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'hB)) 
    BTL_TRNSMT_EN_FD13_carry_i_13
       (.I0(BRS_EN_BTR),
        .I1(dest_arst),
        .O(BTL_TRNSMT_EN_FD13_carry_i_13_n_0));
  LUT6 #(
    .INIT(64'h6006000000006006)) 
    BTL_TRNSMT_EN_FD13_carry_i_2
       (.I0(BTL_COUNTER_I17_carry_i_6_n_0),
        .I1(\ic_reg_f_btr_ts1_cdc_tig_reg[2] ),
        .I2(BTL_TRNSMT_EN_FD13_carry_i_8_n_0),
        .I3(BTL_COUNTER_I17_carry_i_8_n_0),
        .I4(BTL_TRNSMT_EN_FD13_carry_i_9_n_0),
        .I5(BTL_COUNTER_I17_carry_i_9_n_0),
        .O(BRSD_P_ERR_1TQ_FD_reg_9[1]));
  LUT6 #(
    .INIT(64'h4510000000004510)) 
    BTL_TRNSMT_EN_FD13_carry_i_3
       (.I0(BTL_TRNSMT_EN_FD13_carry_i_10_n_0),
        .I1(\ic_reg_f_btr_ts1_cdc_tig_reg[3] ),
        .I2(dest_arst),
        .I3(BRSD_P_ERR_1TQ_FD_reg),
        .I4(\BTL_COUNTER_I_REG_reg[2] ),
        .I5(BTL_TRNSMT_EN_FD13_carry_i_12_n_0),
        .O(BRSD_P_ERR_1TQ_FD_reg_9[0]));
  LUT6 #(
    .INIT(64'h00E0008000800080)) 
    BTL_TRNSMT_EN_FD13_carry_i_4
       (.I0(CAN_PHY_TX_POS_FLOP_X26_carry__0_i_4_n_0),
        .I1(i__carry_i_1__4_0[6]),
        .I2(i__carry_i_1__4_0[7]),
        .I3(BTL_TRNSMT_EN_FD13_carry_i_13_n_0),
        .I4(i__carry_i_9__1_n_0),
        .I5(BTL_COUNTER_I17_carry_i_28_n_0),
        .O(BTL_TRNSMT_EN_FD13_carry_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT4 #(
    .INIT(16'h9555)) 
    BTL_TRNSMT_EN_FD13_carry_i_5
       (.I0(i__carry_i_5__3_n_0),
        .I1(i__carry_i_4__3_n_0),
        .I2(BTL_COUNTER_I17_carry_i_28_n_0),
        .I3(i__carry_i_9__1_n_0),
        .O(BTL_TRNSMT_EN_FD13_carry_i_5_n_0));
  LUT6 #(
    .INIT(64'h3B3BFBF7FBF7F7F7)) 
    BTL_TRNSMT_EN_FD13_carry_i_6
       (.I0(i__carry_i_1__4_0[6]),
        .I1(dest_arst),
        .I2(BRS_EN_BTR),
        .I3(i__carry_i_1__4_0[5]),
        .I4(i__carry_i_13_n_0),
        .I5(BTL_COUNTER_I17_carry_i_28_n_0),
        .O(BTL_TRNSMT_EN_FD13_carry_i_6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT5 #(
    .INIT(32'h6A666AAA)) 
    BTL_TRNSMT_EN_FD13_carry_i_7
       (.I0(i__carry_i_7__4_n_0),
        .I1(CAN_PHY_TX_POS_FLOP_X26_carry_i_17_n_0),
        .I2(BTL_TRNSMT_EN_FD13_carry_i_6_0[2]),
        .I3(BRS_EN_BTR),
        .I4(i__carry_i_1__4_0[2]),
        .O(\ic_reg_f_btr_ts1_cdc_tig_reg[2] ));
  LUT6 #(
    .INIT(64'h56A6AAAAAAAAAAAA)) 
    BTL_TRNSMT_EN_FD13_carry_i_8
       (.I0(i__carry_i_8__3_n_0),
        .I1(i__carry_i_1__4_0[2]),
        .I2(BRS_EN_BTR),
        .I3(BTL_TRNSMT_EN_FD13_carry_i_6_0[2]),
        .I4(CAN_PHY_TX_POS_FLOP_X26_carry_i_17_n_0),
        .I5(i__carry_i_7__4_n_0),
        .O(BTL_TRNSMT_EN_FD13_carry_i_8_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    BTL_TRNSMT_EN_FD13_carry_i_9
       (.I0(i__carry_i_9__1_n_0),
        .I1(BTL_COUNTER_I17_carry_i_28_n_0),
        .O(BTL_TRNSMT_EN_FD13_carry_i_9_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    BTL_TRNSMT_EN_FD1_i_1
       (.I0(BTL_TRNSMT_EN_FD1_reg_0),
        .I1(BTL_TRNSMT_EN_FD1_i_2_n_0),
        .O(BTL_TRNSMT_EN_I1));
  LUT6 #(
    .INIT(64'hFFFF40FFFFFFFFFF)) 
    BTL_TRNSMT_EN_FD1_i_10
       (.I0(i__carry_i_19_n_0),
        .I1(BTL_COUNTER_I15_carry[4]),
        .I2(BTL_COUNTER_I15_carry[5]),
        .I3(BTL_COUNTER_I15_carry[6]),
        .I4(BRS_EN_BTR),
        .I5(dest_arst),
        .O(BTL_TRNSMT_EN_FD1_i_10_n_0));
  LUT6 #(
    .INIT(64'h888A888A888A8888)) 
    BTL_TRNSMT_EN_FD1_i_2
       (.I0(BTL_TRNSMT_EN_FD1_reg),
        .I1(\BTL_COUNTER_I_REG_reg[8] ),
        .I2(BTL_TRNSMT_EN_FD1_reg_1),
        .I3(BTL_TRNSMT_EN_FD1_reg_2),
        .I4(BTL_TRNSMT_EN_FD1_i_3_n_0),
        .I5(BTL_TRNSMT_EN_FD1_i_4_n_0),
        .O(BTL_TRNSMT_EN_FD1_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFEFFFFFFFFFFFF)) 
    BTL_TRNSMT_EN_FD1_i_3
       (.I0(i__carry_i_13__0_n_0),
        .I1(i__carry_i_9_n_0),
        .I2(BTL_TRNSMT_EN_FD1_i_5_n_0),
        .I3(BTL_TRNSMT_EN_FD1_i_6_n_0),
        .I4(BTL_TRNSMT_EN_FD1_i_7_n_0),
        .I5(BTL_TRNSMT_EN_FD1_i_8_n_0),
        .O(BTL_TRNSMT_EN_FD1_i_3_n_0));
  LUT6 #(
    .INIT(64'h5454BFEBEBEBFFEB)) 
    BTL_TRNSMT_EN_FD1_i_4
       (.I0(BRS_EN_BTR),
        .I1(BTL_NTQ_I0_carry__0_0[6]),
        .I2(i__carry_i_5__5_n_0),
        .I3(BTL_COUNTER_I15_carry[6]),
        .I4(BTL_TRNSMT_EN_FD1_i_9_n_0),
        .I5(BTL_TRNSMT_EN_FD1_i_10_n_0),
        .O(BTL_TRNSMT_EN_FD1_i_4_n_0));
  LUT6 #(
    .INIT(64'hABFBFEAEAAAAAAAA)) 
    BTL_TRNSMT_EN_FD1_i_5
       (.I0(i__carry_i_16__0_n_0),
        .I1(BTL_NTQ_I0_carry__0_0[0]),
        .I2(BRS_EN_BTR),
        .I3(BTL_NTQ_I0_carry__0_i_8_0[0]),
        .I4(\ic_reg_f_btr_ts2_cdc_tig_reg[2] ),
        .I5(\arststages_ff_reg[1]_3 ),
        .O(BTL_TRNSMT_EN_FD1_i_5_n_0));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT5 #(
    .INIT(32'h9A95656A)) 
    BTL_TRNSMT_EN_FD1_i_6
       (.I0(\arststages_ff_reg[1]_1 ),
        .I1(BTL_NTQ_I0_carry__0_i_8_0[3]),
        .I2(BRS_EN_BTR),
        .I3(BTL_NTQ_I0_carry__0_0[3]),
        .I4(i__carry_i_20_n_0),
        .O(BTL_TRNSMT_EN_FD1_i_6_n_0));
  LUT6 #(
    .INIT(64'hBABFEAEFBFBAEFEA)) 
    BTL_TRNSMT_EN_FD1_i_7
       (.I0(\arststages_ff_reg[1]_3 ),
        .I1(BTL_NTQ_I0_carry__0_i_8_0[1]),
        .I2(BRS_EN_BTR),
        .I3(BTL_NTQ_I0_carry__0_0[1]),
        .I4(BTL_NTQ_I0_carry__0_i_8_0[0]),
        .I5(BTL_NTQ_I0_carry__0_0[0]),
        .O(BTL_TRNSMT_EN_FD1_i_7_n_0));
  LUT6 #(
    .INIT(64'hC3AAC355CCAACCAA)) 
    BTL_TRNSMT_EN_FD1_i_8
       (.I0(BTL_NTQ_I0_carry__0_0[0]),
        .I1(BTL_NTQ_I0_carry__0_i_8_0[0]),
        .I2(i__carry_i_7__1_0[0]),
        .I3(BRS_EN_BTR),
        .I4(BTL_COUNTER_I15_carry[0]),
        .I5(dest_arst),
        .O(BTL_TRNSMT_EN_FD1_i_8_n_0));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT5 #(
    .INIT(32'hFDFFFFFF)) 
    BTL_TRNSMT_EN_FD1_i_9
       (.I0(BTL_COUNTER_I15_carry[4]),
        .I1(i__carry_i_19_n_0),
        .I2(BRS_EN_BTR),
        .I3(dest_arst),
        .I4(BTL_COUNTER_I15_carry[5]),
        .O(BTL_TRNSMT_EN_FD1_i_9_n_0));
  LUT4 #(
    .INIT(16'h3101)) 
    BUFFER_EMPTY_INTERNAL_i_1
       (.I0(BUFFER_IS_READY_SYNCED_D1),
        .I1(TXE_TRNSMT_FLG_SET),
        .I2(TXE_TRNSMT_FLG_reg_0),
        .I3(BUFFER_EMPTY_INTERNAL),
        .O(BUFFER_EMPTY_INTERNAL_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000E00)) 
    BUFFER_EMPTY_INTERNAL_i_2
       (.I0(BUFFER_EMPTY_INTERNAL_i_3_n_0),
        .I1(BUFFER_EMPTY_INTERNAL_i_4_n_0),
        .I2(CANCEL_CONFIRMED_TL2OL_I_D1),
        .I3(BUFFER_IS_READY_SYNCED_D1),
        .I4(TXE_TRNSMT_FLG_reg_0),
        .I5(dest_out),
        .O(TXE_TRNSMT_FLG_SET));
  LUT6 #(
    .INIT(64'hFFFFFFFFF2F2FFF2)) 
    BUFFER_EMPTY_INTERNAL_i_3
       (.I0(RXE_ERRFLG_I_reg_0),
        .I1(TXE_DLC_I_EN_i_3_n_0),
        .I2(\state_reg[2]_3 ),
        .I3(\BIS_COUNTER_I[3]_i_6_n_0 ),
        .I4(BUFFER_EMPTY_INTERNAL_i_5_n_0),
        .I5(BUFFER_EMPTY_INTERNAL_i_6_n_0),
        .O(BUFFER_EMPTY_INTERNAL_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000000888888888)) 
    BUFFER_EMPTY_INTERNAL_i_4
       (.I0(RXE_ERRFLG_I_reg_0),
        .I1(\state_reg[2]_1 ),
        .I2(\state[1]_i_5_0 ),
        .I3(BUFFER_EMPTY_INTERNAL_i_2_1),
        .I4(BUFFER_EMPTY_INTERNAL_i_2_0),
        .I5(TXE_TXING_reg_0),
        .O(BUFFER_EMPTY_INTERNAL_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT5 #(
    .INIT(32'hFF7FFFFE)) 
    BUFFER_EMPTY_INTERNAL_i_5
       (.I0(\state_reg_n_0_[1] ),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[2] ),
        .I3(\state_reg_n_0_[3] ),
        .I4(Q),
        .O(BUFFER_EMPTY_INTERNAL_i_5_n_0));
  LUT6 #(
    .INIT(64'h0020000000000000)) 
    BUFFER_EMPTY_INTERNAL_i_6
       (.I0(\state[2]_i_10_n_0 ),
        .I1(TDC_TRIG_COND_D1_i_3_n_0),
        .I2(\state_reg_n_0_[2] ),
        .I3(Q),
        .I4(\state_reg_n_0_[3] ),
        .I5(RXE_ERRFLG_I_reg_0),
        .O(BUFFER_EMPTY_INTERNAL_i_6_n_0));
  FDSE BUFFER_EMPTY_INTERNAL_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(BUFFER_EMPTY_INTERNAL_i_1_n_0),
        .Q(BUFFER_EMPTY_INTERNAL),
        .S(SYNC_RST_TL));
  FDRE BUFFER_IS_READY_SYNCED_D1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(BUFFER_IS_READY_SYNCED),
        .Q(BUFFER_IS_READY_SYNCED_D1),
        .R(SYNC_RST_TL));
  FDSE CANCEL_CONFIRMED_TL2OL_I_D1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(CANCEL_CONFIRMED_TL2OL_I_reg_0),
        .Q(CANCEL_CONFIRMED_TL2OL_I_D1),
        .S(SYNC_RST_TL));
  FDSE CANCEL_CONFIRMED_TL2OL_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(CANCEL_CONFIRMED_TL2OL_I_reg_1),
        .Q(CANCEL_CONFIRMED_TL2OL_I_reg_0),
        .S(SYNC_RST_TL));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    CAN_PHY_TX_LP_i_10
       (.I0(BTL_TRNSMT_EN_FD1_i_4_n_0),
        .I1(CAN_PHY_TX_LP_i_13_n_0),
        .I2(BTL_TRNSMT_EN_FD1_i_6_n_0),
        .I3(BTL_TRNSMT_EN_FD1_i_5_n_0),
        .I4(i__carry_i_9_n_0),
        .I5(i__carry_i_13__0_n_0),
        .O(BRS_L_SP_FE_reg_5));
  LUT6 #(
    .INIT(64'hA959A959FD5DABFB)) 
    CAN_PHY_TX_LP_i_13
       (.I0(i__carry_i_14_n_0),
        .I1(BTL_NTQ_I0_carry__0_0[0]),
        .I2(BRS_EN_BTR),
        .I3(BTL_NTQ_I0_carry__0_i_8_0[0]),
        .I4(\ic_reg_f_btr_ts2_cdc_tig_reg[2] ),
        .I5(\arststages_ff_reg[1]_3 ),
        .O(CAN_PHY_TX_LP_i_13_n_0));
  LUT6 #(
    .INIT(64'hAABABBBBAA8A8888)) 
    CAN_PHY_TX_LP_i_2
       (.I0(RSYNC_FLG_I_reg_2),
        .I1(CAN_PHY_TX_LP_i_3_n_0),
        .I2(FAST_TRANSMT_PT_D1_i_3_n_0),
        .I3(CAN_PHY_TX_LP_i_4_n_0),
        .I4(CAN_PHY_TX_INT_reg),
        .I5(\state_reg[4]_3 ),
        .O(BSP_TXBIT_FD_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT5 #(
    .INIT(32'hFFFACCFA)) 
    CAN_PHY_TX_LP_i_3
       (.I0(CAN_PHY_TX_LP_i_2_0),
        .I1(CAN_PHY_TX_LP_i_2_1),
        .I2(\CLKD_COUNTER_I_reg[7] [0]),
        .I3(BTL_SAMP_EN_D1_reg_0),
        .I4(\CLKD_COUNTER_I_reg[7]_0 [0]),
        .O(CAN_PHY_TX_LP_i_3_n_0));
  LUT5 #(
    .INIT(32'hFFFF3332)) 
    CAN_PHY_TX_LP_i_4
       (.I0(BTL_NTQ_I0_carry__0_0[4]),
        .I1(BRS_EN_BTR),
        .I2(BTL_NTQ_I0_carry__0_0[6]),
        .I3(BTL_NTQ_I0_carry__0_0[5]),
        .I4(CAN_PHY_TX_LP_i_8_n_0),
        .O(CAN_PHY_TX_LP_i_4_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF47)) 
    CAN_PHY_TX_LP_i_8
       (.I0(BTL_NTQ_I0_carry__0_i_8_0[0]),
        .I1(BRS_EN_BTR),
        .I2(BTL_NTQ_I0_carry__0_0[0]),
        .I3(\ic_reg_f_btr_ts2_cdc_tig_reg[2] ),
        .I4(BTL_NTQ_I0_carry__0_i_10_n_0),
        .I5(i__carry_i_9__0_n_0),
        .O(CAN_PHY_TX_LP_i_8_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    CAN_PHY_TX_POS_FLOP_X26_carry__0_i_1
       (.I0(CAN_PHY_TX_POS_FLOP_X26_carry__0_i_3_n_0),
        .I1(\BTL_COUNTER_I_REG[8]_i_9_n_0 ),
        .O(\ic_reg_n_btr_ts1_cdc_tig_reg[1]_3 ));
  LUT2 #(
    .INIT(4'h9)) 
    CAN_PHY_TX_POS_FLOP_X26_carry__0_i_2
       (.I0(CAN_PHY_TX_POS_FLOP_X26_carry__0_i_3_n_0),
        .I1(\BTL_COUNTER_I_REG[8]_i_9_n_0 ),
        .O(\ic_reg_n_btr_ts1_cdc_tig_reg[1] ));
  LUT6 #(
    .INIT(64'hFFFF1FFFFFFF7FFF)) 
    CAN_PHY_TX_POS_FLOP_X26_carry__0_i_3
       (.I0(CAN_PHY_TX_POS_FLOP_X26_carry__0_i_4_n_0),
        .I1(i__carry_i_1__4_0[6]),
        .I2(i__carry_i_1__4_0[7]),
        .I3(dest_arst),
        .I4(BRS_EN_BTR),
        .I5(CAN_PHY_TX_POS_FLOP_X26_carry_i_16_n_0),
        .O(CAN_PHY_TX_POS_FLOP_X26_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    CAN_PHY_TX_POS_FLOP_X26_carry__0_i_4
       (.I0(i__carry_i_1__4_0[5]),
        .I1(i__carry_i_13_n_0),
        .O(CAN_PHY_TX_POS_FLOP_X26_carry__0_i_4_n_0));
  LUT4 #(
    .INIT(16'h011F)) 
    CAN_PHY_TX_POS_FLOP_X26_carry_i_1
       (.I0(CAN_PHY_TX_POS_FLOP_X26_carry_i_9_n_0),
        .I1(\BTL_COUNTER_I_REG[8]_i_5_n_0 ),
        .I2(CAN_PHY_TX_POS_FLOP_X26_carry_i_10_n_0),
        .I3(\BTL_COUNTER_I_REG[8]_i_7_n_0 ),
        .O(BRSD_P_ERR_1TQ_FD_reg_11[2]));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT3 #(
    .INIT(8'h78)) 
    CAN_PHY_TX_POS_FLOP_X26_carry_i_10
       (.I0(i__carry_i_4__3_n_0),
        .I1(CAN_PHY_TX_POS_FLOP_X26_carry_i_16_n_0),
        .I2(i__carry_i_5__3_n_0),
        .O(CAN_PHY_TX_POS_FLOP_X26_carry_i_10_n_0));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT4 #(
    .INIT(16'hEF10)) 
    CAN_PHY_TX_POS_FLOP_X26_carry_i_11
       (.I0(\arststages_ff_reg[1]_4 ),
        .I1(i__carry_i_12__0_n_0),
        .I2(i__carry_i_7__4_n_0),
        .I3(i__carry_i_8__3_n_0),
        .O(CAN_PHY_TX_POS_FLOP_X26_carry_i_11_n_0));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT5 #(
    .INIT(32'hFFFB0004)) 
    CAN_PHY_TX_POS_FLOP_X26_carry_i_12
       (.I0(i__carry_i_8__3_n_0),
        .I1(i__carry_i_7__4_n_0),
        .I2(i__carry_i_12__0_n_0),
        .I3(\arststages_ff_reg[1]_4 ),
        .I4(i__carry_i_9__1_n_0),
        .O(CAN_PHY_TX_POS_FLOP_X26_carry_i_12_n_0));
  LUT6 #(
    .INIT(64'h0F09090F00090900)) 
    CAN_PHY_TX_POS_FLOP_X26_carry_i_13
       (.I0(CAN_PHY_TX_POS_FLOP_X26_carry_i_17_n_0),
        .I1(i__carry_i_12__0_n_0),
        .I2(BRSD_P_ERR_1TQ_FD),
        .I3(BRS_EN_BTR_D1),
        .I4(BRS_EN_BTR),
        .I5(\BTL_COUNTER_I_REG_reg[8]_2 [1]),
        .O(CAN_PHY_TX_POS_FLOP_X26_carry_i_13_n_0));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT5 #(
    .INIT(32'h00040000)) 
    CAN_PHY_TX_POS_FLOP_X26_carry_i_16
       (.I0(i__carry_i_8__3_n_0),
        .I1(i__carry_i_7__4_n_0),
        .I2(i__carry_i_12__0_n_0),
        .I3(\arststages_ff_reg[1]_4 ),
        .I4(i__carry_i_9__1_n_0),
        .O(CAN_PHY_TX_POS_FLOP_X26_carry_i_16_n_0));
  LUT6 #(
    .INIT(64'h0C000CAA00000000)) 
    CAN_PHY_TX_POS_FLOP_X26_carry_i_17
       (.I0(i__carry_i_1__4_0[1]),
        .I1(BTL_TRNSMT_EN_FD13_carry_i_6_0[1]),
        .I2(BTL_TRNSMT_EN_FD13_carry_i_6_0[0]),
        .I3(BRS_EN_BTR),
        .I4(i__carry_i_1__4_0[0]),
        .I5(dest_arst),
        .O(CAN_PHY_TX_POS_FLOP_X26_carry_i_17_n_0));
  LUT4 #(
    .INIT(16'h022F)) 
    CAN_PHY_TX_POS_FLOP_X26_carry_i_2
       (.I0(CAN_PHY_TX_POS_FLOP_X26_carry_i_11_n_0),
        .I1(BTL_COUNTER_I17_carry_i_8_n_0),
        .I2(CAN_PHY_TX_POS_FLOP_X26_carry_i_12_n_0),
        .I3(BTL_COUNTER_I17_carry_i_9_n_0),
        .O(BRSD_P_ERR_1TQ_FD_reg_11[1]));
  LUT6 #(
    .INIT(64'hC00FFFFC800CC008)) 
    CAN_PHY_TX_POS_FLOP_X26_carry_i_3
       (.I0(BRSD_P_ERR_1TQ_FD),
        .I1(CAN_PHY_TX_POS_FLOP_X26_carry_i_13_n_0),
        .I2(i__carry_i_12__0_n_0),
        .I3(\arststages_ff_reg[1]_4 ),
        .I4(i__carry_i_7__4_n_0),
        .I5(CAN_PHY_TX_POS_FLOP_X26_carry),
        .O(BRSD_P_ERR_1TQ_FD_reg_11[0]));
  LUT4 #(
    .INIT(16'h0660)) 
    CAN_PHY_TX_POS_FLOP_X26_carry_i_5
       (.I0(\BTL_COUNTER_I_REG[8]_i_7_n_0 ),
        .I1(CAN_PHY_TX_POS_FLOP_X26_carry_i_10_n_0),
        .I2(\BTL_COUNTER_I_REG[8]_i_5_n_0 ),
        .I3(CAN_PHY_TX_POS_FLOP_X26_carry_i_9_n_0),
        .O(BRSD_P_ERR_1TQ_FD_reg_10[3]));
  LUT4 #(
    .INIT(16'h0990)) 
    CAN_PHY_TX_POS_FLOP_X26_carry_i_6
       (.I0(BTL_COUNTER_I17_carry_i_8_n_0),
        .I1(CAN_PHY_TX_POS_FLOP_X26_carry_i_11_n_0),
        .I2(BTL_COUNTER_I17_carry_i_9_n_0),
        .I3(CAN_PHY_TX_POS_FLOP_X26_carry_i_12_n_0),
        .O(BRSD_P_ERR_1TQ_FD_reg_10[2]));
  LUT5 #(
    .INIT(32'h21188442)) 
    CAN_PHY_TX_POS_FLOP_X26_carry_i_7
       (.I0(\BTL_COUNTER_I_REG_reg[2] ),
        .I1(BTL_COUNTER_I17_carry_i_6_n_0),
        .I2(i__carry_i_12__0_n_0),
        .I3(\arststages_ff_reg[1]_4 ),
        .I4(i__carry_i_7__4_n_0),
        .O(BRSD_P_ERR_1TQ_FD_reg_10[1]));
  LUT4 #(
    .INIT(16'h0990)) 
    CAN_PHY_TX_POS_FLOP_X26_carry_i_8
       (.I0(\BTL_COUNTER_I_REG_reg[0] ),
        .I1(\arststages_ff_reg[1]_6 ),
        .I2(BRSD_P_ERR_1TQ_FD_reg),
        .I3(\arststages_ff_reg[1]_4 ),
        .O(BRSD_P_ERR_1TQ_FD_reg_10[0]));
  LUT2 #(
    .INIT(4'h6)) 
    CAN_PHY_TX_POS_FLOP_X26_carry_i_9
       (.I0(CAN_PHY_TX_POS_FLOP_X26_carry_i_16_n_0),
        .I1(i__carry_i_4__3_n_0),
        .O(CAN_PHY_TX_POS_FLOP_X26_carry_i_9_n_0));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT3 #(
    .INIT(8'h47)) 
    CLKM_EN_i_10
       (.I0(\CLKD_COUNTER_I_reg[7]_0 [0]),
        .I1(BTL_SAMP_EN_D1_reg_0),
        .I2(\CLKD_COUNTER_I_reg[7] [0]),
        .O(CLKM_EN_i_10_n_0));
  LUT6 #(
    .INIT(64'h0000000400000000)) 
    CLKM_EN_i_11
       (.I0(CLKM_EN_i_13_n_0),
        .I1(BTL_RXBIT_I_reg_1),
        .I2(BRSD_P_ERR_1TQ_FD_i_12_n_0),
        .I3(BRS_L_SP_FE_reg_2),
        .I4(BRSD_P_ERR_1TQ_FD_i_11_n_0),
        .I5(BRSD_P_ERR_1TQ_FD_i_10_n_0),
        .O(CLKM_EN_i_11_n_0));
  LUT6 #(
    .INIT(64'h00FDFFFF00FF00FF)) 
    CLKM_EN_i_12
       (.I0(D),
        .I1(BRSD_P_ERR_1TQ_FD_i_13_n_0),
        .I2(\state_reg[2]_0 ),
        .I3(BRS_EN_BTR),
        .I4(\COUNTER_I[1]_i_4_n_0 ),
        .I5(\RXE_SREG_I_reg[31]_0 ),
        .O(CLKM_EN_i_12_n_0));
  LUT5 #(
    .INIT(32'hFEFEFFFE)) 
    CLKM_EN_i_13
       (.I0(BRSD_P_ERR_1TQ_FD_reg_15),
        .I1(\RXE_COUNTER_I_reg[4]_4 ),
        .I2(\RXE_COUNTER_I_reg[4]_3 ),
        .I3(BSP_CRCERR_I_CAN_FLG_reg_0),
        .I4(\RXE_COUNTER_I_reg[4]_2 ),
        .O(CLKM_EN_i_13_n_0));
  LUT6 #(
    .INIT(64'hFFFF47B847B8FFFF)) 
    CLKM_EN_i_5
       (.I0(\CLKD_COUNTER_I_reg[7]_0 [1]),
        .I1(BTL_SAMP_EN_D1_reg_0),
        .I2(\CLKD_COUNTER_I_reg[7] [1]),
        .I3(CLKD_COUNTER_I_reg[1]),
        .I4(CLKM_EN_i_10_n_0),
        .I5(CLKD_COUNTER_I_reg[0]),
        .O(\ic_reg_n_brpr_cdc_tig_reg[1] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF00D0)) 
    CLKM_EN_i_6
       (.I0(CLKM_EN_i_11_n_0),
        .I1(BTL_RXBIT_I_reg_0),
        .I2(E),
        .I3(BRSD_P_ERR_1TQ_FD_reg_13),
        .I4(BRSD_P_ERR_1TQ_FD_reg_14),
        .I5(CLKM_EN_i_12_n_0),
        .O(BTL_SAMP_EN_D1_reg_0));
  LUT4 #(
    .INIT(16'hD0FF)) 
    \COUNTER_I[1]_i_3 
       (.I0(\COUNTER_I[1]_i_4_n_0 ),
        .I1(\state_reg[0]_0 ),
        .I2(\RXE_SREG_I_reg[31]_0 ),
        .I3(dest_arst),
        .O(\arststages_ff_reg[1] ));
  LUT6 #(
    .INIT(64'hAAA8AAAAAAAAAAAA)) 
    \COUNTER_I[1]_i_4 
       (.I0(BSP_IC_FRM_ERROR_I_i_5_n_0),
        .I1(\state_reg_n_0_[3] ),
        .I2(\state_reg_n_0_[2] ),
        .I3(\RXE_SREG_I[0]_i_3_n_0 ),
        .I4(Q),
        .I5(\COUNTER_I[1]_i_5_n_0 ),
        .O(\COUNTER_I[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    \COUNTER_I[1]_i_5 
       (.I0(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I2(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I3(TDC_TRIG_COND_D1_i_4_n_0),
        .I4(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I5(\RXE_COUNTER_I_reg[3]_0 [2]),
        .O(\COUNTER_I[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h55D5D5D555DD5555)) 
    \CRC_CRCWORD_I1[14]_i_1 
       (.I0(dest_arst),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .I3(Q),
        .I4(\state_reg_n_0_[3] ),
        .I5(\state_reg_n_0_[2] ),
        .O(CRC_CRCWORD_I1));
  LUT6 #(
    .INIT(64'hFFF8FFA3FFFFFFFF)) 
    \CRC_CRCWORD_I1[14]_i_5 
       (.I0(\state_reg_n_0_[0] ),
        .I1(Q),
        .I2(\state_reg_n_0_[2] ),
        .I3(\state_reg_n_0_[3] ),
        .I4(\state_reg_n_0_[1] ),
        .I5(E),
        .O(\state_reg[0]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \EMU_OL_ECR_I[0]_i_2 
       (.I0(EMU_CTR_FLG_I0),
        .I1(EMU_CTR_FLG_I),
        .O(EMU_CTR_FLG_I_reg));
  LUT6 #(
    .INIT(64'hA8AAA8A8A8AAA8AA)) 
    \EMU_OL_ECR_I[0]_i_3 
       (.I0(E),
        .I1(TXE_TXING_reg_2),
        .I2(\EMU_OL_ECR_I[0]_i_4_n_0 ),
        .I3(TXE_TXING_reg_0),
        .I4(BTL_RXBIT_I_reg),
        .I5(\EMU_OL_ECR_I[0]_i_5_n_0 ),
        .O(EMU_CTR_FLG_I0));
  LUT5 #(
    .INIT(32'hFFFFFEEE)) 
    \EMU_OL_ECR_I[0]_i_4 
       (.I0(\state_reg[1]_0 ),
        .I1(\state[1]_i_5_0 ),
        .I2(\BIS_COUNTER_I[3]_i_6_n_0 ),
        .I3(\state_reg[0]_3 ),
        .I4(TXE_TXING_reg_5),
        .O(\EMU_OL_ECR_I[0]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \EMU_OL_ECR_I[0]_i_5 
       (.I0(BRSD_P_ERR_1TQ_FD_i_5_n_0),
        .I1(BTL_RXBIT_I_reg_0),
        .O(\EMU_OL_ECR_I[0]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT5 #(
    .INIT(32'h00000200)) 
    EMU_REC_I20_carry_i_10
       (.I0(\state_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[1] ),
        .I2(Q),
        .I3(\state_reg_n_0_[3] ),
        .I4(\state_reg_n_0_[2] ),
        .O(EMU_REC_I20_carry_i_10_n_0));
  LUT6 #(
    .INIT(64'hAAABAAABAFAFAAAB)) 
    EMU_REC_I20_carry_i_6
       (.I0(BRSD_P_ERR_1TQ_FD_i_11_n_0),
        .I1(\state_reg[0]_4 ),
        .I2(RXE_ERRFLG_I_reg_0),
        .I3(EMU_REC_I20_carry_i_9_n_0),
        .I4(EMU_REC_I20_carry_i_10_n_0),
        .I5(TXE_MSGVAL_FD1_i_3_n_0),
        .O(BTL_RXBIT_I_reg));
  LUT6 #(
    .INIT(64'hFEF0FEFEFEFEFEFE)) 
    EMU_REC_I20_carry_i_7
       (.I0(TXE_TXING_reg_0),
        .I1(\EMU_OL_ECR_I[0]_i_5_n_0 ),
        .I2(BUFFER_EMPTY_INTERNAL_i_2_0),
        .I3(TXE_TXING_reg_8),
        .I4(\state_reg[0]_3 ),
        .I5(\BIS_COUNTER_I[3]_i_6_n_0 ),
        .O(TXE_TXING_reg_3));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT5 #(
    .INIT(32'hFFFFF7FF)) 
    EMU_REC_I20_carry_i_8
       (.I0(\state_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[1] ),
        .I2(Q),
        .I3(\state_reg_n_0_[3] ),
        .I4(\state_reg_n_0_[2] ),
        .O(\state_reg[0]_4 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT5 #(
    .INIT(32'hF3AAFFAA)) 
    EMU_REC_I20_carry_i_9
       (.I0(TXE_MSGVAL_FD1_i_3_n_0),
        .I1(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I3(RXE_PASSFLG_I),
        .I4(\RXE_MSGPAD_SEL_FS1[1]_i_4_n_0 ),
        .O(EMU_REC_I20_carry_i_9_n_0));
  LUT6 #(
    .INIT(64'h0000080000000000)) 
    \EMU_REC_I[7]_i_4 
       (.I0(TXE_TXING_reg_8),
        .I1(\BIS_COUNTER_I[3]_i_6_n_0 ),
        .I2(\RXE_SREG_I[0]_i_3_n_0 ),
        .I3(\state_reg_n_0_[2] ),
        .I4(Q),
        .I5(\state_reg_n_0_[3] ),
        .O(\state_reg[2]_3 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \EMU_REC_I[7]_i_5 
       (.I0(\RXE_COUNTER_I_reg[4]_0 ),
        .I1(TXE_TXING_reg_0),
        .I2(BSP_TXBIT_D1_reg_0),
        .I3(\EMU_REC_I[7]_i_7_n_0 ),
        .I4(\EMU_REC_I[7]_i_8_n_0 ),
        .I5(RXE_ERRFLG_I_reg_0),
        .O(TXE_TXING_reg_5));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \EMU_REC_I[7]_i_7 
       (.I0(\state_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[1] ),
        .O(\EMU_REC_I[7]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \EMU_REC_I[7]_i_8 
       (.I0(\state_reg_n_0_[3] ),
        .I1(\state_reg_n_0_[2] ),
        .O(\EMU_REC_I[7]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0000010055555555)) 
    EMU_TEC_I2_carry_i_10
       (.I0(RXE_ERRFLG_I_reg_0),
        .I1(\state[0]_i_14_n_0 ),
        .I2(\state_reg_n_0_[3] ),
        .I3(\COUNTER_I[1]_i_5_n_0 ),
        .I4(\RXE_SREG_I[0]_i_3_n_0 ),
        .I5(BSP_IC_FRM_ERROR_I_i_5_n_0),
        .O(EMU_TEC_I2_carry_i_10_n_0));
  LUT6 #(
    .INIT(64'hFFEFFFFFFFFFFFFF)) 
    EMU_TEC_I2_carry_i_11
       (.I0(RXE_ERRFLG_I_reg_0),
        .I1(\state_reg_n_0_[2] ),
        .I2(\state_reg_n_0_[3] ),
        .I3(Q),
        .I4(\state_reg_n_0_[1] ),
        .I5(\state_reg_n_0_[0] ),
        .O(EMU_TEC_I2_carry_i_11_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAA8AAAAAAAA)) 
    EMU_TEC_I2_carry_i_6
       (.I0(TXE_TXING_reg_0),
        .I1(EMU_TEC_I2_carry_i_7_n_0),
        .I2(EMU_TEC_I2_carry_i_8_n_0),
        .I3(EMU_TEC_I2_carry_i_9_n_0),
        .I4(EMU_TEC_I2_carry_i_10_n_0),
        .I5(\state_reg[4]_2 ),
        .O(TXE_TXING_reg_2));
  LUT6 #(
    .INIT(64'hF0FFF0F4F0FFF0FF)) 
    EMU_TEC_I2_carry_i_7
       (.I0(SM_FLAG_I_i_4_n_0),
        .I1(\RXE_MSGPAD_SEL_FS1_reg[0]_0 ),
        .I2(BRSD_P_ERR_1TQ_FD_i_9_n_0),
        .I3(RXE_ERRFLG_I_reg_0),
        .I4(TXE_TRNSMT_FLG_i_4_n_0),
        .I5(\RXE_COUNTER_I_reg[4]_2 ),
        .O(EMU_TEC_I2_carry_i_7_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF8888F888)) 
    EMU_TEC_I2_carry_i_8
       (.I0(RXE_PASSFLG_I_reg_0),
        .I1(BRSD_P_ERR_1TQ_FD_i_12_n_0),
        .I2(BSP_IC_BIT_ERROR_I_i_5_n_0),
        .I3(ERR_ACKERRPASS_I),
        .I4(EMU_TEC_I2_carry_i_11_n_0),
        .I5(BRS_L_SP_FE_reg_2),
        .O(EMU_TEC_I2_carry_i_8_n_0));
  LUT6 #(
    .INIT(64'hBFBBAAAAAAAAAAAA)) 
    EMU_TEC_I2_carry_i_9
       (.I0(\RXE_COUNTER_I_reg[6]_0 ),
        .I1(\state[4]_i_7_n_0 ),
        .I2(BSP_TXBIT_D1_reg_0),
        .I3(RXE_ERRFLG_I_reg_0),
        .I4(\state_reg[4]_1 ),
        .I5(BRSD_P_ERR_1TQ_FD_reg_15),
        .O(EMU_TEC_I2_carry_i_9_n_0));
  LUT6 #(
    .INIT(64'h00000000FBFFFFFF)) 
    ERR_ACKERRPASS_I_i_1
       (.I0(ERR_ACKERRPASS_I_i_2_n_0),
        .I1(E),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg_n_0_[1] ),
        .I4(\RXE_COUNTER_I_reg[4]_0 ),
        .I5(ERR_ACKERRPASS_I_i_3_n_0),
        .O(ERR_ACKERRPASS_I_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    ERR_ACKERRPASS_I_i_2
       (.I0(\state_reg_n_0_[3] ),
        .I1(Q),
        .I2(\state_reg_n_0_[2] ),
        .O(ERR_ACKERRPASS_I_i_2_n_0));
  LUT6 #(
    .INIT(64'hF444F4FFFFFFFFFF)) 
    ERR_ACKERRPASS_I_i_3
       (.I0(\state_reg[0]_4 ),
        .I1(ERR_ACKERRPASS_I_reg_0),
        .I2(RXE_PASSFLG_I_reg_0),
        .I3(BTL_SAMP_EN_D1_reg),
        .I4(ERR_ACKERRPASS_I),
        .I5(dest_arst),
        .O(ERR_ACKERRPASS_I_i_3_n_0));
  FDRE ERR_ACKERRPASS_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(ERR_ACKERRPASS_I_i_1_n_0),
        .Q(ERR_ACKERRPASS_I),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    ERR_TXBERR_I_FD_SSP_EN_1_i_2
       (.I0(TDC_SSP_SAMP_PT_D1),
        .I1(TXE_TXING_reg_0),
        .I2(BRS_EN_I_FLAG_reg_0),
        .I3(TDC_EN_FS2),
        .O(TDC_SSP_SAMP_PT_D1_reg));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT3 #(
    .INIT(8'h80)) 
    FAST_TRANSMT_PT_D1_i_1
       (.I0(CAN_PHY_TX_POS_FLOP_X2),
        .I1(BRS_EN_BTR),
        .I2(TXE_TXING_reg_0),
        .O(BRS_L_SP_FE_reg_0));
  LUT5 #(
    .INIT(32'hA8AAA8A8)) 
    FAST_TRANSMT_PT_D1_i_2
       (.I0(\BTL_COUNTER_I_REG_reg[1] ),
        .I1(FAST_TRANSMT_PT_D1_i_3_n_0),
        .I2(BTL_TRNSMT_EN_FD1),
        .I3(BTL_TRNSMT_EN_FD1_i_2_n_0),
        .I4(FAST_TRANSMT_PT_D1_reg),
        .O(CAN_PHY_TX_POS_FLOP_X2));
  LUT5 #(
    .INIT(32'hBBBFAAAA)) 
    FAST_TRANSMT_PT_D1_i_3
       (.I0(RSYNC_FLG_I_reg_0),
        .I1(BTL_TRNSMT_EN_FD1_reg),
        .I2(\BTL_COUNTER_I_REG_reg[8] ),
        .I3(\BTL_COUNTER_I_REG_reg[8]_0 ),
        .I4(CAN_PHY_TX_LP_i_2_2),
        .O(FAST_TRANSMT_PT_D1_i_3_n_0));
  LUT6 #(
    .INIT(64'h5555004000000000)) 
    FBR_ERR_1TQ_i_1
       (.I0(\BTL_COUNTER_I_REG_reg[1] ),
        .I1(BRS_EN_BTR),
        .I2(E),
        .I3(\state_reg[4]_0 ),
        .I4(FBR_ERR_1TQ),
        .I5(dest_arst),
        .O(CLKM_EN_reg));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    IC_SYNC_ISR_BSOFF_i_1
       (.I0(\state_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[1] ),
        .I2(\state_reg_n_0_[2] ),
        .I3(Q),
        .I4(\state_reg_n_0_[3] ),
        .O(\state_reg[0]_3 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT5 #(
    .INIT(32'h00010000)) 
    IC_SYNC_SR_BIDLE_i_1
       (.I0(\state_reg_n_0_[2] ),
        .I1(\state_reg_n_0_[3] ),
        .I2(Q),
        .I3(\state_reg_n_0_[1] ),
        .I4(\state_reg_n_0_[0] ),
        .O(RXE_OL_BIDLE));
  LUT6 #(
    .INIT(64'h0800000000000000)) 
    IC_SYNC_SR_BSFR_i_1
       (.I0(MSR_SBR_FS2),
        .I1(\state_reg_n_0_[3] ),
        .I2(Q),
        .I3(\state_reg_n_0_[2] ),
        .I4(\state_reg_n_0_[1] ),
        .I5(\state_reg_n_0_[0] ),
        .O(RXE_OL_BSFR));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    IC_SYNC_SR_PEE_i_1
       (.I0(\state_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[1] ),
        .I2(Q),
        .I3(\state_reg_n_0_[3] ),
        .I4(\state_reg_n_0_[2] ),
        .O(\state_reg[0]_2 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    IC_SYNC_SR_RSTST_i_1
       (.I0(Q),
        .I1(\state_reg_n_0_[3] ),
        .I2(\state_reg_n_0_[2] ),
        .I3(\state_reg_n_0_[0] ),
        .I4(\state_reg_n_0_[1] ),
        .O(RXE_OL_RSTST));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT5 #(
    .INIT(32'hAEAEFFAE)) 
    \ID_FOR_MATCH[11]_i_1 
       (.I0(\ID_FOR_MATCH[11]_i_2_n_0 ),
        .I1(\RXE_SREG_I_reg_n_0_[11] ),
        .I2(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I3(\RXE_SREG_I_reg[24]_0 [4]),
        .I4(\ID_FOR_MATCH[11]_i_3_n_0 ),
        .O(\RXE_SREG_I_reg[24]_1 [20]));
  LUT6 #(
    .INIT(64'h44444F4444444444)) 
    \ID_FOR_MATCH[11]_i_2 
       (.I0(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .I1(data0[31]),
        .I2(RXE_MSGPAD_SEL_FS1[2]),
        .I3(RXE_MSGPAD_SEL_FS1[0]),
        .I4(RXE_MSGPAD_SEL_FS1[1]),
        .I5(\RXE_SREG_I_reg[24]_0 [1]),
        .O(\ID_FOR_MATCH[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFDFF)) 
    \ID_FOR_MATCH[11]_i_3 
       (.I0(RXE_DLC_I[1]),
        .I1(RXE_DLC_I[0]),
        .I2(RXE_DLC_I[3]),
        .I3(RXE_MSGPAD_SEL_FS1[2]),
        .I4(RXE_MSGPAD_SEL_FS1[1]),
        .I5(RXE_MSGPAD_SEL_FS1[0]),
        .O(\ID_FOR_MATCH[11]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT5 #(
    .INIT(32'hAEAEFFAE)) 
    \ID_FOR_MATCH[12]_i_1 
       (.I0(\ID_FOR_MATCH[12]_i_2_n_0 ),
        .I1(\RXE_SREG_I_reg_n_0_[12] ),
        .I2(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I3(\RXE_SREG_I_reg[24]_0 [3]),
        .I4(\ID_FOR_MATCH[11]_i_3_n_0 ),
        .O(\RXE_SREG_I_reg[24]_1 [19]));
  LUT6 #(
    .INIT(64'h44444F4444444444)) 
    \ID_FOR_MATCH[12]_i_2 
       (.I0(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .I1(data0[30]),
        .I2(RXE_MSGPAD_SEL_FS1[2]),
        .I3(RXE_MSGPAD_SEL_FS1[0]),
        .I4(RXE_MSGPAD_SEL_FS1[1]),
        .I5(\RXE_SREG_I_reg[24]_0 [0]),
        .O(\ID_FOR_MATCH[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h44F444F4FFFF44F4)) 
    \ID_FOR_MATCH[13]_i_1 
       (.I0(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .I1(data0[29]),
        .I2(\RXE_SREG_I_reg_n_0_[13] ),
        .I3(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I4(\RXE_SREG_I_reg[24]_0 [2]),
        .I5(\ID_FOR_MATCH[11]_i_3_n_0 ),
        .O(\RXE_SREG_I_reg[24]_1 [18]));
  LUT6 #(
    .INIT(64'h44F444F4FFFF44F4)) 
    \ID_FOR_MATCH[14]_i_1 
       (.I0(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .I1(data0[28]),
        .I2(\RXE_SREG_I_reg_n_0_[14] ),
        .I3(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I4(\RXE_SREG_I_reg[24]_0 [1]),
        .I5(\ID_FOR_MATCH[11]_i_3_n_0 ),
        .O(\RXE_SREG_I_reg[24]_1 [17]));
  LUT6 #(
    .INIT(64'h44F444F4FFFF44F4)) 
    \ID_FOR_MATCH[15]_i_1 
       (.I0(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .I1(data0[27]),
        .I2(\RXE_SREG_I_reg_n_0_[15] ),
        .I3(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I4(\RXE_SREG_I_reg[24]_0 [0]),
        .I5(\ID_FOR_MATCH[11]_i_3_n_0 ),
        .O(\RXE_SREG_I_reg[24]_1 [16]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \ID_FOR_MATCH[16]_i_1 
       (.I0(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .I1(\RXE_SREG_I_reg[24]_0 [7]),
        .I2(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I3(\RXE_SREG_I_reg_n_0_[16] ),
        .O(\RXE_SREG_I_reg[24]_1 [15]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \ID_FOR_MATCH[17]_i_1 
       (.I0(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .I1(\RXE_SREG_I_reg[24]_0 [6]),
        .I2(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I3(\RXE_SREG_I_reg_n_0_[17] ),
        .O(\RXE_SREG_I_reg[24]_1 [14]));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \ID_FOR_MATCH[18]_i_1 
       (.I0(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .I1(\RXE_SREG_I_reg[24]_0 [5]),
        .I2(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I3(\RXE_SREG_I_reg_n_0_[18] ),
        .O(\RXE_SREG_I_reg[24]_1 [13]));
  LUT4 #(
    .INIT(16'h4F44)) 
    \ID_FOR_MATCH[19]_i_1 
       (.I0(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .I1(\RXE_SREG_I_reg[24]_0 [4]),
        .I2(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I3(data0[31]),
        .O(\RXE_SREG_I_reg[24]_1 [12]));
  LUT4 #(
    .INIT(16'h4F44)) 
    \ID_FOR_MATCH[20]_i_1 
       (.I0(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .I1(\RXE_SREG_I_reg[24]_0 [3]),
        .I2(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I3(data0[30]),
        .O(\RXE_SREG_I_reg[24]_1 [11]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \ID_FOR_MATCH[21]_i_1 
       (.I0(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .I1(\RXE_SREG_I_reg[24]_0 [2]),
        .I2(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I3(data0[29]),
        .O(\RXE_SREG_I_reg[24]_1 [10]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \ID_FOR_MATCH[22]_i_1 
       (.I0(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .I1(\RXE_SREG_I_reg[24]_0 [1]),
        .I2(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I3(data0[28]),
        .O(\RXE_SREG_I_reg[24]_1 [9]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \ID_FOR_MATCH[23]_i_1 
       (.I0(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .I1(\RXE_SREG_I_reg[24]_0 [0]),
        .I2(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I3(data0[27]),
        .O(\RXE_SREG_I_reg[24]_1 [8]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \ID_FOR_MATCH[24]_i_1 
       (.I0(\RXE_SREG_I_reg[24]_0 [7]),
        .I1(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .O(\RXE_SREG_I_reg[24]_1 [7]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \ID_FOR_MATCH[25]_i_1 
       (.I0(\RXE_SREG_I_reg[24]_0 [6]),
        .I1(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .O(\RXE_SREG_I_reg[24]_1 [6]));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \ID_FOR_MATCH[26]_i_1 
       (.I0(\RXE_SREG_I_reg[24]_0 [5]),
        .I1(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .O(\RXE_SREG_I_reg[24]_1 [5]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \ID_FOR_MATCH[27]_i_1 
       (.I0(\RXE_SREG_I_reg[24]_0 [4]),
        .I1(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .O(\RXE_SREG_I_reg[24]_1 [4]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \ID_FOR_MATCH[28]_i_1 
       (.I0(\RXE_SREG_I_reg[24]_0 [3]),
        .I1(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .O(\RXE_SREG_I_reg[24]_1 [3]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \ID_FOR_MATCH[29]_i_1 
       (.I0(\RXE_SREG_I_reg[24]_0 [2]),
        .I1(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .O(\RXE_SREG_I_reg[24]_1 [2]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \ID_FOR_MATCH[30]_i_1 
       (.I0(\RXE_SREG_I_reg[24]_0 [1]),
        .I1(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .O(\RXE_SREG_I_reg[24]_1 [1]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \ID_FOR_MATCH[31]_i_1 
       (.I0(\RXE_SREG_I_reg[24]_0 [0]),
        .I1(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .O(\RXE_SREG_I_reg[24]_1 [0]));
  FDRE \ID_FOR_MATCH_reg[0] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [31]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [31]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[10] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [21]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [21]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[11] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [20]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [20]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[12] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [19]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [19]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[13] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [18]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [18]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[14] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [17]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [17]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[15] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [16]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [16]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[16] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [15]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [15]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[17] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [14]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [14]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[18] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [13]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [13]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[19] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [12]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [12]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[1] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [30]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [30]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[20] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [11]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [11]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[21] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [10]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [10]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[22] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [9]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [9]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[23] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [8]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [8]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[24] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [7]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [7]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[25] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [6]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [6]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[26] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [5]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [5]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[27] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [4]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [4]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[28] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [3]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [3]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[29] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [2]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [2]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[2] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [29]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [29]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[30] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [1]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [1]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[31] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [0]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [0]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[3] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [28]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [28]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[4] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [27]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [27]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[5] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [26]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [26]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[6] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [25]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [25]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[7] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [24]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [24]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[8] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [23]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [23]),
        .R(SYNC_RST_TL));
  FDRE \ID_FOR_MATCH_reg[9] 
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(\RXE_SREG_I_reg[24]_1 [22]),
        .Q(\ID_FOR_MATCH_reg[0]_0 [22]),
        .R(SYNC_RST_TL));
  FDRE ID_MATCH_EN_reg
       (.C(can_clk),
        .CE(\ID_FOR_MATCH_reg[31]_0 ),
        .D(ID_MATCH_EN_reg_0),
        .Q(ID_MATCH_EN),
        .R(SYNC_RST_TL));
  FDRE MSG_ON_CAN_BUS_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(MSG_ON_CAN_BUS_reg_0),
        .Q(MSG_ON_CAN_BUS),
        .R(SYNC_RST_TL));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT5 #(
    .INIT(32'hFFFF40FF)) 
    \PIPELINED_BITS[1]_i_2 
       (.I0(TXING_BRS_EN_BTR_D1),
        .I1(TXE_TXING_reg_0),
        .I2(BRS_EN_BTR),
        .I3(dest_arst),
        .I4(RXE_OL_LBACK_reg_0),
        .O(TXING_BRS_EN_BTR_D1_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT4 #(
    .INIT(16'h40FF)) 
    \RD_PTR[1]_i_1 
       (.I0(TXING_BRS_EN_BTR_D1),
        .I1(TXE_TXING_reg_0),
        .I2(BRS_EN_BTR),
        .I3(dest_arst),
        .O(TXING_BRS_EN_BTR_D1_reg));
  LUT5 #(
    .INIT(32'h0000FF7F)) 
    RSYNC_FLG_I_i_1
       (.I0(RSYNC_FLG_I_reg_0),
        .I1(RSYNC_FLG_I),
        .I2(\BTL_COUNTER_I_REG_reg[1] ),
        .I3(BSP_TXBIT_FD_reg),
        .I4(RSYNC_FLG_I_reg_1),
        .O(RSYNC_FLG_I_reg));
  LUT4 #(
    .INIT(16'hAAA8)) 
    RSYNC_FLG_I_i_2
       (.I0(RSYNC_FLG_I_reg_2),
        .I1(CAN_PHY_TX_LP_i_3_n_0),
        .I2(\state_reg[4]_3 ),
        .I3(CAN_PHY_TX_LP_i_4_n_0),
        .O(BSP_TXBIT_FD_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFFFF)) 
    RXE_BRS_I_i_2
       (.I0(\RXE_COUNTER_I_reg[5]_0 ),
        .I1(\RXE_COUNTER_I_reg[1]_0 ),
        .I2(TDC_TRIG_COND_D1_i_3_n_0),
        .I3(\state_reg_n_0_[3] ),
        .I4(Q),
        .I5(\state_reg_n_0_[2] ),
        .O(\state_reg[3]_0 ));
  FDRE RXE_BRS_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXE_BRS_I_reg_0),
        .Q(RXE_BRS_I),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    RXE_BTL_HSYNC_FD1_i_1
       (.I0(\RXE_COUNTER_I_reg[0]_1 ),
        .O(RXE_BTL_HSYNC_EN));
  LUT6 #(
    .INIT(64'h00000000F9FFF8FE)) 
    RXE_BTL_HSYNC_FD1_i_2
       (.I0(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I2(\RXE_COUNTER_I_reg[5]_0 ),
        .I3(BSP_IN_IFSPACE_i_1_n_0),
        .I4(\state_reg[2]_0 ),
        .I5(RXE_BTL_HSYNC_FD1_i_3_n_0),
        .O(\RXE_COUNTER_I_reg[0]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT5 #(
    .INIT(32'h00010008)) 
    RXE_BTL_HSYNC_FD1_i_3
       (.I0(\state_reg_n_0_[2] ),
        .I1(\state_reg_n_0_[3] ),
        .I2(Q),
        .I3(\state_reg_n_0_[1] ),
        .I4(\state_reg_n_0_[0] ),
        .O(RXE_BTL_HSYNC_FD1_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \RXE_COUNTER_I[0]_i_1 
       (.I0(\RXE_COUNTER_I_reg[3]_0 [0]),
        .O(\RXE_COUNTER_I[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \RXE_COUNTER_I[1]_i_1 
       (.I0(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [0]),
        .O(p_0_in__2[1]));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \RXE_COUNTER_I[2]_i_1 
       (.I0(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [2]),
        .O(p_0_in__2[2]));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \RXE_COUNTER_I[3]_i_1 
       (.I0(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [2]),
        .O(p_0_in__2[3]));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \RXE_COUNTER_I[4]_i_1 
       (.I0(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I1(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [0]),
        .O(\RXE_COUNTER_I[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \RXE_COUNTER_I[5]_i_1 
       (.I0(\RXE_COUNTER_I_reg_n_0_[5] ),
        .I1(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I5(\RXE_COUNTER_I_reg_n_0_[4] ),
        .O(p_0_in__2[5]));
  LUT6 #(
    .INIT(64'hAAAA6AAAAAAAAAAA)) 
    \RXE_COUNTER_I[6]_i_1 
       (.I0(\RXE_COUNTER_I_reg_n_0_[6] ),
        .I1(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I2(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I4(\RXE_COUNTER_I[6]_i_2_n_0 ),
        .I5(\RXE_COUNTER_I_reg_n_0_[5] ),
        .O(p_0_in__2[6]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \RXE_COUNTER_I[6]_i_2 
       (.I0(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [0]),
        .O(\RXE_COUNTER_I[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \RXE_COUNTER_I[7]_i_1 
       (.I0(\RXE_COUNTER_I_reg_n_0_[7] ),
        .I1(\RXE_COUNTER_I_reg_n_0_[6] ),
        .I2(\RXE_COUNTER_I_reg_n_0_[5] ),
        .I3(\RXE_COUNTER_I[8]_i_11_n_0 ),
        .O(p_0_in__2[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFD00)) 
    \RXE_COUNTER_I[8]_i_1 
       (.I0(\RXE_COUNTER_I[8]_i_4_n_0 ),
        .I1(\RXE_COUNTER_I[8]_i_5_n_0 ),
        .I2(\RXE_COUNTER_I[8]_i_6_n_0 ),
        .I3(\RXE_COUNTER_I_reg[8]_0 ),
        .I4(\RXE_COUNTER_I[8]_i_8_n_0 ),
        .I5(\RXE_COUNTER_I[8]_i_9_n_0 ),
        .O(\RXE_COUNTER_I[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \RXE_COUNTER_I[8]_i_11 
       (.I0(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I1(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [0]),
        .O(\RXE_COUNTER_I[8]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h0E0FFE0F0E00FE00)) 
    \RXE_COUNTER_I[8]_i_12 
       (.I0(RXE_ERRFLG_I_reg_0),
        .I1(\RXE_COUNTER_I[8]_i_22_n_0 ),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg_n_0_[1] ),
        .I4(EMU_REC_I20_carry_i_9_n_0),
        .I5(\RXE_COUNTER_I_reg[0]_0 ),
        .O(\RXE_COUNTER_I[8]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \RXE_COUNTER_I[8]_i_13 
       (.I0(\state_reg_n_0_[3] ),
        .I1(\state_reg_n_0_[2] ),
        .O(\RXE_COUNTER_I[8]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF5DDD0000)) 
    \RXE_COUNTER_I[8]_i_14 
       (.I0(\state_reg[4]_0 ),
        .I1(\RXE_MSGPAD_SEL_FS1_reg[0]_0 ),
        .I2(\state[4]_i_7_n_0 ),
        .I3(\RXE_COUNTER_I[8]_i_23_n_0 ),
        .I4(\RXE_COUNTER_I[8]_i_24_n_0 ),
        .I5(\RXE_COUNTER_I[8]_i_25_n_0 ),
        .O(\RXE_COUNTER_I[8]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000000FD)) 
    \RXE_COUNTER_I[8]_i_15 
       (.I0(\state_reg[4]_0 ),
        .I1(\state[4]_i_8_n_0 ),
        .I2(\state[2]_i_18_n_0 ),
        .I3(\state_reg_n_0_[3] ),
        .I4(\state_reg_n_0_[2] ),
        .I5(\RXE_SREG_I[0]_i_3_n_0 ),
        .O(\RXE_COUNTER_I[8]_i_15_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT3 #(
    .INIT(8'h0D)) 
    \RXE_COUNTER_I[8]_i_16 
       (.I0(\state_reg_n_0_[1] ),
        .I1(\state_reg_n_0_[2] ),
        .I2(\state_reg_n_0_[3] ),
        .O(\RXE_COUNTER_I[8]_i_16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    \RXE_COUNTER_I[8]_i_17 
       (.I0(SM_FLAG_I_i_7_n_0),
        .I1(\RXE_MSGPAD_SEL_FS1_reg[0]_0 ),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg_n_0_[1] ),
        .O(\RXE_COUNTER_I[8]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFAEFF)) 
    \RXE_COUNTER_I[8]_i_18 
       (.I0(\state[0]_i_12_n_0 ),
        .I1(\state[0]_i_11_n_0 ),
        .I2(\EMU_REC_I[7]_i_7_n_0 ),
        .I3(\state_reg[4]_0 ),
        .I4(\state[2]_i_15_n_0 ),
        .I5(\RXE_COUNTER_I[8]_i_26_n_0 ),
        .O(\RXE_COUNTER_I[8]_i_18_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \RXE_COUNTER_I[8]_i_19 
       (.I0(\state_reg_n_0_[3] ),
        .I1(Q),
        .O(\RXE_COUNTER_I[8]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h82AAAAA8AAAAAAA8)) 
    \RXE_COUNTER_I[8]_i_2 
       (.I0(\RXE_COUNTER_I_reg[0]_3 ),
        .I1(\state_reg_n_0_[3] ),
        .I2(Q),
        .I3(\state_reg_n_0_[2] ),
        .I4(\state_reg_n_0_[1] ),
        .I5(\state_reg_n_0_[0] ),
        .O(RXE_COUNTER_I0177_out));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT4 #(
    .INIT(16'h0222)) 
    \RXE_COUNTER_I[8]_i_20 
       (.I0(\state_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[1] ),
        .I2(BSP_CRCERR_I_CANFD_FLG_i_5_n_0),
        .I3(\state_reg[4]_0 ),
        .O(\RXE_COUNTER_I[8]_i_20_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \RXE_COUNTER_I[8]_i_21 
       (.I0(\state_reg_n_0_[2] ),
        .I1(Q),
        .O(\RXE_COUNTER_I[8]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000020001)) 
    \RXE_COUNTER_I[8]_i_22 
       (.I0(RXE_ERRFLG_I),
        .I1(\RXE_MSGPAD_SEL_FS1[1]_i_7_n_0 ),
        .I2(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I3(BSP_IC_FRM_ERROR_I_i_8_n_0),
        .I4(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I5(\RXE_COUNTER_I_reg_n_0_[6] ),
        .O(\RXE_COUNTER_I[8]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEFFF)) 
    \RXE_COUNTER_I[8]_i_23 
       (.I0(RXE_ERRFLG_I_reg_0),
        .I1(\RXE_MSGPAD_SEL_FS1[1]_i_5_n_0 ),
        .I2(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I4(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I5(TDC_TRIG_COND_D1_i_4_n_0),
        .O(\RXE_COUNTER_I[8]_i_23_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT4 #(
    .INIT(16'h0010)) 
    \RXE_COUNTER_I[8]_i_24 
       (.I0(\state_reg_n_0_[2] ),
        .I1(\state_reg_n_0_[3] ),
        .I2(\state_reg_n_0_[1] ),
        .I3(\state_reg_n_0_[0] ),
        .O(\RXE_COUNTER_I[8]_i_24_n_0 ));
  LUT6 #(
    .INIT(64'h1000000010001000)) 
    \RXE_COUNTER_I[8]_i_25 
       (.I0(\state_reg_n_0_[1] ),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[3] ),
        .I3(\state_reg_n_0_[2] ),
        .I4(\state[2]_i_10_n_0 ),
        .I5(RXE_ERRFLG_I_reg_0),
        .O(\RXE_COUNTER_I[8]_i_25_n_0 ));
  LUT6 #(
    .INIT(64'h2020000023200000)) 
    \RXE_COUNTER_I[8]_i_26 
       (.I0(RXE_COUNTER_RST30_out),
        .I1(\state_reg_n_0_[1] ),
        .I2(\state_reg_n_0_[0] ),
        .I3(SM_FLAG_I_i_5_n_0),
        .I4(\RXE_MSGPAD_SEL_FS1_reg[0]_0 ),
        .I5(TXE_MSGVAL_FD1_i_3_n_0),
        .O(\RXE_COUNTER_I[8]_i_26_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT5 #(
    .INIT(32'h6CCCCCCC)) 
    \RXE_COUNTER_I[8]_i_3 
       (.I0(\RXE_COUNTER_I_reg_n_0_[7] ),
        .I1(\RXE_COUNTER_I_reg_n_0_[8] ),
        .I2(\RXE_COUNTER_I[8]_i_11_n_0 ),
        .I3(\RXE_COUNTER_I_reg_n_0_[5] ),
        .I4(\RXE_COUNTER_I_reg_n_0_[6] ),
        .O(p_0_in__2[8]));
  LUT6 #(
    .INIT(64'hBBBBBBBBFBFBFBBB)) 
    \RXE_COUNTER_I[8]_i_4 
       (.I0(\state_reg_n_0_[2] ),
        .I1(\state_reg_n_0_[3] ),
        .I2(\state[0]_i_10_n_0 ),
        .I3(\state[1]_i_13_n_0 ),
        .I4(RXE_OL_SLEEP_i_2_n_0),
        .I5(\RXE_COUNTER_I[8]_i_12_n_0 ),
        .O(\RXE_COUNTER_I[8]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFD400)) 
    \RXE_COUNTER_I[8]_i_5 
       (.I0(\state[1]_i_13_n_0 ),
        .I1(\state_reg_n_0_[1] ),
        .I2(\state_reg_n_0_[0] ),
        .I3(\RXE_COUNTER_I[8]_i_13_n_0 ),
        .I4(\RXE_COUNTER_I[8]_i_14_n_0 ),
        .I5(\RXE_COUNTER_I[8]_i_15_n_0 ),
        .O(\RXE_COUNTER_I[8]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAAAA88A8AAAA8AAA)) 
    \RXE_COUNTER_I[8]_i_6 
       (.I0(\RXE_COUNTER_I[8]_i_16_n_0 ),
        .I1(\state[0]_i_20_n_0 ),
        .I2(\RXE_SREG_I[0]_i_3_n_0 ),
        .I3(\state_reg_n_0_[2] ),
        .I4(\RXE_COUNTER_I[8]_i_17_n_0 ),
        .I5(\state[1]_i_13_n_0 ),
        .O(\RXE_COUNTER_I[8]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \RXE_COUNTER_I[8]_i_8 
       (.I0(\RXE_COUNTER_I[8]_i_18_n_0 ),
        .I1(E),
        .I2(\state_reg_n_0_[2] ),
        .I3(Q),
        .O(\RXE_COUNTER_I[8]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFDFDDDD55555555)) 
    \RXE_COUNTER_I[8]_i_9 
       (.I0(dest_arst),
        .I1(\RXE_COUNTER_I[8]_i_19_n_0 ),
        .I2(\state[0]_i_15_n_0 ),
        .I3(\RXE_COUNTER_I[8]_i_20_n_0 ),
        .I4(\RXE_COUNTER_I[8]_i_21_n_0 ),
        .I5(E),
        .O(\RXE_COUNTER_I[8]_i_9_n_0 ));
  FDRE \RXE_COUNTER_I_reg[0] 
       (.C(can_clk),
        .CE(RXE_COUNTER_I0177_out),
        .D(\RXE_COUNTER_I[0]_i_1_n_0 ),
        .Q(\RXE_COUNTER_I_reg[3]_0 [0]),
        .R(\RXE_COUNTER_I[8]_i_1_n_0 ));
  FDRE \RXE_COUNTER_I_reg[1] 
       (.C(can_clk),
        .CE(RXE_COUNTER_I0177_out),
        .D(p_0_in__2[1]),
        .Q(\RXE_COUNTER_I_reg[3]_0 [1]),
        .R(\RXE_COUNTER_I[8]_i_1_n_0 ));
  FDRE \RXE_COUNTER_I_reg[2] 
       (.C(can_clk),
        .CE(RXE_COUNTER_I0177_out),
        .D(p_0_in__2[2]),
        .Q(\RXE_COUNTER_I_reg[3]_0 [2]),
        .R(\RXE_COUNTER_I[8]_i_1_n_0 ));
  FDRE \RXE_COUNTER_I_reg[3] 
       (.C(can_clk),
        .CE(RXE_COUNTER_I0177_out),
        .D(p_0_in__2[3]),
        .Q(\RXE_COUNTER_I_reg[3]_0 [3]),
        .R(\RXE_COUNTER_I[8]_i_1_n_0 ));
  FDRE \RXE_COUNTER_I_reg[4] 
       (.C(can_clk),
        .CE(RXE_COUNTER_I0177_out),
        .D(\RXE_COUNTER_I[4]_i_1_n_0 ),
        .Q(\RXE_COUNTER_I_reg_n_0_[4] ),
        .R(\RXE_COUNTER_I[8]_i_1_n_0 ));
  FDRE \RXE_COUNTER_I_reg[5] 
       (.C(can_clk),
        .CE(RXE_COUNTER_I0177_out),
        .D(p_0_in__2[5]),
        .Q(\RXE_COUNTER_I_reg_n_0_[5] ),
        .R(\RXE_COUNTER_I[8]_i_1_n_0 ));
  FDRE \RXE_COUNTER_I_reg[6] 
       (.C(can_clk),
        .CE(RXE_COUNTER_I0177_out),
        .D(p_0_in__2[6]),
        .Q(\RXE_COUNTER_I_reg_n_0_[6] ),
        .R(\RXE_COUNTER_I[8]_i_1_n_0 ));
  FDRE \RXE_COUNTER_I_reg[7] 
       (.C(can_clk),
        .CE(RXE_COUNTER_I0177_out),
        .D(p_0_in__2[7]),
        .Q(\RXE_COUNTER_I_reg_n_0_[7] ),
        .R(\RXE_COUNTER_I[8]_i_1_n_0 ));
  FDRE \RXE_COUNTER_I_reg[8] 
       (.C(can_clk),
        .CE(RXE_COUNTER_I0177_out),
        .D(p_0_in__2[8]),
        .Q(\RXE_COUNTER_I_reg_n_0_[8] ),
        .R(\RXE_COUNTER_I[8]_i_1_n_0 ));
  CARRY4 \RXE_COUNTER_RST3_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\RXE_COUNTER_RST3_inferred__0/i__carry_n_0 ,\RXE_COUNTER_RST3_inferred__0/i__carry_n_1 ,\RXE_COUNTER_RST3_inferred__0/i__carry_n_2 ,\RXE_COUNTER_RST3_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_RXE_COUNTER_RST3_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_1__7_n_0,i__carry_i_2__6_n_0,i__carry_i_3__7_n_0,i__carry_i_4__5_n_0}));
  CARRY4 \RXE_COUNTER_RST3_inferred__0/i__carry__0 
       (.CI(\RXE_COUNTER_RST3_inferred__0/i__carry_n_0 ),
        .CO({\RXE_COUNTER_RST3_inferred__0/i__carry__0_n_0 ,\RXE_COUNTER_RST3_inferred__0/i__carry__0_n_1 ,\RXE_COUNTER_RST3_inferred__0/i__carry__0_n_2 ,\RXE_COUNTER_RST3_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_RXE_COUNTER_RST3_inferred__0/i__carry__0_O_UNCONNECTED [3:0]),
        .S({i__carry__0_i_1__4_n_0,i__carry__0_i_2__4_n_0,i__carry__0_i_3__1_n_0,i__carry__0_i_4__1_n_0}));
  CARRY4 \RXE_COUNTER_RST3_inferred__0/i__carry__1 
       (.CI(\RXE_COUNTER_RST3_inferred__0/i__carry__0_n_0 ),
        .CO({\NLW_RXE_COUNTER_RST3_inferred__0/i__carry__1_CO_UNCONNECTED [3],RXE_COUNTER_RST30_out,\RXE_COUNTER_RST3_inferred__0/i__carry__1_n_2 ,\RXE_COUNTER_RST3_inferred__0/i__carry__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_RXE_COUNTER_RST3_inferred__0/i__carry__1_O_UNCONNECTED [3:0]),
        .S({1'b0,i__carry__1_i_1__0_n_0,i__carry__1_i_2__0_n_0,i__carry__1_i_3__0_n_0}));
  LUT5 #(
    .INIT(32'hAEAEFFAE)) 
    \RXE_DATA_STORED_AT_DLC[0]_i_2 
       (.I0(\RXE_DATA_STORED_AT_DLC[0]_i_4_n_0 ),
        .I1(\RXE_SREG_I_reg[24]_0 [7]),
        .I2(\RXE_DATA_STORED_AT_DLC[0]_i_5_n_0 ),
        .I3(\RXE_SREG_I_reg_n_0_[8] ),
        .I4(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .O(\RXE_SREG_I_reg[24]_1 [31]));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \RXE_DATA_STORED_AT_DLC[0]_i_4 
       (.I0(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I1(\RXE_SREG_I_reg_n_0_[0] ),
        .I2(\RXE_DATA_STORED_AT_DLC[0]_i_6_n_0 ),
        .I3(\RXE_SREG_I_reg_n_0_[16] ),
        .I4(\ID_FOR_MATCH[11]_i_3_n_0 ),
        .O(\RXE_DATA_STORED_AT_DLC[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFBFFFF)) 
    \RXE_DATA_STORED_AT_DLC[0]_i_5 
       (.I0(RXE_DLC_I[1]),
        .I1(RXE_DLC_I[0]),
        .I2(RXE_MSGPAD_SEL_FS1[0]),
        .I3(RXE_MSGPAD_SEL_FS1[1]),
        .I4(RXE_MSGPAD_SEL_FS1[2]),
        .I5(RXE_DLC_I[3]),
        .O(\RXE_DATA_STORED_AT_DLC[0]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h02300200)) 
    \RXE_DATA_STORED_AT_DLC[0]_i_6 
       (.I0(data0[31]),
        .I1(RXE_MSGPAD_SEL_FS1[2]),
        .I2(RXE_MSGPAD_SEL_FS1[1]),
        .I3(RXE_MSGPAD_SEL_FS1[0]),
        .I4(\RXE_SREG_I_reg[24]_0 [3]),
        .O(\RXE_DATA_STORED_AT_DLC[0]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \RXE_DATA_STORED_AT_DLC[10]_i_1 
       (.I0(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .I1(\RXE_SREG_I_reg_n_0_[18] ),
        .I2(\RXE_DATA_STORED_AT_DLC[10]_i_2_n_0 ),
        .I3(\RXE_SREG_I_reg_n_0_[10] ),
        .I4(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .O(\RXE_SREG_I_reg[24]_1 [21]));
  LUT6 #(
    .INIT(64'h44444F4444444444)) 
    \RXE_DATA_STORED_AT_DLC[10]_i_2 
       (.I0(\ID_FOR_MATCH[11]_i_3_n_0 ),
        .I1(\RXE_SREG_I_reg[24]_0 [5]),
        .I2(RXE_MSGPAD_SEL_FS1[2]),
        .I3(RXE_MSGPAD_SEL_FS1[0]),
        .I4(RXE_MSGPAD_SEL_FS1[1]),
        .I5(\RXE_SREG_I_reg[24]_0 [2]),
        .O(\RXE_DATA_STORED_AT_DLC[10]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAEAEFFAE)) 
    \RXE_DATA_STORED_AT_DLC[1]_i_1 
       (.I0(\RXE_DATA_STORED_AT_DLC[1]_i_2_n_0 ),
        .I1(\RXE_SREG_I_reg[24]_0 [6]),
        .I2(\RXE_DATA_STORED_AT_DLC[0]_i_5_n_0 ),
        .I3(\RXE_SREG_I_reg_n_0_[9] ),
        .I4(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .O(\RXE_SREG_I_reg[24]_1 [30]));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \RXE_DATA_STORED_AT_DLC[1]_i_2 
       (.I0(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I1(\RXE_SREG_I_reg_n_0_[1] ),
        .I2(\RXE_DATA_STORED_AT_DLC[1]_i_3_n_0 ),
        .I3(\RXE_SREG_I_reg_n_0_[17] ),
        .I4(\ID_FOR_MATCH[11]_i_3_n_0 ),
        .O(\RXE_DATA_STORED_AT_DLC[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h02300200)) 
    \RXE_DATA_STORED_AT_DLC[1]_i_3 
       (.I0(data0[30]),
        .I1(RXE_MSGPAD_SEL_FS1[2]),
        .I2(RXE_MSGPAD_SEL_FS1[1]),
        .I3(RXE_MSGPAD_SEL_FS1[0]),
        .I4(\RXE_SREG_I_reg[24]_0 [2]),
        .O(\RXE_DATA_STORED_AT_DLC[1]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hAEAEFFAE)) 
    \RXE_DATA_STORED_AT_DLC[2]_i_1 
       (.I0(\RXE_DATA_STORED_AT_DLC[2]_i_2_n_0 ),
        .I1(\RXE_SREG_I_reg[24]_0 [5]),
        .I2(\RXE_DATA_STORED_AT_DLC[0]_i_5_n_0 ),
        .I3(\RXE_SREG_I_reg_n_0_[10] ),
        .I4(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .O(\RXE_SREG_I_reg[24]_1 [29]));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \RXE_DATA_STORED_AT_DLC[2]_i_2 
       (.I0(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I1(\RXE_SREG_I_reg_n_0_[2] ),
        .I2(\RXE_DATA_STORED_AT_DLC[2]_i_3_n_0 ),
        .I3(\RXE_SREG_I_reg_n_0_[18] ),
        .I4(\ID_FOR_MATCH[11]_i_3_n_0 ),
        .O(\RXE_DATA_STORED_AT_DLC[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h02300200)) 
    \RXE_DATA_STORED_AT_DLC[2]_i_3 
       (.I0(\RXE_SREG_I_reg[24]_0 [1]),
        .I1(RXE_MSGPAD_SEL_FS1[2]),
        .I2(RXE_MSGPAD_SEL_FS1[0]),
        .I3(RXE_MSGPAD_SEL_FS1[1]),
        .I4(data0[29]),
        .O(\RXE_DATA_STORED_AT_DLC[2]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hAEAEFFAE)) 
    \RXE_DATA_STORED_AT_DLC[3]_i_1 
       (.I0(\RXE_DATA_STORED_AT_DLC[3]_i_2_n_0 ),
        .I1(\RXE_SREG_I_reg[24]_0 [4]),
        .I2(\RXE_DATA_STORED_AT_DLC[0]_i_5_n_0 ),
        .I3(\RXE_SREG_I_reg_n_0_[11] ),
        .I4(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .O(\RXE_SREG_I_reg[24]_1 [28]));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \RXE_DATA_STORED_AT_DLC[3]_i_2 
       (.I0(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I1(\RXE_SREG_I_reg_n_0_[3] ),
        .I2(\RXE_DATA_STORED_AT_DLC[3]_i_3_n_0 ),
        .I3(data0[31]),
        .I4(\ID_FOR_MATCH[11]_i_3_n_0 ),
        .O(\RXE_DATA_STORED_AT_DLC[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h02300200)) 
    \RXE_DATA_STORED_AT_DLC[3]_i_3 
       (.I0(data0[28]),
        .I1(RXE_MSGPAD_SEL_FS1[2]),
        .I2(RXE_MSGPAD_SEL_FS1[1]),
        .I3(RXE_MSGPAD_SEL_FS1[0]),
        .I4(\RXE_SREG_I_reg[24]_0 [0]),
        .O(\RXE_DATA_STORED_AT_DLC[3]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hAEAEFFAE)) 
    \RXE_DATA_STORED_AT_DLC[4]_i_1 
       (.I0(\RXE_DATA_STORED_AT_DLC[4]_i_2_n_0 ),
        .I1(\RXE_SREG_I_reg[24]_0 [3]),
        .I2(\RXE_DATA_STORED_AT_DLC[0]_i_5_n_0 ),
        .I3(\RXE_SREG_I_reg_n_0_[12] ),
        .I4(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .O(\RXE_SREG_I_reg[24]_1 [27]));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \RXE_DATA_STORED_AT_DLC[4]_i_2 
       (.I0(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I1(\RXE_SREG_I_reg_n_0_[4] ),
        .I2(\RXE_DATA_STORED_AT_DLC[4]_i_3_n_0 ),
        .I3(data0[30]),
        .I4(\ID_FOR_MATCH[11]_i_3_n_0 ),
        .O(\RXE_DATA_STORED_AT_DLC[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h02300200)) 
    \RXE_DATA_STORED_AT_DLC[4]_i_3 
       (.I0(data0[27]),
        .I1(RXE_MSGPAD_SEL_FS1[2]),
        .I2(RXE_MSGPAD_SEL_FS1[1]),
        .I3(RXE_MSGPAD_SEL_FS1[0]),
        .I4(RXE_FDF_I),
        .O(\RXE_DATA_STORED_AT_DLC[4]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hAEAEFFAE)) 
    \RXE_DATA_STORED_AT_DLC[5]_i_1 
       (.I0(\RXE_DATA_STORED_AT_DLC[5]_i_2_n_0 ),
        .I1(\RXE_SREG_I_reg[24]_0 [2]),
        .I2(\RXE_DATA_STORED_AT_DLC[0]_i_5_n_0 ),
        .I3(\RXE_SREG_I_reg_n_0_[13] ),
        .I4(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .O(\RXE_SREG_I_reg[24]_1 [26]));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \RXE_DATA_STORED_AT_DLC[5]_i_2 
       (.I0(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I1(\RXE_SREG_I_reg_n_0_[5] ),
        .I2(\RXE_DATA_STORED_AT_DLC[5]_i_3_n_0 ),
        .I3(data0[29]),
        .I4(\ID_FOR_MATCH[11]_i_3_n_0 ),
        .O(\RXE_DATA_STORED_AT_DLC[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT5 #(
    .INIT(32'h02300200)) 
    \RXE_DATA_STORED_AT_DLC[5]_i_3 
       (.I0(\RXE_SREG_I_reg[24]_0 [7]),
        .I1(RXE_MSGPAD_SEL_FS1[2]),
        .I2(RXE_MSGPAD_SEL_FS1[1]),
        .I3(RXE_MSGPAD_SEL_FS1[0]),
        .I4(RXE_BRS_I),
        .O(\RXE_DATA_STORED_AT_DLC[5]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hAEAEFFAE)) 
    \RXE_DATA_STORED_AT_DLC[6]_i_1 
       (.I0(\RXE_DATA_STORED_AT_DLC[6]_i_2_n_0 ),
        .I1(\RXE_SREG_I_reg[24]_0 [1]),
        .I2(\RXE_DATA_STORED_AT_DLC[0]_i_5_n_0 ),
        .I3(\RXE_SREG_I_reg_n_0_[14] ),
        .I4(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .O(\RXE_SREG_I_reg[24]_1 [25]));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \RXE_DATA_STORED_AT_DLC[6]_i_2 
       (.I0(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I1(\RXE_SREG_I_reg_n_0_[6] ),
        .I2(\RXE_DATA_STORED_AT_DLC[6]_i_3_n_0 ),
        .I3(data0[28]),
        .I4(\ID_FOR_MATCH[11]_i_3_n_0 ),
        .O(\RXE_DATA_STORED_AT_DLC[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h02300200)) 
    \RXE_DATA_STORED_AT_DLC[6]_i_3 
       (.I0(\RXE_SREG_I_reg[24]_0 [6]),
        .I1(RXE_MSGPAD_SEL_FS1[2]),
        .I2(RXE_MSGPAD_SEL_FS1[1]),
        .I3(RXE_MSGPAD_SEL_FS1[0]),
        .I4(RXE_ESI_I_reg_0),
        .O(\RXE_DATA_STORED_AT_DLC[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hAEAEFFAE)) 
    \RXE_DATA_STORED_AT_DLC[7]_i_1 
       (.I0(\RXE_DATA_STORED_AT_DLC[7]_i_2_n_0 ),
        .I1(\RXE_SREG_I_reg[24]_0 [0]),
        .I2(\RXE_DATA_STORED_AT_DLC[0]_i_5_n_0 ),
        .I3(\RXE_SREG_I_reg_n_0_[15] ),
        .I4(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .O(\RXE_SREG_I_reg[24]_1 [24]));
  LUT6 #(
    .INIT(64'h44F444F4FFFF44F4)) 
    \RXE_DATA_STORED_AT_DLC[7]_i_2 
       (.I0(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I1(\RXE_SREG_I_reg_n_0_[7] ),
        .I2(\RXE_SREG_I_reg[24]_0 [5]),
        .I3(\RXE_DATA_STORED_AT_DLC[7]_i_3_n_0 ),
        .I4(data0[27]),
        .I5(\ID_FOR_MATCH[11]_i_3_n_0 ),
        .O(\RXE_DATA_STORED_AT_DLC[7]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    \RXE_DATA_STORED_AT_DLC[7]_i_3 
       (.I0(RXE_MSGPAD_SEL_FS1[2]),
        .I1(RXE_MSGPAD_SEL_FS1[0]),
        .I2(RXE_MSGPAD_SEL_FS1[1]),
        .O(\RXE_DATA_STORED_AT_DLC[7]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \RXE_DATA_STORED_AT_DLC[8]_i_1 
       (.I0(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .I1(\RXE_SREG_I_reg_n_0_[16] ),
        .I2(\RXE_DATA_STORED_AT_DLC[8]_i_2_n_0 ),
        .I3(\RXE_SREG_I_reg_n_0_[8] ),
        .I4(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .O(\RXE_SREG_I_reg[24]_1 [23]));
  LUT6 #(
    .INIT(64'h44444F4444444444)) 
    \RXE_DATA_STORED_AT_DLC[8]_i_2 
       (.I0(\ID_FOR_MATCH[11]_i_3_n_0 ),
        .I1(\RXE_SREG_I_reg[24]_0 [7]),
        .I2(RXE_MSGPAD_SEL_FS1[2]),
        .I3(RXE_MSGPAD_SEL_FS1[0]),
        .I4(RXE_MSGPAD_SEL_FS1[1]),
        .I5(\RXE_SREG_I_reg[24]_0 [4]),
        .O(\RXE_DATA_STORED_AT_DLC[8]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \RXE_DATA_STORED_AT_DLC[9]_i_1 
       (.I0(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .I1(\RXE_SREG_I_reg_n_0_[17] ),
        .I2(\RXE_DATA_STORED_AT_DLC[9]_i_2_n_0 ),
        .I3(\RXE_SREG_I_reg_n_0_[9] ),
        .I4(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .O(\RXE_SREG_I_reg[24]_1 [22]));
  LUT6 #(
    .INIT(64'h44444F4444444444)) 
    \RXE_DATA_STORED_AT_DLC[9]_i_2 
       (.I0(\ID_FOR_MATCH[11]_i_3_n_0 ),
        .I1(\RXE_SREG_I_reg[24]_0 [6]),
        .I2(RXE_MSGPAD_SEL_FS1[2]),
        .I3(RXE_MSGPAD_SEL_FS1[0]),
        .I4(RXE_MSGPAD_SEL_FS1[1]),
        .I5(\RXE_SREG_I_reg[24]_0 [3]),
        .O(\RXE_DATA_STORED_AT_DLC[9]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \RXE_DLC_I[3]_i_1 
       (.I0(\RXE_MSGPAD_SEL_FS1[1]_i_1_n_0 ),
        .I1(E),
        .O(\RXE_DLC_I[3]_i_1_n_0 ));
  FDRE \RXE_DLC_I_reg[0] 
       (.C(can_clk),
        .CE(\RXE_DLC_I[3]_i_1_n_0 ),
        .D(\RXE_SREG_I_reg[24]_0 [0]),
        .Q(RXE_DLC_I[0]),
        .R(SYNC_RST_TL));
  FDRE \RXE_DLC_I_reg[1] 
       (.C(can_clk),
        .CE(\RXE_DLC_I[3]_i_1_n_0 ),
        .D(\RXE_SREG_I_reg[24]_0 [1]),
        .Q(RXE_DLC_I[1]),
        .R(SYNC_RST_TL));
  FDRE \RXE_DLC_I_reg[2] 
       (.C(can_clk),
        .CE(\RXE_DLC_I[3]_i_1_n_0 ),
        .D(\RXE_SREG_I_reg[24]_0 [2]),
        .Q(RXE_DLC_I[2]),
        .R(SYNC_RST_TL));
  FDRE \RXE_DLC_I_reg[3] 
       (.C(can_clk),
        .CE(\RXE_DLC_I[3]_i_1_n_0 ),
        .D(\RXE_SREG_I_reg[24]_0 [3]),
        .Q(RXE_DLC_I[3]),
        .R(SYNC_RST_TL));
  LUT6 #(
    .INIT(64'h5F5F001000000000)) 
    RXE_ERRFLG_I_i_1
       (.I0(RXE_ERRFLG_I_i_2_n_0),
        .I1(RXE_ERRFLG_I_reg_0),
        .I2(E),
        .I3(TXE_MSGVAL_FD1_i_3_n_0),
        .I4(RXE_ERRFLG_I),
        .I5(dest_arst),
        .O(RXE_ERRFLG_I_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT5 #(
    .INIT(32'hFFFFFDFF)) 
    RXE_ERRFLG_I_i_2
       (.I0(\state_reg_n_0_[1] ),
        .I1(\state_reg_n_0_[0] ),
        .I2(Q),
        .I3(\state_reg_n_0_[3] ),
        .I4(\state_reg_n_0_[2] ),
        .O(RXE_ERRFLG_I_i_2_n_0));
  FDRE RXE_ERRFLG_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXE_ERRFLG_I_i_1_n_0),
        .Q(RXE_ERRFLG_I),
        .R(1'b0));
  FDRE RXE_ESI_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXE_ESI_I_reg_1),
        .Q(RXE_ESI_I_reg_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hCFFFAAFFFFFFFFFF)) 
    RXE_FDF_I_i_2
       (.I0(\state[4]_i_7_n_0 ),
        .I1(RXE_IDE_I),
        .I2(\RXE_COUNTER_I_reg[4]_0 ),
        .I3(\state[0]_i_6_n_0 ),
        .I4(\state_reg_n_0_[0] ),
        .I5(\state_reg_n_0_[1] ),
        .O(RXE_IDE_I_reg_0));
  FDRE RXE_FDF_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXE_FDF_I_reg_0),
        .Q(RXE_FDF_I),
        .R(SYNC_RST_TL));
  FDRE RXE_IC_RXOK_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXE_IC_RXOK_I_reg_0),
        .Q(IC_SYNC_ISR_RXOK),
        .R(SYNC_RST_TL));
  FDRE RXE_IDE_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXE_IDE_I_reg_1),
        .Q(RXE_IDE_I),
        .R(SYNC_RST_TL));
  LUT6 #(
    .INIT(64'hFFFFFFFF55555575)) 
    RXE_MSGINVAL_FD1_i_1
       (.I0(RXE_MSGINVAL_FD1_i_2_n_0),
        .I1(MATCH_RESULT_TO_BSP),
        .I2(\RXE_MSGPAD_SEL_FS1[1]_i_4_n_0 ),
        .I3(\RXE_COUNTER_I_reg[1]_0 ),
        .I4(RXE_MSGINVAL_FD1_i_4_n_0),
        .I5(BSP_IN_IFSPACE_i_1_n_0),
        .O(RXE_MSGINVAL_I));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT5 #(
    .INIT(32'hD3FBFFFF)) 
    RXE_MSGINVAL_FD1_i_2
       (.I0(\state_reg_n_0_[2] ),
        .I1(\state_reg_n_0_[3] ),
        .I2(Q),
        .I3(\state_reg_n_0_[1] ),
        .I4(\state_reg_n_0_[0] ),
        .O(RXE_MSGINVAL_FD1_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'hB)) 
    RXE_MSGINVAL_FD1_i_3
       (.I0(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [0]),
        .O(\RXE_COUNTER_I_reg[1]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT5 #(
    .INIT(32'hFFFFF7FF)) 
    RXE_MSGINVAL_FD1_i_4
       (.I0(\state_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[1] ),
        .I2(\state_reg_n_0_[3] ),
        .I3(\state_reg_n_0_[2] ),
        .I4(Q),
        .O(RXE_MSGINVAL_FD1_i_4_n_0));
  FDRE RXE_MSGINVAL_FD1_reg
       (.C(can_clk),
        .CE(E),
        .D(RXE_MSGINVAL_I),
        .Q(RXE_MSGINVAL_FD1),
        .R(SYNC_RST_TL));
  FDRE RXE_MSGINVAL_FD2_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXE_MSGINVAL_FD1),
        .Q(RXE_MSGINVAL_FD2),
        .R(SYNC_RST_TL));
  LUT4 #(
    .INIT(16'h0080)) 
    \RXE_MSGPAD_SEL_FS1[0]_i_1 
       (.I0(\RXE_MSGPAD_SEL_FS1_reg[0]_0 ),
        .I1(\state_reg[4]_1 ),
        .I2(\RXE_COUNTER_I_reg[4]_1 ),
        .I3(RXE_ERRFLG_I_reg_0),
        .O(RXE_MSGPAD_SEL_FS10));
  LUT6 #(
    .INIT(64'h008000800080AAAA)) 
    \RXE_MSGPAD_SEL_FS1[1]_i_1 
       (.I0(\RXE_MSGPAD_SEL_FS1_reg[0]_0 ),
        .I1(\RXE_MSGPAD_SEL_FS1[1]_i_3_n_0 ),
        .I2(\RXE_MSGPAD_SEL_FS1[1]_i_4_n_0 ),
        .I3(\RXE_MSGPAD_SEL_FS1[1]_i_5_n_0 ),
        .I4(\state_reg[2]_0 ),
        .I5(TXE_MSGVAL_FD1_i_3_n_0),
        .O(\RXE_MSGPAD_SEL_FS1[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT5 #(
    .INIT(32'h01000000)) 
    \RXE_MSGPAD_SEL_FS1[1]_i_3 
       (.I0(Q),
        .I1(\state_reg_n_0_[3] ),
        .I2(\state_reg_n_0_[2] ),
        .I3(\state_reg_n_0_[0] ),
        .I4(\state_reg_n_0_[1] ),
        .O(\RXE_MSGPAD_SEL_FS1[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \RXE_MSGPAD_SEL_FS1[1]_i_4 
       (.I0(\RXE_COUNTER_I_reg_n_0_[5] ),
        .I1(\RXE_COUNTER_I_reg_n_0_[6] ),
        .I2(\RXE_COUNTER_I_reg_n_0_[7] ),
        .I3(\RXE_COUNTER_I_reg_n_0_[8] ),
        .I4(\RXE_MSGPAD_SEL_FS1[1]_i_7_n_0 ),
        .I5(\RXE_COUNTER_I_reg_n_0_[4] ),
        .O(\RXE_MSGPAD_SEL_FS1[1]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \RXE_MSGPAD_SEL_FS1[1]_i_5 
       (.I0(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [0]),
        .O(\RXE_MSGPAD_SEL_FS1[1]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFB)) 
    \RXE_MSGPAD_SEL_FS1[1]_i_6 
       (.I0(\state_reg_n_0_[2] ),
        .I1(Q),
        .I2(\state_reg_n_0_[3] ),
        .I3(\state_reg_n_0_[0] ),
        .I4(\state_reg_n_0_[1] ),
        .O(\state_reg[2]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \RXE_MSGPAD_SEL_FS1[1]_i_7 
       (.I0(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [2]),
        .O(\RXE_MSGPAD_SEL_FS1[1]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \RXE_MSGPAD_SEL_FS1[2]_i_1 
       (.I0(\RXE_MSGPAD_SEL_FS1[2]_i_2_n_0 ),
        .I1(\RXE_MSGPAD_SEL_FS1[2]_i_3_n_0 ),
        .I2(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [1]),
        .O(RXE_MSGPAD_SEL));
  LUT6 #(
    .INIT(64'h0000020000000020)) 
    \RXE_MSGPAD_SEL_FS1[2]_i_2 
       (.I0(\RXE_MSGPAD_SEL_FS1_reg[0]_0 ),
        .I1(\state_reg_n_0_[3] ),
        .I2(\state_reg_n_0_[2] ),
        .I3(Q),
        .I4(\state_reg_n_0_[1] ),
        .I5(\state_reg_n_0_[0] ),
        .O(\RXE_MSGPAD_SEL_FS1[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000096090090000)) 
    \RXE_MSGPAD_SEL_FS1[2]_i_3 
       (.I0(RXE_DLC_I[2]),
        .I1(\RXE_COUNTER_I_reg_n_0_[5] ),
        .I2(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I3(RXE_DLC_I[1]),
        .I4(RXE_DLC_I[0]),
        .I5(\RXE_COUNTER_I_reg[3]_0 [3]),
        .O(\RXE_MSGPAD_SEL_FS1[2]_i_3_n_0 ));
  FDRE \RXE_MSGPAD_SEL_FS1_reg[0] 
       (.C(can_clk),
        .CE(E),
        .D(RXE_MSGPAD_SEL_FS10),
        .Q(RXE_MSGPAD_SEL_FS1[0]),
        .R(SYNC_RST_TL));
  FDRE \RXE_MSGPAD_SEL_FS1_reg[1] 
       (.C(can_clk),
        .CE(E),
        .D(\RXE_MSGPAD_SEL_FS1[1]_i_1_n_0 ),
        .Q(RXE_MSGPAD_SEL_FS1[1]),
        .R(SYNC_RST_TL));
  FDRE \RXE_MSGPAD_SEL_FS1_reg[2] 
       (.C(can_clk),
        .CE(E),
        .D(RXE_MSGPAD_SEL),
        .Q(RXE_MSGPAD_SEL_FS1[2]),
        .R(SYNC_RST_TL));
  FDRE RXE_MSGVAL_D1_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(p_192_in),
        .Q(RXE_MSGVAL_D1_I),
        .R(SYNC_RST_TL));
  LUT5 #(
    .INIT(32'h00040000)) 
    RXE_MSGVAL_EARLY_F0_i_1
       (.I0(RXE_MSGVAL_D1_I),
        .I1(p_192_in),
        .I2(RXF_FULL_AT_MSG_BOUNDARY),
        .I3(OL_RX_FIFO_FULL),
        .I4(RXE_RXMSG_VAL_F0_reg),
        .O(RXE_MSGVAL_EARLY_F00));
  LUT5 #(
    .INIT(32'h00100000)) 
    RXE_MSGVAL_EARLY_F1_i_1
       (.I0(RXF_FULL_AT_MSG_BOUNDARY_F1),
        .I1(OL_RX_FIFO_FULL_F1),
        .I2(RXE_RXMSG_INVAL_F0_reg),
        .I3(RXE_MSGVAL_D1_I),
        .I4(p_192_in),
        .O(RXE_MSGVAL_EARLY_F10));
  LUT5 #(
    .INIT(32'h40400040)) 
    RXE_MSGVAL_FD1_i_1
       (.I0(RXE_MSGVAL_FD1_i_2_n_0),
        .I1(RXE_ERRFLG_I_reg_0),
        .I2(MATCH_RESULT_TO_BSP),
        .I3(TXE_TXING_reg_0),
        .I4(RXE_OL_LBACK_reg_0),
        .O(p_192_in));
  LUT6 #(
    .INIT(64'hFFFFFFEFFFFFFFFF)) 
    RXE_MSGVAL_FD1_i_2
       (.I0(\RXE_SREG_I[0]_i_3_n_0 ),
        .I1(\state_reg_n_0_[3] ),
        .I2(\state_reg_n_0_[2] ),
        .I3(Q),
        .I4(\RXE_COUNTER_I_reg[1]_0 ),
        .I5(\RXE_MSGPAD_SEL_FS1[1]_i_4_n_0 ),
        .O(RXE_MSGVAL_FD1_i_2_n_0));
  FDRE RXE_MSGVAL_FD1_reg
       (.C(can_clk),
        .CE(E),
        .D(p_192_in),
        .Q(RXE_MSGVAL_FD1_reg_0),
        .R(SYNC_RST_TL));
  FDRE RXE_MSGVAL_FD2_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXE_MSGVAL_FD1_reg_0),
        .Q(RXE_MSGVAL_FD2_reg_0),
        .R(SYNC_RST_TL));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA8)) 
    RXE_OL_LBACK_i_1
       (.I0(RXE_OL_LBACK_reg_0),
        .I1(\state_reg_n_0_[1] ),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg_n_0_[2] ),
        .I4(\state_reg_n_0_[3] ),
        .I5(Q),
        .O(RXE_OL_LBACK_I));
  FDRE RXE_OL_LBACK_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXE_OL_LBACK_I),
        .Q(RXE_OL_LBACK),
        .R(SYNC_RST_TL));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    RXE_OL_SLEEP_i_1
       (.I0(MSR_SLEEP_FS2),
        .I1(BUFFER_EMPTY_INTERNAL),
        .I2(\state_reg_n_0_[2] ),
        .I3(\state_reg_n_0_[3] ),
        .I4(Q),
        .I5(RXE_OL_SLEEP_i_2_n_0),
        .O(RXE_OL_SLEEP_I));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT2 #(
    .INIT(4'hB)) 
    RXE_OL_SLEEP_i_2
       (.I0(\state_reg_n_0_[1] ),
        .I1(\state_reg_n_0_[0] ),
        .O(RXE_OL_SLEEP_i_2_n_0));
  FDRE RXE_OL_SLEEP_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXE_OL_SLEEP_I),
        .Q(RXE_OL_SLEEP),
        .R(SYNC_RST_TL));
  LUT5 #(
    .INIT(32'hFD000000)) 
    RXE_PASSFLG_I_i_1
       (.I0(E),
        .I1(\state_reg[4]_0 ),
        .I2(RXE_PASSFLG_I_reg_0),
        .I3(RXE_PASSFLG_I_reg_1),
        .I4(dest_arst),
        .O(RXE_PASSFLG_I_i_1_n_0));
  FDRE RXE_PASSFLG_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXE_PASSFLG_I_i_1_n_0),
        .Q(RXE_PASSFLG_I),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFF7FFFF7FF)) 
    RXE_RTR_I_i_2
       (.I0(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I4(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I5(TDC_TRIG_COND_D1_i_4_n_0),
        .O(\RXE_COUNTER_I_reg[0]_2 ));
  FDRE RXE_RTR_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXE_RTR_I_reg_0),
        .Q(RXE_RTR_I),
        .R(SYNC_RST_TL));
  LUT5 #(
    .INIT(32'h77777077)) 
    RXE_RXFIFO_WEN_FD1_i_1
       (.I0(RXE_RXFIFO_WEN_FD1_i_2_n_0),
        .I1(BSP_IDVALID_FD1_i_3_n_0),
        .I2(TXE_TXING_reg_1),
        .I3(TXE_TXING_reg_0),
        .I4(RXE_OL_LBACK_reg_0),
        .O(RXE_RXFIFO_WEN_FD10));
  LUT3 #(
    .INIT(8'h01)) 
    RXE_RXFIFO_WEN_FD1_i_10
       (.I0(RXE_DLC_I[0]),
        .I1(RXE_DLC_I[2]),
        .I2(RXE_DLC_I[1]),
        .O(RXE_RXFIFO_WEN_FD1_i_10_n_0));
  LUT6 #(
    .INIT(64'h5DDD0000FFFFFFFF)) 
    RXE_RXFIFO_WEN_FD1_i_2
       (.I0(RXE_RXFIFO_WEN_FD18),
        .I1(RXE_RXFIFO_WEN_FD1_i_4_n_0),
        .I2(RXE_RXFIFO_WEN_FD1_i_5_n_0),
        .I3(RXE_RXFIFO_WEN_FD1_i_6_n_0),
        .I4(TXE_DLC_I_EN_i_4_n_0),
        .I5(\RXE_MSGPAD_SEL_FS1_reg[0]_0 ),
        .O(RXE_RXFIFO_WEN_FD1_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFB)) 
    RXE_RXFIFO_WEN_FD1_i_4
       (.I0(\state_reg_n_0_[3] ),
        .I1(\state_reg_n_0_[2] ),
        .I2(Q),
        .I3(\state_reg_n_0_[0] ),
        .I4(\state_reg_n_0_[1] ),
        .O(RXE_RXFIFO_WEN_FD1_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT3 #(
    .INIT(8'h54)) 
    RXE_RXFIFO_WEN_FD1_i_5
       (.I0(RXE_DLC_I[3]),
        .I1(RXE_DLC_I[1]),
        .I2(RXE_DLC_I[0]),
        .O(RXE_RXFIFO_WEN_FD1_i_5_n_0));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT5 #(
    .INIT(32'h00100000)) 
    RXE_RXFIFO_WEN_FD1_i_6
       (.I0(\state_reg_n_0_[3] ),
        .I1(\state_reg_n_0_[2] ),
        .I2(Q),
        .I3(\state_reg_n_0_[1] ),
        .I4(\state_reg_n_0_[0] ),
        .O(RXE_RXFIFO_WEN_FD1_i_6_n_0));
  LUT5 #(
    .INIT(32'h08101001)) 
    RXE_RXFIFO_WEN_FD1_i_7
       (.I0(\RXE_COUNTER_I_reg_n_0_[8] ),
        .I1(\RXE_COUNTER_I_reg_n_0_[7] ),
        .I2(RXE_DLC_I[3]),
        .I3(RXE_RXFIFO_WEN_FD1_i_10_n_0),
        .I4(\RXE_COUNTER_I_reg_n_0_[6] ),
        .O(RXE_RXFIFO_WEN_FD1_i_7_n_0));
  LUT6 #(
    .INIT(64'h0000096090090000)) 
    RXE_RXFIFO_WEN_FD1_i_8
       (.I0(RXE_DLC_I[2]),
        .I1(\RXE_COUNTER_I_reg_n_0_[5] ),
        .I2(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I3(RXE_DLC_I[1]),
        .I4(RXE_DLC_I[0]),
        .I5(\RXE_COUNTER_I_reg[3]_0 [3]),
        .O(RXE_RXFIFO_WEN_FD1_i_8_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    RXE_RXFIFO_WEN_FD1_i_9
       (.I0(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [1]),
        .O(RXE_RXFIFO_WEN_FD1_i_9_n_0));
  FDRE RXE_RXFIFO_WEN_FD1_reg
       (.C(can_clk),
        .CE(E),
        .D(RXE_RXFIFO_WEN_FD10),
        .Q(RXE_RXFIFO_WEN_FD1_reg_0),
        .R(SYNC_RST_TL));
  CARRY4 RXE_RXFIFO_WEN_FD1_reg_i_3
       (.CI(1'b0),
        .CO({NLW_RXE_RXFIFO_WEN_FD1_reg_i_3_CO_UNCONNECTED[3],RXE_RXFIFO_WEN_FD18,RXE_RXFIFO_WEN_FD1_reg_i_3_n_2,RXE_RXFIFO_WEN_FD1_reg_i_3_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_RXE_RXFIFO_WEN_FD1_reg_i_3_O_UNCONNECTED[3:0]),
        .S({1'b0,RXE_RXFIFO_WEN_FD1_i_7_n_0,RXE_RXFIFO_WEN_FD1_i_8_n_0,RXE_RXFIFO_WEN_FD1_i_9_n_0}));
  FDRE RXE_RXFIFO_WEN_FD2_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXE_RXFIFO_WEN_FD1_reg_0),
        .Q(RXE_RXFIFO_WEN_FD2),
        .R(SYNC_RST_TL));
  LUT6 #(
    .INIT(64'hFFFFFFF444444444)) 
    RXE_RXMSG_INVAL_F0_i_1
       (.I0(RXE_MSGINVAL_FD2),
        .I1(RXE_MSGINVAL_FD1),
        .I2(OL_RX_FIFO_FULL),
        .I3(RXF_FULL_AT_MSG_BOUNDARY),
        .I4(RXE_RXMSG_INVAL_F0_reg),
        .I5(RXE_RXMSG_INVAL_F1_i_2_n_0),
        .O(RXE_RXMSG_INVAL_F00));
  LUT6 #(
    .INIT(64'hFFFFFFF444444444)) 
    RXE_RXMSG_INVAL_F1_i_1
       (.I0(RXE_MSGINVAL_FD2),
        .I1(RXE_MSGINVAL_FD1),
        .I2(RXE_RXMSG_VAL_F0_reg),
        .I3(OL_RX_FIFO_FULL_F1),
        .I4(RXF_FULL_AT_MSG_BOUNDARY_F1),
        .I5(RXE_RXMSG_INVAL_F1_i_2_n_0),
        .O(RXE_RXMSG_INVAL_F10));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT2 #(
    .INIT(4'h2)) 
    RXE_RXMSG_INVAL_F1_i_2
       (.I0(RXE_MSGVAL_FD1_reg_0),
        .I1(RXE_MSGVAL_FD2_reg_0),
        .O(RXE_RXMSG_INVAL_F1_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT5 #(
    .INIT(32'h00040000)) 
    RXE_RXMSG_VAL_F0_i_1
       (.I0(RXE_MSGVAL_FD2_reg_0),
        .I1(RXE_MSGVAL_FD1_reg_0),
        .I2(RXF_FULL_AT_MSG_BOUNDARY),
        .I3(OL_RX_FIFO_FULL),
        .I4(RXE_RXMSG_VAL_F0_reg),
        .O(RXE_RXMSG_VAL_F00));
  LUT5 #(
    .INIT(32'h00100000)) 
    RXE_RXMSG_VAL_F1_i_1
       (.I0(RXF_FULL_AT_MSG_BOUNDARY_F1),
        .I1(OL_RX_FIFO_FULL_F1),
        .I2(RXE_RXMSG_INVAL_F0_reg),
        .I3(RXE_MSGVAL_FD2_reg_0),
        .I4(RXE_MSGVAL_FD1_reg_0),
        .O(RXE_RXMSG_VAL_F10));
  LUT6 #(
    .INIT(64'h88888888888A8888)) 
    \RXE_SREG_I[0]_i_1 
       (.I0(\RXE_SREG_I_reg[31]_0 ),
        .I1(SM_FLAG_I_reg),
        .I2(\RXE_SREG_I[0]_i_3_n_0 ),
        .I3(Q),
        .I4(\state_reg_n_0_[3] ),
        .I5(\state_reg_n_0_[2] ),
        .O(RXE_SREG_I0));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \RXE_SREG_I[0]_i_3 
       (.I0(\state_reg_n_0_[1] ),
        .I1(\state_reg_n_0_[0] ),
        .O(\RXE_SREG_I[0]_i_3_n_0 ));
  FDRE \RXE_SREG_I_reg[0] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(\RXE_SREG_I_reg_n_0_[1] ),
        .Q(\RXE_SREG_I_reg_n_0_[0] ),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[10] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(\RXE_SREG_I_reg_n_0_[11] ),
        .Q(\RXE_SREG_I_reg_n_0_[10] ),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[11] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(\RXE_SREG_I_reg_n_0_[12] ),
        .Q(\RXE_SREG_I_reg_n_0_[11] ),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[12] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(\RXE_SREG_I_reg_n_0_[13] ),
        .Q(\RXE_SREG_I_reg_n_0_[12] ),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[13] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(\RXE_SREG_I_reg_n_0_[14] ),
        .Q(\RXE_SREG_I_reg_n_0_[13] ),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[14] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(\RXE_SREG_I_reg_n_0_[15] ),
        .Q(\RXE_SREG_I_reg_n_0_[14] ),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[15] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(\RXE_SREG_I_reg_n_0_[16] ),
        .Q(\RXE_SREG_I_reg_n_0_[15] ),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[16] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(\RXE_SREG_I_reg_n_0_[17] ),
        .Q(\RXE_SREG_I_reg_n_0_[16] ),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[17] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(\RXE_SREG_I_reg_n_0_[18] ),
        .Q(\RXE_SREG_I_reg_n_0_[17] ),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[18] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(data0[31]),
        .Q(\RXE_SREG_I_reg_n_0_[18] ),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[19] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(data0[30]),
        .Q(data0[31]),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[1] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(\RXE_SREG_I_reg_n_0_[2] ),
        .Q(\RXE_SREG_I_reg_n_0_[1] ),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[20] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(data0[29]),
        .Q(data0[30]),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[21] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(data0[28]),
        .Q(data0[29]),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[22] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(data0[27]),
        .Q(data0[28]),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[23] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(\RXE_SREG_I_reg[24]_0 [7]),
        .Q(data0[27]),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[24] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(\RXE_SREG_I_reg[24]_0 [6]),
        .Q(\RXE_SREG_I_reg[24]_0 [7]),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[25] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(\RXE_SREG_I_reg[24]_0 [5]),
        .Q(\RXE_SREG_I_reg[24]_0 [6]),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[26] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(\RXE_SREG_I_reg[24]_0 [4]),
        .Q(\RXE_SREG_I_reg[24]_0 [5]),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[27] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(\RXE_SREG_I_reg[24]_0 [3]),
        .Q(\RXE_SREG_I_reg[24]_0 [4]),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[28] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(\RXE_SREG_I_reg[24]_0 [2]),
        .Q(\RXE_SREG_I_reg[24]_0 [3]),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[29] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(\RXE_SREG_I_reg[24]_0 [1]),
        .Q(\RXE_SREG_I_reg[24]_0 [2]),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[2] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(\RXE_SREG_I_reg_n_0_[3] ),
        .Q(\RXE_SREG_I_reg_n_0_[2] ),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[30] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(\RXE_SREG_I_reg[24]_0 [0]),
        .Q(\RXE_SREG_I_reg[24]_0 [1]),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[31] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(D),
        .Q(\RXE_SREG_I_reg[24]_0 [0]),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[3] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(\RXE_SREG_I_reg_n_0_[4] ),
        .Q(\RXE_SREG_I_reg_n_0_[3] ),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[4] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(\RXE_SREG_I_reg_n_0_[5] ),
        .Q(\RXE_SREG_I_reg_n_0_[4] ),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[5] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(\RXE_SREG_I_reg_n_0_[6] ),
        .Q(\RXE_SREG_I_reg_n_0_[5] ),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[6] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(\RXE_SREG_I_reg_n_0_[7] ),
        .Q(\RXE_SREG_I_reg_n_0_[6] ),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[7] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(\RXE_SREG_I_reg_n_0_[8] ),
        .Q(\RXE_SREG_I_reg_n_0_[7] ),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[8] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(\RXE_SREG_I_reg_n_0_[9] ),
        .Q(\RXE_SREG_I_reg_n_0_[8] ),
        .R(SYNC_RST_TL));
  FDRE \RXE_SREG_I_reg[9] 
       (.C(can_clk),
        .CE(RXE_SREG_I0),
        .D(\RXE_SREG_I_reg_n_0_[10] ),
        .Q(\RXE_SREG_I_reg_n_0_[9] ),
        .R(SYNC_RST_TL));
  LUT3 #(
    .INIT(8'h0E)) 
    SM_FLAG_I_FSB_i_1
       (.I0(SM_FLAG_I_FSB),
        .I1(\tlom/SM_FLAG_I1 ),
        .I2(\arststages_ff_reg[1] ),
        .O(SM_FLAG_I_FSB_reg));
  LUT6 #(
    .INIT(64'h4000404044444444)) 
    SM_FLAG_I_i_1
       (.I0(\tlom/SM_FLAG_I1 ),
        .I1(SM_FLAG_I_i_3_n_0),
        .I2(RXE_MSGINVAL_FD1_i_2_n_0),
        .I3(SM_FLAG_I_i_4_n_0),
        .I4(SM_FLAG_I_reg),
        .I5(\RXE_SREG_I_reg[31]_0 ),
        .O(BTL_SAMP_EN_D1_reg_1));
  LUT6 #(
    .INIT(64'h00000000F2220000)) 
    SM_FLAG_I_i_2
       (.I0(SM_FLAG_I_i_5_n_0),
        .I1(SM_FLAG_I_i_6_n_0),
        .I2(RXE_COUNTER_RST30_out),
        .I3(RXE_RXFIFO_WEN_FD1_i_6_n_0),
        .I4(E),
        .I5(SM_STUFFBIT_PD1_reg_n_0),
        .O(\tlom/SM_FLAG_I1 ));
  LUT6 #(
    .INIT(64'hAAAEAAAA00000000)) 
    SM_FLAG_I_i_3
       (.I0(SM_FLAG_I),
        .I1(\RXE_SREG_I_reg[31]_0 ),
        .I2(\RXE_COUNTER_I_reg[5]_0 ),
        .I3(\RXE_COUNTER_I[6]_i_2_n_0 ),
        .I4(\state_reg[4]_1 ),
        .I5(dest_arst),
        .O(SM_FLAG_I_i_3_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFBFFFF)) 
    SM_FLAG_I_i_4
       (.I0(Q),
        .I1(\state_reg_n_0_[2] ),
        .I2(\state_reg_n_0_[3] ),
        .I3(\state_reg_n_0_[1] ),
        .I4(\state_reg_n_0_[0] ),
        .I5(SM_FLAG_I_i_7_n_0),
        .O(SM_FLAG_I_i_4_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    SM_FLAG_I_i_5
       (.I0(\RXE_SREG_I_reg[24]_0 [1]),
        .I1(\RXE_SREG_I_reg[24]_0 [2]),
        .I2(\RXE_SREG_I_reg[24]_0 [0]),
        .I3(\RXE_SREG_I_reg[24]_0 [3]),
        .O(SM_FLAG_I_i_5_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
    SM_FLAG_I_i_6
       (.I0(\state_reg_n_0_[1] ),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[3] ),
        .I3(Q),
        .I4(\state_reg_n_0_[2] ),
        .I5(TXE_MSGVAL_FD1_i_3_n_0),
        .O(SM_FLAG_I_i_6_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF7FFF)) 
    SM_FLAG_I_i_7
       (.I0(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I4(TDC_TRIG_COND_D1_i_4_n_0),
        .I5(\RXE_COUNTER_I_reg_n_0_[4] ),
        .O(SM_FLAG_I_i_7_n_0));
  FDRE SM_STUFFBIT_PD1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(SM_STUFFBIT_PD),
        .Q(SM_STUFFBIT_PD1_reg_n_0),
        .R(SYNC_RST_TL));
  LUT6 #(
    .INIT(64'hFE00000000000000)) 
    SSP_EN_D1_i_1
       (.I0(SSP_EN_D1_reg),
        .I1(SSP_EN_D1_reg_0),
        .I2(BRS_EN_BTR),
        .I3(TXE_TXING_reg_0),
        .I4(BRS_EN_I_FLAG_reg_0),
        .I5(TDC_EN_FS2),
        .O(SSP_EN));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    TDCV_CNT_REG_WEN_i_2
       (.I0(\RXE_COUNTER_I_reg_n_0_[5] ),
        .I1(\RXE_COUNTER_I_reg_n_0_[6] ),
        .I2(\RXE_COUNTER_I_reg_n_0_[7] ),
        .I3(\RXE_COUNTER_I_reg_n_0_[8] ),
        .I4(BSP_IC_BIT_ERROR_I_i_6_n_0),
        .I5(\RXE_COUNTER_I_reg_n_0_[4] ),
        .O(\RXE_COUNTER_I_reg[5]_0 ));
  FDRE TDCV_CNT_REG_WEN_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TDCV_CNT_REG_WEN_reg_0),
        .Q(TDCV_CNT_REG_WEN),
        .R(SYNC_RST_TL));
  LUT6 #(
    .INIT(64'h0000000000000800)) 
    TDC_TRIG_COND_D1_i_1
       (.I0(TXE_TXING_reg_0),
        .I1(\RXE_COUNTER_I_reg[4]_0 ),
        .I2(\state_reg_n_0_[2] ),
        .I3(Q),
        .I4(\state_reg_n_0_[3] ),
        .I5(TDC_TRIG_COND_D1_i_3_n_0),
        .O(TDC_TRIG_COND));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    TDC_TRIG_COND_D1_i_2
       (.I0(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I1(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I3(TDC_TRIG_COND_D1_i_4_n_0),
        .I4(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I5(\RXE_COUNTER_I_reg[3]_0 [1]),
        .O(\RXE_COUNTER_I_reg[4]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT2 #(
    .INIT(4'hE)) 
    TDC_TRIG_COND_D1_i_3
       (.I0(\state_reg_n_0_[1] ),
        .I1(\state_reg_n_0_[0] ),
        .O(TDC_TRIG_COND_D1_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    TDC_TRIG_COND_D1_i_4
       (.I0(\RXE_COUNTER_I_reg_n_0_[8] ),
        .I1(\RXE_COUNTER_I_reg_n_0_[7] ),
        .I2(\RXE_COUNTER_I_reg_n_0_[6] ),
        .I3(\RXE_COUNTER_I_reg_n_0_[5] ),
        .O(TDC_TRIG_COND_D1_i_4_n_0));
  FDRE TXE_CFD_4_reg
       (.C(can_clk),
        .CE(TXE_DLC_I_EN),
        .D(\TXE_DLC_I_reg[0]_0 [27]),
        .Q(TXE_DLC_I_EXT[0]),
        .R(SYNC_RST_TL));
  FDRE TXE_CFD_5_reg
       (.C(can_clk),
        .CE(TXE_DLC_I_EN),
        .D(\TXE_DLC_I_reg[0]_0 [26]),
        .Q(TXE_CFD_5),
        .R(SYNC_RST_TL));
  LUT4 #(
    .INIT(16'h00F2)) 
    TXE_DLC_I_EN_i_1
       (.I0(TXE_TX_REN_I),
        .I1(TXE_TX_REN_D1),
        .I2(TXE_TX_REN_I_CFD_D1),
        .I3(BUFFER_EMPTY_INTERNAL),
        .O(TXE_TX_REN_D1_reg_0));
  LUT6 #(
    .INIT(64'hF1F1F0F0F1FFF0F0)) 
    TXE_DLC_I_EN_i_2
       (.I0(TXE_PREFETCH_FD),
        .I1(TXE_DLC_I_EN_i_3_n_0),
        .I2(TXE_PREFETCH_FD_i_2_n_0),
        .I3(TXE_DLC_I_EN_i_4_n_0),
        .I4(TXE_TXING_reg_0),
        .I5(SM_STUFFBIT_PD1_reg_n_0),
        .O(TXE_TX_REN_I));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFD)) 
    TXE_DLC_I_EN_i_3
       (.I0(\state_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[1] ),
        .I2(Q),
        .I3(\state_reg_n_0_[3] ),
        .I4(\state_reg_n_0_[2] ),
        .O(TXE_DLC_I_EN_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000AAA8AAAAAAAA)) 
    TXE_DLC_I_EN_i_4
       (.I0(TXE_DLC_I_EN_i_5_n_0),
        .I1(\RXE_COUNTER_I_reg_n_0_[6] ),
        .I2(TXE_MSGVAL_FD1_i_4_n_0),
        .I3(RXE_RXFIFO_WEN_FD1_i_4_n_0),
        .I4(RXE_RXFIFO_WEN_FD1_i_6_n_0),
        .I5(\RXE_COUNTER_I[8]_i_11_n_0 ),
        .O(TXE_DLC_I_EN_i_4_n_0));
  LUT6 #(
    .INIT(64'hEEE0EEEEEEEEEEEE)) 
    TXE_DLC_I_EN_i_5
       (.I0(TXE_MSGVAL_FD1_i_3_n_0),
        .I1(\state_reg[2]_0 ),
        .I2(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I4(\RXE_MSGPAD_SEL_FS1[1]_i_4_n_0 ),
        .I5(\RXE_MSGPAD_SEL_FS1[1]_i_3_n_0 ),
        .O(TXE_DLC_I_EN_i_5_n_0));
  FDRE TXE_DLC_I_EN_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TXE_TX_REN_D1_reg_0),
        .Q(TXE_DLC_I_EN),
        .R(SYNC_RST_TL));
  FDRE \TXE_DLC_I_reg[0] 
       (.C(can_clk),
        .CE(TXE_DLC_I_EN),
        .D(\TXE_DLC_I_reg[0]_0 [31]),
        .Q(TXE_DLC_I_EXT[1]),
        .R(SYNC_RST_TL));
  FDRE \TXE_DLC_I_reg[1] 
       (.C(can_clk),
        .CE(TXE_DLC_I_EN),
        .D(\TXE_DLC_I_reg[0]_0 [30]),
        .Q(TXE_DLC_I_EXT[2]),
        .R(SYNC_RST_TL));
  FDRE \TXE_DLC_I_reg[2] 
       (.C(can_clk),
        .CE(TXE_DLC_I_EN),
        .D(\TXE_DLC_I_reg[0]_0 [29]),
        .Q(TXE_DLC_I_EXT[3]),
        .R(SYNC_RST_TL));
  FDRE \TXE_DLC_I_reg[3] 
       (.C(can_clk),
        .CE(TXE_DLC_I_EN),
        .D(\TXE_DLC_I_reg[0]_0 [28]),
        .Q(TXE_DLC_I_EXT[4]),
        .R(SYNC_RST_TL));
  FDRE TXE_IC_ARBLSS_I_D1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TXE_IC_ARBLSS_I),
        .Q(IC_SYNC_ISR_ARBLST),
        .R(SYNC_RST_TL));
  FDRE TXE_IC_ARBLSS_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TXE_IC_ARBLSS_I_reg_0),
        .Q(TXE_IC_ARBLSS_I),
        .R(SYNC_RST_TL));
  FDRE TXE_IC_TXOK_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TXE_IC_TXOK_I_reg_0),
        .Q(IC_SYNC_ISR_TXOK),
        .R(SYNC_RST_TL));
  LUT6 #(
    .INIT(64'hFFFFFFFF0080008A)) 
    TXE_MSGINVAL_D1_i_1
       (.I0(\RXE_COUNTER_I_reg[4]_0 ),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .I3(TXE_MSGINVAL_D1_i_2_n_0),
        .I4(\state_reg_n_0_[2] ),
        .I5(TXE_TXING_reg_1),
        .O(TXE_MSGINVAL_I));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT2 #(
    .INIT(4'hB)) 
    TXE_MSGINVAL_D1_i_2
       (.I0(Q),
        .I1(\state_reg_n_0_[3] ),
        .O(TXE_MSGINVAL_D1_i_2_n_0));
  LUT6 #(
    .INIT(64'h0080800000000000)) 
    TXE_MSGINVAL_D1_i_3
       (.I0(\state_reg[4]_1 ),
        .I1(\state_reg[4]_0 ),
        .I2(TXE_TXING_reg_0),
        .I3(BSP_TXBIT_D1_reg_0),
        .I4(RXE_ERRFLG_I_reg_0),
        .I5(\state[4]_i_7_n_0 ),
        .O(TXE_TXING_reg_1));
  FDRE TXE_MSGINVAL_D1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TXE_MSGINVAL_I),
        .Q(TXE_MSGINVAL_D1),
        .R(SYNC_RST_TL));
  FDRE TXE_MSGINVAL_D2_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TXE_MSGINVAL_D1),
        .Q(TXE_MSGINVAL_D2),
        .R(SYNC_RST_TL));
  FDRE TXE_MSGINVAL_FD1_reg
       (.C(can_clk),
        .CE(E),
        .D(TXE_MSGINVAL_I),
        .Q(TXE_MSGINVAL_FD1),
        .R(SYNC_RST_TL));
  FDRE TXE_MSGINVAL_FD2_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TXE_MSGINVAL_FD1),
        .Q(TXE_MSGINVAL_FD2),
        .R(SYNC_RST_TL));
  FDRE TXE_MSGVAL_D1_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(\state_reg[1]_0 ),
        .Q(TXE_MSGVAL_D1_I),
        .R(SYNC_RST_TL));
  LUT6 #(
    .INIT(64'h0040000000000000)) 
    TXE_MSGVAL_FD1_i_1
       (.I0(TXE_MSGVAL_FD1_i_2_n_0),
        .I1(\state_reg_n_0_[1] ),
        .I2(\state_reg_n_0_[0] ),
        .I3(TXE_MSGVAL_FD1_i_3_n_0),
        .I4(TXE_TXING_reg_0),
        .I5(RXE_ERRFLG_I_reg_0),
        .O(\state_reg[1]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    TXE_MSGVAL_FD1_i_2
       (.I0(Q),
        .I1(\state_reg_n_0_[2] ),
        .I2(\state_reg_n_0_[3] ),
        .O(TXE_MSGVAL_FD1_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
    TXE_MSGVAL_FD1_i_3
       (.I0(\RXE_COUNTER_I_reg_n_0_[6] ),
        .I1(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I2(TXE_MSGVAL_FD1_i_4_n_0),
        .I3(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I4(\RXE_COUNTER_I_reg_n_0_[5] ),
        .I5(TXE_MSGVAL_FD1_i_5_n_0),
        .O(TXE_MSGVAL_FD1_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT2 #(
    .INIT(4'hE)) 
    TXE_MSGVAL_FD1_i_4
       (.I0(\RXE_COUNTER_I_reg_n_0_[7] ),
        .I1(\RXE_COUNTER_I_reg_n_0_[8] ),
        .O(TXE_MSGVAL_FD1_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    TXE_MSGVAL_FD1_i_5
       (.I0(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I1(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [3]),
        .O(TXE_MSGVAL_FD1_i_5_n_0));
  FDRE TXE_MSGVAL_FD1_reg
       (.C(can_clk),
        .CE(E),
        .D(\state_reg[1]_0 ),
        .Q(TXE_MSGVAL_FD1),
        .R(SYNC_RST_TL));
  FDRE TXE_MSGVAL_FD2_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TXE_MSGVAL_FD1),
        .Q(TXE_MSGVAL_FD2),
        .R(SYNC_RST_TL));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    TXE_PASSTX_I_i_3
       (.I0(TXE_PASSTX_I_i_4_n_0),
        .I1(\state_reg_n_0_[2] ),
        .I2(\state_reg_n_0_[3] ),
        .I3(Q),
        .I4(\state_reg_n_0_[1] ),
        .I5(\state_reg_n_0_[0] ),
        .O(\state_reg[2]_1 ));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    TXE_PASSTX_I_i_4
       (.I0(TDC_TRIG_COND_D1_i_4_n_0),
        .I1(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I3(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I4(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I5(\RXE_COUNTER_I_reg[3]_0 [0]),
        .O(TXE_PASSTX_I_i_4_n_0));
  FDRE TXE_PASSTX_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TXE_PASSTX_I_reg_1),
        .Q(TXE_PASSTX_I_reg_0),
        .R(SYNC_RST_TL));
  LUT6 #(
    .INIT(64'h0000000077FF7000)) 
    TXE_PREFETCH_FD_i_1
       (.I0(\RXE_COUNTER_I_reg[4]_0 ),
        .I1(\state_reg[4]_1 ),
        .I2(TXE_PREFETCH_FD_i_2_n_0),
        .I3(BTL_SAMP_EN_FD2),
        .I4(TXE_PREFETCH_FD),
        .I5(TXE_PREFETCH_FD_i_3_n_0),
        .O(TXE_PREFETCH_FD_i_1_n_0));
  LUT6 #(
    .INIT(64'h0010000000000000)) 
    TXE_PREFETCH_FD_i_2
       (.I0(TDC_TRIG_COND_D1_i_3_n_0),
        .I1(Q),
        .I2(\state_reg_n_0_[3] ),
        .I3(\state_reg_n_0_[2] ),
        .I4(\RXE_COUNTER_I_reg[0]_0 ),
        .I5(TXE_TRNSMT_FLG_reg_0),
        .O(TXE_PREFETCH_FD_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT2 #(
    .INIT(4'hB)) 
    TXE_PREFETCH_FD_i_3
       (.I0(CANCEL_CONFIRMED_TL2OL_I_reg_0),
        .I1(dest_arst),
        .O(TXE_PREFETCH_FD_i_3_n_0));
  FDRE TXE_PREFETCH_FD_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TXE_PREFETCH_FD_i_1_n_0),
        .Q(TXE_PREFETCH_FD),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h000000000EFFEEFF)) 
    TXE_TRNSMT_FLG_i_1
       (.I0(TXE_TRNSMT_FLG_i_2_n_0),
        .I1(\state_reg[2]_2 ),
        .I2(TXE_TRNSMT_FLG_i_4_n_0),
        .I3(E),
        .I4(RXE_ERRFLG_I_reg_0),
        .I5(TXE_TRNSMT_FLG_i_5_n_0),
        .O(TXE_TRNSMT_FLG_i_1_n_0));
  LUT6 #(
    .INIT(64'h20000000FFFFFFFF)) 
    TXE_TRNSMT_FLG_i_2
       (.I0(\state_reg_n_0_[3] ),
        .I1(Q),
        .I2(\state_reg_n_0_[2] ),
        .I3(\state_reg_n_0_[1] ),
        .I4(\state_reg_n_0_[0] ),
        .I5(MSR_DAR_FS2),
        .O(TXE_TRNSMT_FLG_i_2_n_0));
  LUT6 #(
    .INIT(64'h5054555455555555)) 
    TXE_TRNSMT_FLG_i_3
       (.I0(TXE_TXING_reg_1),
        .I1(\state_reg_n_0_[2] ),
        .I2(TXE_MSGINVAL_D1_i_2_n_0),
        .I3(\state_reg_n_0_[1] ),
        .I4(\state_reg_n_0_[0] ),
        .I5(\RXE_COUNTER_I_reg[4]_0 ),
        .O(\state_reg[2]_2 ));
  LUT6 #(
    .INIT(64'h0000000000020000)) 
    TXE_TRNSMT_FLG_i_4
       (.I0(TXE_TXING_reg_0),
        .I1(TXE_MSGVAL_FD1_i_3_n_0),
        .I2(\RXE_SREG_I[0]_i_3_n_0 ),
        .I3(\state_reg_n_0_[3] ),
        .I4(\state_reg_n_0_[2] ),
        .I5(Q),
        .O(TXE_TRNSMT_FLG_i_4_n_0));
  LUT6 #(
    .INIT(64'hFFFFAABFFFFFFFFF)) 
    TXE_TRNSMT_FLG_i_5
       (.I0(TXE_TRNSMT_FLG_i_6_n_0),
        .I1(E),
        .I2(TXE_TRNSMT_FLG_SET),
        .I3(TXE_TRNSMT_FLG_reg_0),
        .I4(CANCEL_CONFIRMED_TL2OL_I_reg_0),
        .I5(dest_arst),
        .O(TXE_TRNSMT_FLG_i_5_n_0));
  LUT4 #(
    .INIT(16'h0800)) 
    TXE_TRNSMT_FLG_i_6
       (.I0(\state_reg[0]_3 ),
        .I1(MSR_DAR_FS2),
        .I2(TXE_MSGINVAL_D2),
        .I3(TXE_MSGINVAL_D1),
        .O(TXE_TRNSMT_FLG_i_6_n_0));
  FDRE TXE_TRNSMT_FLG_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TXE_TRNSMT_FLG_i_1_n_0),
        .Q(TXE_TRNSMT_FLG_reg_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAAA20AAA0AA20)) 
    TXE_TXING_i_2
       (.I0(E),
        .I1(TXE_TXING_i_4_n_0),
        .I2(TXE_TRNSMT_FLG_SET),
        .I3(TXE_TXING_i_5_n_0),
        .I4(\state_reg[2]_3 ),
        .I5(TXE_TRNSMT_FLG_reg_0),
        .O(TXE_TXING055_out));
  LUT5 #(
    .INIT(32'hF4004400)) 
    TXE_TXING_i_3
       (.I0(TXE_TXING_reg_8),
        .I1(\state_reg[0]_3 ),
        .I2(RXE_ERRFLG_I_reg_0),
        .I3(E),
        .I4(\state_reg[2]_1 ),
        .O(BTL_RXBIT_I_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT5 #(
    .INIT(32'hFE7FFFFC)) 
    TXE_TXING_i_4
       (.I0(\state_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[1] ),
        .I2(Q),
        .I3(\state_reg_n_0_[3] ),
        .I4(\state_reg_n_0_[2] ),
        .O(TXE_TXING_i_4_n_0));
  LUT5 #(
    .INIT(32'hBAAA0000)) 
    TXE_TXING_i_5
       (.I0(BUFFER_EMPTY_INTERNAL_i_6_n_0),
        .I1(TXE_PASSTX_I_reg_0),
        .I2(BSP_IN_IFSPACE_i_1_n_0),
        .I3(\RXE_COUNTER_I_reg[0]_0 ),
        .I4(TXE_TRNSMT_FLG_reg_0),
        .O(TXE_TXING_i_5_n_0));
  FDRE TXE_TXING_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TXE_TXING_reg_7),
        .Q(TXE_TXING_reg_0),
        .R(SYNC_RST_TL));
  FDRE TXE_TX_REN_D1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TXE_TX_REN_D1_reg_1),
        .Q(TXE_TX_REN_D1),
        .R(SYNC_RST_TL));
  LUT6 #(
    .INIT(64'h0000000000005D00)) 
    TXE_TX_REN_I_CFD_D1_i_1
       (.I0(TXE_TX_REN_I_CFD_D1_i_2_n_0),
        .I1(\RXE_COUNTER_I_reg[4]_1 ),
        .I2(\state_reg[4]_3 ),
        .I3(TXE_TXING_reg_0),
        .I4(SM_STUFFBIT_PD1_reg_n_0),
        .I5(TXE_TX_REN_I_CFD_D1_i_5_n_0),
        .O(TXE_TX_REN_I_CFD));
  LUT6 #(
    .INIT(64'h00000000FFFF8AAA)) 
    TXE_TX_REN_I_CFD_D1_i_10
       (.I0(TXE_TX_REN_I_CFD_D1_i_20_n_0),
        .I1(TXE_TX_REN_I_CFD_D1_i_21_n_0),
        .I2(\state[4]_i_7_n_0 ),
        .I3(TXE_TX_REN_I_CFD_D1_i_16_n_0),
        .I4(\state_reg_n_0_[2] ),
        .I5(TXE_TX_REN_I_CFD_D1_i_22_n_0),
        .O(TXE_TX_REN_I_CFD_D1_i_10_n_0));
  LUT6 #(
    .INIT(64'h10111010FFFFFFFF)) 
    TXE_TX_REN_I_CFD_D1_i_11
       (.I0(TXE_TX_REN_I_CFD_D1_i_23_n_0),
        .I1(TXE_TX_REN_I_CFD_D1_i_24_n_0),
        .I2(\state_reg_n_0_[0] ),
        .I3(TXE_TX_REN_I_CFD_D1_i_25_n_0),
        .I4(TXE_TX_REN_I_CFD_D1_i_26_n_0),
        .I5(TXE_TX_REN_I_CFD_D1_i_27_n_0),
        .O(TXE_TX_REN_I_CFD_D1_i_11_n_0));
  LUT6 #(
    .INIT(64'h22222222A2A2A2AA)) 
    TXE_TX_REN_I_CFD_D1_i_12
       (.I0(TXE_TX_REN_I_CFD_D1_i_28_n_0),
        .I1(TXE_TXING_reg_0),
        .I2(TXE_TX_REN_I_CFD_D1_i_29_n_0),
        .I3(BSP_IC_CRC_ERROR_I_i_4_n_0),
        .I4(RXE_PASSFLG_I_reg_0),
        .I5(TXE_TX_REN_I_CFD_D1_i_30_n_0),
        .O(TXE_TX_REN_I_CFD_D1_i_12_n_0));
  LUT6 #(
    .INIT(64'h2233333333303333)) 
    TXE_TX_REN_I_CFD_D1_i_13
       (.I0(TXE_TX_REN_I_CFD_D1_i_31_n_0),
        .I1(\state_reg_n_0_[3] ),
        .I2(TXE_TX_REN_I_CFD_D1_i_26_n_0),
        .I3(\state_reg_n_0_[1] ),
        .I4(Q),
        .I5(\state_reg_n_0_[2] ),
        .O(TXE_TX_REN_I_CFD_D1_i_13_n_0));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    TXE_TX_REN_I_CFD_D1_i_14
       (.I0(\state_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[1] ),
        .I2(Q),
        .I3(\state_reg_n_0_[2] ),
        .O(TXE_TX_REN_I_CFD_D1_i_14_n_0));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT2 #(
    .INIT(4'h2)) 
    TXE_TX_REN_I_CFD_D1_i_15
       (.I0(TXE_TXING_reg_0),
        .I1(SM_FLAG_I_reg),
        .O(TXE_TX_REN_I_CFD_D1_i_15_n_0));
  LUT6 #(
    .INIT(64'h0000A800AAAAAAAA)) 
    TXE_TX_REN_I_CFD_D1_i_16
       (.I0(TXE_TXING_reg_0),
        .I1(BSP_IC_BIT_ERROR_I_i_6_n_0),
        .I2(TXE_TX_REN_I_CFD_D1_i_32_n_0),
        .I3(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I4(TXE_TX_REN_I_CFD_D1_i_33_n_0),
        .I5(TXE_TX_REN_I_CFD_D1_i_34_n_0),
        .O(TXE_TX_REN_I_CFD_D1_i_16_n_0));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT5 #(
    .INIT(32'h555F7777)) 
    TXE_TX_REN_I_CFD_D1_i_17
       (.I0(TXE_TXING_reg_0),
        .I1(BSP_TXBIT_D1_reg_0),
        .I2(\state_reg_n_0_[0] ),
        .I3(TXE_TX_REN_I_CFD_D1_i_9_0),
        .I4(SM_FLAG_I_reg),
        .O(TXE_TX_REN_I_CFD_D1_i_17_n_0));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    TXE_TX_REN_I_CFD_D1_i_18
       (.I0(SM_FLAG_I_reg),
        .I1(TXE_TXING_reg_0),
        .I2(\state_reg_n_0_[0] ),
        .O(TXE_TX_REN_I_CFD_D1_i_18_n_0));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT5 #(
    .INIT(32'hFFFEFFFF)) 
    TXE_TX_REN_I_CFD_D1_i_2
       (.I0(\RXE_COUNTER_I_reg_n_0_[5] ),
        .I1(\RXE_COUNTER_I_reg_n_0_[6] ),
        .I2(\RXE_COUNTER_I_reg_n_0_[7] ),
        .I3(\RXE_COUNTER_I_reg_n_0_[8] ),
        .I4(\RXE_COUNTER_I[8]_i_11_n_0 ),
        .O(TXE_TX_REN_I_CFD_D1_i_2_n_0));
  LUT6 #(
    .INIT(64'hBBBBBBBAAAAAAAAA)) 
    TXE_TX_REN_I_CFD_D1_i_20
       (.I0(TXE_TX_REN_I_CFD_D1_i_38_n_0),
        .I1(TXE_TX_REN_I_CFD_D1_i_39_n_0),
        .I2(\state[4]_i_7_n_0 ),
        .I3(\state_reg_n_0_[0] ),
        .I4(TXE_DLC_I_EXT[0]),
        .I5(SM_FLAG_I_reg),
        .O(TXE_TX_REN_I_CFD_D1_i_20_n_0));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    TXE_TX_REN_I_CFD_D1_i_21
       (.I0(\state_reg_n_0_[0] ),
        .I1(SM_FLAG_I_reg),
        .I2(TXE_TXING_reg_0),
        .O(TXE_TX_REN_I_CFD_D1_i_21_n_0));
  LUT6 #(
    .INIT(64'hDDDFDDDDDDDFDDDF)) 
    TXE_TX_REN_I_CFD_D1_i_22
       (.I0(\state_reg_n_0_[1] ),
        .I1(Q),
        .I2(TXE_TX_REN_I_CFD_D1_i_40_n_0),
        .I3(TXE_TX_REN_I_CFD_D1_i_41_n_0),
        .I4(TXE_TXING_reg_0),
        .I5(BSP_CRCERR_I_CAN_FLG_reg_0),
        .O(TXE_TX_REN_I_CFD_D1_i_22_n_0));
  LUT6 #(
    .INIT(64'h0000A200AAAAA200)) 
    TXE_TX_REN_I_CFD_D1_i_23
       (.I0(\state_reg_n_0_[2] ),
        .I1(SM_FLAG_I_i_7_n_0),
        .I2(BSP_CRCERR_I_CAN_FLG_i_5_n_0),
        .I3(\state_reg_n_0_[0] ),
        .I4(TXE_TX_REN_I_CFD_D1_i_15_n_0),
        .I5(BSP_TXBIT_D1_reg_0),
        .O(TXE_TX_REN_I_CFD_D1_i_23_n_0));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT3 #(
    .INIT(8'h35)) 
    TXE_TX_REN_I_CFD_D1_i_24
       (.I0(\state_reg_n_0_[2] ),
        .I1(TXE_TXING_reg_0),
        .I2(\state_reg_n_0_[0] ),
        .O(TXE_TX_REN_I_CFD_D1_i_24_n_0));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT4 #(
    .INIT(16'h0455)) 
    TXE_TX_REN_I_CFD_D1_i_25
       (.I0(TXE_TX_REN_I_CFD_D1_i_15_n_0),
        .I1(TXE_TX_REN_I_CFD_D1_i_34_n_0),
        .I2(TXE_TX_REN_I_CFD_D1_i_42_n_0),
        .I3(TXE_TXING_reg_0),
        .O(TXE_TX_REN_I_CFD_D1_i_25_n_0));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    TXE_TX_REN_I_CFD_D1_i_26
       (.I0(BSP_TXBIT_D1_reg_0),
        .I1(SM_FLAG_I_reg),
        .I2(TXE_TXING_reg_0),
        .O(TXE_TX_REN_I_CFD_D1_i_26_n_0));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT2 #(
    .INIT(4'h1)) 
    TXE_TX_REN_I_CFD_D1_i_27
       (.I0(\state_reg_n_0_[1] ),
        .I1(Q),
        .O(TXE_TX_REN_I_CFD_D1_i_27_n_0));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT3 #(
    .INIT(8'h04)) 
    TXE_TX_REN_I_CFD_D1_i_28
       (.I0(\state_reg_n_0_[1] ),
        .I1(Q),
        .I2(\state_reg_n_0_[2] ),
        .O(TXE_TX_REN_I_CFD_D1_i_28_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFF0002200)) 
    TXE_TX_REN_I_CFD_D1_i_29
       (.I0(TXE_CFD_5),
        .I1(MSR_BRSD_FS2),
        .I2(TXE_DLC_I_EXT[1]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I5(\RXE_COUNTER_I_reg[3]_0 [2]),
        .O(TXE_TX_REN_I_CFD_D1_i_29_n_0));
  LUT6 #(
    .INIT(64'h0000000000001000)) 
    TXE_TX_REN_I_CFD_D1_i_3
       (.I0(TDC_TRIG_COND_D1_i_4_n_0),
        .I1(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I2(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I5(\RXE_COUNTER_I_reg[3]_0 [0]),
        .O(\RXE_COUNTER_I_reg[4]_1 ));
  LUT6 #(
    .INIT(64'hCC44000CCC44CC0C)) 
    TXE_TX_REN_I_CFD_D1_i_30
       (.I0(TXE_DLC_I_EXT[4]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I2(TXE_DLC_I_EXT[2]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I5(TXE_DLC_I_EXT[3]),
        .O(TXE_TX_REN_I_CFD_D1_i_30_n_0));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT5 #(
    .INIT(32'h50100010)) 
    TXE_TX_REN_I_CFD_D1_i_31
       (.I0(\state_reg_n_0_[0] ),
        .I1(BSP_CRCERR_I_CANFD_FLG_reg_0),
        .I2(\RXE_COUNTER_I_reg[4]_0 ),
        .I3(TXE_TXING_reg_0),
        .I4(RXE_OL_LBACK_reg_0),
        .O(TXE_TX_REN_I_CFD_D1_i_31_n_0));
  LUT6 #(
    .INIT(64'h5500330F55FF330F)) 
    TXE_TX_REN_I_CFD_D1_i_32
       (.I0(\TXE_DLC_I_reg[0]_0 [12]),
        .I1(\TXE_DLC_I_reg[0]_0 [14]),
        .I2(\TXE_DLC_I_reg[0]_0 [15]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I5(\TXE_DLC_I_reg[0]_0 [13]),
        .O(TXE_TX_REN_I_CFD_D1_i_32_n_0));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT5 #(
    .INIT(32'h0434C4F4)) 
    TXE_TX_REN_I_CFD_D1_i_33
       (.I0(TXE_TX_REN_I_CFD_D1_i_43_n_0),
        .I1(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I3(TXE_TX_REN_I_CFD_D1_i_44_n_0),
        .I4(TXE_TX_REN_I_CFD_D1_i_45_n_0),
        .O(TXE_TX_REN_I_CFD_D1_i_33_n_0));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT5 #(
    .INIT(32'hFFFFFF04)) 
    TXE_TX_REN_I_CFD_D1_i_34
       (.I0(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I2(TXE_TX_REN_I_CFD_D1_i_46_n_0),
        .I3(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I4(TXE_TX_REN_I_CFD_D1_i_47_n_0),
        .O(TXE_TX_REN_I_CFD_D1_i_34_n_0));
  LUT4 #(
    .INIT(16'hAAA9)) 
    TXE_TX_REN_I_CFD_D1_i_35
       (.I0(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I1(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [3]),
        .O(\RXE_COUNTER_I_reg[4]_5 ));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT3 #(
    .INIT(8'h1F)) 
    TXE_TX_REN_I_CFD_D1_i_38
       (.I0(SM_FLAG_I_reg),
        .I1(BSP_TXBIT_D1_reg_0),
        .I2(TXE_TXING_reg_0),
        .O(TXE_TX_REN_I_CFD_D1_i_38_n_0));
  LUT6 #(
    .INIT(64'hCC88CC88CC880C88)) 
    TXE_TX_REN_I_CFD_D1_i_39
       (.I0(TXE_TX_REN_I_CFD_D1_i_51_n_0),
        .I1(\state_reg_n_0_[0] ),
        .I2(TXE_DLC_I_EXT[4]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I5(\RXE_COUNTER_I_reg[3]_0 [1]),
        .O(TXE_TX_REN_I_CFD_D1_i_39_n_0));
  LUT6 #(
    .INIT(64'hAAAAAA2AAAAAAAAA)) 
    TXE_TX_REN_I_CFD_D1_i_4
       (.I0(TXE_TX_REN_I_CFD_D1_i_6_n_0),
        .I1(TXE_TX_REN_I_CFD_D1_i_7_n_0),
        .I2(TXE_TX_REN_I_CFD_D1_i_8_n_0),
        .I3(TXE_TX_REN_I_CFD_D1_i_9_n_0),
        .I4(TXE_TX_REN_I_CFD_D1_i_10_n_0),
        .I5(TXE_TX_REN_I_CFD_D1_i_11_n_0),
        .O(\state_reg[4]_3 ));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    TXE_TX_REN_I_CFD_D1_i_40
       (.I0(RXE_OL_LBACK_reg_0),
        .I1(TXE_TXING_reg_0),
        .I2(\RXE_COUNTER_I_reg[4]_0 ),
        .O(TXE_TX_REN_I_CFD_D1_i_40_n_0));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT2 #(
    .INIT(4'hB)) 
    TXE_TX_REN_I_CFD_D1_i_41
       (.I0(\state_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[2] ),
        .O(TXE_TX_REN_I_CFD_D1_i_41_n_0));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT5 #(
    .INIT(32'h0000FE00)) 
    TXE_TX_REN_I_CFD_D1_i_42
       (.I0(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I2(TXE_TX_REN_I_CFD_D1_i_32_n_0),
        .I3(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I4(TXE_TX_REN_I_CFD_D1_i_33_n_0),
        .O(TXE_TX_REN_I_CFD_D1_i_42_n_0));
  LUT6 #(
    .INIT(64'h5500330F55FF330F)) 
    TXE_TX_REN_I_CFD_D1_i_43
       (.I0(\TXE_DLC_I_reg[0]_0 [8]),
        .I1(\TXE_DLC_I_reg[0]_0 [10]),
        .I2(\TXE_DLC_I_reg[0]_0 [11]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I5(\TXE_DLC_I_reg[0]_0 [9]),
        .O(TXE_TX_REN_I_CFD_D1_i_43_n_0));
  LUT6 #(
    .INIT(64'h0F5500330F55FF33)) 
    TXE_TX_REN_I_CFD_D1_i_44
       (.I0(\TXE_DLC_I_reg[0]_0 [5]),
        .I1(\TXE_DLC_I_reg[0]_0 [7]),
        .I2(\TXE_DLC_I_reg[0]_0 [4]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I5(\TXE_DLC_I_reg[0]_0 [6]),
        .O(TXE_TX_REN_I_CFD_D1_i_44_n_0));
  LUT6 #(
    .INIT(64'h0F5500330F55FF33)) 
    TXE_TX_REN_I_CFD_D1_i_45
       (.I0(\TXE_DLC_I_reg[0]_0 [1]),
        .I1(\TXE_DLC_I_reg[0]_0 [3]),
        .I2(\TXE_DLC_I_reg[0]_0 [0]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I5(\TXE_DLC_I_reg[0]_0 [2]),
        .O(TXE_TX_REN_I_CFD_D1_i_45_n_0));
  LUT6 #(
    .INIT(64'h0F5500330F55FF33)) 
    TXE_TX_REN_I_CFD_D1_i_46
       (.I0(\TXE_DLC_I_reg[0]_0 [21]),
        .I1(\TXE_DLC_I_reg[0]_0 [23]),
        .I2(\TXE_DLC_I_reg[0]_0 [20]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I5(\TXE_DLC_I_reg[0]_0 [22]),
        .O(TXE_TX_REN_I_CFD_D1_i_46_n_0));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT5 #(
    .INIT(32'h404C434F)) 
    TXE_TX_REN_I_CFD_D1_i_47
       (.I0(TXE_TX_REN_I_CFD_D1_i_52_n_0),
        .I1(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I3(TXE_TX_REN_I_CFD_D1_i_53_n_0),
        .I4(TXE_TX_REN_I_CFD_D1_i_54_n_0),
        .O(TXE_TX_REN_I_CFD_D1_i_47_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFDF)) 
    TXE_TX_REN_I_CFD_D1_i_5
       (.I0(BTL_SAMP_EN_FD2),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .I3(\state_reg_n_0_[2] ),
        .I4(\state_reg_n_0_[3] ),
        .I5(Q),
        .O(TXE_TX_REN_I_CFD_D1_i_5_n_0));
  LUT6 #(
    .INIT(64'h5500330F55FF330F)) 
    TXE_TX_REN_I_CFD_D1_i_51
       (.I0(TXE_DLC_I_EXT[3]),
        .I1(TXE_DLC_I_EXT[1]),
        .I2(TXE_DLC_I_EXT[0]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I5(TXE_DLC_I_EXT[2]),
        .O(TXE_TX_REN_I_CFD_D1_i_51_n_0));
  LUT6 #(
    .INIT(64'h0F5500330F55FF33)) 
    TXE_TX_REN_I_CFD_D1_i_52
       (.I0(\TXE_DLC_I_reg[0]_0 [17]),
        .I1(\TXE_DLC_I_reg[0]_0 [19]),
        .I2(\TXE_DLC_I_reg[0]_0 [16]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I5(\TXE_DLC_I_reg[0]_0 [18]),
        .O(TXE_TX_REN_I_CFD_D1_i_52_n_0));
  LUT6 #(
    .INIT(64'h0055330FFF55330F)) 
    TXE_TX_REN_I_CFD_D1_i_53
       (.I0(\TXE_DLC_I_reg[0]_0 [25]),
        .I1(\TXE_DLC_I_reg[0]_0 [26]),
        .I2(\TXE_DLC_I_reg[0]_0 [27]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I5(\TXE_DLC_I_reg[0]_0 [24]),
        .O(TXE_TX_REN_I_CFD_D1_i_53_n_0));
  LUT6 #(
    .INIT(64'h33000F5533FF0F55)) 
    TXE_TX_REN_I_CFD_D1_i_54
       (.I0(\TXE_DLC_I_reg[0]_0 [31]),
        .I1(\TXE_DLC_I_reg[0]_0 [28]),
        .I2(\TXE_DLC_I_reg[0]_0 [29]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I5(\TXE_DLC_I_reg[0]_0 [30]),
        .O(TXE_TX_REN_I_CFD_D1_i_54_n_0));
  LUT3 #(
    .INIT(8'h56)) 
    TXE_TX_REN_I_CFD_D1_i_55
       (.I0(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [2]),
        .O(\RXE_COUNTER_I_reg[3]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT5 #(
    .INIT(32'hFBFFFFFF)) 
    TXE_TX_REN_I_CFD_D1_i_6
       (.I0(Q),
        .I1(\state_reg_n_0_[3] ),
        .I2(\state_reg_n_0_[1] ),
        .I3(\state_reg_n_0_[0] ),
        .I4(BSP_IC_BIT_ERROR_I_i_5_n_0),
        .O(TXE_TX_REN_I_CFD_D1_i_6_n_0));
  LUT6 #(
    .INIT(64'hF0F0D0D0F0F0D000)) 
    TXE_TX_REN_I_CFD_D1_i_7
       (.I0(TXE_TX_REN_I_CFD_D1_i_12_n_0),
        .I1(\state_reg_n_0_[0] ),
        .I2(TXE_TX_REN_I_CFD_D1_i_13_n_0),
        .I3(TXE_TX_REN_I_CFD_D1_i_14_n_0),
        .I4(TXE_TX_REN_I_CFD_D1_i_15_n_0),
        .I5(TXE_TX_REN_I_CFD_D1_i_16_n_0),
        .O(TXE_TX_REN_I_CFD_D1_i_7_n_0));
  LUT6 #(
    .INIT(64'hDFDFDFDDDFDDDFDD)) 
    TXE_TX_REN_I_CFD_D1_i_8
       (.I0(\RXE_COUNTER_I[8]_i_21_n_0 ),
        .I1(\state_reg_n_0_[1] ),
        .I2(TXE_TX_REN_I_CFD_D1_i_17_n_0),
        .I3(TXE_TX_REN_I_CFD_D1_i_18_n_0),
        .I4(BSP_CRCERR_I_CANFD_FLG_i_5_n_0),
        .I5(BSP_CRCERR_I_CANFD_FLG_i_4_n_0),
        .O(TXE_TX_REN_I_CFD_D1_i_8_n_0));
  LUT6 #(
    .INIT(64'h4044404040444044)) 
    TXE_TX_REN_I_CFD_D1_i_9
       (.I0(\state[0]_i_14_n_0 ),
        .I1(\state_reg_n_0_[1] ),
        .I2(TXE_TX_REN_I_CFD_D1_i_17_n_0),
        .I3(TXE_TX_REN_I_CFD_D1_i_18_n_0),
        .I4(\COUNTER_I[1]_i_5_n_0 ),
        .I5(TXE_TX_REN_I_CFD_D1_i_4_0),
        .O(TXE_TX_REN_I_CFD_D1_i_9_n_0));
  FDRE TXE_TX_REN_I_CFD_D1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TXE_TX_REN_I_CFD),
        .Q(TXE_TX_REN_I_CFD_D1),
        .R(SYNC_RST_TL));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT2 #(
    .INIT(4'h8)) 
    TXING_BRS_EN_BTR_D1_i_1
       (.I0(TXE_TXING_reg_0),
        .I1(BRS_EN_BTR),
        .O(TXE_TXING_reg_6));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single \XPM_CDC_MODULES.BUFFER_IS_READY_2C_CDC_TO 
       (.dest_clk(can_clk),
        .dest_out(BUFFER_IS_READY_SYNCED),
        .src_clk(1'b0),
        .src_in(src_in));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__30 \XPM_CDC_MODULES.CANCEL_BUFFER_2C_CDC_TO 
       (.dest_clk(can_clk),
        .dest_out(dest_out),
        .src_clk(1'b0),
        .src_in(\syncstages_ff_reg[0] ));
  LUT6 #(
    .INIT(64'hFFF2FFF2FFFFFFF2)) 
    \addr_location_incr_count[0]_i_1__1 
       (.I0(\state_reg[1]_0 ),
        .I1(TXE_MSGVAL_D1_I),
        .I2(CANCEL_CONFIRMED_TL2OL_I_reg_0),
        .I3(\addr_location_incr_count_reg[0] ),
        .I4(TXE_MSGINVAL_FD1),
        .I5(TXE_MSGINVAL_FD2),
        .O(TXE_MSGVAL_D1_I_reg_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAAABA)) 
    \gen_fifo_rx0.u_rxxpm_1_i_1 
       (.I0(TS_RX_WEN),
        .I1(OL_RX_FIFO_FULL),
        .I2(RXE_RXFIFO_WEN_FD1_reg_0),
        .I3(RXE_RXFIFO_WEN_FD2),
        .I4(RXF_FULL_AT_MSG_BOUNDARY),
        .I5(TXE_BRAM_WEN),
        .O(ena));
  LUT5 #(
    .INIT(32'hFFFF0010)) 
    \gen_rx1.u_rxxpm_2_i_1 
       (.I0(RXF_FULL_AT_MSG_BOUNDARY_F1),
        .I1(RXE_RXFIFO_WEN_FD2),
        .I2(RXE_RXFIFO_WEN_FD1_reg_0),
        .I3(OL_RX_FIFO_FULL_F1),
        .I4(\gen_wr_a.gen_word_narrow.mem_reg_0 ),
        .O(RXF_FULL_AT_MSG_BOUNDARY_reg));
  LUT6 #(
    .INIT(64'h8B88BBBB8B888B88)) 
    \gen_rx1.u_rxxpm_2_i_22 
       (.I0(TS_RX_WDATA_F1[7]),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg_0 ),
        .I2(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .I3(\RXE_SREG_I_reg[24]_0 [7]),
        .I4(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I5(\RXE_SREG_I_reg_n_0_[16] ),
        .O(\TIME_STAMP_CNT_CAPTURE_reg[0] [7]));
  LUT6 #(
    .INIT(64'h8B88BBBB8B888B88)) 
    \gen_rx1.u_rxxpm_2_i_23 
       (.I0(TS_RX_WDATA_F1[6]),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg_0 ),
        .I2(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .I3(\RXE_SREG_I_reg[24]_0 [6]),
        .I4(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I5(\RXE_SREG_I_reg_n_0_[17] ),
        .O(\TIME_STAMP_CNT_CAPTURE_reg[0] [6]));
  LUT6 #(
    .INIT(64'h8B88BBBB8B888B88)) 
    \gen_rx1.u_rxxpm_2_i_24 
       (.I0(TS_RX_WDATA_F1[5]),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg_0 ),
        .I2(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .I3(\RXE_SREG_I_reg[24]_0 [5]),
        .I4(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I5(\RXE_SREG_I_reg_n_0_[18] ),
        .O(\TIME_STAMP_CNT_CAPTURE_reg[0] [5]));
  LUT6 #(
    .INIT(64'h8B88BBBB8B888B88)) 
    \gen_rx1.u_rxxpm_2_i_25 
       (.I0(TS_RX_WDATA_F1[4]),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg_0 ),
        .I2(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .I3(\RXE_SREG_I_reg[24]_0 [4]),
        .I4(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I5(data0[31]),
        .O(\TIME_STAMP_CNT_CAPTURE_reg[0] [4]));
  LUT6 #(
    .INIT(64'h8B88BBBB8B888B88)) 
    \gen_rx1.u_rxxpm_2_i_26 
       (.I0(TS_RX_WDATA_F1[3]),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg_0 ),
        .I2(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .I3(\RXE_SREG_I_reg[24]_0 [3]),
        .I4(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I5(data0[30]),
        .O(\TIME_STAMP_CNT_CAPTURE_reg[0] [3]));
  LUT6 #(
    .INIT(64'h8B88BBBB8B888B88)) 
    \gen_rx1.u_rxxpm_2_i_27 
       (.I0(TS_RX_WDATA_F1[2]),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg_0 ),
        .I2(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .I3(\RXE_SREG_I_reg[24]_0 [2]),
        .I4(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I5(data0[29]),
        .O(\TIME_STAMP_CNT_CAPTURE_reg[0] [2]));
  LUT6 #(
    .INIT(64'h8B88BBBB8B888B88)) 
    \gen_rx1.u_rxxpm_2_i_28 
       (.I0(TS_RX_WDATA_F1[1]),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg_0 ),
        .I2(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .I3(\RXE_SREG_I_reg[24]_0 [1]),
        .I4(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I5(data0[28]),
        .O(\TIME_STAMP_CNT_CAPTURE_reg[0] [1]));
  LUT6 #(
    .INIT(64'h8B88BBBB8B888B88)) 
    \gen_rx1.u_rxxpm_2_i_29 
       (.I0(TS_RX_WDATA_F1[0]),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg_0 ),
        .I2(\gen_rx1.u_rxxpm_2_i_42_n_0 ),
        .I3(\RXE_SREG_I_reg[24]_0 [0]),
        .I4(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ),
        .I5(data0[27]),
        .O(\TIME_STAMP_CNT_CAPTURE_reg[0] [0]));
  LUT6 #(
    .INIT(64'hFFFFFDFFFFFFFFFF)) 
    \gen_rx1.u_rxxpm_2_i_42 
       (.I0(RXE_DLC_I[0]),
        .I1(RXE_MSGPAD_SEL_FS1[0]),
        .I2(RXE_MSGPAD_SEL_FS1[1]),
        .I3(RXE_MSGPAD_SEL_FS1[2]),
        .I4(RXE_DLC_I[3]),
        .I5(RXE_DLC_I[1]),
        .O(\gen_rx1.u_rxxpm_2_i_42_n_0 ));
  LUT6 #(
    .INIT(64'h0000666611106666)) 
    \gen_rx1.u_rxxpm_2_i_43 
       (.I0(RXE_MSGPAD_SEL_FS1[1]),
        .I1(RXE_MSGPAD_SEL_FS1[0]),
        .I2(RXE_DLC_I[1]),
        .I3(RXE_DLC_I[0]),
        .I4(RXE_MSGPAD_SEL_FS1[2]),
        .I5(RXE_DLC_I[3]),
        .O(\RXE_MSGPAD_SEL_FS1_reg[1]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    i__carry__0_i_1__1
       (.I0(\BTL_COUNTER_I_REG[8]_i_9_n_0 ),
        .I1(CAN_PHY_TX_POS_FLOP_X27[8]),
        .O(BRSD_P_ERR_1TQ_FD_reg_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    i__carry__0_i_1__4
       (.I0(RXE_DLC_I[3]),
        .I1(RXE_DLC_I[1]),
        .I2(RXE_DLC_I[2]),
        .I3(RXE_DLC_I[0]),
        .O(i__carry__0_i_1__4_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    i__carry__0_i_2__1
       (.I0(\BTL_COUNTER_I_REG[8]_i_9_n_0 ),
        .I1(CAN_PHY_TX_POS_FLOP_X27[8]),
        .O(BRSD_P_ERR_1TQ_FD_reg_1));
  LUT4 #(
    .INIT(16'hFFFE)) 
    i__carry__0_i_2__4
       (.I0(RXE_DLC_I[3]),
        .I1(RXE_DLC_I[1]),
        .I2(RXE_DLC_I[2]),
        .I3(RXE_DLC_I[0]),
        .O(i__carry__0_i_2__4_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    i__carry__0_i_3__1
       (.I0(RXE_DLC_I[3]),
        .I1(RXE_DLC_I[1]),
        .I2(RXE_DLC_I[2]),
        .I3(RXE_DLC_I[0]),
        .O(i__carry__0_i_3__1_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    i__carry__0_i_4__1
       (.I0(RXE_DLC_I[3]),
        .I1(RXE_DLC_I[1]),
        .I2(RXE_DLC_I[2]),
        .I3(RXE_DLC_I[0]),
        .O(i__carry__0_i_4__1_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    i__carry__1_i_1__0
       (.I0(RXE_DLC_I[3]),
        .I1(RXE_DLC_I[1]),
        .I2(RXE_DLC_I[2]),
        .I3(RXE_DLC_I[0]),
        .O(i__carry__1_i_1__0_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    i__carry__1_i_2__0
       (.I0(RXE_DLC_I[3]),
        .I1(RXE_DLC_I[1]),
        .I2(RXE_DLC_I[2]),
        .I3(RXE_DLC_I[0]),
        .O(i__carry__1_i_2__0_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    i__carry__1_i_3__0
       (.I0(RXE_DLC_I[3]),
        .I1(RXE_DLC_I[1]),
        .I2(RXE_DLC_I[2]),
        .I3(RXE_DLC_I[0]),
        .O(i__carry__1_i_3__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT5 #(
    .INIT(32'hA80802A2)) 
    i__carry_i_10
       (.I0(dest_arst),
        .I1(BTL_COUNTER_I15_carry[2]),
        .I2(BRS_EN_BTR),
        .I3(i__carry_i_7__1_0[2]),
        .I4(i__carry_i_23_n_0),
        .O(\arststages_ff_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hC000A0A0C0000000)) 
    i__carry_i_10__0
       (.I0(BTL_COUNTER_I15_carry[2]),
        .I1(i__carry_i_7__1_0[2]),
        .I2(i__carry_i_14_n_0),
        .I3(i__carry_i_7__1_0[1]),
        .I4(BRS_EN_BTR),
        .I5(BTL_COUNTER_I15_carry[1]),
        .O(i__carry_i_10__0_n_0));
  LUT6 #(
    .INIT(64'hFD5D5DFDF75757F7)) 
    i__carry_i_10__1
       (.I0(dest_arst),
        .I1(i__carry_i_1__4_0[0]),
        .I2(BRS_EN_BTR),
        .I3(BTL_TRNSMT_EN_FD13_carry_i_6_0[0]),
        .I4(BTL_TRNSMT_EN_FD13_carry_i_6_0[1]),
        .I5(i__carry_i_1__4_0[1]),
        .O(\arststages_ff_reg[1]_4 ));
  LUT6 #(
    .INIT(64'hA80802A2A808A808)) 
    i__carry_i_11
       (.I0(dest_arst),
        .I1(BTL_COUNTER_I15_carry[3]),
        .I2(BRS_EN_BTR),
        .I3(i__carry_i_7__1_0[3]),
        .I4(i__carry_i_23_n_0),
        .I5(i__carry_i_24_n_0),
        .O(\arststages_ff_reg[1]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    i__carry_i_11__0
       (.I0(i__carry_i_7__1_0[3]),
        .I1(BRS_EN_BTR),
        .I2(BTL_COUNTER_I15_carry[3]),
        .O(i__carry_i_11__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT4 #(
    .INIT(16'h02A2)) 
    i__carry_i_11__1
       (.I0(dest_arst),
        .I1(i__carry_i_1__4_0[0]),
        .I2(BRS_EN_BTR),
        .I3(BTL_TRNSMT_EN_FD13_carry_i_6_0[0]),
        .O(\arststages_ff_reg[1]_6 ));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT3 #(
    .INIT(8'h9A)) 
    i__carry_i_12
       (.I0(i__carry_i_19_n_0),
        .I1(BRS_EN_BTR),
        .I2(BTL_COUNTER_I15_carry[4]),
        .O(i__carry_i_12_n_0));
  LUT6 #(
    .INIT(64'hD5DDD5557F777FFF)) 
    i__carry_i_12__0
       (.I0(dest_arst),
        .I1(IC_REG_BTR_TS1),
        .I2(BTL_TRNSMT_EN_FD13_carry_i_6_0[1]),
        .I3(BRS_EN_BTR),
        .I4(i__carry_i_1__4_0[1]),
        .I5(i__carry_i_17__0_n_0),
        .O(i__carry_i_12__0_n_0));
  LUT6 #(
    .INIT(64'hC000A0A0C0000000)) 
    i__carry_i_13
       (.I0(i__carry_i_1__4_0[4]),
        .I1(BTL_TRNSMT_EN_FD13_carry_i_6_0[4]),
        .I2(i__carry_i_14__0_n_0),
        .I3(BTL_TRNSMT_EN_FD13_carry_i_6_0[3]),
        .I4(BRS_EN_BTR),
        .I5(i__carry_i_1__4_0[3]),
        .O(i__carry_i_13_n_0));
  LUT6 #(
    .INIT(64'h44447B84BBBB847B)) 
    i__carry_i_13__0
       (.I0(i__carry_i_21_n_0),
        .I1(dest_arst),
        .I2(BTL_COUNTER_I15_carry[5]),
        .I3(BTL_NTQ_I0_carry__0_0[5]),
        .I4(BRS_EN_BTR),
        .I5(i__carry_i_25_n_0),
        .O(i__carry_i_13__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT4 #(
    .INIT(16'h02A2)) 
    i__carry_i_14
       (.I0(dest_arst),
        .I1(BTL_COUNTER_I15_carry[0]),
        .I2(BRS_EN_BTR),
        .I3(i__carry_i_7__1_0[0]),
        .O(i__carry_i_14_n_0));
  LUT6 #(
    .INIT(64'hC000A0A0C0000000)) 
    i__carry_i_14__0
       (.I0(i__carry_i_1__4_0[2]),
        .I1(BTL_TRNSMT_EN_FD13_carry_i_6_0[2]),
        .I2(IC_REG_BTR_TS1),
        .I3(BTL_TRNSMT_EN_FD13_carry_i_6_0[1]),
        .I4(BRS_EN_BTR),
        .I5(i__carry_i_1__4_0[1]),
        .O(i__carry_i_14__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    i__carry_i_15
       (.I0(i__carry_i_7__1_0[1]),
        .I1(BRS_EN_BTR),
        .I2(BTL_COUNTER_I15_carry[1]),
        .O(i__carry_i_15_n_0));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT4 #(
    .INIT(16'hE200)) 
    i__carry_i_15__0
       (.I0(i__carry_i_1__4_0[3]),
        .I1(BRS_EN_BTR),
        .I2(BTL_TRNSMT_EN_FD13_carry_i_6_0[3]),
        .I3(i__carry_i_14__0_n_0),
        .O(i__carry_i_15__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    i__carry_i_16
       (.I0(BTL_TRNSMT_EN_FD13_carry_i_6_0[0]),
        .I1(BRS_EN_BTR),
        .I2(i__carry_i_1__4_0[0]),
        .O(IC_REG_BTR_TS1));
  LUT6 #(
    .INIT(64'h9996669666666666)) 
    i__carry_i_16__0
       (.I0(\arststages_ff_reg[1]_0 ),
        .I1(i__carry_i_9__0_n_0),
        .I2(BTL_NTQ_I0_carry__0_0[0]),
        .I3(BRS_EN_BTR),
        .I4(BTL_NTQ_I0_carry__0_i_8_0[0]),
        .I5(\ic_reg_f_btr_ts2_cdc_tig_reg[2] ),
        .O(i__carry_i_16__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    i__carry_i_17
       (.I0(BTL_NTQ_I0_carry__0_i_8_0[0]),
        .I1(BRS_EN_BTR),
        .I2(BTL_NTQ_I0_carry__0_0[0]),
        .O(IC_REG_BTR_TS2));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    i__carry_i_17__0
       (.I0(BTL_TRNSMT_EN_FD13_carry_i_6_0[2]),
        .I1(BRS_EN_BTR),
        .I2(i__carry_i_1__4_0[2]),
        .O(i__carry_i_17__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT5 #(
    .INIT(32'h80888000)) 
    i__carry_i_18
       (.I0(\arststages_ff_reg[1]_1 ),
        .I1(i__carry_i_26_n_0),
        .I2(i__carry_i_7__1_0[2]),
        .I3(BRS_EN_BTR),
        .I4(BTL_COUNTER_I15_carry[2]),
        .O(i__carry_i_18_n_0));
  LUT6 #(
    .INIT(64'hF3FFF5F5F3FFFFFF)) 
    i__carry_i_19
       (.I0(BTL_COUNTER_I15_carry[3]),
        .I1(i__carry_i_7__1_0[3]),
        .I2(i__carry_i_23_n_0),
        .I3(i__carry_i_7__1_0[2]),
        .I4(BRS_EN_BTR),
        .I5(BTL_COUNTER_I15_carry[2]),
        .O(i__carry_i_19_n_0));
  LUT6 #(
    .INIT(64'h2281221200120020)) 
    i__carry_i_1__1
       (.I0(BRS_L_SP_FE_reg_1),
        .I1(\ic_reg_n_btr_sjw_cdc_tig_reg[0] ),
        .I2(i__carry_i_5__5_n_0),
        .I3(BRS_EN_BTR),
        .I4(BTL_NTQ_I0_carry__0_0[6]),
        .I5(i__carry_i_4__9_n_0),
        .O(BRS_L_SP_FE_reg_4[2]));
  LUT6 #(
    .INIT(64'h1000888A46652110)) 
    i__carry_i_1__2
       (.I0(i__carry_i_4__6_n_0),
        .I1(BRS_EN_BTR),
        .I2(BTL_NTQ_I0_carry__0_0[6]),
        .I3(i__carry_i_5__5_n_0),
        .I4(BRS_L_SP_FE_reg_1),
        .I5(\ic_reg_n_btr_sjw_cdc_tig_reg[0] ),
        .O(BRS_L_SP_FE_reg_3[2]));
  LUT6 #(
    .INIT(64'h0660000000000660)) 
    i__carry_i_1__3
       (.I0(CAN_PHY_TX_POS_FLOP_X26_carry_i_9_n_0),
        .I1(\BTL_COUNTER_I_REG[8]_i_5_n_0 ),
        .I2(CAN_PHY_TX_POS_FLOP_X26_carry_i_10_n_0),
        .I3(\BTL_COUNTER_I_REG[8]_i_7_n_0 ),
        .I4(\BTL_COUNTER_I_REG[8]_i_9_n_0 ),
        .I5(CAN_PHY_TX_POS_FLOP_X26_carry__0_i_3_n_0),
        .O(BRSD_P_ERR_1TQ_FD_reg_3[2]));
  LUT6 #(
    .INIT(64'h0000066006600000)) 
    i__carry_i_1__4
       (.I0(i__carry_i_4__3_n_0),
        .I1(\BTL_COUNTER_I_REG[8]_i_5_n_0 ),
        .I2(i__carry_i_5__3_n_0),
        .I3(\BTL_COUNTER_I_REG[8]_i_7_n_0 ),
        .I4(\BTL_COUNTER_I_REG[8]_i_9_n_0 ),
        .I5(i__carry_i_6__6_n_0),
        .O(\ic_reg_n_btr_ts1_cdc_tig_reg[1]_2 [2]));
  LUT6 #(
    .INIT(64'h0028A0A028000000)) 
    i__carry_i_1__5
       (.I0(i__carry_i_4__2_n_0),
        .I1(BTL_NTQ_I0_carry__0),
        .I2(\BTL_COUNTER_I_REG[8]_i_9_n_0 ),
        .I3(O[2]),
        .I4(dest_arst),
        .I5(\BTL_COUNTER_I_REG[8]_i_7_n_0 ),
        .O(\arststages_ff_reg[1]_7 [1]));
  LUT4 #(
    .INIT(16'hF880)) 
    i__carry_i_1__6
       (.I0(CAN_PHY_TX_POS_FLOP_X27[6]),
        .I1(\BTL_COUNTER_I_REG[8]_i_5_n_0 ),
        .I2(\BTL_COUNTER_I_REG[8]_i_7_n_0 ),
        .I3(CAN_PHY_TX_POS_FLOP_X27[7]),
        .O(BRSD_P_ERR_1TQ_FD_reg_8[2]));
  LUT4 #(
    .INIT(16'hFFFE)) 
    i__carry_i_1__7
       (.I0(RXE_DLC_I[1]),
        .I1(RXE_DLC_I[0]),
        .I2(RXE_DLC_I[2]),
        .I3(RXE_DLC_I[3]),
        .O(i__carry_i_1__7_n_0));
  LUT6 #(
    .INIT(64'hC000A0A0C0000000)) 
    i__carry_i_20
       (.I0(BTL_NTQ_I0_carry__0_0[2]),
        .I1(BTL_NTQ_I0_carry__0_i_8_0[2]),
        .I2(\ic_reg_f_btr_ts2_cdc_tig_reg[2] ),
        .I3(BTL_NTQ_I0_carry__0_i_8_0[0]),
        .I4(BRS_EN_BTR),
        .I5(BTL_NTQ_I0_carry__0_0[0]),
        .O(i__carry_i_20_n_0));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    i__carry_i_21
       (.I0(i__carry_i_19_n_0),
        .I1(BRS_EN_BTR),
        .I2(BTL_COUNTER_I15_carry[4]),
        .O(i__carry_i_21_n_0));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT5 #(
    .INIT(32'h335FFF5F)) 
    i__carry_i_22
       (.I0(BTL_NTQ_I0_carry__0_0[0]),
        .I1(BTL_NTQ_I0_carry__0_i_8_0[0]),
        .I2(BTL_NTQ_I0_carry__0_0[1]),
        .I3(BRS_EN_BTR),
        .I4(BTL_NTQ_I0_carry__0_i_8_0[1]),
        .O(i__carry_i_22_n_0));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT5 #(
    .INIT(32'h335FFF5F)) 
    i__carry_i_23
       (.I0(BTL_COUNTER_I15_carry[0]),
        .I1(i__carry_i_7__1_0[0]),
        .I2(BTL_COUNTER_I15_carry[1]),
        .I3(BRS_EN_BTR),
        .I4(i__carry_i_7__1_0[1]),
        .O(i__carry_i_23_n_0));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    i__carry_i_24
       (.I0(i__carry_i_7__1_0[2]),
        .I1(BRS_EN_BTR),
        .I2(BTL_COUNTER_I15_carry[2]),
        .O(i__carry_i_24_n_0));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT4 #(
    .INIT(16'hF7FF)) 
    i__carry_i_25
       (.I0(BTL_NTQ_I0_carry__0_0[3]),
        .I1(i__carry_i_20_n_0),
        .I2(BRS_EN_BTR),
        .I3(BTL_NTQ_I0_carry__0_0[4]),
        .O(i__carry_i_25_n_0));
  LUT6 #(
    .INIT(64'h0C000CAA00000000)) 
    i__carry_i_26
       (.I0(BTL_COUNTER_I15_carry[1]),
        .I1(i__carry_i_7__1_0[1]),
        .I2(i__carry_i_7__1_0[0]),
        .I3(BRS_EN_BTR),
        .I4(BTL_COUNTER_I15_carry[0]),
        .I5(dest_arst),
        .O(i__carry_i_26_n_0));
  LUT5 #(
    .INIT(32'h00401104)) 
    i__carry_i_2__1
       (.I0(i__carry_i_5__1_n_0),
        .I1(i__carry_i_9_n_0),
        .I2(\arststages_ff_reg[1]_2 ),
        .I3(i__carry_i_7__1_n_0),
        .I4(i__carry_i_13__0_n_0),
        .O(BRS_L_SP_FE_reg_4[1]));
  LUT6 #(
    .INIT(64'h0000400042210221)) 
    i__carry_i_2__2
       (.I0(i__carry_i_8__1_n_0),
        .I1(i__carry_i_9_n_0),
        .I2(i__carry_i_10__0_n_0),
        .I3(\arststages_ff_reg[1]_1 ),
        .I4(i__carry_i_12_n_0),
        .I5(i__carry_i_13__0_n_0),
        .O(BRS_L_SP_FE_reg_3[1]));
  LUT6 #(
    .INIT(64'h0028A0A028000000)) 
    i__carry_i_2__3
       (.I0(i__carry_i_6__3_n_0),
        .I1(O[1]),
        .I2(BTL_COUNTER_I17_carry_i_9_n_0),
        .I3(O[0]),
        .I4(dest_arst),
        .I5(BTL_COUNTER_I17_carry_i_8_n_0),
        .O(\arststages_ff_reg[1]_7 [0]));
  LUT6 #(
    .INIT(64'h0000600660060000)) 
    i__carry_i_2__4
       (.I0(BTL_COUNTER_I17_carry_i_6_n_0),
        .I1(i__carry_i_7__4_n_0),
        .I2(i__carry_i_8__3_n_0),
        .I3(BTL_COUNTER_I17_carry_i_8_n_0),
        .I4(i__carry_i_9__1_n_0),
        .I5(BTL_COUNTER_I17_carry_i_9_n_0),
        .O(\ic_reg_n_btr_ts1_cdc_tig_reg[1]_2 [1]));
  LUT4 #(
    .INIT(16'hF880)) 
    i__carry_i_2__5
       (.I0(BTL_COUNTER_I17_carry_i_8_n_0),
        .I1(CAN_PHY_TX_POS_FLOP_X27[4]),
        .I2(BTL_COUNTER_I17_carry_i_9_n_0),
        .I3(CAN_PHY_TX_POS_FLOP_X27[5]),
        .O(BRSD_P_ERR_1TQ_FD_reg_8[1]));
  LUT6 #(
    .INIT(64'hA00088020AAA22A8)) 
    i__carry_i_2__6
       (.I0(i__carry_i_5__4_n_0),
        .I1(RXE_DLC_I[2]),
        .I2(RXE_DLC_I[0]),
        .I3(RXE_DLC_I[3]),
        .I4(RXE_DLC_I[1]),
        .I5(\RXE_COUNTER_I_reg_n_0_[7] ),
        .O(i__carry_i_2__6_n_0));
  LUT6 #(
    .INIT(64'h0990000000000990)) 
    i__carry_i_2__9
       (.I0(BTL_COUNTER_I17_carry_i_8_n_0),
        .I1(CAN_PHY_TX_POS_FLOP_X26_carry_i_11_n_0),
        .I2(BTL_COUNTER_I17_carry_i_9_n_0),
        .I3(CAN_PHY_TX_POS_FLOP_X26_carry_i_12_n_0),
        .I4(BTL_COUNTER_I17_carry_i_6_n_0),
        .I5(i__carry_i_4__1_n_0),
        .O(BRSD_P_ERR_1TQ_FD_reg_3[1]));
  LUT6 #(
    .INIT(64'hA000006000000509)) 
    i__carry_i_3__1
       (.I0(\ic_reg_f_btr_ts2_cdc_tig_reg[2] ),
        .I1(dest_arst),
        .I2(i__carry_i_14_n_0),
        .I3(i__carry_i_15_n_0),
        .I4(i__carry_i_16__0_n_0),
        .I5(IC_REG_BTR_TS2),
        .O(BRS_L_SP_FE_reg_3[0]));
  LUT6 #(
    .INIT(64'h0801010860000060)) 
    i__carry_i_3__2
       (.I0(\arststages_ff_reg[1]_3 ),
        .I1(\ic_reg_f_btr_ts2_cdc_tig_reg[2] ),
        .I2(IC_REG_BTR_TS2),
        .I3(i__carry_i_9__0_n_0),
        .I4(\arststages_ff_reg[1]_0 ),
        .I5(i__carry_i_14_n_0),
        .O(BRS_L_SP_FE_reg_4[0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_3__3
       (.I0(\arststages_ff_reg[1]_4 ),
        .I1(BRSD_P_ERR_1TQ_FD_reg),
        .I2(\arststages_ff_reg[1]_6 ),
        .I3(\BTL_COUNTER_I_REG_reg[0] ),
        .I4(\BTL_COUNTER_I_REG_reg[2] ),
        .I5(i__carry_i_12__0_n_0),
        .O(\ic_reg_n_btr_ts1_cdc_tig_reg[1]_2 [0]));
  LUT4 #(
    .INIT(16'hF880)) 
    i__carry_i_3__4
       (.I0(\BTL_COUNTER_I_REG_reg[2] ),
        .I1(CAN_PHY_TX_POS_FLOP_X27[2]),
        .I2(CAN_PHY_TX_POS_FLOP_X27[3]),
        .I3(BTL_COUNTER_I17_carry_i_6_n_0),
        .O(BRSD_P_ERR_1TQ_FD_reg_8[0]));
  LUT6 #(
    .INIT(64'h0690000000000690)) 
    i__carry_i_3__6
       (.I0(\BTL_COUNTER_I_REG_reg[2] ),
        .I1(i__carry_i_12__0_n_0),
        .I2(\arststages_ff_reg[1]_4 ),
        .I3(BRSD_P_ERR_1TQ_FD_reg),
        .I4(\arststages_ff_reg[1]_6 ),
        .I5(\BTL_COUNTER_I_REG_reg[0] ),
        .O(BRSD_P_ERR_1TQ_FD_reg_3[0]));
  LUT6 #(
    .INIT(64'h00000000AAA96656)) 
    i__carry_i_3__7
       (.I0(\RXE_COUNTER_I_reg_n_0_[5] ),
        .I1(RXE_DLC_I[0]),
        .I2(RXE_DLC_I[1]),
        .I3(RXE_DLC_I[3]),
        .I4(RXE_DLC_I[2]),
        .I5(i__carry_i_6__5_n_0),
        .O(i__carry_i_3__7_n_0));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT3 #(
    .INIT(8'h1E)) 
    i__carry_i_4__1
       (.I0(i__carry_i_12__0_n_0),
        .I1(\arststages_ff_reg[1]_4 ),
        .I2(i__carry_i_7__4_n_0),
        .O(i__carry_i_4__1_n_0));
  LUT6 #(
    .INIT(64'hF404FE0E0BFB01F1)) 
    i__carry_i_4__2
       (.I0(BTL_COUNTER_I17_carry_i_29_n_0),
        .I1(\BTL_COUNTER_I_REG_reg[8]_2 [5]),
        .I2(BRSD_P_ERR_1TQ_FD),
        .I3(CAN_PHY_TX_POS_FLOP_X26_carry_i_9_n_0),
        .I4(BTL_TRNSMT_EN_FD13_carry_i_6_n_0),
        .I5(i__carry_i_1__5_0),
        .O(i__carry_i_4__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT5 #(
    .INIT(32'h04080808)) 
    i__carry_i_4__3
       (.I0(i__carry_i_1__4_0[6]),
        .I1(dest_arst),
        .I2(BRS_EN_BTR),
        .I3(i__carry_i_1__4_0[5]),
        .I4(i__carry_i_13_n_0),
        .O(i__carry_i_4__3_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    i__carry_i_4__5
       (.I0(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [1]),
        .O(i__carry_i_4__5_n_0));
  LUT6 #(
    .INIT(64'h0082000000000000)) 
    i__carry_i_4__6
       (.I0(i__carry_i_18_n_0),
        .I1(BTL_COUNTER_I15_carry[4]),
        .I2(i__carry_i_19_n_0),
        .I3(BRS_EN_BTR),
        .I4(dest_arst),
        .I5(BTL_COUNTER_I15_carry[5]),
        .O(i__carry_i_4__6_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFF73BFFFF)) 
    i__carry_i_4__9
       (.I0(BTL_COUNTER_I15_carry[5]),
        .I1(dest_arst),
        .I2(BRS_EN_BTR),
        .I3(i__carry_i_21_n_0),
        .I4(\arststages_ff_reg[1]_2 ),
        .I5(i__carry_i_7__1_n_0),
        .O(i__carry_i_4__9_n_0));
  LUT4 #(
    .INIT(16'h59A6)) 
    i__carry_i_5__1
       (.I0(i__carry_i_8__1_n_0),
        .I1(\arststages_ff_reg[1]_0 ),
        .I2(\arststages_ff_reg[1]_3 ),
        .I3(\arststages_ff_reg[1]_1 ),
        .O(i__carry_i_5__1_n_0));
  LUT4 #(
    .INIT(16'h0660)) 
    i__carry_i_5__2
       (.I0(\BTL_COUNTER_I_REG[8]_i_5_n_0 ),
        .I1(CAN_PHY_TX_POS_FLOP_X27[6]),
        .I2(\BTL_COUNTER_I_REG[8]_i_7_n_0 ),
        .I3(CAN_PHY_TX_POS_FLOP_X27[7]),
        .O(BRSD_P_ERR_1TQ_FD_reg_7[2]));
  LUT6 #(
    .INIT(64'h000000007F800000)) 
    i__carry_i_5__3
       (.I0(i__carry_i_13_n_0),
        .I1(i__carry_i_1__4_0[5]),
        .I2(i__carry_i_1__4_0[6]),
        .I3(i__carry_i_1__4_0[7]),
        .I4(dest_arst),
        .I5(BRS_EN_BTR),
        .O(i__carry_i_5__3_n_0));
  LUT6 #(
    .INIT(64'h8080000215199954)) 
    i__carry_i_5__4
       (.I0(\RXE_COUNTER_I_reg_n_0_[6] ),
        .I1(RXE_DLC_I[3]),
        .I2(RXE_DLC_I[2]),
        .I3(RXE_DLC_I[0]),
        .I4(RXE_DLC_I[1]),
        .I5(\RXE_COUNTER_I_reg_n_0_[8] ),
        .O(i__carry_i_5__4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT5 #(
    .INIT(32'h08000000)) 
    i__carry_i_5__5
       (.I0(BTL_NTQ_I0_carry__0_0[5]),
        .I1(BTL_NTQ_I0_carry__0_0[4]),
        .I2(BRS_EN_BTR),
        .I3(i__carry_i_20_n_0),
        .I4(BTL_NTQ_I0_carry__0_0[3]),
        .O(i__carry_i_5__5_n_0));
  CARRY4 i__carry_i_5__6
       (.CI(BTL_COUNTER_I17_carry_i_19),
        .CO({NLW_i__carry_i_5__6_CO_UNCONNECTED[3:1],BTL_NTQ_I0_carry__0}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_i__carry_i_5__6_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,1'b1}));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT5 #(
    .INIT(32'hDFCFEFFF)) 
    i__carry_i_6__1
       (.I0(i__carry_i_21_n_0),
        .I1(BRS_EN_BTR),
        .I2(dest_arst),
        .I3(BTL_COUNTER_I15_carry[5]),
        .I4(BTL_COUNTER_I15_carry[6]),
        .O(BRS_L_SP_FE_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT4 #(
    .INIT(16'h08A2)) 
    i__carry_i_6__2
       (.I0(dest_arst),
        .I1(BTL_COUNTER_I15_carry[4]),
        .I2(BRS_EN_BTR),
        .I3(i__carry_i_19_n_0),
        .O(\arststages_ff_reg[1]_2 ));
  LUT3 #(
    .INIT(8'h6A)) 
    i__carry_i_6__3
       (.I0(BTL_COUNTER_I17_carry_i_6_n_0),
        .I1(dest_arst),
        .I2(i__carry_i_2__3_0),
        .O(i__carry_i_6__3_n_0));
  LUT4 #(
    .INIT(16'h0660)) 
    i__carry_i_6__4
       (.I0(BTL_COUNTER_I17_carry_i_9_n_0),
        .I1(CAN_PHY_TX_POS_FLOP_X27[5]),
        .I2(BTL_COUNTER_I17_carry_i_8_n_0),
        .I3(CAN_PHY_TX_POS_FLOP_X27[4]),
        .O(BRSD_P_ERR_1TQ_FD_reg_7[1]));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT5 #(
    .INIT(32'h6775FEDF)) 
    i__carry_i_6__5
       (.I0(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I1(RXE_DLC_I[3]),
        .I2(RXE_DLC_I[1]),
        .I3(RXE_DLC_I[0]),
        .I4(\RXE_COUNTER_I_reg_n_0_[4] ),
        .O(i__carry_i_6__5_n_0));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    i__carry_i_6__6
       (.I0(i__carry_i_1__4_0[6]),
        .I1(i__carry_i_1__4_0[5]),
        .I2(i__carry_i_13_n_0),
        .I3(BRS_EN_BTR),
        .I4(dest_arst),
        .I5(i__carry_i_1__4_0[7]),
        .O(i__carry_i_6__6_n_0));
  LUT5 #(
    .INIT(32'hF77FFFFF)) 
    i__carry_i_7__1
       (.I0(i__carry_i_11__0_n_0),
        .I1(dest_arst),
        .I2(BTL_COUNTER_I15_carry_i_11_n_0),
        .I3(i__carry_i_15_n_0),
        .I4(i__carry_i_24_n_0),
        .O(i__carry_i_7__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    i__carry_i_7__2
       (.I0(BTL_COUNTER_I15_carry[6]),
        .I1(BTL_COUNTER_I15_carry[5]),
        .I2(dest_arst),
        .I3(BRS_EN_BTR),
        .I4(i__carry_i_21_n_0),
        .O(\ic_reg_n_btr_sjw_cdc_tig_reg[0] ));
  LUT4 #(
    .INIT(16'h0660)) 
    i__carry_i_7__3
       (.I0(BTL_COUNTER_I17_carry_i_6_n_0),
        .I1(CAN_PHY_TX_POS_FLOP_X27[3]),
        .I2(\BTL_COUNTER_I_REG_reg[2] ),
        .I3(CAN_PHY_TX_POS_FLOP_X27[2]),
        .O(BRSD_P_ERR_1TQ_FD_reg_7[0]));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT5 #(
    .INIT(32'h28222888)) 
    i__carry_i_7__4
       (.I0(dest_arst),
        .I1(i__carry_i_14__0_n_0),
        .I2(BTL_TRNSMT_EN_FD13_carry_i_6_0[3]),
        .I3(BRS_EN_BTR),
        .I4(i__carry_i_1__4_0[3]),
        .O(i__carry_i_7__4_n_0));
  LUT6 #(
    .INIT(64'hBBBBAF504444AF50)) 
    i__carry_i_8__1
       (.I0(i__carry_i_22_n_0),
        .I1(BTL_NTQ_I0_carry__0_i_8_0[2]),
        .I2(BTL_NTQ_I0_carry__0_0[2]),
        .I3(BTL_NTQ_I0_carry__0_0[3]),
        .I4(BRS_EN_BTR),
        .I5(BTL_NTQ_I0_carry__0_i_8_0[3]),
        .O(i__carry_i_8__1_n_0));
  LUT6 #(
    .INIT(64'hFD5D5DFDF75757F7)) 
    i__carry_i_8__2
       (.I0(dest_arst),
        .I1(BTL_COUNTER_I15_carry[0]),
        .I2(BRS_EN_BTR),
        .I3(i__carry_i_7__1_0[0]),
        .I4(i__carry_i_7__1_0[1]),
        .I5(BTL_COUNTER_I15_carry[1]),
        .O(\arststages_ff_reg[1]_3 ));
  LUT5 #(
    .INIT(32'hFD5D57F7)) 
    i__carry_i_8__3
       (.I0(dest_arst),
        .I1(i__carry_i_1__4_0[4]),
        .I2(BRS_EN_BTR),
        .I3(BTL_TRNSMT_EN_FD13_carry_i_6_0[4]),
        .I4(i__carry_i_15__0_n_0),
        .O(i__carry_i_8__3_n_0));
  LUT6 #(
    .INIT(64'h2D1DEDDDD2E21222)) 
    i__carry_i_9
       (.I0(BTL_NTQ_I0_carry__0_0[4]),
        .I1(BRS_EN_BTR),
        .I2(i__carry_i_20_n_0),
        .I3(BTL_NTQ_I0_carry__0_0[3]),
        .I4(BTL_NTQ_I0_carry__0_i_8_0[3]),
        .I5(\arststages_ff_reg[1]_2 ),
        .O(i__carry_i_9_n_0));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    i__carry_i_9__0
       (.I0(BTL_NTQ_I0_carry__0_i_8_0[2]),
        .I1(BRS_EN_BTR),
        .I2(BTL_NTQ_I0_carry__0_0[2]),
        .O(i__carry_i_9__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT4 #(
    .INIT(16'h8A20)) 
    i__carry_i_9__1
       (.I0(dest_arst),
        .I1(BRS_EN_BTR),
        .I2(i__carry_i_1__4_0[5]),
        .I3(i__carry_i_13_n_0),
        .O(i__carry_i_9__1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEFFFEFE)) 
    \state[0]_i_1 
       (.I0(\state[0]_i_2_n_0 ),
        .I1(\state[0]_i_3_n_0 ),
        .I2(\state[0]_i_4_n_0 ),
        .I3(\state[0]_i_5_n_0 ),
        .I4(\state[0]_i_6_n_0 ),
        .I5(\state[0]_i_7_n_0 ),
        .O(\state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0D0D0F0F000D0F0F)) 
    \state[0]_i_10 
       (.I0(TXE_TXING_reg_2),
        .I1(\state[0]_i_2_0 ),
        .I2(\state[0]_i_23_n_0 ),
        .I3(\state_reg_n_0_[0] ),
        .I4(\state_reg_n_0_[1] ),
        .I5(\state[0]_i_24_n_0 ),
        .O(\state[0]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \state[0]_i_11 
       (.I0(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I1(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I3(TDC_TRIG_COND_D1_i_4_n_0),
        .I4(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I5(\RXE_COUNTER_I_reg[3]_0 [1]),
        .O(\state[0]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT5 #(
    .INIT(32'h00000100)) 
    \state[0]_i_12 
       (.I0(SM_FLAG_I_i_5_n_0),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .I3(\RXE_MSGPAD_SEL_FS1_reg[0]_0 ),
        .I4(TXE_MSGVAL_FD1_i_3_n_0),
        .O(\state[0]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h555D5D5DD5DDDDDD)) 
    \state[0]_i_13 
       (.I0(\state[2]_i_20_n_0 ),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .I3(\RXE_MSGPAD_SEL_FS1_reg[0]_0 ),
        .I4(RXE_COUNTER_RST30_out),
        .I5(\COUNTER_I[1]_i_5_n_0 ),
        .O(\state[0]_i_13_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \state[0]_i_14 
       (.I0(\state_reg_n_0_[2] ),
        .I1(Q),
        .O(\state[0]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h4444FFFF4444CCC0)) 
    \state[0]_i_15 
       (.I0(\state[4]_i_9_n_0 ),
        .I1(\state_reg[4]_0 ),
        .I2(\RXE_COUNTER_I[6]_i_2_n_0 ),
        .I3(\RXE_COUNTER_I_reg[5]_0 ),
        .I4(\state_reg_n_0_[1] ),
        .I5(\state_reg_n_0_[0] ),
        .O(\state[0]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hC4C0C0C0C4C0C4C0)) 
    \state[0]_i_16 
       (.I0(RXE_OL_SLEEP_i_2_n_0),
        .I1(Q),
        .I2(\state_reg_n_0_[3] ),
        .I3(\state_reg_n_0_[2] ),
        .I4(BSP_CRCERR_I_CANFD_FLG_i_5_n_0),
        .I5(\state_reg[4]_0 ),
        .O(\state[0]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'h02A002AF028F028F)) 
    \state[0]_i_17 
       (.I0(\state_reg[4]_0 ),
        .I1(TXE_MSGVAL_FD1_i_3_n_0),
        .I2(\state_reg_n_0_[1] ),
        .I3(\state_reg_n_0_[0] ),
        .I4(\state[2]_i_10_n_0 ),
        .I5(RXE_ERRFLG_I_reg_0),
        .O(\state[0]_i_17_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    \state[0]_i_18 
       (.I0(\BIS_COUNTER_I[3]_i_6_n_0 ),
        .I1(dest_arst),
        .I2(\state_reg_n_0_[1] ),
        .I3(\state_reg_n_0_[0] ),
        .O(\state[0]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000FD00)) 
    \state[0]_i_19 
       (.I0(\state[2]_i_18_n_0 ),
        .I1(SM_FLAG_I_i_5_n_0),
        .I2(RXE_RTR_I),
        .I3(\state_reg_n_0_[0] ),
        .I4(\state[4]_i_8_n_0 ),
        .I5(\state[0]_i_25_n_0 ),
        .O(\state[0]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h8888AA8AAAAAAAAA)) 
    \state[0]_i_2 
       (.I0(\state[0]_i_8_n_0 ),
        .I1(\state[0]_i_9_n_0 ),
        .I2(\state_reg[4]_0 ),
        .I3(TXE_MSGVAL_FD1_i_3_n_0),
        .I4(RXE_OL_SLEEP_i_2_n_0),
        .I5(\state[0]_i_10_n_0 ),
        .O(\state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0055FF5D0055555D)) 
    \state[0]_i_20 
       (.I0(\state_reg[4]_0 ),
        .I1(\RXE_MSGPAD_SEL_FS1_reg[0]_0 ),
        .I2(\state[0]_i_26_n_0 ),
        .I3(\state_reg_n_0_[1] ),
        .I4(\state_reg_n_0_[0] ),
        .I5(TXE_PASSTX_I_i_4_n_0),
        .O(\state[0]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \state[0]_i_21 
       (.I0(\RXE_MSGPAD_SEL_FS1_reg[0]_0 ),
        .I1(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I2(TDC_TRIG_COND_D1_i_4_n_0),
        .I3(\RXE_COUNTER_I[6]_i_2_n_0 ),
        .I4(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I5(\RXE_COUNTER_I_reg[3]_0 [2]),
        .O(\state[0]_i_21_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    \state[0]_i_23 
       (.I0(\RXE_COUNTER_I_reg[5]_0 ),
        .I1(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I2(RXE_ERRFLG_I_reg_0),
        .I3(\state_reg_n_0_[1] ),
        .I4(\state_reg_n_0_[0] ),
        .O(\state[0]_i_23_n_0 ));
  LUT6 #(
    .INIT(64'h5555F555DDFDDDDD)) 
    \state[0]_i_24 
       (.I0(\state[0]_i_10_0 ),
        .I1(\RXE_COUNTER_I_reg[4]_0 ),
        .I2(\RXE_MSGPAD_SEL_FS1[1]_i_4_n_0 ),
        .I3(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I5(RXE_PASSFLG_I),
        .O(\state[0]_i_24_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT5 #(
    .INIT(32'h000000A2)) 
    \state[0]_i_25 
       (.I0(\RXE_MSGPAD_SEL_FS1_reg[0]_0 ),
        .I1(\state[4]_i_7_n_0 ),
        .I2(\RXE_COUNTER_I_reg[4]_1 ),
        .I3(\state_reg_n_0_[0] ),
        .I4(RXE_ERRFLG_I_reg_0),
        .O(\state[0]_i_25_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFFFDFF)) 
    \state[0]_i_26 
       (.I0(\RXE_COUNTER_I[8]_i_11_n_0 ),
        .I1(\RXE_COUNTER_I_reg_n_0_[8] ),
        .I2(\RXE_COUNTER_I_reg_n_0_[7] ),
        .I3(\RXE_COUNTER_I_reg_n_0_[5] ),
        .I4(\RXE_COUNTER_I_reg_n_0_[6] ),
        .I5(RXE_COUNTER_RST2),
        .O(\state[0]_i_26_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFFFF5D)) 
    \state[0]_i_3 
       (.I0(\state_reg[4]_0 ),
        .I1(\state[0]_i_11_n_0 ),
        .I2(\EMU_REC_I[7]_i_7_n_0 ),
        .I3(\state[0]_i_12_n_0 ),
        .I4(\state[0]_i_13_n_0 ),
        .I5(\state[0]_i_14_n_0 ),
        .O(\state[0]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \state[0]_i_30 
       (.I0(RXE_DLC_I[3]),
        .I1(RXE_DLC_I[1]),
        .I2(RXE_DLC_I[2]),
        .I3(RXE_DLC_I[0]),
        .O(\state[0]_i_30_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \state[0]_i_31 
       (.I0(RXE_DLC_I[3]),
        .I1(RXE_DLC_I[1]),
        .I2(RXE_DLC_I[2]),
        .I3(RXE_DLC_I[0]),
        .O(\state[0]_i_31_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \state[0]_i_32 
       (.I0(RXE_DLC_I[3]),
        .I1(RXE_DLC_I[1]),
        .I2(RXE_DLC_I[2]),
        .I3(RXE_DLC_I[0]),
        .O(\state[0]_i_32_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \state[0]_i_34 
       (.I0(RXE_DLC_I[3]),
        .I1(RXE_DLC_I[1]),
        .I2(RXE_DLC_I[2]),
        .I3(RXE_DLC_I[0]),
        .O(\state[0]_i_34_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \state[0]_i_35 
       (.I0(RXE_DLC_I[3]),
        .I1(RXE_DLC_I[1]),
        .I2(RXE_DLC_I[2]),
        .I3(RXE_DLC_I[0]),
        .O(\state[0]_i_35_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \state[0]_i_36 
       (.I0(RXE_DLC_I[3]),
        .I1(RXE_DLC_I[1]),
        .I2(RXE_DLC_I[2]),
        .I3(RXE_DLC_I[0]),
        .O(\state[0]_i_36_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \state[0]_i_37 
       (.I0(RXE_DLC_I[3]),
        .I1(RXE_DLC_I[1]),
        .I2(RXE_DLC_I[2]),
        .I3(RXE_DLC_I[0]),
        .O(\state[0]_i_37_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \state[0]_i_38 
       (.I0(RXE_DLC_I[3]),
        .I1(RXE_DLC_I[1]),
        .I2(RXE_DLC_I[2]),
        .I3(RXE_DLC_I[0]),
        .O(\state[0]_i_38_n_0 ));
  LUT5 #(
    .INIT(32'h08101001)) 
    \state[0]_i_39 
       (.I0(\RXE_COUNTER_I_reg_n_0_[8] ),
        .I1(\RXE_COUNTER_I_reg_n_0_[7] ),
        .I2(RXE_DLC_I[3]),
        .I3(RXE_RXFIFO_WEN_FD1_i_10_n_0),
        .I4(\RXE_COUNTER_I_reg_n_0_[6] ),
        .O(\state[0]_i_39_n_0 ));
  LUT6 #(
    .INIT(64'hF0F0F4F0FFF0F4F0)) 
    \state[0]_i_4 
       (.I0(\state[0]_i_15_n_0 ),
        .I1(Q),
        .I2(\state[0]_i_16_n_0 ),
        .I3(\state_reg_n_0_[2] ),
        .I4(\state_reg_n_0_[3] ),
        .I5(\state[0]_i_17_n_0 ),
        .O(\state[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000096090090000)) 
    \state[0]_i_40 
       (.I0(RXE_DLC_I[2]),
        .I1(\RXE_COUNTER_I_reg_n_0_[5] ),
        .I2(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I3(RXE_DLC_I[1]),
        .I4(RXE_DLC_I[0]),
        .I5(\RXE_COUNTER_I_reg[3]_0 [3]),
        .O(\state[0]_i_40_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \state[0]_i_41 
       (.I0(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I1(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [1]),
        .O(\state[0]_i_41_n_0 ));
  LUT6 #(
    .INIT(64'h00070F0700030003)) 
    \state[0]_i_5 
       (.I0(RXE_ERRFLG_I_reg_0),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state[0]_i_18_n_0 ),
        .I3(\state_reg_n_0_[1] ),
        .I4(\state[0]_i_19_n_0 ),
        .I5(\state_reg[4]_0 ),
        .O(\state[0]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \state[0]_i_6 
       (.I0(\state_reg_n_0_[2] ),
        .I1(\state_reg_n_0_[3] ),
        .I2(Q),
        .O(\state[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FF08FF2A)) 
    \state[0]_i_7 
       (.I0(\state_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[1] ),
        .I2(\state[2]_i_8_n_0 ),
        .I3(\state[0]_i_20_n_0 ),
        .I4(\state[0]_i_21_n_0 ),
        .I5(TXE_MSGVAL_FD1_i_2_n_0),
        .O(\state[0]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \state[0]_i_8 
       (.I0(\state_reg_n_0_[3] ),
        .I1(\state_reg_n_0_[2] ),
        .O(\state[0]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFF00000200000002)) 
    \state[0]_i_9 
       (.I0(RXE_ERRFLG_I_reg_0),
        .I1(TXE_PASSTX_I_reg_0),
        .I2(\state[3]_i_4_n_0 ),
        .I3(\state_reg_n_0_[1] ),
        .I4(\state_reg_n_0_[0] ),
        .I5(EMU_REC_I20_carry_i_9_n_0),
        .O(\state[0]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000FFEA)) 
    \state[1]_i_1 
       (.I0(\state[1]_i_2_n_0 ),
        .I1(\state[1]_i_3_n_0 ),
        .I2(\state[1]_i_4_n_0 ),
        .I3(\state[1]_i_5_n_0 ),
        .I4(Q),
        .I5(\state[1]_i_6_n_0 ),
        .O(\state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF01FFFFFF)) 
    \state[1]_i_10 
       (.I0(BUFFER_EMPTY_INTERNAL_i_2_0),
        .I1(BUFFER_EMPTY_INTERNAL_i_2_1),
        .I2(\state[1]_i_5_0 ),
        .I3(\state_reg_n_0_[3] ),
        .I4(\state_reg_n_0_[2] ),
        .I5(RXE_OL_SLEEP_i_2_n_0),
        .O(\state[1]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h444F000000000000)) 
    \state[1]_i_11 
       (.I0(\state_reg_n_0_[1] ),
        .I1(\state_reg[4]_0 ),
        .I2(RXE_PASSFLG_I_reg_0),
        .I3(\state_reg_n_0_[2] ),
        .I4(\state_reg_n_0_[3] ),
        .I5(\state_reg_n_0_[0] ),
        .O(\state[1]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \state[1]_i_13 
       (.I0(\state_reg[4]_0 ),
        .I1(TXE_MSGVAL_FD1_i_3_n_0),
        .O(\state[1]_i_13_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    \state[1]_i_14 
       (.I0(\state_reg_n_0_[1] ),
        .I1(\state_reg_n_0_[3] ),
        .I2(Q),
        .O(\state[1]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hA888A888AA8AA888)) 
    \state[1]_i_15 
       (.I0(BSP_IC_FRM_ERROR_I_i_5_n_0),
        .I1(BSP_IC_FRM_ERROR_I_i_7_n_0),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state[1]_i_18_n_0 ),
        .I4(\state[2]_i_20_n_0 ),
        .I5(\state[1]_i_19_n_0 ),
        .O(\state[1]_i_15_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT5 #(
    .INIT(32'h10300000)) 
    \state[1]_i_16 
       (.I0(\state_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[3] ),
        .I2(Q),
        .I3(\state_reg_n_0_[2] ),
        .I4(\state_reg_n_0_[1] ),
        .O(\state[1]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hF000FFFFFFFFDDDD)) 
    \state[1]_i_17 
       (.I0(\RXE_COUNTER_I_reg[0]_0 ),
        .I1(RXE_ERRFLG_I_reg_0),
        .I2(TXE_TXING_reg_8),
        .I3(\BIS_COUNTER_I[3]_i_6_n_0 ),
        .I4(\state_reg_n_0_[1] ),
        .I5(\state_reg_n_0_[0] ),
        .O(\state[1]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hF7F7F777F777F777)) 
    \state[1]_i_18 
       (.I0(\RXE_MSGPAD_SEL_FS1_reg[0]_0 ),
        .I1(RXE_COUNTER_RST30_out),
        .I2(RXE_DLC_I[3]),
        .I3(RXE_DLC_I[2]),
        .I4(RXE_DLC_I[1]),
        .I5(RXE_DLC_I[0]),
        .O(\state[1]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    \state[1]_i_19 
       (.I0(\RXE_SREG_I_reg[24]_0 [3]),
        .I1(\RXE_SREG_I_reg[24]_0 [0]),
        .I2(\RXE_SREG_I_reg[24]_0 [2]),
        .I3(\RXE_SREG_I_reg[24]_0 [1]),
        .I4(\RXE_MSGPAD_SEL_FS1_reg[0]_0 ),
        .I5(TXE_MSGVAL_FD1_i_3_n_0),
        .O(\state[1]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00D00010)) 
    \state[1]_i_2 
       (.I0(RXE_PASSFLG_I_reg_0),
        .I1(\state_reg[4]_0 ),
        .I2(\state_reg_n_0_[2] ),
        .I3(\state_reg_n_0_[3] ),
        .I4(\state[1]_i_7_n_0 ),
        .I5(\state[1]_i_8_n_0 ),
        .O(\state[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \state[1]_i_3 
       (.I0(\state_reg_n_0_[3] ),
        .I1(\state_reg_n_0_[2] ),
        .O(\state[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h02005750FFFFFFFF)) 
    \state[1]_i_4 
       (.I0(\state_reg[4]_0 ),
        .I1(\state[4]_i_3_n_0 ),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg_n_0_[1] ),
        .I4(RXE_PASSFLG_I_reg_0),
        .I5(\state[1]_i_9_n_0 ),
        .O(\state[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00F000F0DDDDDDFD)) 
    \state[1]_i_5 
       (.I0(\state[1]_i_10_n_0 ),
        .I1(\state[1]_i_11_n_0 ),
        .I2(\state_reg_n_0_[3] ),
        .I3(\EMU_REC_I[7]_i_7_n_0 ),
        .I4(\state_reg[1]_1 ),
        .I5(\state[1]_i_13_n_0 ),
        .O(\state[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFCCCFCCFFFFCFDD)) 
    \state[1]_i_6 
       (.I0(\state[1]_i_14_n_0 ),
        .I1(\state[4]_i_2_n_0 ),
        .I2(\state[1]_i_15_n_0 ),
        .I3(\state_reg[4]_0 ),
        .I4(\state[1]_i_16_n_0 ),
        .I5(RXE_PASSFLG_I_reg_0),
        .O(\state[1]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT5 #(
    .INIT(32'hFF200F20)) 
    \state[1]_i_7 
       (.I0(\RXE_MSGPAD_SEL_FS1_reg[0]_0 ),
        .I1(SM_FLAG_I_i_7_n_0),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg_n_0_[1] ),
        .I4(TXE_MSGVAL_FD1_i_3_n_0),
        .O(\state[1]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h5500FF0057005500)) 
    \state[1]_i_8 
       (.I0(\state[1]_i_17_n_0 ),
        .I1(\state_reg_n_0_[0] ),
        .I2(RXE_ERRFLG_I_reg_0),
        .I3(\state_reg_n_0_[3] ),
        .I4(\state_reg_n_0_[2] ),
        .I5(\state_reg_n_0_[1] ),
        .O(\state[1]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hEFFFFFFFEF0FFFFF)) 
    \state[1]_i_9 
       (.I0(\state[2]_i_18_n_0 ),
        .I1(\state[4]_i_8_n_0 ),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg_n_0_[1] ),
        .I4(\state_reg[4]_0 ),
        .I5(RXE_ERRFLG_I_reg_0),
        .O(\state[1]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFF54FF54FFFFFF54)) 
    \state[2]_i_1 
       (.I0(\state[2]_i_2_n_0 ),
        .I1(\state[2]_i_3_n_0 ),
        .I2(\state[2]_i_4_n_0 ),
        .I3(\state[2]_i_5_n_0 ),
        .I4(\state[2]_i_6_n_0 ),
        .I5(\state[2]_i_7_n_0 ),
        .O(\state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000040000)) 
    \state[2]_i_10 
       (.I0(TXE_MSGVAL_FD1_i_4_n_0),
        .I1(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I2(\RXE_COUNTER_I_reg_n_0_[5] ),
        .I3(TXE_MSGVAL_FD1_i_5_n_0),
        .I4(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I5(\RXE_COUNTER_I_reg_n_0_[6] ),
        .O(\state[2]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0000000020000000)) 
    \state[2]_i_11 
       (.I0(TXE_TXING_reg_8),
        .I1(BIS_COUNTER_I_reg[2]),
        .I2(BIS_COUNTER_I_reg[3]),
        .I3(RXE_ERRFLG_I_reg_0),
        .I4(BIS_COUNTER_I_reg[1]),
        .I5(BIS_COUNTER_I_reg[0]),
        .O(\state[2]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAEAAAAAAA)) 
    \state[2]_i_12 
       (.I0(TXE_MSGVAL_FD1_i_2_n_0),
        .I1(\state_reg_n_0_[1] ),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg[4]_0 ),
        .I4(RXE_ERRFLG_I_reg_0),
        .I5(TXE_MSGVAL_FD1_i_3_n_0),
        .O(\state[2]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'hAAAAEAAA)) 
    \state[2]_i_13 
       (.I0(\state[4]_i_2_n_0 ),
        .I1(\RXE_MSGPAD_SEL_FS1[1]_i_3_n_0 ),
        .I2(\state[2]_i_18_n_0 ),
        .I3(\state_reg[4]_0 ),
        .I4(\state[4]_i_8_n_0 ),
        .O(\state[2]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h4040400040004000)) 
    \state[2]_i_14 
       (.I0(RXE_OL_SLEEP_i_2_n_0),
        .I1(\state[2]_i_19_n_0 ),
        .I2(RXE_DLC_I[3]),
        .I3(RXE_DLC_I[2]),
        .I4(RXE_DLC_I[1]),
        .I5(RXE_DLC_I[0]),
        .O(\state[2]_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT4 #(
    .INIT(16'h80FF)) 
    \state[2]_i_15 
       (.I0(\COUNTER_I[1]_i_5_n_0 ),
        .I1(\state_reg_n_0_[1] ),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state[2]_i_20_n_0 ),
        .O(\state[2]_i_15_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT3 #(
    .INIT(8'hA2)) 
    \state[2]_i_16 
       (.I0(Q),
        .I1(\state_reg_n_0_[2] ),
        .I2(\state_reg_n_0_[3] ),
        .O(\state[2]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF2000)) 
    \state[2]_i_17 
       (.I0(RXE_ERRFLG_I_reg_0),
        .I1(TDC_TRIG_COND_D1_i_3_n_0),
        .I2(TXE_PASSTX_I_reg_0),
        .I3(\RXE_COUNTER_I_reg[0]_0 ),
        .I4(\state[0]_i_23_n_0 ),
        .I5(\state_reg_n_0_[2] ),
        .O(\state[2]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    \state[2]_i_18 
       (.I0(\RXE_MSGPAD_SEL_FS1_reg[0]_0 ),
        .I1(TDC_TRIG_COND_D1_i_4_n_0),
        .I2(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I3(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I4(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I5(\RXE_MSGPAD_SEL_FS1[1]_i_5_n_0 ),
        .O(\state[2]_i_18_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \state[2]_i_19 
       (.I0(RXE_COUNTER_RST30_out),
        .I1(\RXE_MSGPAD_SEL_FS1_reg[0]_0 ),
        .O(\state[2]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAABBBAAAAEFFF)) 
    \state[2]_i_2 
       (.I0(TXE_MSGINVAL_D1_i_2_n_0),
        .I1(\state_reg_n_0_[1] ),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state[2]_i_8_n_0 ),
        .I4(\state[2]_i_9_n_0 ),
        .I5(\state_reg[2]_4 ),
        .O(\state[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFBFFFFFFFFFF)) 
    \state[2]_i_20 
       (.I0(MSR_DPEE_FS2),
        .I1(\RXE_COUNTER_I_reg[4]_0 ),
        .I2(\state_reg[2]_0 ),
        .I3(RXE_ERRFLG_I_reg_0),
        .I4(TXE_TXING_reg_0),
        .I5(\RXE_MSGPAD_SEL_FS1_reg[0]_0 ),
        .O(\state[2]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'h3C3C0C3028282828)) 
    \state[2]_i_3 
       (.I0(\state_reg[2]_4 ),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .I3(RXE_ERRFLG_I_reg_0),
        .I4(TXE_MSGVAL_FD1_i_3_n_0),
        .I5(\state_reg[4]_0 ),
        .O(\state[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0F0F0F2FFF0F0F2F)) 
    \state[2]_i_4 
       (.I0(RXE_ERRFLG_I_reg_0),
        .I1(\state[2]_i_10_n_0 ),
        .I2(\state_reg_n_0_[2] ),
        .I3(\state_reg_n_0_[0] ),
        .I4(\state_reg_n_0_[1] ),
        .I5(\state[2]_i_11_n_0 ),
        .O(\state[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hDDDDFCDCDDDDDCDC)) 
    \state[2]_i_5 
       (.I0(\state[2]_i_12_n_0 ),
        .I1(\state[2]_i_13_n_0 ),
        .I2(\state_reg[2]_4 ),
        .I3(\state[0]_i_6_n_0 ),
        .I4(\state_reg[4]_0 ),
        .I5(TDC_TRIG_COND_D1_i_3_n_0),
        .O(\state[2]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \state[2]_i_6 
       (.I0(Q),
        .I1(\state_reg_n_0_[3] ),
        .O(\state[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h053300330533FFFF)) 
    \state[2]_i_7 
       (.I0(\state[2]_i_14_n_0 ),
        .I1(\RXE_SREG_I[0]_i_3_n_0 ),
        .I2(\state[2]_i_15_n_0 ),
        .I3(\state[2]_i_16_n_0 ),
        .I4(\state_reg[4]_0 ),
        .I5(\state_reg[2]_4 ),
        .O(\state[2]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \state[2]_i_8 
       (.I0(\state_reg[4]_0 ),
        .I1(RXE_ERRFLG_I_reg_0),
        .I2(TXE_MSGVAL_FD1_i_3_n_0),
        .O(\state[2]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT5 #(
    .INIT(32'hFFFF0888)) 
    \state[2]_i_9 
       (.I0(\state_reg_n_0_[1] ),
        .I1(RXE_ERRFLG_I_reg_0),
        .I2(\state_reg_n_0_[0] ),
        .I3(EMU_REC_I20_carry_i_9_n_0),
        .I4(\state[2]_i_17_n_0 ),
        .O(\state[2]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFF00FF02FF00FFFF)) 
    \state[3]_i_1 
       (.I0(TDC_TRIG_COND_D1_i_3_n_0),
        .I1(\state_reg_n_0_[3] ),
        .I2(Q),
        .I3(\state[3]_i_2_n_0 ),
        .I4(\state_reg[4]_0 ),
        .I5(\state[3]_i_3_n_0 ),
        .O(\state[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000FEFA)) 
    \state[3]_i_2 
       (.I0(\state_reg_n_0_[1] ),
        .I1(TXE_PASSTX_I_reg_0),
        .I2(\state[3]_i_4_n_0 ),
        .I3(RXE_ERRFLG_I_reg_0),
        .I4(\state[3]_i_5_n_0 ),
        .I5(\state[3]_i_6_n_0 ),
        .O(\state[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT5 #(
    .INIT(32'hFF80FF0F)) 
    \state[3]_i_3 
       (.I0(\state_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[1] ),
        .I2(Q),
        .I3(\state_reg_n_0_[3] ),
        .I4(\state_reg_n_0_[2] ),
        .O(\state[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFFFF)) 
    \state[3]_i_4 
       (.I0(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I1(\RXE_COUNTER_I_reg[3]_0 [3]),
        .I2(\RXE_COUNTER_I_reg[3]_0 [2]),
        .I3(TDC_TRIG_COND_D1_i_4_n_0),
        .I4(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I5(\RXE_COUNTER_I_reg[3]_0 [0]),
        .O(\state[3]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    \state[3]_i_5 
       (.I0(\state_reg_n_0_[2] ),
        .I1(\state_reg_n_0_[3] ),
        .I2(Q),
        .O(\state[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000200)) 
    \state[3]_i_6 
       (.I0(\RXE_COUNTER_I[8]_i_13_n_0 ),
        .I1(Q),
        .I2(\state_reg_n_0_[1] ),
        .I3(RXE_ERRFLG_I_reg_0),
        .I4(\state[2]_i_10_n_0 ),
        .I5(\state[3]_i_7_n_0 ),
        .O(\state[3]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h333333337FF33333)) 
    \state[3]_i_7 
       (.I0(\state[2]_i_11_n_0 ),
        .I1(\state[3]_i_8_n_0 ),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg_n_0_[1] ),
        .I4(\state_reg_n_0_[3] ),
        .I5(Q),
        .O(\state[3]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFFFFFF)) 
    \state[3]_i_8 
       (.I0(Q),
        .I1(\state_reg_n_0_[2] ),
        .I2(\state_reg_n_0_[3] ),
        .I3(\state_reg_n_0_[1] ),
        .I4(\state_reg_n_0_[0] ),
        .I5(TXE_MSGVAL_FD1_i_3_n_0),
        .O(\state[3]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAAAAA)) 
    \state[4]_i_1 
       (.I0(\state[4]_i_2_n_0 ),
        .I1(\state[4]_i_3_n_0 ),
        .I2(\state_reg[4]_1 ),
        .I3(\state[4]_i_5_n_0 ),
        .I4(\state_reg[4]_0 ),
        .O(\state[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0F0D0000)) 
    \state[4]_i_10 
       (.I0(TXE_TXING_reg_0),
        .I1(\RXE_SREG_I_reg[24]_0 [0]),
        .I2(\RXE_COUNTER_I_reg[5]_0 ),
        .I3(\RXE_COUNTER_I_reg[3]_0 [0]),
        .I4(\RXE_COUNTER_I_reg[3]_0 [1]),
        .I5(\state_reg_n_0_[0] ),
        .O(\state[4]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0000000020000000)) 
    \state[4]_i_2 
       (.I0(\state_reg_n_0_[2] ),
        .I1(\state_reg_n_0_[3] ),
        .I2(Q),
        .I3(\state_reg_n_0_[1] ),
        .I4(\state_reg_n_0_[0] ),
        .I5(\BIS_COUNTER_I[3]_i_6_n_0 ),
        .O(\state[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \state[4]_i_3 
       (.I0(\state[4]_i_7_n_0 ),
        .I1(\RXE_MSGPAD_SEL_FS1_reg[0]_0 ),
        .I2(RXE_ERRFLG_I_reg_0),
        .O(\state[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT5 #(
    .INIT(32'h00000100)) 
    \state[4]_i_4 
       (.I0(Q),
        .I1(\state_reg_n_0_[3] ),
        .I2(\state_reg_n_0_[2] ),
        .I3(\state_reg_n_0_[1] ),
        .I4(\state_reg_n_0_[0] ),
        .O(\state_reg[4]_1 ));
  LUT6 #(
    .INIT(64'h88F8F8F8F8F8F8F8)) 
    \state[4]_i_5 
       (.I0(\state[4]_i_8_n_0 ),
        .I1(\RXE_MSGPAD_SEL_FS1[1]_i_3_n_0 ),
        .I2(\state[2]_i_6_n_0 ),
        .I3(\state_reg_n_0_[2] ),
        .I4(\state_reg_n_0_[1] ),
        .I5(\state[4]_i_9_n_0 ),
        .O(\state[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000020000)) 
    \state[4]_i_6 
       (.I0(BRSD_P_ERR_1TQ_FD_i_10_n_0),
        .I1(BRSD_P_ERR_1TQ_FD_i_11_n_0),
        .I2(BRS_L_SP_FE_reg_2),
        .I3(BRSD_P_ERR_1TQ_FD_i_12_n_0),
        .I4(BRSD_P_ERR_1TQ_FD_i_5_n_0),
        .I5(BTL_RXBIT_I_reg_0),
        .O(\state_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
    \state[4]_i_7 
       (.I0(BSP_IC_BIT_ERROR_I_i_6_n_0),
        .I1(\RXE_COUNTER_I_reg_n_0_[4] ),
        .I2(\RXE_MSGPAD_SEL_FS1[1]_i_5_n_0 ),
        .I3(\RXE_COUNTER_I_reg_n_0_[5] ),
        .I4(\RXE_COUNTER_I_reg_n_0_[6] ),
        .I5(TXE_MSGVAL_FD1_i_4_n_0),
        .O(\state[4]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \state[4]_i_8 
       (.I0(\RXE_MSGPAD_SEL_FS1_reg[0]_0 ),
        .I1(RXE_ERRFLG_I_reg_0),
        .I2(RXE_IDE_I),
        .I3(\RXE_COUNTER_I_reg[4]_0 ),
        .O(\state[4]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF04C40000)) 
    \state[4]_i_9 
       (.I0(BSP_CRCERR_I_CANFD_FLG_reg_0),
        .I1(\RXE_SREG_I_reg[24]_0 [0]),
        .I2(TXE_TXING_reg_0),
        .I3(\RXE_SREG_I_reg[24]_0 [1]),
        .I4(TXE_PASSTX_I_i_4_n_0),
        .I5(\state[4]_i_10_n_0 ),
        .O(\state[4]_i_9_n_0 ));
  (* FSM_ENCODING = "none" *) 
  FDRE \state_reg[0] 
       (.C(can_clk),
        .CE(E),
        .D(\state[0]_i_1_n_0 ),
        .Q(\state_reg_n_0_[0] ),
        .R(SYNC_RST_TL));
  CARRY4 \state_reg[0]_i_28 
       (.CI(\state_reg[0]_i_29_n_0 ),
        .CO({\NLW_state_reg[0]_i_28_CO_UNCONNECTED [3],RXE_COUNTER_RST2,\state_reg[0]_i_28_n_2 ,\state_reg[0]_i_28_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_state_reg[0]_i_28_O_UNCONNECTED [3:0]),
        .S({1'b0,\state[0]_i_30_n_0 ,\state[0]_i_31_n_0 ,\state[0]_i_32_n_0 }));
  CARRY4 \state_reg[0]_i_29 
       (.CI(\state_reg[0]_i_33_n_0 ),
        .CO({\state_reg[0]_i_29_n_0 ,\state_reg[0]_i_29_n_1 ,\state_reg[0]_i_29_n_2 ,\state_reg[0]_i_29_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_state_reg[0]_i_29_O_UNCONNECTED [3:0]),
        .S({\state[0]_i_34_n_0 ,\state[0]_i_35_n_0 ,\state[0]_i_36_n_0 ,\state[0]_i_37_n_0 }));
  CARRY4 \state_reg[0]_i_33 
       (.CI(1'b0),
        .CO({\state_reg[0]_i_33_n_0 ,\state_reg[0]_i_33_n_1 ,\state_reg[0]_i_33_n_2 ,\state_reg[0]_i_33_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_state_reg[0]_i_33_O_UNCONNECTED [3:0]),
        .S({\state[0]_i_38_n_0 ,\state[0]_i_39_n_0 ,\state[0]_i_40_n_0 ,\state[0]_i_41_n_0 }));
  (* FSM_ENCODING = "none" *) 
  FDRE \state_reg[1] 
       (.C(can_clk),
        .CE(E),
        .D(\state[1]_i_1_n_0 ),
        .Q(\state_reg_n_0_[1] ),
        .R(SYNC_RST_TL));
  (* FSM_ENCODING = "none" *) 
  FDRE \state_reg[2] 
       (.C(can_clk),
        .CE(E),
        .D(\state[2]_i_1_n_0 ),
        .Q(\state_reg_n_0_[2] ),
        .R(SYNC_RST_TL));
  (* FSM_ENCODING = "none" *) 
  FDRE \state_reg[3] 
       (.C(can_clk),
        .CE(E),
        .D(\state[3]_i_1_n_0 ),
        .Q(\state_reg_n_0_[3] ),
        .R(SYNC_RST_TL));
  (* FSM_ENCODING = "none" *) 
  FDRE \state_reg[4] 
       (.C(can_clk),
        .CE(E),
        .D(\state[4]_i_1_n_0 ),
        .Q(Q),
        .R(SYNC_RST_TL));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_tl_btl
   (TXING_BRS_EN_BTR_D1,
    TDC_SSP_SAMP_PT_reg,
    TDC_SSP_SAMP_PT_D1,
    CAN_PHY_RX_D,
    BRS_EN_BTR_D1,
    BRSD_P_ERR_1TQ_FD,
    BTL_TRNSMT_EN_FD1,
    BTL_SAMP_EN_FD2,
    E,
    \ic_reg_n_btr_ts2_cdc_tig_reg[4] ,
    BRS_L_SP_FE_reg,
    O,
    BTL_COUNTER_I17_carry_i_3,
    CAN_PHY_TX_POS_FLOP_X26_carry__0_i_2,
    i__carry__0_i_2__1,
    i__carry_i_3__6,
    BRS_L_SP_FE_reg_0,
    BRS_L_SP_FE_reg_1,
    \arststages_ff_reg[1] ,
    CO,
    BRSD_P_ERR_1TQ_FD_reg_0,
    \arststages_ff_reg[1]_0 ,
    HSYNC_OCCR_D_reg_0,
    CAN_PHY_TX_LP_reg_0,
    SSP_RCVD_RXBIT,
    SSP_BTL_TXBIT_I,
    FBR_ERR_1TQ,
    BIS_HSYNC_FLG_I_reg_0,
    BTL_RXBIT_I_reg_0,
    RSYNC_FLG_I,
    HSYNC_FLG_I_reg_0,
    BSP_TXBIT_FD_reg_0,
    CAN_PHY_TX_POS_FLOP_X2_reg_0,
    CAN_PHY_TX_POS_FLOP_reg_0,
    \MEM_reg[3] ,
    TXE_TXING_reg,
    RSYNC_OCCR_D_reg_0,
    BTL_SAMP_EN_D1_reg_0,
    Q,
    \arststages_ff_reg[1]_1 ,
    BRSD_P_ERR_1TQ_FD_reg_1,
    \arststages_ff_reg[1]_2 ,
    TXE_TXING_reg_0,
    HSYNC_FLG_I0,
    CAN_PHY_RX_D_reg_0,
    HSYNC_OCCR_D_reg_1,
    BTL_SAMP_EN_D1_reg_1,
    BTL_TRNSMT_EN_FD1_reg_0,
    \PIPELINED_BITS_reg[1] ,
    \PIPELINED_BITS_reg[0] ,
    \ic_reg_f_brpr_cdc_tig_reg[5] ,
    \ic_reg_n_brpr_cdc_tig_reg[5] ,
    BRSD_P_ERR_1TQ_FD_reg_2,
    \BTL_COUNTER_I_REG_reg[8]_0 ,
    CAN_PHY_TX_POS_FLOP_X27,
    BTL_RXBIT_I_reg_1,
    BTL_RXBIT_I_reg_2,
    BTL_RXBIT_I_reg_3,
    BTL_RXBIT_I_reg_4,
    BTL_SAMP_EN_D1_reg_2,
    BTL_SAMP_EN_D1_reg_3,
    BTL_RXBIT_I_reg_5,
    \ic_reg_f_btr_sjw_cdc_tig_reg[3] ,
    ERR_TXBERR_I_FD_SSP_EN_1_reg,
    SR,
    TXING_BRS_EN_BTR_D1_reg,
    can_clk,
    FAST_TRANSMT_PT_D1_reg,
    BTL_TRNSMT_EN_FD1_reg_1,
    D,
    RXE_BTL_HSYNC_EN,
    BRS_EN_BTR,
    BRSD_P_ERR_1TQ,
    SSP_EN,
    can_clk_x2,
    BTL_TRNSMT_EN_I1,
    TDC_TRIG_COND,
    DI,
    S,
    i__carry_i_2__3,
    i__carry_i_2__3_0,
    \BTL_COUNTER_I_REG[8]_i_4 ,
    BTL_SAMP_EN_D1_X2_reg_0,
    CAN_PHY_TX_POS_FLOP_X26_carry__0_0,
    CAN_PHY_TX_POS_FLOP_X26_carry__0_1,
    FAST_TRANSMT_PT_D1_i_3,
    FAST_TRANSMT_PT_D1_i_3_0,
    \CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry__0_0 ,
    \CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry__0_1 ,
    \BTL_COUNTER_I_REG[5]_i_6 ,
    \BTL_COUNTER_I_REG[5]_i_6_0 ,
    FAST_TRANSMT_PT_D1_i_2,
    BTL_TRNSMT_EN_FD1_i_2,
    BTL_TRNSMT_EN_FD1_i_2_0,
    BTL_TRNSMT_EN_FD1_reg_2,
    BTL_COUNTER_I16_carry__0_0,
    BTL_COUNTER_I16_carry__0_1,
    \BTL_COUNTER_I_REG[5]_i_6_1 ,
    \BTL_COUNTER_I_REG[5]_i_6_2 ,
    BTL_COUNTER_I15_carry__0_0,
    BTL_COUNTER_I15_carry__0_1,
    \BTL_COUNTER_I_REG[8]_i_4_0 ,
    RSYNC_FLG_I_reg_0,
    CAN_PHY_TX_LP_reg_1,
    SSP_RCVD_RXBIT_reg,
    SSP_BTL_TXBIT_I_reg,
    FBR_ERR_1TQ_reg_0,
    BIS_HSYNC_FLG_I_reg_1,
    BTL_RXBIT_I_reg_6,
    RSYNC_FLG_I_reg_1,
    HSYNC_FLG_I_reg_1,
    BSP_TXBIT_FD_reg_1,
    CAN_PHY_TX_POS_FLOP_X2_reg_1,
    CAN_PHY_TX_POS_FLOP_reg_1,
    FIRST_FAST_TRANSMT_PT_FLG_reg,
    CANCEL_CONFIRMED_TL2OL_I_reg,
    dest_arst,
    \RXE_COUNTER_I_reg[0] ,
    \TDC_COUNTER_reg[6] ,
    BTL_COUNTER_I17_carry_i_7_0,
    BTL_COUNTER_I17_carry_i_7_1,
    BTL_COUNTER_I17_carry_i_7_2,
    BTL_COUNTER_I17_carry_i_4_0,
    BTL_COUNTER_I17_carry_i_4_1,
    BTL_COUNTER_I17_carry_i_7_3,
    CAN_PHY_TX_INT_reg_0,
    CAN_PHY_TX_POS_FLOP_X2,
    RSYNC_FLG_I_reg_2,
    IFF5_EN_FS2,
    HSYNC_FLG_I_reg_2,
    \BIS_COUNTER_I_reg[3] ,
    CAN_PHY_TX_LP_i_2,
    CAN_PHY_RX_I,
    hsyn_occured_new_flag_reg_0,
    \TDC_COUNTER_reg[6]_0 ,
    \TDC_COUNTER_reg[6]_1 ,
    CAN_PHY_RX_I_NEG_FLOP,
    CAN_PHY_TX_LP_i_6_0,
    CAN_PHY_TX_LP_i_7_0,
    \CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_0 ,
    \CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_1 ,
    CAN_PHY_TX_POS_FLOP_X26_carry_i_3,
    BTL_COUNTER_I16_carry_0,
    \BTL_COUNTER_I_REG_reg[0]_0 ,
    BTL_COUNTER_I16_carry_i_4_0,
    \CRC_CRCWORD_I1_reg[0] ,
    \ISO_CRC.CRC17_FD_CRCWORD_I1_reg[0] ,
    \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[0] ,
    BIS_HSYNC_FLG_I_D1,
    \RXE_COUNTER_I_reg[8] ,
    \state[0]_i_24 ,
    i__carry_i_2__5,
    i__carry__0_i_2__1_0,
    \SSP_COUNT_DOWN_reg[6] ,
    \PIPELINED_BITS_reg[0]_0 ,
    \RD_PTR_reg[1] ,
    ERR_TXBERR_I_FD_SSP_EN_1_reg_0,
    \BTL_COUNTER_I_REG_reg[8]_1 ,
    BTL_COUNTER_I17_carry_i_7_4,
    BTL_COUNTER_I17_carry_i_4_2);
  output TXING_BRS_EN_BTR_D1;
  output TDC_SSP_SAMP_PT_reg;
  output TDC_SSP_SAMP_PT_D1;
  output CAN_PHY_RX_D;
  output BRS_EN_BTR_D1;
  output BRSD_P_ERR_1TQ_FD;
  output BTL_TRNSMT_EN_FD1;
  output BTL_SAMP_EN_FD2;
  output [0:0]E;
  output [0:0]\ic_reg_n_btr_ts2_cdc_tig_reg[4] ;
  output [0:0]BRS_L_SP_FE_reg;
  output [2:0]O;
  output [0:0]BTL_COUNTER_I17_carry_i_3;
  output [0:0]CAN_PHY_TX_POS_FLOP_X26_carry__0_i_2;
  output [0:0]i__carry__0_i_2__1;
  output [0:0]i__carry_i_3__6;
  output [0:0]BRS_L_SP_FE_reg_0;
  output [0:0]BRS_L_SP_FE_reg_1;
  output [0:0]\arststages_ff_reg[1] ;
  output [0:0]CO;
  output [0:0]BRSD_P_ERR_1TQ_FD_reg_0;
  output [0:0]\arststages_ff_reg[1]_0 ;
  output [0:0]HSYNC_OCCR_D_reg_0;
  output CAN_PHY_TX_LP_reg_0;
  output SSP_RCVD_RXBIT;
  output SSP_BTL_TXBIT_I;
  output FBR_ERR_1TQ;
  output BIS_HSYNC_FLG_I_reg_0;
  output BTL_RXBIT_I_reg_0;
  output RSYNC_FLG_I;
  output HSYNC_FLG_I_reg_0;
  output BSP_TXBIT_FD_reg_0;
  output CAN_PHY_TX_POS_FLOP_X2_reg_0;
  output CAN_PHY_TX_POS_FLOP_reg_0;
  output \MEM_reg[3] ;
  output TXE_TXING_reg;
  output RSYNC_OCCR_D_reg_0;
  output BTL_SAMP_EN_D1_reg_0;
  output [6:0]Q;
  output [0:0]\arststages_ff_reg[1]_1 ;
  output [0:0]BRSD_P_ERR_1TQ_FD_reg_1;
  output \arststages_ff_reg[1]_2 ;
  output TXE_TXING_reg_0;
  output HSYNC_FLG_I0;
  output CAN_PHY_RX_D_reg_0;
  output HSYNC_OCCR_D_reg_1;
  output [0:0]BTL_SAMP_EN_D1_reg_1;
  output BTL_TRNSMT_EN_FD1_reg_0;
  output \PIPELINED_BITS_reg[1] ;
  output \PIPELINED_BITS_reg[0] ;
  output \ic_reg_f_brpr_cdc_tig_reg[5] ;
  output \ic_reg_n_brpr_cdc_tig_reg[5] ;
  output BRSD_P_ERR_1TQ_FD_reg_2;
  output [7:0]\BTL_COUNTER_I_REG_reg[8]_0 ;
  output [8:0]CAN_PHY_TX_POS_FLOP_X27;
  output [0:0]BTL_RXBIT_I_reg_1;
  output [0:0]BTL_RXBIT_I_reg_2;
  output [0:0]BTL_RXBIT_I_reg_3;
  output BTL_RXBIT_I_reg_4;
  output BTL_SAMP_EN_D1_reg_2;
  output BTL_SAMP_EN_D1_reg_3;
  output BTL_RXBIT_I_reg_5;
  output [0:0]\ic_reg_f_btr_sjw_cdc_tig_reg[3] ;
  output ERR_TXBERR_I_FD_SSP_EN_1_reg;
  input [1:0]SR;
  input TXING_BRS_EN_BTR_D1_reg;
  input can_clk;
  input FAST_TRANSMT_PT_D1_reg;
  input BTL_TRNSMT_EN_FD1_reg_1;
  input [0:0]D;
  input RXE_BTL_HSYNC_EN;
  input BRS_EN_BTR;
  input BRSD_P_ERR_1TQ;
  input SSP_EN;
  input can_clk_x2;
  input BTL_TRNSMT_EN_I1;
  input TDC_TRIG_COND;
  input [3:0]DI;
  input [3:0]S;
  input [3:0]i__carry_i_2__3;
  input [3:0]i__carry_i_2__3_0;
  input [2:0]\BTL_COUNTER_I_REG[8]_i_4 ;
  input [2:0]BTL_SAMP_EN_D1_X2_reg_0;
  input [2:0]CAN_PHY_TX_POS_FLOP_X26_carry__0_0;
  input [3:0]CAN_PHY_TX_POS_FLOP_X26_carry__0_1;
  input [0:0]FAST_TRANSMT_PT_D1_i_3;
  input [0:0]FAST_TRANSMT_PT_D1_i_3_0;
  input [2:0]\CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry__0_0 ;
  input [2:0]\CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry__0_1 ;
  input [0:0]\BTL_COUNTER_I_REG[5]_i_6 ;
  input [0:0]\BTL_COUNTER_I_REG[5]_i_6_0 ;
  input [2:0]FAST_TRANSMT_PT_D1_i_2;
  input [2:0]BTL_TRNSMT_EN_FD1_i_2;
  input [2:0]BTL_TRNSMT_EN_FD1_i_2_0;
  input [2:0]BTL_TRNSMT_EN_FD1_reg_2;
  input [2:0]BTL_COUNTER_I16_carry__0_0;
  input [3:0]BTL_COUNTER_I16_carry__0_1;
  input [0:0]\BTL_COUNTER_I_REG[5]_i_6_1 ;
  input [0:0]\BTL_COUNTER_I_REG[5]_i_6_2 ;
  input [3:0]BTL_COUNTER_I15_carry__0_0;
  input [3:0]BTL_COUNTER_I15_carry__0_1;
  input [0:0]\BTL_COUNTER_I_REG[8]_i_4_0 ;
  input [1:0]RSYNC_FLG_I_reg_0;
  input CAN_PHY_TX_LP_reg_1;
  input SSP_RCVD_RXBIT_reg;
  input SSP_BTL_TXBIT_I_reg;
  input FBR_ERR_1TQ_reg_0;
  input BIS_HSYNC_FLG_I_reg_1;
  input BTL_RXBIT_I_reg_6;
  input RSYNC_FLG_I_reg_1;
  input HSYNC_FLG_I_reg_1;
  input BSP_TXBIT_FD_reg_1;
  input CAN_PHY_TX_POS_FLOP_X2_reg_1;
  input CAN_PHY_TX_POS_FLOP_reg_1;
  input FIRST_FAST_TRANSMT_PT_FLG_reg;
  input CANCEL_CONFIRMED_TL2OL_I_reg;
  input dest_arst;
  input \RXE_COUNTER_I_reg[0] ;
  input [5:0]\TDC_COUNTER_reg[6] ;
  input [0:0]BTL_COUNTER_I17_carry_i_7_0;
  input [0:0]BTL_COUNTER_I17_carry_i_7_1;
  input BTL_COUNTER_I17_carry_i_7_2;
  input BTL_COUNTER_I17_carry_i_4_0;
  input BTL_COUNTER_I17_carry_i_4_1;
  input BTL_COUNTER_I17_carry_i_7_3;
  input CAN_PHY_TX_INT_reg_0;
  input CAN_PHY_TX_POS_FLOP_X2;
  input RSYNC_FLG_I_reg_2;
  input IFF5_EN_FS2;
  input HSYNC_FLG_I_reg_2;
  input \BIS_COUNTER_I_reg[3] ;
  input CAN_PHY_TX_LP_i_2;
  input CAN_PHY_RX_I;
  input hsyn_occured_new_flag_reg_0;
  input \TDC_COUNTER_reg[6]_0 ;
  input \TDC_COUNTER_reg[6]_1 ;
  input CAN_PHY_RX_I_NEG_FLOP;
  input [6:0]CAN_PHY_TX_LP_i_6_0;
  input [6:0]CAN_PHY_TX_LP_i_7_0;
  input \CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_0 ;
  input \CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_1 ;
  input CAN_PHY_TX_POS_FLOP_X26_carry_i_3;
  input BTL_COUNTER_I16_carry_0;
  input \BTL_COUNTER_I_REG_reg[0]_0 ;
  input [0:0]BTL_COUNTER_I16_carry_i_4_0;
  input [0:0]\CRC_CRCWORD_I1_reg[0] ;
  input [0:0]\ISO_CRC.CRC17_FD_CRCWORD_I1_reg[0] ;
  input [0:0]\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[0] ;
  input BIS_HSYNC_FLG_I_D1;
  input [0:0]\RXE_COUNTER_I_reg[8] ;
  input [0:0]\state[0]_i_24 ;
  input [0:0]i__carry_i_2__5;
  input [0:0]i__carry__0_i_2__1_0;
  input [0:0]\SSP_COUNT_DOWN_reg[6] ;
  input \PIPELINED_BITS_reg[0]_0 ;
  input \RD_PTR_reg[1] ;
  input ERR_TXBERR_I_FD_SSP_EN_1_reg_0;
  input [8:0]\BTL_COUNTER_I_REG_reg[8]_1 ;
  input BTL_COUNTER_I17_carry_i_7_4;
  input BTL_COUNTER_I17_carry_i_4_2;

  wire \BIS_COUNTER_I_reg[3] ;
  wire BIS_HSYNC_FLG_I_D1;
  wire BIS_HSYNC_FLG_I_reg_0;
  wire BIS_HSYNC_FLG_I_reg_1;
  wire BRSD_P_ERR_1TQ;
  wire BRSD_P_ERR_1TQ_FD;
  wire [0:0]BRSD_P_ERR_1TQ_FD_reg_0;
  wire [0:0]BRSD_P_ERR_1TQ_FD_reg_1;
  wire BRSD_P_ERR_1TQ_FD_reg_2;
  wire BRS_EN_BTR;
  wire BRS_EN_BTR_D1;
  wire [0:0]BRS_L_SP_FE_reg;
  wire [0:0]BRS_L_SP_FE_reg_0;
  wire [0:0]BRS_L_SP_FE_reg_1;
  wire BSP_TXBIT_FD_reg_0;
  wire BSP_TXBIT_FD_reg_1;
  wire [3:0]BTL_COUNTER_I15_carry__0_0;
  wire [3:0]BTL_COUNTER_I15_carry__0_1;
  wire BTL_COUNTER_I15_carry_n_0;
  wire BTL_COUNTER_I15_carry_n_1;
  wire BTL_COUNTER_I15_carry_n_2;
  wire BTL_COUNTER_I15_carry_n_3;
  wire BTL_COUNTER_I16_carry_0;
  wire [2:0]BTL_COUNTER_I16_carry__0_0;
  wire [3:0]BTL_COUNTER_I16_carry__0_1;
  wire [0:0]BTL_COUNTER_I16_carry_i_4_0;
  wire BTL_COUNTER_I16_carry_i_4_n_0;
  wire BTL_COUNTER_I16_carry_n_0;
  wire BTL_COUNTER_I16_carry_n_1;
  wire BTL_COUNTER_I16_carry_n_2;
  wire BTL_COUNTER_I16_carry_n_3;
  wire BTL_COUNTER_I17_carry_i_11_n_0;
  wire BTL_COUNTER_I17_carry_i_12_n_0;
  wire BTL_COUNTER_I17_carry_i_13_n_0;
  wire BTL_COUNTER_I17_carry_i_14_n_0;
  wire BTL_COUNTER_I17_carry_i_15_n_0;
  wire BTL_COUNTER_I17_carry_i_16_n_0;
  wire BTL_COUNTER_I17_carry_i_18_n_0;
  wire BTL_COUNTER_I17_carry_i_20_n_0;
  wire BTL_COUNTER_I17_carry_i_21_n_0;
  wire BTL_COUNTER_I17_carry_i_22_n_0;
  wire BTL_COUNTER_I17_carry_i_23_n_0;
  wire BTL_COUNTER_I17_carry_i_24_n_0;
  wire BTL_COUNTER_I17_carry_i_25_n_0;
  wire BTL_COUNTER_I17_carry_i_26_n_0;
  wire BTL_COUNTER_I17_carry_i_27_n_0;
  wire [0:0]BTL_COUNTER_I17_carry_i_3;
  wire BTL_COUNTER_I17_carry_i_4_0;
  wire BTL_COUNTER_I17_carry_i_4_1;
  wire BTL_COUNTER_I17_carry_i_4_2;
  wire BTL_COUNTER_I17_carry_i_4_n_0;
  wire BTL_COUNTER_I17_carry_i_4_n_1;
  wire BTL_COUNTER_I17_carry_i_4_n_2;
  wire BTL_COUNTER_I17_carry_i_4_n_3;
  wire [0:0]BTL_COUNTER_I17_carry_i_7_0;
  wire [0:0]BTL_COUNTER_I17_carry_i_7_1;
  wire BTL_COUNTER_I17_carry_i_7_2;
  wire BTL_COUNTER_I17_carry_i_7_3;
  wire BTL_COUNTER_I17_carry_i_7_4;
  wire BTL_COUNTER_I17_carry_i_7_n_0;
  wire BTL_COUNTER_I17_carry_i_7_n_1;
  wire BTL_COUNTER_I17_carry_i_7_n_2;
  wire BTL_COUNTER_I17_carry_i_7_n_3;
  wire BTL_COUNTER_I17_carry_n_2;
  wire BTL_COUNTER_I17_carry_n_3;
  wire [0:0]\BTL_COUNTER_I_REG[5]_i_6 ;
  wire [0:0]\BTL_COUNTER_I_REG[5]_i_6_0 ;
  wire [0:0]\BTL_COUNTER_I_REG[5]_i_6_1 ;
  wire [0:0]\BTL_COUNTER_I_REG[5]_i_6_2 ;
  wire [2:0]\BTL_COUNTER_I_REG[8]_i_4 ;
  wire [0:0]\BTL_COUNTER_I_REG[8]_i_4_0 ;
  wire \BTL_COUNTER_I_REG_reg[0]_0 ;
  wire [7:0]\BTL_COUNTER_I_REG_reg[8]_0 ;
  wire [8:0]\BTL_COUNTER_I_REG_reg[8]_1 ;
  wire \BTL_COUNTER_I_REG_reg_n_0_[0] ;
  wire BTL_NTQ_I0_carry__0_n_1;
  wire BTL_NTQ_I0_carry__0_n_2;
  wire BTL_NTQ_I0_carry__0_n_3;
  wire BTL_NTQ_I0_carry__0_n_5;
  wire BTL_NTQ_I0_carry_n_0;
  wire BTL_NTQ_I0_carry_n_1;
  wire BTL_NTQ_I0_carry_n_2;
  wire BTL_NTQ_I0_carry_n_3;
  wire BTL_NTQ_I0_carry_n_5;
  wire BTL_NTQ_I0_carry_n_6;
  wire BTL_NTQ_I0_carry_n_7;
  wire BTL_RXBIT_I_reg_0;
  wire [0:0]BTL_RXBIT_I_reg_1;
  wire [0:0]BTL_RXBIT_I_reg_2;
  wire [0:0]BTL_RXBIT_I_reg_3;
  wire BTL_RXBIT_I_reg_4;
  wire BTL_RXBIT_I_reg_5;
  wire BTL_RXBIT_I_reg_6;
  wire BTL_SAMP_EN_D1_X2;
  wire \BTL_SAMP_EN_D1_X22_inferred__0/i__carry_n_2 ;
  wire \BTL_SAMP_EN_D1_X22_inferred__0/i__carry_n_3 ;
  wire [2:0]BTL_SAMP_EN_D1_X2_reg_0;
  wire BTL_SAMP_EN_D1_reg_0;
  wire [0:0]BTL_SAMP_EN_D1_reg_1;
  wire BTL_SAMP_EN_D1_reg_2;
  wire BTL_SAMP_EN_D1_reg_3;
  wire BTL_SAMP_EN_D2_X2;
  wire BTL_SAMP_EN_FD2;
  wire BTL_TRNSMT_EN_FD1;
  wire BTL_TRNSMT_EN_FD13_carry_n_1;
  wire BTL_TRNSMT_EN_FD13_carry_n_2;
  wire BTL_TRNSMT_EN_FD13_carry_n_3;
  wire [2:0]BTL_TRNSMT_EN_FD1_i_2;
  wire [2:0]BTL_TRNSMT_EN_FD1_i_2_0;
  wire BTL_TRNSMT_EN_FD1_reg_0;
  wire BTL_TRNSMT_EN_FD1_reg_1;
  wire [2:0]BTL_TRNSMT_EN_FD1_reg_2;
  wire BTL_TRNSMT_EN_I1;
  wire CANCEL_CONFIRMED_TL2OL_I_reg;
  wire CAN_PHY_RX_D;
  wire CAN_PHY_RX_D_reg_0;
  wire CAN_PHY_RX_I;
  wire CAN_PHY_RX_I_NEG_FLOP;
  wire CAN_PHY_TX_INT_i_1_n_0;
  wire CAN_PHY_TX_INT_i_2_n_0;
  wire CAN_PHY_TX_INT_reg_0;
  wire CAN_PHY_TX_INT_reg_n_0;
  wire CAN_PHY_TX_LP_i_11_n_0;
  wire CAN_PHY_TX_LP_i_12_n_0;
  wire CAN_PHY_TX_LP_i_2;
  wire [6:0]CAN_PHY_TX_LP_i_6_0;
  wire [6:0]CAN_PHY_TX_LP_i_7_0;
  wire CAN_PHY_TX_LP_i_9_n_0;
  wire CAN_PHY_TX_LP_reg_0;
  wire CAN_PHY_TX_LP_reg_1;
  wire CAN_PHY_TX_POS_FLOP_X2;
  wire \CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_0 ;
  wire \CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_1 ;
  wire \CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_n_2 ;
  wire \CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_n_3 ;
  wire [2:0]CAN_PHY_TX_POS_FLOP_X26_carry__0_0;
  wire [3:0]CAN_PHY_TX_POS_FLOP_X26_carry__0_1;
  wire [0:0]CAN_PHY_TX_POS_FLOP_X26_carry__0_i_2;
  wire CAN_PHY_TX_POS_FLOP_X26_carry_i_3;
  wire CAN_PHY_TX_POS_FLOP_X26_carry_n_0;
  wire CAN_PHY_TX_POS_FLOP_X26_carry_n_1;
  wire CAN_PHY_TX_POS_FLOP_X26_carry_n_2;
  wire CAN_PHY_TX_POS_FLOP_X26_carry_n_3;
  wire [2:0]\CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry__0_0 ;
  wire [2:0]\CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry__0_1 ;
  wire \CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry_n_0 ;
  wire \CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry_n_1 ;
  wire \CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry_n_2 ;
  wire \CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry_n_3 ;
  wire \CAN_PHY_TX_POS_FLOP_X26_inferred__1/i__carry_n_1 ;
  wire \CAN_PHY_TX_POS_FLOP_X26_inferred__1/i__carry_n_2 ;
  wire \CAN_PHY_TX_POS_FLOP_X26_inferred__1/i__carry_n_3 ;
  wire \CAN_PHY_TX_POS_FLOP_X26_inferred__2/i__carry_n_2 ;
  wire \CAN_PHY_TX_POS_FLOP_X26_inferred__2/i__carry_n_3 ;
  wire [8:0]CAN_PHY_TX_POS_FLOP_X27;
  wire \CAN_PHY_TX_POS_FLOP_X27_inferred__1/i__carry_n_2 ;
  wire \CAN_PHY_TX_POS_FLOP_X27_inferred__1/i__carry_n_3 ;
  wire CAN_PHY_TX_POS_FLOP_X2_reg_0;
  wire CAN_PHY_TX_POS_FLOP_X2_reg_1;
  wire CAN_PHY_TX_POS_FLOP_reg_0;
  wire CAN_PHY_TX_POS_FLOP_reg_1;
  wire CNTR_EQ_SAMP_I;
  wire [0:0]CO;
  wire [0:0]\CRC_CRCWORD_I1_reg[0] ;
  wire [0:0]D;
  wire [3:0]DI;
  wire [0:0]E;
  wire ERR_TXBERR_I_FD_SSP_EN_1_reg;
  wire ERR_TXBERR_I_FD_SSP_EN_1_reg_0;
  wire [2:0]FAST_TRANSMT_PT_D1_i_2;
  wire [0:0]FAST_TRANSMT_PT_D1_i_3;
  wire [0:0]FAST_TRANSMT_PT_D1_i_3_0;
  wire FAST_TRANSMT_PT_D1_reg;
  wire FBR_ERR_1TQ;
  wire FBR_ERR_1TQ_reg_0;
  wire FIRST_FAST_TRANSMT_PT_FLG_reg;
  wire HSYNC_FLG_I0;
  wire HSYNC_FLG_I_i_4_n_0;
  wire HSYNC_FLG_I_reg_0;
  wire HSYNC_FLG_I_reg_1;
  wire HSYNC_FLG_I_reg_2;
  wire HSYNC_OCCR;
  wire HSYNC_OCCR_D;
  wire [0:0]HSYNC_OCCR_D_reg_0;
  wire HSYNC_OCCR_D_reg_1;
  wire HSYNC_OCCR_D_reg_n_0;
  wire IFF5_EN_FS2;
  wire [0:0]\ISO_CRC.CRC17_FD_CRCWORD_I1_reg[0] ;
  wire [0:0]\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[0] ;
  wire \MEM_reg[3] ;
  wire [2:0]O;
  wire \PIPELINED_BITS_reg[0] ;
  wire \PIPELINED_BITS_reg[0]_0 ;
  wire \PIPELINED_BITS_reg[1] ;
  wire [6:0]Q;
  wire \RD_PTR_reg[1] ;
  wire RSYNC_FLG_I;
  wire RSYNC_FLG_I_i_5_n_0;
  wire [1:0]RSYNC_FLG_I_reg_0;
  wire RSYNC_FLG_I_reg_1;
  wire RSYNC_FLG_I_reg_2;
  wire RSYNC_OCCR_D;
  wire RSYNC_OCCR_D_reg_0;
  wire RSYNC_OCCR_D_reg_n_0;
  wire RXE_BTL_HSYNC_EN;
  wire RXE_BTL_HSYNC_FD1;
  wire \RXE_COUNTER_I_reg[0] ;
  wire [0:0]\RXE_COUNTER_I_reg[8] ;
  wire [3:0]S;
  wire \SM_REG_I[5]_i_3_n_0 ;
  wire \SM_REG_I[5]_i_4_n_0 ;
  wire [1:0]SR;
  wire SSP_BTL_TXBIT_I;
  wire SSP_BTL_TXBIT_I_reg;
  wire [0:0]\SSP_COUNT_DOWN_reg[6] ;
  wire SSP_EN;
  wire SSP_EN_D1;
  wire SSP_RCVD_RXBIT;
  wire SSP_RCVD_RXBIT_reg;
  wire [5:0]\TDC_COUNTER_reg[6] ;
  wire \TDC_COUNTER_reg[6]_0 ;
  wire \TDC_COUNTER_reg[6]_1 ;
  wire TDC_SSP_SAMP_PT_D1;
  wire TDC_SSP_SAMP_PT_reg;
  wire TDC_TRIG_COND;
  wire TDC_TRIG_COND_D1;
  wire TXE_TXING_reg;
  wire TXE_TXING_reg_0;
  wire TXING_BRS_EN_BTR_D1;
  wire TXING_BRS_EN_BTR_D1_reg;
  wire [0:0]\arststages_ff_reg[1] ;
  wire [0:0]\arststages_ff_reg[1]_0 ;
  wire [0:0]\arststages_ff_reg[1]_1 ;
  wire \arststages_ff_reg[1]_2 ;
  wire can_clk;
  wire can_clk_x2;
  wire dest_arst;
  wire hsyn_occured_new_flag;
  wire hsyn_occured_new_flag_i_1_n_0;
  wire hsyn_occured_new_flag_i_2_n_0;
  wire hsyn_occured_new_flag_reg_0;
  wire [0:0]i__carry__0_i_2__1;
  wire [0:0]i__carry__0_i_2__1_0;
  wire [3:0]i__carry_i_2__3;
  wire [3:0]i__carry_i_2__3_0;
  wire [0:0]i__carry_i_2__5;
  wire [0:0]i__carry_i_3__6;
  wire \ic_reg_f_brpr_cdc_tig_reg[5] ;
  wire [0:0]\ic_reg_f_btr_sjw_cdc_tig_reg[3] ;
  wire \ic_reg_n_brpr_cdc_tig_reg[5] ;
  wire [0:0]\ic_reg_n_btr_ts2_cdc_tig_reg[4] ;
  wire [0:0]\state[0]_i_24 ;
  wire tdc_n_19;
  wire tdc_n_21;
  wire tdc_n_23;
  wire tdc_n_24;
  wire tdc_n_25;
  wire [3:0]NLW_BTL_COUNTER_I15_carry_O_UNCONNECTED;
  wire [3:1]NLW_BTL_COUNTER_I15_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_BTL_COUNTER_I15_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_BTL_COUNTER_I16_carry_O_UNCONNECTED;
  wire [3:1]NLW_BTL_COUNTER_I16_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_BTL_COUNTER_I16_carry__0_O_UNCONNECTED;
  wire [3:3]NLW_BTL_COUNTER_I17_carry_CO_UNCONNECTED;
  wire [3:0]NLW_BTL_COUNTER_I17_carry_O_UNCONNECTED;
  wire [3:0]NLW_BTL_COUNTER_I17_carry_i_5_CO_UNCONNECTED;
  wire [3:1]NLW_BTL_COUNTER_I17_carry_i_5_O_UNCONNECTED;
  wire [3:3]\NLW_BTL_SAMP_EN_D1_X22_inferred__0/i__carry_CO_UNCONNECTED ;
  wire [3:0]\NLW_BTL_SAMP_EN_D1_X22_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:0]NLW_BTL_TRNSMT_EN_FD13_carry_O_UNCONNECTED;
  wire [3:3]\NLW_CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_CO_UNCONNECTED ;
  wire [3:0]\NLW_CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:0]NLW_CAN_PHY_TX_POS_FLOP_X26_carry_O_UNCONNECTED;
  wire [3:1]NLW_CAN_PHY_TX_POS_FLOP_X26_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_CAN_PHY_TX_POS_FLOP_X26_carry__0_O_UNCONNECTED;
  wire [3:0]\NLW_CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:1]\NLW_CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry__0_O_UNCONNECTED ;
  wire [3:0]\NLW_CAN_PHY_TX_POS_FLOP_X26_inferred__1/i__carry_O_UNCONNECTED ;
  wire [3:3]\NLW_CAN_PHY_TX_POS_FLOP_X26_inferred__2/i__carry_CO_UNCONNECTED ;
  wire [3:0]\NLW_CAN_PHY_TX_POS_FLOP_X26_inferred__2/i__carry_O_UNCONNECTED ;
  wire [3:3]\NLW_CAN_PHY_TX_POS_FLOP_X27_inferred__1/i__carry_CO_UNCONNECTED ;
  wire [3:0]\NLW_CAN_PHY_TX_POS_FLOP_X27_inferred__1/i__carry_O_UNCONNECTED ;

  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \BIS_COUNTER_I[3]_i_2 
       (.I0(E),
        .I1(BTL_RXBIT_I_reg_0),
        .I2(\BIS_COUNTER_I_reg[3] ),
        .O(BTL_SAMP_EN_D1_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT5 #(
    .INIT(32'h4F4FFF4F)) 
    \BIS_COUNTER_I[3]_i_5 
       (.I0(BTL_RXBIT_I_reg_0),
        .I1(E),
        .I2(dest_arst),
        .I3(BIS_HSYNC_FLG_I_D1),
        .I4(BIS_HSYNC_FLG_I_reg_0),
        .O(BTL_RXBIT_I_reg_4));
  FDSE BIS_HSYNC_FLG_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(BIS_HSYNC_FLG_I_reg_1),
        .Q(BIS_HSYNC_FLG_I_reg_0),
        .S(SR[0]));
  FDRE BRSD_P_ERR_1TQ_FD_reg
       (.C(can_clk),
        .CE(BTL_TRNSMT_EN_FD1_reg_1),
        .D(BRSD_P_ERR_1TQ),
        .Q(BRSD_P_ERR_1TQ_FD),
        .R(SR[0]));
  FDRE BRS_EN_BTR_D1_reg
       (.C(can_clk),
        .CE(BTL_TRNSMT_EN_FD1_reg_1),
        .D(BRS_EN_BTR),
        .Q(BRS_EN_BTR_D1),
        .R(SR[0]));
  FDSE BSP_TXBIT_FD_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(BSP_TXBIT_FD_reg_1),
        .Q(BSP_TXBIT_FD_reg_0),
        .S(SR[0]));
  CARRY4 BTL_COUNTER_I15_carry
       (.CI(1'b0),
        .CO({BTL_COUNTER_I15_carry_n_0,BTL_COUNTER_I15_carry_n_1,BTL_COUNTER_I15_carry_n_2,BTL_COUNTER_I15_carry_n_3}),
        .CYINIT(1'b1),
        .DI(BTL_COUNTER_I15_carry__0_0),
        .O(NLW_BTL_COUNTER_I15_carry_O_UNCONNECTED[3:0]),
        .S(BTL_COUNTER_I15_carry__0_1));
  CARRY4 BTL_COUNTER_I15_carry__0
       (.CI(BTL_COUNTER_I15_carry_n_0),
        .CO({NLW_BTL_COUNTER_I15_carry__0_CO_UNCONNECTED[3:1],BRSD_P_ERR_1TQ_FD_reg_0}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_BTL_COUNTER_I15_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,\BTL_COUNTER_I_REG[8]_i_4_0 }));
  CARRY4 BTL_COUNTER_I16_carry
       (.CI(1'b0),
        .CO({BTL_COUNTER_I16_carry_n_0,BTL_COUNTER_I16_carry_n_1,BTL_COUNTER_I16_carry_n_2,BTL_COUNTER_I16_carry_n_3}),
        .CYINIT(1'b0),
        .DI({BTL_COUNTER_I16_carry__0_0,BTL_COUNTER_I16_carry_i_4_n_0}),
        .O(NLW_BTL_COUNTER_I16_carry_O_UNCONNECTED[3:0]),
        .S(BTL_COUNTER_I16_carry__0_1));
  CARRY4 BTL_COUNTER_I16_carry__0
       (.CI(BTL_COUNTER_I16_carry_n_0),
        .CO({NLW_BTL_COUNTER_I16_carry__0_CO_UNCONNECTED[3:1],CO}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\BTL_COUNTER_I_REG[5]_i_6_1 }),
        .O(NLW_BTL_COUNTER_I16_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,\BTL_COUNTER_I_REG[5]_i_6_2 }));
  LUT5 #(
    .INIT(32'hC8C8FCC8)) 
    BTL_COUNTER_I16_carry_i_4
       (.I0(BRSD_P_ERR_1TQ_FD),
        .I1(BTL_COUNTER_I16_carry_0),
        .I2(tdc_n_25),
        .I3(BRSD_P_ERR_1TQ_FD_reg_1),
        .I4(\BTL_COUNTER_I_REG_reg[0]_0 ),
        .O(BTL_COUNTER_I16_carry_i_4_n_0));
  CARRY4 BTL_COUNTER_I17_carry
       (.CI(1'b0),
        .CO({NLW_BTL_COUNTER_I17_carry_CO_UNCONNECTED[3],BTL_COUNTER_I17_carry_i_3,BTL_COUNTER_I17_carry_n_2,BTL_COUNTER_I17_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_BTL_COUNTER_I17_carry_O_UNCONNECTED[3:0]),
        .S({1'b0,\BTL_COUNTER_I_REG[8]_i_4 }));
  LUT2 #(
    .INIT(4'h8)) 
    BTL_COUNTER_I17_carry_i_11
       (.I0(O[2]),
        .I1(dest_arst),
        .O(BTL_COUNTER_I17_carry_i_11_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    BTL_COUNTER_I17_carry_i_12
       (.I0(BTL_NTQ_I0_carry__0_n_5),
        .I1(dest_arst),
        .O(BTL_COUNTER_I17_carry_i_12_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    BTL_COUNTER_I17_carry_i_13
       (.I0(O[1]),
        .I1(dest_arst),
        .O(BTL_COUNTER_I17_carry_i_13_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    BTL_COUNTER_I17_carry_i_14
       (.I0(O[0]),
        .I1(dest_arst),
        .O(BTL_COUNTER_I17_carry_i_14_n_0));
  LUT3 #(
    .INIT(8'h87)) 
    BTL_COUNTER_I17_carry_i_15
       (.I0(dest_arst),
        .I1(O[2]),
        .I2(BTL_COUNTER_I17_carry_i_4_0),
        .O(BTL_COUNTER_I17_carry_i_15_n_0));
  LUT3 #(
    .INIT(8'h78)) 
    BTL_COUNTER_I17_carry_i_16
       (.I0(dest_arst),
        .I1(BTL_NTQ_I0_carry__0_n_5),
        .I2(BTL_COUNTER_I17_carry_i_4_2),
        .O(BTL_COUNTER_I17_carry_i_16_n_0));
  LUT3 #(
    .INIT(8'h87)) 
    BTL_COUNTER_I17_carry_i_18
       (.I0(dest_arst),
        .I1(O[0]),
        .I2(BTL_COUNTER_I17_carry_i_4_1),
        .O(BTL_COUNTER_I17_carry_i_18_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    BTL_COUNTER_I17_carry_i_20
       (.I0(\ic_reg_n_btr_ts2_cdc_tig_reg[4] ),
        .I1(dest_arst),
        .O(BTL_COUNTER_I17_carry_i_20_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    BTL_COUNTER_I17_carry_i_21
       (.I0(BTL_NTQ_I0_carry_n_5),
        .I1(dest_arst),
        .O(BTL_COUNTER_I17_carry_i_21_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    BTL_COUNTER_I17_carry_i_22
       (.I0(BTL_NTQ_I0_carry_n_6),
        .I1(dest_arst),
        .O(BTL_COUNTER_I17_carry_i_22_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    BTL_COUNTER_I17_carry_i_23
       (.I0(BTL_NTQ_I0_carry_n_7),
        .I1(dest_arst),
        .O(BTL_COUNTER_I17_carry_i_23_n_0));
  LUT3 #(
    .INIT(8'h87)) 
    BTL_COUNTER_I17_carry_i_24
       (.I0(dest_arst),
        .I1(\ic_reg_n_btr_ts2_cdc_tig_reg[4] ),
        .I2(BTL_COUNTER_I17_carry_i_7_2),
        .O(BTL_COUNTER_I17_carry_i_24_n_0));
  LUT3 #(
    .INIT(8'h87)) 
    BTL_COUNTER_I17_carry_i_25
       (.I0(dest_arst),
        .I1(BTL_NTQ_I0_carry_n_5),
        .I2(BTL_COUNTER_I17_carry_i_7_3),
        .O(BTL_COUNTER_I17_carry_i_25_n_0));
  LUT3 #(
    .INIT(8'h78)) 
    BTL_COUNTER_I17_carry_i_26
       (.I0(dest_arst),
        .I1(BTL_NTQ_I0_carry_n_6),
        .I2(BTL_COUNTER_I17_carry_i_7_4),
        .O(BTL_COUNTER_I17_carry_i_26_n_0));
  LUT5 #(
    .INIT(32'h656AFFFF)) 
    BTL_COUNTER_I17_carry_i_27
       (.I0(BTL_NTQ_I0_carry_n_7),
        .I1(BTL_COUNTER_I17_carry_i_7_0),
        .I2(BRS_EN_BTR),
        .I3(BTL_COUNTER_I17_carry_i_7_1),
        .I4(dest_arst),
        .O(BTL_COUNTER_I17_carry_i_27_n_0));
  CARRY4 BTL_COUNTER_I17_carry_i_4
       (.CI(BTL_COUNTER_I17_carry_i_7_n_0),
        .CO({BTL_COUNTER_I17_carry_i_4_n_0,BTL_COUNTER_I17_carry_i_4_n_1,BTL_COUNTER_I17_carry_i_4_n_2,BTL_COUNTER_I17_carry_i_4_n_3}),
        .CYINIT(1'b0),
        .DI({BTL_COUNTER_I17_carry_i_11_n_0,BTL_COUNTER_I17_carry_i_12_n_0,BTL_COUNTER_I17_carry_i_13_n_0,BTL_COUNTER_I17_carry_i_14_n_0}),
        .O(CAN_PHY_TX_POS_FLOP_X27[7:4]),
        .S({BTL_COUNTER_I17_carry_i_15_n_0,BTL_COUNTER_I17_carry_i_16_n_0,i__carry_i_2__5,BTL_COUNTER_I17_carry_i_18_n_0}));
  CARRY4 BTL_COUNTER_I17_carry_i_5
       (.CI(BTL_COUNTER_I17_carry_i_4_n_0),
        .CO(NLW_BTL_COUNTER_I17_carry_i_5_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_BTL_COUNTER_I17_carry_i_5_O_UNCONNECTED[3:1],CAN_PHY_TX_POS_FLOP_X27[8]}),
        .S({1'b0,1'b0,1'b0,i__carry__0_i_2__1_0}));
  CARRY4 BTL_COUNTER_I17_carry_i_7
       (.CI(1'b0),
        .CO({BTL_COUNTER_I17_carry_i_7_n_0,BTL_COUNTER_I17_carry_i_7_n_1,BTL_COUNTER_I17_carry_i_7_n_2,BTL_COUNTER_I17_carry_i_7_n_3}),
        .CYINIT(1'b1),
        .DI({BTL_COUNTER_I17_carry_i_20_n_0,BTL_COUNTER_I17_carry_i_21_n_0,BTL_COUNTER_I17_carry_i_22_n_0,BTL_COUNTER_I17_carry_i_23_n_0}),
        .O(CAN_PHY_TX_POS_FLOP_X27[3:0]),
        .S({BTL_COUNTER_I17_carry_i_24_n_0,BTL_COUNTER_I17_carry_i_25_n_0,BTL_COUNTER_I17_carry_i_26_n_0,BTL_COUNTER_I17_carry_i_27_n_0}));
  LUT5 #(
    .INIT(32'h9A95AAAA)) 
    \BTL_COUNTER_I_REG[3]_i_11 
       (.I0(BRSD_P_ERR_1TQ_FD_reg_1),
        .I1(BTL_COUNTER_I17_carry_i_7_0),
        .I2(BRS_EN_BTR),
        .I3(BTL_COUNTER_I17_carry_i_7_1),
        .I4(dest_arst),
        .O(\ic_reg_f_btr_sjw_cdc_tig_reg[3] ));
  LUT5 #(
    .INIT(32'h95999555)) 
    \BTL_COUNTER_I_REG[3]_i_18 
       (.I0(BRSD_P_ERR_1TQ_FD_reg_1),
        .I1(dest_arst),
        .I2(BTL_COUNTER_I17_carry_i_7_0),
        .I3(BRS_EN_BTR),
        .I4(BTL_COUNTER_I17_carry_i_7_1),
        .O(\arststages_ff_reg[1]_1 ));
  LUT5 #(
    .INIT(32'h55557555)) 
    \BTL_COUNTER_I_REG[8]_i_11 
       (.I0(HSYNC_OCCR_D_reg_1),
        .I1(D),
        .I2(CAN_PHY_RX_D),
        .I3(BIS_HSYNC_FLG_I_reg_0),
        .I4(\BIS_COUNTER_I_reg[3] ),
        .O(CAN_PHY_RX_D_reg_0));
  FDRE \BTL_COUNTER_I_REG_reg[0] 
       (.C(can_clk),
        .CE(BTL_TRNSMT_EN_FD1_reg_1),
        .D(\BTL_COUNTER_I_REG_reg[8]_1 [0]),
        .Q(\BTL_COUNTER_I_REG_reg_n_0_[0] ),
        .R(SR[0]));
  FDRE \BTL_COUNTER_I_REG_reg[1] 
       (.C(can_clk),
        .CE(BTL_TRNSMT_EN_FD1_reg_1),
        .D(\BTL_COUNTER_I_REG_reg[8]_1 [1]),
        .Q(\BTL_COUNTER_I_REG_reg[8]_0 [0]),
        .R(SR[1]));
  FDRE \BTL_COUNTER_I_REG_reg[2] 
       (.C(can_clk),
        .CE(BTL_TRNSMT_EN_FD1_reg_1),
        .D(\BTL_COUNTER_I_REG_reg[8]_1 [2]),
        .Q(\BTL_COUNTER_I_REG_reg[8]_0 [1]),
        .R(SR[1]));
  FDRE \BTL_COUNTER_I_REG_reg[3] 
       (.C(can_clk),
        .CE(BTL_TRNSMT_EN_FD1_reg_1),
        .D(\BTL_COUNTER_I_REG_reg[8]_1 [3]),
        .Q(\BTL_COUNTER_I_REG_reg[8]_0 [2]),
        .R(SR[1]));
  FDRE \BTL_COUNTER_I_REG_reg[4] 
       (.C(can_clk),
        .CE(BTL_TRNSMT_EN_FD1_reg_1),
        .D(\BTL_COUNTER_I_REG_reg[8]_1 [4]),
        .Q(\BTL_COUNTER_I_REG_reg[8]_0 [3]),
        .R(SR[1]));
  FDRE \BTL_COUNTER_I_REG_reg[5] 
       (.C(can_clk),
        .CE(BTL_TRNSMT_EN_FD1_reg_1),
        .D(\BTL_COUNTER_I_REG_reg[8]_1 [5]),
        .Q(\BTL_COUNTER_I_REG_reg[8]_0 [4]),
        .R(SR[1]));
  FDRE \BTL_COUNTER_I_REG_reg[6] 
       (.C(can_clk),
        .CE(BTL_TRNSMT_EN_FD1_reg_1),
        .D(\BTL_COUNTER_I_REG_reg[8]_1 [6]),
        .Q(\BTL_COUNTER_I_REG_reg[8]_0 [5]),
        .R(SR[1]));
  FDRE \BTL_COUNTER_I_REG_reg[7] 
       (.C(can_clk),
        .CE(BTL_TRNSMT_EN_FD1_reg_1),
        .D(\BTL_COUNTER_I_REG_reg[8]_1 [7]),
        .Q(\BTL_COUNTER_I_REG_reg[8]_0 [6]),
        .R(SR[1]));
  FDRE \BTL_COUNTER_I_REG_reg[8] 
       (.C(can_clk),
        .CE(BTL_TRNSMT_EN_FD1_reg_1),
        .D(\BTL_COUNTER_I_REG_reg[8]_1 [8]),
        .Q(\BTL_COUNTER_I_REG_reg[8]_0 [7]),
        .R(SR[1]));
  CARRY4 BTL_NTQ_I0_carry
       (.CI(1'b0),
        .CO({BTL_NTQ_I0_carry_n_0,BTL_NTQ_I0_carry_n_1,BTL_NTQ_I0_carry_n_2,BTL_NTQ_I0_carry_n_3}),
        .CYINIT(1'b0),
        .DI(DI),
        .O({\ic_reg_n_btr_ts2_cdc_tig_reg[4] ,BTL_NTQ_I0_carry_n_5,BTL_NTQ_I0_carry_n_6,BTL_NTQ_I0_carry_n_7}),
        .S(S));
  CARRY4 BTL_NTQ_I0_carry__0
       (.CI(BTL_NTQ_I0_carry_n_0),
        .CO({BRS_L_SP_FE_reg,BTL_NTQ_I0_carry__0_n_1,BTL_NTQ_I0_carry__0_n_2,BTL_NTQ_I0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI(i__carry_i_2__3),
        .O({O[2],BTL_NTQ_I0_carry__0_n_5,O[1:0]}),
        .S(i__carry_i_2__3_0));
  FDSE BTL_RXBIT_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(BTL_RXBIT_I_reg_6),
        .Q(BTL_RXBIT_I_reg_0),
        .S(SR[0]));
  CARRY4 \BTL_SAMP_EN_D1_X22_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\NLW_BTL_SAMP_EN_D1_X22_inferred__0/i__carry_CO_UNCONNECTED [3],CNTR_EQ_SAMP_I,\BTL_SAMP_EN_D1_X22_inferred__0/i__carry_n_2 ,\BTL_SAMP_EN_D1_X22_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_BTL_SAMP_EN_D1_X22_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S({1'b0,BTL_SAMP_EN_D1_X2_reg_0}));
  FDRE BTL_SAMP_EN_D1_X2_reg
       (.C(can_clk_x2),
        .CE(1'b1),
        .D(HSYNC_OCCR_D_reg_0),
        .Q(BTL_SAMP_EN_D1_X2),
        .R(SR[0]));
  FDRE BTL_SAMP_EN_D1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(HSYNC_OCCR_D_reg_0),
        .Q(E),
        .R(SR[0]));
  FDRE BTL_SAMP_EN_D2_X2_reg
       (.C(can_clk_x2),
        .CE(1'b1),
        .D(BTL_SAMP_EN_D1_X2),
        .Q(BTL_SAMP_EN_D2_X2),
        .R(SR[0]));
  FDRE BTL_SAMP_EN_D2_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(E),
        .Q(BTL_SAMP_EN_FD2),
        .R(SR[0]));
  CARRY4 BTL_TRNSMT_EN_FD13_carry
       (.CI(1'b0),
        .CO({\arststages_ff_reg[1] ,BTL_TRNSMT_EN_FD13_carry_n_1,BTL_TRNSMT_EN_FD13_carry_n_2,BTL_TRNSMT_EN_FD13_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_BTL_TRNSMT_EN_FD13_carry_O_UNCONNECTED[3:0]),
        .S({1'b1,BTL_TRNSMT_EN_FD1_reg_2}));
  FDRE BTL_TRNSMT_EN_FD1_reg
       (.C(can_clk),
        .CE(BTL_TRNSMT_EN_FD1_reg_1),
        .D(BTL_TRNSMT_EN_I1),
        .Q(BTL_TRNSMT_EN_FD1),
        .R(SR[0]));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT4 #(
    .INIT(16'h01FF)) 
    CANCEL_CONFIRMED_TL2OL_I_i_2
       (.I0(HSYNC_OCCR_D_reg_0),
        .I1(FIRST_FAST_TRANSMT_PT_FLG_reg),
        .I2(E),
        .I3(CANCEL_CONFIRMED_TL2OL_I_reg),
        .O(TXE_TXING_reg));
  FDSE CAN_PHY_RX_D_reg
       (.C(can_clk),
        .CE(BTL_TRNSMT_EN_FD1_reg_1),
        .D(D),
        .Q(CAN_PHY_RX_D),
        .S(SR[0]));
  LUT5 #(
    .INIT(32'hFBFFFBBB)) 
    CAN_PHY_TX_INT_i_1
       (.I0(CAN_PHY_TX_INT_i_2_n_0),
        .I1(dest_arst),
        .I2(CAN_PHY_TX_INT_reg_0),
        .I3(CAN_PHY_TX_POS_FLOP_X2),
        .I4(CAN_PHY_TX_INT_reg_n_0),
        .O(CAN_PHY_TX_INT_i_1_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    CAN_PHY_TX_INT_i_2
       (.I0(BTL_SAMP_EN_D1_X2),
        .I1(BTL_TRNSMT_EN_FD1_reg_1),
        .I2(BTL_SAMP_EN_D2_X2),
        .O(CAN_PHY_TX_INT_i_2_n_0));
  FDRE CAN_PHY_TX_INT_reg
       (.C(can_clk_x2),
        .CE(1'b1),
        .D(CAN_PHY_TX_INT_i_1_n_0),
        .Q(CAN_PHY_TX_INT_reg_n_0),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    CAN_PHY_TX_LP_i_11
       (.I0(CAN_PHY_TX_LP_i_6_0[4]),
        .I1(CAN_PHY_TX_LP_i_6_0[3]),
        .I2(CAN_PHY_TX_LP_i_6_0[6]),
        .I3(CAN_PHY_TX_LP_i_6_0[5]),
        .O(CAN_PHY_TX_LP_i_11_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    CAN_PHY_TX_LP_i_12
       (.I0(CAN_PHY_TX_LP_i_7_0[4]),
        .I1(CAN_PHY_TX_LP_i_7_0[3]),
        .I2(CAN_PHY_TX_LP_i_7_0[6]),
        .I3(CAN_PHY_TX_LP_i_7_0[5]),
        .O(CAN_PHY_TX_LP_i_12_n_0));
  LUT6 #(
    .INIT(64'h4044404055555555)) 
    CAN_PHY_TX_LP_i_5
       (.I0(BTL_TRNSMT_EN_FD1),
        .I1(HSYNC_OCCR_D_reg_1),
        .I2(RSYNC_OCCR_D_reg_0),
        .I3(CAN_PHY_TX_LP_i_9_n_0),
        .I4(CAN_PHY_TX_LP_i_2),
        .I5(i__carry_i_3__6),
        .O(BTL_TRNSMT_EN_FD1_reg_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    CAN_PHY_TX_LP_i_6
       (.I0(CAN_PHY_TX_LP_i_6_0[2]),
        .I1(CAN_PHY_TX_LP_i_6_0[1]),
        .I2(CAN_PHY_TX_LP_i_6_0[0]),
        .I3(CAN_PHY_TX_LP_i_11_n_0),
        .O(\ic_reg_f_brpr_cdc_tig_reg[5] ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    CAN_PHY_TX_LP_i_7
       (.I0(CAN_PHY_TX_LP_i_7_0[2]),
        .I1(CAN_PHY_TX_LP_i_7_0[1]),
        .I2(CAN_PHY_TX_LP_i_7_0[0]),
        .I3(CAN_PHY_TX_LP_i_12_n_0),
        .O(\ic_reg_n_brpr_cdc_tig_reg[5] ));
  LUT2 #(
    .INIT(4'hE)) 
    CAN_PHY_TX_LP_i_9
       (.I0(BRS_L_SP_FE_reg_0),
        .I1(BRS_L_SP_FE_reg_1),
        .O(CAN_PHY_TX_LP_i_9_n_0));
  FDSE CAN_PHY_TX_LP_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(CAN_PHY_TX_LP_reg_1),
        .Q(CAN_PHY_TX_LP_reg_0),
        .S(SR[0]));
  CARRY4 \CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\NLW_CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_CO_UNCONNECTED [3],\arststages_ff_reg[1]_0 ,\CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_n_2 ,\CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S({1'b0,RSYNC_FLG_I_reg_0,tdc_n_19}));
  CARRY4 CAN_PHY_TX_POS_FLOP_X26_carry
       (.CI(1'b0),
        .CO({CAN_PHY_TX_POS_FLOP_X26_carry_n_0,CAN_PHY_TX_POS_FLOP_X26_carry_n_1,CAN_PHY_TX_POS_FLOP_X26_carry_n_2,CAN_PHY_TX_POS_FLOP_X26_carry_n_3}),
        .CYINIT(1'b0),
        .DI({CAN_PHY_TX_POS_FLOP_X26_carry__0_0,tdc_n_24}),
        .O(NLW_CAN_PHY_TX_POS_FLOP_X26_carry_O_UNCONNECTED[3:0]),
        .S(CAN_PHY_TX_POS_FLOP_X26_carry__0_1));
  CARRY4 CAN_PHY_TX_POS_FLOP_X26_carry__0
       (.CI(CAN_PHY_TX_POS_FLOP_X26_carry_n_0),
        .CO({NLW_CAN_PHY_TX_POS_FLOP_X26_carry__0_CO_UNCONNECTED[3:1],CAN_PHY_TX_POS_FLOP_X26_carry__0_i_2}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,FAST_TRANSMT_PT_D1_i_3}),
        .O(NLW_CAN_PHY_TX_POS_FLOP_X26_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,FAST_TRANSMT_PT_D1_i_3_0}));
  CARRY4 \CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry_n_0 ,\CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry_n_1 ,\CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry_n_2 ,\CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI({\CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry__0_0 ,tdc_n_23}),
        .O(\NLW_CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S({\CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry__0_1 ,tdc_n_21}));
  CARRY4 \CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry__0 
       (.CI(\CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry_n_0 ),
        .CO({\NLW_CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry__0_CO_UNCONNECTED [3:1],i__carry__0_i_2__1}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\BTL_COUNTER_I_REG[5]_i_6 }),
        .O(\NLW_CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry__0_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,1'b0,\BTL_COUNTER_I_REG[5]_i_6_0 }));
  CARRY4 \CAN_PHY_TX_POS_FLOP_X26_inferred__1/i__carry 
       (.CI(1'b0),
        .CO({i__carry_i_3__6,\CAN_PHY_TX_POS_FLOP_X26_inferred__1/i__carry_n_1 ,\CAN_PHY_TX_POS_FLOP_X26_inferred__1/i__carry_n_2 ,\CAN_PHY_TX_POS_FLOP_X26_inferred__1/i__carry_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_CAN_PHY_TX_POS_FLOP_X26_inferred__1/i__carry_O_UNCONNECTED [3:0]),
        .S({1'b1,FAST_TRANSMT_PT_D1_i_2}));
  CARRY4 \CAN_PHY_TX_POS_FLOP_X26_inferred__2/i__carry 
       (.CI(1'b0),
        .CO({\NLW_CAN_PHY_TX_POS_FLOP_X26_inferred__2/i__carry_CO_UNCONNECTED [3],BRS_L_SP_FE_reg_1,\CAN_PHY_TX_POS_FLOP_X26_inferred__2/i__carry_n_2 ,\CAN_PHY_TX_POS_FLOP_X26_inferred__2/i__carry_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_CAN_PHY_TX_POS_FLOP_X26_inferred__2/i__carry_O_UNCONNECTED [3:0]),
        .S({1'b0,BTL_TRNSMT_EN_FD1_i_2_0}));
  CARRY4 \CAN_PHY_TX_POS_FLOP_X27_inferred__1/i__carry 
       (.CI(1'b0),
        .CO({\NLW_CAN_PHY_TX_POS_FLOP_X27_inferred__1/i__carry_CO_UNCONNECTED [3],BRS_L_SP_FE_reg_0,\CAN_PHY_TX_POS_FLOP_X27_inferred__1/i__carry_n_2 ,\CAN_PHY_TX_POS_FLOP_X27_inferred__1/i__carry_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_CAN_PHY_TX_POS_FLOP_X27_inferred__1/i__carry_O_UNCONNECTED [3:0]),
        .S({1'b0,BTL_TRNSMT_EN_FD1_i_2}));
  FDRE CAN_PHY_TX_POS_FLOP_X2_reg
       (.C(can_clk_x2),
        .CE(1'b1),
        .D(CAN_PHY_TX_POS_FLOP_X2_reg_1),
        .Q(CAN_PHY_TX_POS_FLOP_X2_reg_0),
        .R(1'b0));
  FDRE CAN_PHY_TX_POS_FLOP_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(CAN_PHY_TX_POS_FLOP_reg_1),
        .Q(CAN_PHY_TX_POS_FLOP_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \CRC_CRCWORD_I1[0]_i_1 
       (.I0(BTL_RXBIT_I_reg_0),
        .I1(\CRC_CRCWORD_I1_reg[0] ),
        .O(BTL_RXBIT_I_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT2 #(
    .INIT(4'h2)) 
    ERR_ACKERRPASS_I_i_4
       (.I0(E),
        .I1(BTL_RXBIT_I_reg_0),
        .O(BTL_SAMP_EN_D1_reg_2));
  FDRE FBR_ERR_1TQ_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(FBR_ERR_1TQ_reg_0),
        .Q(FBR_ERR_1TQ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h4040404040FF4040)) 
    HSYNC_FLG_I_i_3
       (.I0(IFF5_EN_FS2),
        .I1(hsyn_occured_new_flag),
        .I2(HSYNC_FLG_I_i_4_n_0),
        .I3(HSYNC_FLG_I_reg_2),
        .I4(BTL_TRNSMT_EN_FD1_reg_1),
        .I5(RXE_BTL_HSYNC_FD1),
        .O(HSYNC_FLG_I0));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT2 #(
    .INIT(4'h8)) 
    HSYNC_FLG_I_i_4
       (.I0(BTL_RXBIT_I_reg_0),
        .I1(E),
        .O(HSYNC_FLG_I_i_4_n_0));
  FDRE HSYNC_FLG_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(HSYNC_FLG_I_reg_1),
        .Q(HSYNC_FLG_I_reg_0),
        .R(SR[0]));
  LUT5 #(
    .INIT(32'h00004000)) 
    HSYNC_OCCR_D_i_1
       (.I0(D),
        .I1(CAN_PHY_TX_INT_reg_n_0),
        .I2(BTL_RXBIT_I_reg_0),
        .I3(HSYNC_FLG_I_reg_0),
        .I4(HSYNC_OCCR_D_reg_n_0),
        .O(HSYNC_OCCR_D));
  FDRE HSYNC_OCCR_D_reg
       (.C(can_clk_x2),
        .CE(1'b1),
        .D(HSYNC_OCCR_D),
        .Q(HSYNC_OCCR_D_reg_n_0),
        .R(SR[0]));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ISO_CRC.CRC17_FD_CRCWORD_I1[0]_i_1 
       (.I0(BTL_RXBIT_I_reg_0),
        .I1(\ISO_CRC.CRC17_FD_CRCWORD_I1_reg[0] ),
        .O(BTL_RXBIT_I_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ISO_CRC.CRC21_FD_CRCWORD_I1[0]_i_1 
       (.I0(BTL_RXBIT_I_reg_0),
        .I1(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[0] ),
        .O(BTL_RXBIT_I_reg_3));
  LUT5 #(
    .INIT(32'hFFFF77F7)) 
    RSYNC_FLG_I_i_5
       (.I0(CNTR_EQ_SAMP_I),
        .I1(BTL_TRNSMT_EN_FD1_reg_1),
        .I2(RSYNC_FLG_I),
        .I3(hsyn_occured_new_flag_i_2_n_0),
        .I4(RSYNC_OCCR_D_reg_n_0),
        .O(RSYNC_FLG_I_i_5_n_0));
  FDRE RSYNC_FLG_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RSYNC_FLG_I_reg_1),
        .Q(RSYNC_FLG_I),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT5 #(
    .INIT(32'h00004000)) 
    RSYNC_OCCR_D_i_1
       (.I0(D),
        .I1(CAN_PHY_TX_INT_reg_n_0),
        .I2(BTL_RXBIT_I_reg_0),
        .I3(RSYNC_FLG_I),
        .I4(RSYNC_OCCR_D_reg_n_0),
        .O(RSYNC_OCCR_D));
  FDRE RSYNC_OCCR_D_reg
       (.C(can_clk_x2),
        .CE(1'b1),
        .D(RSYNC_OCCR_D),
        .Q(RSYNC_OCCR_D_reg_n_0),
        .R(SR[0]));
  FDRE RXE_BTL_HSYNC_FD1_reg
       (.C(can_clk),
        .CE(BTL_TRNSMT_EN_FD1_reg_1),
        .D(RXE_BTL_HSYNC_EN),
        .Q(RXE_BTL_HSYNC_FD1),
        .R(SR[0]));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \RXE_COUNTER_I[8]_i_10 
       (.I0(E),
        .I1(\RXE_COUNTER_I_reg[0] ),
        .O(BTL_SAMP_EN_D1_reg_0));
  LUT2 #(
    .INIT(4'h2)) 
    \RXE_COUNTER_I[8]_i_7 
       (.I0(E),
        .I1(\RXE_COUNTER_I_reg[8] ),
        .O(BTL_SAMP_EN_D1_reg_3));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \SM_REG_I[5]_i_1 
       (.I0(HSYNC_OCCR),
        .I1(HSYNC_OCCR_D_reg_n_0),
        .I2(RSYNC_OCCR_D_reg_n_0),
        .I3(\SM_REG_I[5]_i_3_n_0 ),
        .I4(BTL_TRNSMT_EN_FD1_reg_1),
        .I5(CNTR_EQ_SAMP_I),
        .O(HSYNC_OCCR_D_reg_0));
  LUT6 #(
    .INIT(64'h0000000222222202)) 
    \SM_REG_I[5]_i_2 
       (.I0(HSYNC_FLG_I_reg_0),
        .I1(\SM_REG_I[5]_i_4_n_0 ),
        .I2(CAN_PHY_RX_I),
        .I3(hsyn_occured_new_flag_reg_0),
        .I4(SSP_EN),
        .I5(CAN_PHY_TX_LP_reg_0),
        .O(HSYNC_OCCR));
  LUT6 #(
    .INIT(64'h0000000222222202)) 
    \SM_REG_I[5]_i_3 
       (.I0(RSYNC_FLG_I),
        .I1(\SM_REG_I[5]_i_4_n_0 ),
        .I2(CAN_PHY_RX_I),
        .I3(hsyn_occured_new_flag_reg_0),
        .I4(SSP_EN),
        .I5(CAN_PHY_TX_LP_reg_0),
        .O(\SM_REG_I[5]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \SM_REG_I[5]_i_4 
       (.I0(BTL_RXBIT_I_reg_0),
        .I1(CAN_PHY_TX_INT_reg_n_0),
        .O(\SM_REG_I[5]_i_4_n_0 ));
  FDRE SSP_EN_D1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(SSP_EN),
        .Q(SSP_EN_D1),
        .R(SR[0]));
  FDRE TDC_TRIG_COND_D1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TDC_TRIG_COND),
        .Q(TDC_TRIG_COND_D1),
        .R(SR[0]));
  LUT5 #(
    .INIT(32'h55100000)) 
    hsyn_occured_new_flag_i_1
       (.I0(E),
        .I1(hsyn_occured_new_flag_i_2_n_0),
        .I2(HSYNC_FLG_I_reg_0),
        .I3(hsyn_occured_new_flag),
        .I4(dest_arst),
        .O(hsyn_occured_new_flag_i_1_n_0));
  LUT6 #(
    .INIT(64'hABA8FFFFFFFFFFFF)) 
    hsyn_occured_new_flag_i_2
       (.I0(CAN_PHY_TX_LP_reg_0),
        .I1(SSP_EN),
        .I2(hsyn_occured_new_flag_reg_0),
        .I3(CAN_PHY_RX_I),
        .I4(CAN_PHY_TX_INT_reg_n_0),
        .I5(BTL_RXBIT_I_reg_0),
        .O(hsyn_occured_new_flag_i_2_n_0));
  FDRE hsyn_occured_new_flag_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(hsyn_occured_new_flag_i_1_n_0),
        .Q(hsyn_occured_new_flag),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \state[0]_i_27 
       (.I0(BTL_RXBIT_I_reg_0),
        .I1(\state[0]_i_24 ),
        .O(BTL_RXBIT_I_reg_5));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_tl_tdc tdc
       (.BRSD_P_ERR_1TQ_FD_reg(BRSD_P_ERR_1TQ_FD_reg_2),
        .BRSD_P_ERR_1TQ_FD_reg_0(tdc_n_21),
        .BRSD_P_ERR_1TQ_FD_reg_1(BRSD_P_ERR_1TQ_FD_reg_1),
        .BRSD_P_ERR_1TQ_FD_reg_2(tdc_n_24),
        .BRS_EN_BTR(BRS_EN_BTR),
        .BTL_COUNTER_I16_carry_i_4(BTL_COUNTER_I16_carry_i_4_0),
        .\BTL_COUNTER_I_REG[5]_i_6 (RSYNC_OCCR_D_reg_n_0),
        .\BTL_COUNTER_I_REG_reg[0] (BRSD_P_ERR_1TQ_FD),
        .\BTL_COUNTER_I_REG_reg[0]_0 (BRS_EN_BTR_D1),
        .\BTL_COUNTER_I_REG_reg[0]_1 (\BTL_COUNTER_I_REG_reg[0]_0 ),
        .\BTL_COUNTER_I_REG_reg[1] (tdc_n_25),
        .CAN_PHY_RX_I_NEG_FLOP(CAN_PHY_RX_I_NEG_FLOP),
        .\CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry ({BTL_NTQ_I0_carry_n_5,BTL_NTQ_I0_carry_n_6,BTL_NTQ_I0_carry_n_7}),
        .\CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_0 (\CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_0 ),
        .\CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_1 (\CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_1 ),
        .CAN_PHY_TX_POS_FLOP_X26_carry(BTL_COUNTER_I16_carry_0),
        .CAN_PHY_TX_POS_FLOP_X26_carry_i_3(CAN_PHY_TX_POS_FLOP_X26_carry_i_3),
        .CAN_PHY_TX_POS_FLOP_X26_carry_i_3_0({\BTL_COUNTER_I_REG_reg[8]_0 [2],\BTL_COUNTER_I_REG_reg[8]_0 [0],\BTL_COUNTER_I_REG_reg_n_0_[0] }),
        .CAN_PHY_TX_POS_FLOP_X27(CAN_PHY_TX_POS_FLOP_X27[1:0]),
        .D(D),
        .DI(tdc_n_23),
        .ERR_TXBERR_I_FD_SSP_EN_1_reg_0(ERR_TXBERR_I_FD_SSP_EN_1_reg),
        .ERR_TXBERR_I_FD_SSP_EN_1_reg_1(ERR_TXBERR_I_FD_SSP_EN_1_reg_0),
        .FAST_TRANSMT_PT_D1_reg_0(FAST_TRANSMT_PT_D1_reg),
        .FIRST_FAST_TRANSMT_PT_FLG_reg_0(FIRST_FAST_TRANSMT_PT_FLG_reg),
        .HSYNC_FLG_I_reg(CAN_PHY_TX_INT_reg_n_0),
        .HSYNC_FLG_I_reg_0(BTL_RXBIT_I_reg_0),
        .HSYNC_FLG_I_reg_1(HSYNC_FLG_I_reg_0),
        .HSYNC_FLG_I_reg_2(HSYNC_OCCR_D_reg_n_0),
        .HSYNC_OCCR_D_reg(HSYNC_OCCR_D_reg_1),
        .\MEM_reg[0]_0 (CAN_PHY_TX_LP_reg_0),
        .\MEM_reg[3]_0 (\MEM_reg[3] ),
        .O(BTL_NTQ_I0_carry__0_n_5),
        .\PIPELINED_BITS_reg[0]_0 (\PIPELINED_BITS_reg[0] ),
        .\PIPELINED_BITS_reg[0]_1 (\PIPELINED_BITS_reg[0]_0 ),
        .\PIPELINED_BITS_reg[1]_0 (\PIPELINED_BITS_reg[1] ),
        .Q(Q),
        .\RD_PTR_reg[1]_0 (\RD_PTR_reg[1] ),
        .RSYNC_FLG_I_i_3_0(RSYNC_FLG_I),
        .RSYNC_FLG_I_i_3_1(RSYNC_FLG_I_i_5_n_0),
        .RSYNC_FLG_I_reg(RSYNC_FLG_I_reg_2),
        .RSYNC_FLG_I_reg_0(BIS_HSYNC_FLG_I_reg_0),
        .RSYNC_FLG_I_reg_1(BTL_TRNSMT_EN_FD1_reg_1),
        .RSYNC_OCCR_D_reg(RSYNC_OCCR_D_reg_0),
        .S(tdc_n_19),
        .SR(SR[0]),
        .SSP_BTL_TXBIT_I(SSP_BTL_TXBIT_I),
        .SSP_BTL_TXBIT_I_reg_0(SSP_BTL_TXBIT_I_reg),
        .\SSP_COUNT_DOWN_reg[6]_0 (\SSP_COUNT_DOWN_reg[6] ),
        .SSP_EN(SSP_EN),
        .SSP_EN_D1(SSP_EN_D1),
        .SSP_RCVD_RXBIT(SSP_RCVD_RXBIT),
        .SSP_RCVD_RXBIT_reg_0(SSP_RCVD_RXBIT_reg),
        .\TDC_COUNTER_reg[6]_0 (\TDC_COUNTER_reg[6] ),
        .\TDC_COUNTER_reg[6]_1 (\TDC_COUNTER_reg[6]_0 ),
        .\TDC_COUNTER_reg[6]_2 (\TDC_COUNTER_reg[6]_1 ),
        .TDC_SSP_SAMP_PT_D1(TDC_SSP_SAMP_PT_D1),
        .TDC_SSP_SAMP_PT_reg_0(TDC_SSP_SAMP_PT_reg),
        .TDC_TRIG_COND_D1(TDC_TRIG_COND_D1),
        .TXE_TXING_reg(TXE_TXING_reg_0),
        .TXING_BRS_EN_BTR_D1(TXING_BRS_EN_BTR_D1),
        .TXING_BRS_EN_BTR_D1_reg_0(TXING_BRS_EN_BTR_D1_reg),
        .\WR_PTR_reg[1]_0 (E),
        .\arststages_ff_reg[1] (\arststages_ff_reg[1]_2 ),
        .can_clk(can_clk),
        .dest_arst(dest_arst));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_tl_clkdiv
   (CLKM_EN_reg_0,
    \CLKD_COUNTER_I_reg[1]_0 ,
    CLKM_EN_reg_1,
    CLKM_EN_reg_2,
    SYNC_RST_TL,
    can_clk,
    \CLKD_COUNTER_I_reg[7]_0 ,
    dest_arst,
    Q,
    CLKM_EN_reg_3,
    CLKM_EN_i_2_0,
    BRS_EN_BTR,
    FBR_ERR_1TQ);
  output CLKM_EN_reg_0;
  output [1:0]\CLKD_COUNTER_I_reg[1]_0 ;
  output CLKM_EN_reg_1;
  output CLKM_EN_reg_2;
  input SYNC_RST_TL;
  input can_clk;
  input \CLKD_COUNTER_I_reg[7]_0 ;
  input dest_arst;
  input [5:0]Q;
  input CLKM_EN_reg_3;
  input [5:0]CLKM_EN_i_2_0;
  input BRS_EN_BTR;
  input FBR_ERR_1TQ;

  wire BRS_EN_BTR;
  wire CLKD_CMP_I;
  wire \CLKD_COUNTER_I[0]_i_1_n_0 ;
  wire \CLKD_COUNTER_I[0]_i_2_n_0 ;
  wire \CLKD_COUNTER_I[0]_i_3_n_0 ;
  wire \CLKD_COUNTER_I[1]_i_1_n_0 ;
  wire \CLKD_COUNTER_I[1]_i_2_n_0 ;
  wire \CLKD_COUNTER_I[2]_i_1_n_0 ;
  wire \CLKD_COUNTER_I[2]_i_2_n_0 ;
  wire \CLKD_COUNTER_I[3]_i_1_n_0 ;
  wire \CLKD_COUNTER_I[3]_i_2_n_0 ;
  wire \CLKD_COUNTER_I[4]_i_1_n_0 ;
  wire \CLKD_COUNTER_I[4]_i_2_n_0 ;
  wire \CLKD_COUNTER_I[5]_i_1_n_0 ;
  wire \CLKD_COUNTER_I[5]_i_2_n_0 ;
  wire \CLKD_COUNTER_I[6]_i_1_n_0 ;
  wire \CLKD_COUNTER_I[6]_i_2_n_0 ;
  wire \CLKD_COUNTER_I[7]_i_1_n_0 ;
  wire [0:7]CLKD_COUNTER_I_reg;
  wire [1:0]\CLKD_COUNTER_I_reg[1]_0 ;
  wire \CLKD_COUNTER_I_reg[7]_0 ;
  wire [5:0]CLKM_EN_i_2_0;
  wire CLKM_EN_i_2_n_0;
  wire CLKM_EN_i_3_n_0;
  wire CLKM_EN_i_4_n_0;
  wire CLKM_EN_i_7_n_0;
  wire CLKM_EN_i_8_n_0;
  wire CLKM_EN_i_9_n_0;
  wire CLKM_EN_reg_0;
  wire CLKM_EN_reg_1;
  wire CLKM_EN_reg_2;
  wire CLKM_EN_reg_3;
  wire FBR_ERR_1TQ;
  wire [5:0]Q;
  wire SYNC_RST_TL;
  wire can_clk;
  wire dest_arst;

  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT2 #(
    .INIT(4'h8)) 
    BRSD_P_ERR_1TQ_FD_i_2
       (.I0(CLKM_EN_reg_0),
        .I1(FBR_ERR_1TQ),
        .O(CLKM_EN_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT2 #(
    .INIT(4'h7)) 
    BRSD_P_ERR_1TQ_FD_i_3
       (.I0(CLKM_EN_reg_0),
        .I1(BRS_EN_BTR),
        .O(CLKM_EN_reg_1));
  LUT6 #(
    .INIT(64'h00000000FFFB0000)) 
    \CLKD_COUNTER_I[0]_i_1 
       (.I0(CLKM_EN_i_2_n_0),
        .I1(CLKM_EN_i_3_n_0),
        .I2(CLKM_EN_i_4_n_0),
        .I3(\CLKD_COUNTER_I_reg[7]_0 ),
        .I4(dest_arst),
        .I5(\CLKD_COUNTER_I[0]_i_2_n_0 ),
        .O(\CLKD_COUNTER_I[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT3 #(
    .INIT(8'h95)) 
    \CLKD_COUNTER_I[0]_i_2 
       (.I0(CLKD_COUNTER_I_reg[0]),
        .I1(\CLKD_COUNTER_I[0]_i_3_n_0 ),
        .I2(\CLKD_COUNTER_I_reg[1]_0 [1]),
        .O(\CLKD_COUNTER_I[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \CLKD_COUNTER_I[0]_i_3 
       (.I0(CLKD_COUNTER_I_reg[3]),
        .I1(CLKD_COUNTER_I_reg[5]),
        .I2(CLKD_COUNTER_I_reg[7]),
        .I3(CLKD_COUNTER_I_reg[6]),
        .I4(CLKD_COUNTER_I_reg[4]),
        .I5(\CLKD_COUNTER_I_reg[1]_0 [0]),
        .O(\CLKD_COUNTER_I[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFB000000000000)) 
    \CLKD_COUNTER_I[1]_i_1 
       (.I0(CLKM_EN_i_2_n_0),
        .I1(CLKM_EN_i_3_n_0),
        .I2(CLKM_EN_i_4_n_0),
        .I3(\CLKD_COUNTER_I_reg[7]_0 ),
        .I4(dest_arst),
        .I5(\CLKD_COUNTER_I[1]_i_2_n_0 ),
        .O(\CLKD_COUNTER_I[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \CLKD_COUNTER_I[1]_i_2 
       (.I0(\CLKD_COUNTER_I_reg[1]_0 [1]),
        .I1(\CLKD_COUNTER_I[0]_i_3_n_0 ),
        .O(\CLKD_COUNTER_I[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFB0000)) 
    \CLKD_COUNTER_I[2]_i_1 
       (.I0(CLKM_EN_i_2_n_0),
        .I1(CLKM_EN_i_3_n_0),
        .I2(CLKM_EN_i_4_n_0),
        .I3(\CLKD_COUNTER_I_reg[7]_0 ),
        .I4(dest_arst),
        .I5(\CLKD_COUNTER_I[2]_i_2_n_0 ),
        .O(\CLKD_COUNTER_I[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h9555555555555555)) 
    \CLKD_COUNTER_I[2]_i_2 
       (.I0(\CLKD_COUNTER_I_reg[1]_0 [0]),
        .I1(CLKD_COUNTER_I_reg[3]),
        .I2(CLKD_COUNTER_I_reg[5]),
        .I3(CLKD_COUNTER_I_reg[7]),
        .I4(CLKD_COUNTER_I_reg[6]),
        .I5(CLKD_COUNTER_I_reg[4]),
        .O(\CLKD_COUNTER_I[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFB0000)) 
    \CLKD_COUNTER_I[3]_i_1 
       (.I0(CLKM_EN_i_2_n_0),
        .I1(CLKM_EN_i_3_n_0),
        .I2(CLKM_EN_i_4_n_0),
        .I3(\CLKD_COUNTER_I_reg[7]_0 ),
        .I4(dest_arst),
        .I5(\CLKD_COUNTER_I[3]_i_2_n_0 ),
        .O(\CLKD_COUNTER_I[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT5 #(
    .INIT(32'h95555555)) 
    \CLKD_COUNTER_I[3]_i_2 
       (.I0(CLKD_COUNTER_I_reg[3]),
        .I1(CLKD_COUNTER_I_reg[4]),
        .I2(CLKD_COUNTER_I_reg[6]),
        .I3(CLKD_COUNTER_I_reg[7]),
        .I4(CLKD_COUNTER_I_reg[5]),
        .O(\CLKD_COUNTER_I[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFB0000)) 
    \CLKD_COUNTER_I[4]_i_1 
       (.I0(CLKM_EN_i_2_n_0),
        .I1(CLKM_EN_i_3_n_0),
        .I2(CLKM_EN_i_4_n_0),
        .I3(\CLKD_COUNTER_I_reg[7]_0 ),
        .I4(dest_arst),
        .I5(\CLKD_COUNTER_I[4]_i_2_n_0 ),
        .O(\CLKD_COUNTER_I[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT4 #(
    .INIT(16'h9555)) 
    \CLKD_COUNTER_I[4]_i_2 
       (.I0(CLKD_COUNTER_I_reg[4]),
        .I1(CLKD_COUNTER_I_reg[5]),
        .I2(CLKD_COUNTER_I_reg[7]),
        .I3(CLKD_COUNTER_I_reg[6]),
        .O(\CLKD_COUNTER_I[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFB0000)) 
    \CLKD_COUNTER_I[5]_i_1 
       (.I0(CLKM_EN_i_2_n_0),
        .I1(CLKM_EN_i_3_n_0),
        .I2(CLKM_EN_i_4_n_0),
        .I3(\CLKD_COUNTER_I_reg[7]_0 ),
        .I4(dest_arst),
        .I5(\CLKD_COUNTER_I[5]_i_2_n_0 ),
        .O(\CLKD_COUNTER_I[5]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h95)) 
    \CLKD_COUNTER_I[5]_i_2 
       (.I0(CLKD_COUNTER_I_reg[5]),
        .I1(CLKD_COUNTER_I_reg[6]),
        .I2(CLKD_COUNTER_I_reg[7]),
        .O(\CLKD_COUNTER_I[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFB0000)) 
    \CLKD_COUNTER_I[6]_i_1 
       (.I0(CLKM_EN_i_2_n_0),
        .I1(CLKM_EN_i_3_n_0),
        .I2(CLKM_EN_i_4_n_0),
        .I3(\CLKD_COUNTER_I_reg[7]_0 ),
        .I4(dest_arst),
        .I5(\CLKD_COUNTER_I[6]_i_2_n_0 ),
        .O(\CLKD_COUNTER_I[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \CLKD_COUNTER_I[6]_i_2 
       (.I0(CLKD_COUNTER_I_reg[7]),
        .I1(CLKD_COUNTER_I_reg[6]),
        .O(\CLKD_COUNTER_I[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFB0000)) 
    \CLKD_COUNTER_I[7]_i_1 
       (.I0(CLKM_EN_i_2_n_0),
        .I1(CLKM_EN_i_3_n_0),
        .I2(CLKM_EN_i_4_n_0),
        .I3(\CLKD_COUNTER_I_reg[7]_0 ),
        .I4(dest_arst),
        .I5(CLKD_COUNTER_I_reg[7]),
        .O(\CLKD_COUNTER_I[7]_i_1_n_0 ));
  (* EXTRACT_RESET = 0 *) 
  FDRE \CLKD_COUNTER_I_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\CLKD_COUNTER_I[0]_i_1_n_0 ),
        .Q(CLKD_COUNTER_I_reg[0]),
        .R(1'b0));
  (* EXTRACT_RESET = 0 *) 
  FDRE \CLKD_COUNTER_I_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\CLKD_COUNTER_I[1]_i_1_n_0 ),
        .Q(\CLKD_COUNTER_I_reg[1]_0 [1]),
        .R(1'b0));
  (* EXTRACT_RESET = 0 *) 
  FDRE \CLKD_COUNTER_I_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\CLKD_COUNTER_I[2]_i_1_n_0 ),
        .Q(\CLKD_COUNTER_I_reg[1]_0 [0]),
        .R(1'b0));
  (* EXTRACT_RESET = 0 *) 
  FDRE \CLKD_COUNTER_I_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\CLKD_COUNTER_I[3]_i_1_n_0 ),
        .Q(CLKD_COUNTER_I_reg[3]),
        .R(1'b0));
  (* EXTRACT_RESET = 0 *) 
  FDRE \CLKD_COUNTER_I_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\CLKD_COUNTER_I[4]_i_1_n_0 ),
        .Q(CLKD_COUNTER_I_reg[4]),
        .R(1'b0));
  (* EXTRACT_RESET = 0 *) 
  FDRE \CLKD_COUNTER_I_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\CLKD_COUNTER_I[5]_i_1_n_0 ),
        .Q(CLKD_COUNTER_I_reg[5]),
        .R(1'b0));
  (* EXTRACT_RESET = 0 *) 
  FDRE \CLKD_COUNTER_I_reg[6] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\CLKD_COUNTER_I[6]_i_1_n_0 ),
        .Q(CLKD_COUNTER_I_reg[6]),
        .R(1'b0));
  (* EXTRACT_RESET = 0 *) 
  FDRE \CLKD_COUNTER_I_reg[7] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\CLKD_COUNTER_I[7]_i_1_n_0 ),
        .Q(CLKD_COUNTER_I_reg[7]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h0004)) 
    CLKM_EN_i_1
       (.I0(CLKM_EN_i_2_n_0),
        .I1(CLKM_EN_i_3_n_0),
        .I2(CLKM_EN_i_4_n_0),
        .I3(\CLKD_COUNTER_I_reg[7]_0 ),
        .O(CLKD_CMP_I));
  LUT5 #(
    .INIT(32'hFFFF47B8)) 
    CLKM_EN_i_2
       (.I0(Q[4]),
        .I1(CLKM_EN_reg_3),
        .I2(CLKM_EN_i_2_0[4]),
        .I3(CLKD_COUNTER_I_reg[3]),
        .I4(CLKM_EN_i_7_n_0),
        .O(CLKM_EN_i_2_n_0));
  LUT5 #(
    .INIT(32'h0000B847)) 
    CLKM_EN_i_3
       (.I0(Q[0]),
        .I1(CLKM_EN_reg_3),
        .I2(CLKM_EN_i_2_0[0]),
        .I3(CLKD_COUNTER_I_reg[7]),
        .I4(CLKM_EN_i_8_n_0),
        .O(CLKM_EN_i_3_n_0));
  LUT5 #(
    .INIT(32'hFFFF47B8)) 
    CLKM_EN_i_4
       (.I0(Q[2]),
        .I1(CLKM_EN_reg_3),
        .I2(CLKM_EN_i_2_0[2]),
        .I3(CLKD_COUNTER_I_reg[5]),
        .I4(CLKM_EN_i_9_n_0),
        .O(CLKM_EN_i_4_n_0));
  LUT4 #(
    .INIT(16'h56A6)) 
    CLKM_EN_i_7
       (.I0(CLKD_COUNTER_I_reg[0]),
        .I1(CLKM_EN_i_2_0[5]),
        .I2(CLKM_EN_reg_3),
        .I3(Q[5]),
        .O(CLKM_EN_i_7_n_0));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT4 #(
    .INIT(16'h56A6)) 
    CLKM_EN_i_8
       (.I0(CLKD_COUNTER_I_reg[6]),
        .I1(CLKM_EN_i_2_0[1]),
        .I2(CLKM_EN_reg_3),
        .I3(Q[1]),
        .O(CLKM_EN_i_8_n_0));
  LUT4 #(
    .INIT(16'h56A6)) 
    CLKM_EN_i_9
       (.I0(CLKD_COUNTER_I_reg[4]),
        .I1(CLKM_EN_i_2_0[3]),
        .I2(CLKM_EN_reg_3),
        .I3(Q[3]),
        .O(CLKM_EN_i_9_n_0));
  FDRE CLKM_EN_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(CLKD_CMP_I),
        .Q(CLKM_EN_reg_0),
        .R(SYNC_RST_TL));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_tl_om
   (Q,
    SM_FLAG_I,
    SM_FLAG_I_FSB,
    EMU_CTR_FLG_I,
    IC_SYNC_ECR_WEN,
    IC_REG_MSR_SNOOP_FS2_D1_reg,
    \EMU_REC_I_reg[7]_0 ,
    \EMU_TEC_I_reg[4]_0 ,
    \EMU_REC_I_reg[7]_1 ,
    \COUNTER_I_reg[0]_0 ,
    \CRC_CRCWORD_I1_reg[4]_0 ,
    \CRC_CRCWORD_I1_reg[14]_0 ,
    \CRC_CRCWORD_I1_reg[9]_0 ,
    \RXE_COUNTER_I_reg[1] ,
    \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[20]_0 ,
    \RXE_COUNTER_I_reg[1]_0 ,
    \RXE_COUNTER_I_reg[4] ,
    \ISO_CRC.CRC17_FD_CRCWORD_I1_reg[16]_0 ,
    \ISO_CRC.SBC_SEQ_REG_reg[3]_0 ,
    \CRC_CRCWORD_I1_reg[14]_1 ,
    SM_STUFFBIT_PD,
    \COUNTER_I_reg[1]_0 ,
    SM_FLAG_I_reg_0,
    \SM_REG_I_reg[1]_0 ,
    \SM_REG_I_reg[1]_1 ,
    EMU_ERRWRN,
    EMU_STAT1,
    \EMU_REC_I_reg[7]_2 ,
    \EMU_TEC_I_reg[5]_0 ,
    \EMU_OL_ECR_I_reg[0]_0 ,
    \syncstages_ff_reg[0] ,
    can_clk,
    SYNC_RST_TL,
    SM_FLAG_I_reg_1,
    SM_FLAG_I_FSB_reg_0,
    E,
    \EMU_REC_I_reg[7]_3 ,
    EMU_CTR_FLG_I0,
    \EMU_OL_ECR_I_reg[0]_1 ,
    dest_arst,
    \EMU_OL_ECR_I_reg[0]_2 ,
    EMU_REC_I20_carry_0,
    \EMU_OL_ECR_I_reg[12]_0 ,
    \EMU_OL_ECR_I_reg[15]_0 ,
    \state[1]_i_5 ,
    \CRC_CRCWORD_I1_reg[0]_0 ,
    TXE_TX_REN_I_CFD_D1_reg_i_19_0,
    BSP_CRCERR_I_CANFD_FLG_i_4,
    TXE_TX_REN_I_CFD_D1_i_9,
    TXE_TX_REN_I_CFD_D1_i_36_0,
    \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[3]_0 ,
    EMU_REC_I20_carry_1,
    EMU_REC_I20_carry_2,
    \PREV_COUNTER_I_reg[0]_0 ,
    D,
    \COUNTER_I_reg[1]_1 ,
    CRC_CRCWORD_I1,
    \CRC_CRCWORD_I1_reg[0]_1 ,
    \ISO_CRC.CRC17_FD_CRCWORD_I1_reg[0]_0 ,
    \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[0]_0 ,
    \EMU_OL_ECR_I_reg[0]_3 );
  output [0:0]Q;
  output SM_FLAG_I;
  output SM_FLAG_I_FSB;
  output EMU_CTR_FLG_I;
  output IC_SYNC_ECR_WEN;
  output IC_REG_MSR_SNOOP_FS2_D1_reg;
  output [0:0]\EMU_REC_I_reg[7]_0 ;
  output \EMU_TEC_I_reg[4]_0 ;
  output \EMU_REC_I_reg[7]_1 ;
  output \COUNTER_I_reg[0]_0 ;
  output \CRC_CRCWORD_I1_reg[4]_0 ;
  output [5:0]\CRC_CRCWORD_I1_reg[14]_0 ;
  output \CRC_CRCWORD_I1_reg[9]_0 ;
  output \RXE_COUNTER_I_reg[1] ;
  output [5:0]\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[20]_0 ;
  output \RXE_COUNTER_I_reg[1]_0 ;
  output \RXE_COUNTER_I_reg[4] ;
  output [0:0]\ISO_CRC.CRC17_FD_CRCWORD_I1_reg[16]_0 ;
  output \ISO_CRC.SBC_SEQ_REG_reg[3]_0 ;
  output \CRC_CRCWORD_I1_reg[14]_1 ;
  output SM_STUFFBIT_PD;
  output \COUNTER_I_reg[1]_0 ;
  output SM_FLAG_I_reg_0;
  output \SM_REG_I_reg[1]_0 ;
  output \SM_REG_I_reg[1]_1 ;
  output EMU_ERRWRN;
  output EMU_STAT1;
  output \EMU_REC_I_reg[7]_2 ;
  output \EMU_TEC_I_reg[5]_0 ;
  output [15:0]\EMU_OL_ECR_I_reg[0]_0 ;
  input \syncstages_ff_reg[0] ;
  input can_clk;
  input SYNC_RST_TL;
  input SM_FLAG_I_reg_1;
  input SM_FLAG_I_FSB_reg_0;
  input [0:0]E;
  input \EMU_REC_I_reg[7]_3 ;
  input EMU_CTR_FLG_I0;
  input \EMU_OL_ECR_I_reg[0]_1 ;
  input dest_arst;
  input \EMU_OL_ECR_I_reg[0]_2 ;
  input EMU_REC_I20_carry_0;
  input \EMU_OL_ECR_I_reg[12]_0 ;
  input \EMU_OL_ECR_I_reg[15]_0 ;
  input \state[1]_i_5 ;
  input \CRC_CRCWORD_I1_reg[0]_0 ;
  input [3:0]TXE_TX_REN_I_CFD_D1_reg_i_19_0;
  input BSP_CRCERR_I_CANFD_FLG_i_4;
  input TXE_TX_REN_I_CFD_D1_i_9;
  input TXE_TX_REN_I_CFD_D1_i_36_0;
  input \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[3]_0 ;
  input EMU_REC_I20_carry_1;
  input EMU_REC_I20_carry_2;
  input [0:0]\PREV_COUNTER_I_reg[0]_0 ;
  input [0:0]D;
  input \COUNTER_I_reg[1]_1 ;
  input CRC_CRCWORD_I1;
  input [0:0]\CRC_CRCWORD_I1_reg[0]_1 ;
  input [0:0]\ISO_CRC.CRC17_FD_CRCWORD_I1_reg[0]_0 ;
  input [0:0]\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[0]_0 ;
  input [0:0]\EMU_OL_ECR_I_reg[0]_3 ;

  wire BSP_CRCERR_I_CANFD_FLG_i_17_n_0;
  wire BSP_CRCERR_I_CANFD_FLG_i_18_n_0;
  wire BSP_CRCERR_I_CANFD_FLG_i_19_n_0;
  wire BSP_CRCERR_I_CANFD_FLG_i_20_n_0;
  wire BSP_CRCERR_I_CANFD_FLG_i_4;
  wire BSP_IC_STUFF_ERROR_I_i_3_n_0;
  wire [1:0]COUNTER_I;
  wire \COUNTER_I[0]_i_1_n_0 ;
  wire \COUNTER_I[1]_i_1_n_0 ;
  wire \COUNTER_I[1]_i_2_n_0 ;
  wire \COUNTER_I_reg[0]_0 ;
  wire \COUNTER_I_reg[1]_0 ;
  wire \COUNTER_I_reg[1]_1 ;
  wire [1:16]CRC17_CRCWORD;
  wire [16:1]CRC17_FD_CRCWORD_I;
  wire [6:20]CRC21_CRCWORD;
  wire [20:3]CRC21_FD_CRCWORD_I;
  wire [2:11]CRC_CRCWORD;
  wire [14:3]CRC_CRCWORD_I;
  wire CRC_CRCWORD_I1;
  wire \CRC_CRCWORD_I1[14]_i_2_n_0 ;
  wire \CRC_CRCWORD_I1[14]_i_4_n_0 ;
  wire \CRC_CRCWORD_I1_reg[0]_0 ;
  wire [0:0]\CRC_CRCWORD_I1_reg[0]_1 ;
  wire [5:0]\CRC_CRCWORD_I1_reg[14]_0 ;
  wire \CRC_CRCWORD_I1_reg[14]_1 ;
  wire \CRC_CRCWORD_I1_reg[4]_0 ;
  wire \CRC_CRCWORD_I1_reg[9]_0 ;
  wire [0:0]D;
  wire [0:0]E;
  wire EMU_CTR_FLG_I;
  wire EMU_CTR_FLG_I0;
  wire EMU_CTR_FLG_I_i_1_n_0;
  wire EMU_ERRWRN;
  wire \EMU_OL_ECR_I[0]_i_1_n_0 ;
  wire [15:0]\EMU_OL_ECR_I_reg[0]_0 ;
  wire \EMU_OL_ECR_I_reg[0]_1 ;
  wire \EMU_OL_ECR_I_reg[0]_2 ;
  wire [0:0]\EMU_OL_ECR_I_reg[0]_3 ;
  wire \EMU_OL_ECR_I_reg[12]_0 ;
  wire \EMU_OL_ECR_I_reg[15]_0 ;
  wire EMU_OL_ECR_WEN_I_i_1_n_0;
  wire [7:0]EMU_REC_I2;
  wire [7:0]EMU_REC_I20;
  wire EMU_REC_I20_carry_0;
  wire EMU_REC_I20_carry_1;
  wire EMU_REC_I20_carry_2;
  wire EMU_REC_I20_carry__0_i_1_n_0;
  wire EMU_REC_I20_carry__0_i_2_n_0;
  wire EMU_REC_I20_carry__0_i_3_n_0;
  wire EMU_REC_I20_carry__0_i_4_n_0;
  wire EMU_REC_I20_carry__0_n_1;
  wire EMU_REC_I20_carry__0_n_2;
  wire EMU_REC_I20_carry__0_n_3;
  wire EMU_REC_I20_carry_i_1_n_0;
  wire EMU_REC_I20_carry_i_2_n_0;
  wire EMU_REC_I20_carry_i_3_n_0;
  wire EMU_REC_I20_carry_i_4_n_0;
  wire EMU_REC_I20_carry_i_5_n_0;
  wire EMU_REC_I20_carry_n_0;
  wire EMU_REC_I20_carry_n_1;
  wire EMU_REC_I20_carry_n_2;
  wire EMU_REC_I20_carry_n_3;
  wire \EMU_REC_I[7]_i_1_n_0 ;
  wire \EMU_REC_I[7]_i_9_n_0 ;
  wire [0:0]\EMU_REC_I_reg[7]_0 ;
  wire \EMU_REC_I_reg[7]_1 ;
  wire \EMU_REC_I_reg[7]_2 ;
  wire \EMU_REC_I_reg[7]_3 ;
  wire \EMU_REC_I_reg_n_0_[0] ;
  wire \EMU_REC_I_reg_n_0_[1] ;
  wire \EMU_REC_I_reg_n_0_[2] ;
  wire \EMU_REC_I_reg_n_0_[3] ;
  wire \EMU_REC_I_reg_n_0_[4] ;
  wire \EMU_REC_I_reg_n_0_[5] ;
  wire \EMU_REC_I_reg_n_0_[6] ;
  wire EMU_STAT1;
  wire [7:0]EMU_TEC_I2;
  wire [7:0]EMU_TEC_I2_0;
  wire EMU_TEC_I2__0_carry__0_i_1_n_0;
  wire EMU_TEC_I2__0_carry__0_i_2_n_0;
  wire EMU_TEC_I2__0_carry__0_i_3_n_0;
  wire EMU_TEC_I2__0_carry__0_i_4_n_0;
  wire EMU_TEC_I2__0_carry__0_n_1;
  wire EMU_TEC_I2__0_carry__0_n_2;
  wire EMU_TEC_I2__0_carry__0_n_3;
  wire EMU_TEC_I2__0_carry_i_1_n_0;
  wire EMU_TEC_I2__0_carry_i_2_n_0;
  wire EMU_TEC_I2__0_carry_i_3_n_0;
  wire EMU_TEC_I2__0_carry_i_4_n_0;
  wire EMU_TEC_I2__0_carry_n_0;
  wire EMU_TEC_I2__0_carry_n_1;
  wire EMU_TEC_I2__0_carry_n_2;
  wire EMU_TEC_I2__0_carry_n_3;
  wire EMU_TEC_I2_carry__0_i_1_n_0;
  wire EMU_TEC_I2_carry__0_i_2_n_0;
  wire EMU_TEC_I2_carry__0_i_3_n_0;
  wire EMU_TEC_I2_carry__0_i_4_n_0;
  wire EMU_TEC_I2_carry__0_n_1;
  wire EMU_TEC_I2_carry__0_n_2;
  wire EMU_TEC_I2_carry__0_n_3;
  wire EMU_TEC_I2_carry_i_1_n_0;
  wire EMU_TEC_I2_carry_i_2_n_0;
  wire EMU_TEC_I2_carry_i_3_n_0;
  wire EMU_TEC_I2_carry_i_4_n_0;
  wire EMU_TEC_I2_carry_i_5_n_0;
  wire EMU_TEC_I2_carry_n_0;
  wire EMU_TEC_I2_carry_n_1;
  wire EMU_TEC_I2_carry_n_2;
  wire EMU_TEC_I2_carry_n_3;
  wire [6:0]EMU_TEC_I_reg;
  wire \EMU_TEC_I_reg[4]_0 ;
  wire \EMU_TEC_I_reg[5]_0 ;
  wire EMU_WR_ACK_FS2;
  wire EMU_WR_ACK_FS3;
  wire IC_REG_MSR_SNOOP_FS2_D1_reg;
  wire IC_SYNC_ECR_WEN;
  wire IC_SYNC_SR_ERRWRN_i_2_n_0;
  wire IC_SYNC_SR_ERRWRN_i_3_n_0;
  wire IC_SYNC_SR_ERRWRN_i_4_n_0;
  wire \ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ;
  wire [0:0]\ISO_CRC.CRC17_FD_CRCWORD_I1_reg[0]_0 ;
  wire [0:0]\ISO_CRC.CRC17_FD_CRCWORD_I1_reg[16]_0 ;
  wire [0:0]\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[0]_0 ;
  wire [5:0]\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[20]_0 ;
  wire \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[3]_0 ;
  wire \ISO_CRC.SBC[0]_i_1_n_0 ;
  wire \ISO_CRC.SBC[0]_i_2_n_0 ;
  wire \ISO_CRC.SBC[1]_i_1_n_0 ;
  wire \ISO_CRC.SBC[2]_i_1_n_0 ;
  wire \ISO_CRC.SBC_SEQ_CMB0 ;
  wire \ISO_CRC.SBC_SEQ_CMB01_out ;
  wire \ISO_CRC.SBC_SEQ_REG_reg[3]_0 ;
  wire \ISO_CRC.SBC_reg_n_0_[1] ;
  wire [1:0]PREV_COUNTER_I;
  wire [0:0]\PREV_COUNTER_I_reg[0]_0 ;
  wire [0:0]Q;
  wire \RXE_COUNTER_I_reg[1] ;
  wire \RXE_COUNTER_I_reg[1]_0 ;
  wire \RXE_COUNTER_I_reg[4] ;
  wire \RXE_SREG_I[0]_i_4_n_0 ;
  wire \RXE_SREG_I[0]_i_5_n_0 ;
  wire [0:3]SBC_SEQ;
  wire SM_FLAG_I;
  wire SM_FLAG_I_FSB;
  wire SM_FLAG_I_FSB_reg_0;
  wire SM_FLAG_I_reg_0;
  wire SM_FLAG_I_reg_1;
  wire \SM_REG_I_reg[1]_0 ;
  wire \SM_REG_I_reg[1]_1 ;
  wire \SM_REG_I_reg_n_0_[0] ;
  wire \SM_REG_I_reg_n_0_[2] ;
  wire \SM_REG_I_reg_n_0_[3] ;
  wire \SM_REG_I_reg_n_0_[4] ;
  wire \SM_REG_I_reg_n_0_[5] ;
  wire SM_STUFFBIT_PD;
  wire SYNC_RST_TL;
  wire TXE_TX_REN_I_CFD_D1_i_36_0;
  wire TXE_TX_REN_I_CFD_D1_i_36_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_37_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_49_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_50_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_56_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_57_n_0;
  wire TXE_TX_REN_I_CFD_D1_i_9;
  wire [3:0]TXE_TX_REN_I_CFD_D1_reg_i_19_0;
  wire TXE_TX_REN_I_CFD_D1_reg_i_48_n_0;
  wire can_clk;
  wire dest_arst;
  wire [7:7]in;
  wire [0:0]p_0_out;
  wire p_1_in;
  wire p_1_in0_in;
  wire \state[1]_i_5 ;
  wire \syncstages_ff_reg[0] ;
  wire [3:3]NLW_EMU_REC_I20_carry__0_CO_UNCONNECTED;
  wire [0:0]NLW_EMU_TEC_I2__0_carry_O_UNCONNECTED;
  wire [3:3]NLW_EMU_TEC_I2__0_carry__0_CO_UNCONNECTED;
  wire [3:3]NLW_EMU_TEC_I2_carry__0_CO_UNCONNECTED;

  LUT6 #(
    .INIT(64'h0F3300550F33FF55)) 
    BSP_CRCERR_I_CANFD_FLG_i_17
       (.I0(CRC21_CRCWORD[16]),
        .I1(CRC21_CRCWORD[14]),
        .I2(CRC21_CRCWORD[15]),
        .I3(TXE_TX_REN_I_CFD_D1_reg_i_19_0[0]),
        .I4(TXE_TX_REN_I_CFD_D1_reg_i_19_0[1]),
        .I5(CRC21_CRCWORD[17]),
        .O(BSP_CRCERR_I_CANFD_FLG_i_17_n_0));
  LUT5 #(
    .INIT(32'h3F503F5F)) 
    BSP_CRCERR_I_CANFD_FLG_i_18
       (.I0(CRC21_CRCWORD[18]),
        .I1(CRC21_CRCWORD[19]),
        .I2(TXE_TX_REN_I_CFD_D1_reg_i_19_0[1]),
        .I3(TXE_TX_REN_I_CFD_D1_reg_i_19_0[0]),
        .I4(CRC21_CRCWORD[20]),
        .O(BSP_CRCERR_I_CANFD_FLG_i_18_n_0));
  LUT6 #(
    .INIT(64'h33550F0033550FFF)) 
    BSP_CRCERR_I_CANFD_FLG_i_19
       (.I0(CRC21_CRCWORD[9]),
        .I1(CRC21_CRCWORD[7]),
        .I2(CRC21_CRCWORD[6]),
        .I3(TXE_TX_REN_I_CFD_D1_reg_i_19_0[1]),
        .I4(TXE_TX_REN_I_CFD_D1_reg_i_19_0[0]),
        .I5(CRC21_CRCWORD[8]),
        .O(BSP_CRCERR_I_CANFD_FLG_i_19_n_0));
  LUT6 #(
    .INIT(64'h0F3300550F33FF55)) 
    BSP_CRCERR_I_CANFD_FLG_i_20
       (.I0(CRC21_CRCWORD[12]),
        .I1(CRC21_CRCWORD[10]),
        .I2(CRC21_CRCWORD[11]),
        .I3(TXE_TX_REN_I_CFD_D1_reg_i_19_0[0]),
        .I4(TXE_TX_REN_I_CFD_D1_reg_i_19_0[1]),
        .I5(CRC21_CRCWORD[13]),
        .O(BSP_CRCERR_I_CANFD_FLG_i_20_n_0));
  LUT6 #(
    .INIT(64'h5500330F55FF330F)) 
    BSP_CRCERR_I_CANFD_FLG_i_7
       (.I0(SBC_SEQ[3]),
        .I1(SBC_SEQ[1]),
        .I2(SBC_SEQ[0]),
        .I3(TXE_TX_REN_I_CFD_D1_reg_i_19_0[0]),
        .I4(TXE_TX_REN_I_CFD_D1_reg_i_19_0[1]),
        .I5(SBC_SEQ[2]),
        .O(\ISO_CRC.SBC_SEQ_REG_reg[3]_0 ));
  MUXF7 BSP_CRCERR_I_CANFD_FLG_reg_i_11
       (.I0(BSP_CRCERR_I_CANFD_FLG_i_19_n_0),
        .I1(BSP_CRCERR_I_CANFD_FLG_i_20_n_0),
        .O(\RXE_COUNTER_I_reg[1]_0 ),
        .S(BSP_CRCERR_I_CANFD_FLG_i_4));
  MUXF7 BSP_CRCERR_I_CANFD_FLG_reg_i_9
       (.I0(BSP_CRCERR_I_CANFD_FLG_i_17_n_0),
        .I1(BSP_CRCERR_I_CANFD_FLG_i_18_n_0),
        .O(\RXE_COUNTER_I_reg[1] ),
        .S(BSP_CRCERR_I_CANFD_FLG_i_4));
  LUT5 #(
    .INIT(32'h0F35FF35)) 
    BSP_CRCERR_I_CAN_FLG_i_10
       (.I0(\CRC_CRCWORD_I1_reg[14]_0 [5]),
        .I1(CRC_CRCWORD[2]),
        .I2(TXE_TX_REN_I_CFD_D1_reg_i_19_0[1]),
        .I3(TXE_TX_REN_I_CFD_D1_reg_i_19_0[0]),
        .I4(CRC_CRCWORD[3]),
        .O(\CRC_CRCWORD_I1_reg[14]_1 ));
  LUT6 #(
    .INIT(64'h0F5500330F55FF33)) 
    BSP_CRCERR_I_CAN_FLG_i_8
       (.I0(CRC_CRCWORD[10]),
        .I1(CRC_CRCWORD[8]),
        .I2(CRC_CRCWORD[11]),
        .I3(TXE_TX_REN_I_CFD_D1_reg_i_19_0[0]),
        .I4(TXE_TX_REN_I_CFD_D1_reg_i_19_0[1]),
        .I5(CRC_CRCWORD[9]),
        .O(\CRC_CRCWORD_I1_reg[4]_0 ));
  LUT5 #(
    .INIT(32'hF530F53F)) 
    BSP_CRCERR_I_CAN_FLG_i_9
       (.I0(CRC_CRCWORD[5]),
        .I1(CRC_CRCWORD[6]),
        .I2(TXE_TX_REN_I_CFD_D1_reg_i_19_0[1]),
        .I3(TXE_TX_REN_I_CFD_D1_reg_i_19_0[0]),
        .I4(CRC_CRCWORD[4]),
        .O(\CRC_CRCWORD_I1_reg[9]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT2 #(
    .INIT(4'h6)) 
    BSP_IC_FRM_ERROR_I_i_4
       (.I0(p_1_in),
        .I1(\SM_REG_I_reg_n_0_[0] ),
        .O(\SM_REG_I_reg[1]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT2 #(
    .INIT(4'h2)) 
    BSP_IC_STUFF_ERROR_I_i_2
       (.I0(SM_FLAG_I),
        .I1(BSP_IC_STUFF_ERROR_I_i_3_n_0),
        .O(SM_FLAG_I_reg_0));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFE)) 
    BSP_IC_STUFF_ERROR_I_i_3
       (.I0(\SM_REG_I_reg_n_0_[2] ),
        .I1(\SM_REG_I_reg_n_0_[3] ),
        .I2(\SM_REG_I_reg_n_0_[4] ),
        .I3(\SM_REG_I_reg_n_0_[5] ),
        .I4(p_1_in),
        .I5(\SM_REG_I_reg_n_0_[0] ),
        .O(BSP_IC_STUFF_ERROR_I_i_3_n_0));
  LUT5 #(
    .INIT(32'hFFFFAA6A)) 
    \COUNTER_I[0]_i_1 
       (.I0(COUNTER_I[0]),
        .I1(\PREV_COUNTER_I_reg[0]_0 ),
        .I2(SM_FLAG_I_FSB),
        .I3(\COUNTER_I[1]_i_2_n_0 ),
        .I4(\COUNTER_I_reg[1]_1 ),
        .O(\COUNTER_I[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF9AAAAAAA)) 
    \COUNTER_I[1]_i_1 
       (.I0(COUNTER_I[1]),
        .I1(\COUNTER_I[1]_i_2_n_0 ),
        .I2(SM_FLAG_I_FSB),
        .I3(\PREV_COUNTER_I_reg[0]_0 ),
        .I4(COUNTER_I[0]),
        .I5(\COUNTER_I_reg[1]_1 ),
        .O(\COUNTER_I[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \COUNTER_I[1]_i_2 
       (.I0(\SM_REG_I_reg_n_0_[0] ),
        .I1(p_1_in),
        .I2(\COUNTER_I_reg[0]_0 ),
        .O(\COUNTER_I[1]_i_2_n_0 ));
  FDRE \COUNTER_I_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\COUNTER_I[0]_i_1_n_0 ),
        .Q(COUNTER_I[0]),
        .R(1'b0));
  FDRE \COUNTER_I_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\COUNTER_I[1]_i_1_n_0 ),
        .Q(COUNTER_I[1]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \CRC_CRCWORD_I1[10]_i_1 
       (.I0(CRC_CRCWORD[5]),
        .I1(\CRC_CRCWORD_I1_reg[14]_0 [5]),
        .I2(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[3]_0 ),
        .O(CRC_CRCWORD_I[10]));
  LUT3 #(
    .INIT(8'h07)) 
    \CRC_CRCWORD_I1[14]_i_2 
       (.I0(\CRC_CRCWORD_I1[14]_i_4_n_0 ),
        .I1(SM_FLAG_I),
        .I2(\CRC_CRCWORD_I1_reg[0]_0 ),
        .O(\CRC_CRCWORD_I1[14]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \CRC_CRCWORD_I1[14]_i_3 
       (.I0(\CRC_CRCWORD_I1_reg[14]_0 [4]),
        .I1(\CRC_CRCWORD_I1_reg[14]_0 [5]),
        .I2(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[3]_0 ),
        .O(CRC_CRCWORD_I[14]));
  LUT6 #(
    .INIT(64'h0000800000010000)) 
    \CRC_CRCWORD_I1[14]_i_4 
       (.I0(\SM_REG_I_reg_n_0_[4] ),
        .I1(\SM_REG_I_reg_n_0_[5] ),
        .I2(\SM_REG_I_reg_n_0_[2] ),
        .I3(\SM_REG_I_reg_n_0_[3] ),
        .I4(\SM_REG_I_reg_n_0_[0] ),
        .I5(p_1_in),
        .O(\CRC_CRCWORD_I1[14]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \CRC_CRCWORD_I1[3]_i_1 
       (.I0(\CRC_CRCWORD_I1_reg[14]_0 [2]),
        .I1(\CRC_CRCWORD_I1_reg[14]_0 [5]),
        .I2(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[3]_0 ),
        .O(CRC_CRCWORD_I[3]));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \CRC_CRCWORD_I1[4]_i_1 
       (.I0(CRC_CRCWORD[11]),
        .I1(\CRC_CRCWORD_I1_reg[14]_0 [5]),
        .I2(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[3]_0 ),
        .O(CRC_CRCWORD_I[4]));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \CRC_CRCWORD_I1[7]_i_1 
       (.I0(CRC_CRCWORD[8]),
        .I1(\CRC_CRCWORD_I1_reg[14]_0 [5]),
        .I2(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[3]_0 ),
        .O(CRC_CRCWORD_I[7]));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \CRC_CRCWORD_I1[8]_i_1 
       (.I0(\CRC_CRCWORD_I1_reg[14]_0 [3]),
        .I1(\CRC_CRCWORD_I1_reg[14]_0 [5]),
        .I2(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[3]_0 ),
        .O(CRC_CRCWORD_I[8]));
  FDRE \CRC_CRCWORD_I1_reg[0] 
       (.C(can_clk),
        .CE(\CRC_CRCWORD_I1[14]_i_2_n_0 ),
        .D(\CRC_CRCWORD_I1_reg[0]_1 ),
        .Q(\CRC_CRCWORD_I1_reg[14]_0 [0]),
        .R(CRC_CRCWORD_I1));
  FDRE \CRC_CRCWORD_I1_reg[10] 
       (.C(can_clk),
        .CE(\CRC_CRCWORD_I1[14]_i_2_n_0 ),
        .D(CRC_CRCWORD_I[10]),
        .Q(CRC_CRCWORD[4]),
        .R(CRC_CRCWORD_I1));
  FDRE \CRC_CRCWORD_I1_reg[11] 
       (.C(can_clk),
        .CE(\CRC_CRCWORD_I1[14]_i_2_n_0 ),
        .D(CRC_CRCWORD[4]),
        .Q(CRC_CRCWORD[3]),
        .R(CRC_CRCWORD_I1));
  FDRE \CRC_CRCWORD_I1_reg[12] 
       (.C(can_clk),
        .CE(\CRC_CRCWORD_I1[14]_i_2_n_0 ),
        .D(CRC_CRCWORD[3]),
        .Q(CRC_CRCWORD[2]),
        .R(CRC_CRCWORD_I1));
  FDRE \CRC_CRCWORD_I1_reg[13] 
       (.C(can_clk),
        .CE(\CRC_CRCWORD_I1[14]_i_2_n_0 ),
        .D(CRC_CRCWORD[2]),
        .Q(\CRC_CRCWORD_I1_reg[14]_0 [4]),
        .R(CRC_CRCWORD_I1));
  FDRE \CRC_CRCWORD_I1_reg[14] 
       (.C(can_clk),
        .CE(\CRC_CRCWORD_I1[14]_i_2_n_0 ),
        .D(CRC_CRCWORD_I[14]),
        .Q(\CRC_CRCWORD_I1_reg[14]_0 [5]),
        .R(CRC_CRCWORD_I1));
  FDRE \CRC_CRCWORD_I1_reg[1] 
       (.C(can_clk),
        .CE(\CRC_CRCWORD_I1[14]_i_2_n_0 ),
        .D(\CRC_CRCWORD_I1_reg[14]_0 [0]),
        .Q(\CRC_CRCWORD_I1_reg[14]_0 [1]),
        .R(CRC_CRCWORD_I1));
  FDRE \CRC_CRCWORD_I1_reg[2] 
       (.C(can_clk),
        .CE(\CRC_CRCWORD_I1[14]_i_2_n_0 ),
        .D(\CRC_CRCWORD_I1_reg[14]_0 [1]),
        .Q(\CRC_CRCWORD_I1_reg[14]_0 [2]),
        .R(CRC_CRCWORD_I1));
  FDRE \CRC_CRCWORD_I1_reg[3] 
       (.C(can_clk),
        .CE(\CRC_CRCWORD_I1[14]_i_2_n_0 ),
        .D(CRC_CRCWORD_I[3]),
        .Q(CRC_CRCWORD[11]),
        .R(CRC_CRCWORD_I1));
  FDRE \CRC_CRCWORD_I1_reg[4] 
       (.C(can_clk),
        .CE(\CRC_CRCWORD_I1[14]_i_2_n_0 ),
        .D(CRC_CRCWORD_I[4]),
        .Q(CRC_CRCWORD[10]),
        .R(CRC_CRCWORD_I1));
  FDRE \CRC_CRCWORD_I1_reg[5] 
       (.C(can_clk),
        .CE(\CRC_CRCWORD_I1[14]_i_2_n_0 ),
        .D(CRC_CRCWORD[10]),
        .Q(CRC_CRCWORD[9]),
        .R(CRC_CRCWORD_I1));
  FDRE \CRC_CRCWORD_I1_reg[6] 
       (.C(can_clk),
        .CE(\CRC_CRCWORD_I1[14]_i_2_n_0 ),
        .D(CRC_CRCWORD[9]),
        .Q(CRC_CRCWORD[8]),
        .R(CRC_CRCWORD_I1));
  FDRE \CRC_CRCWORD_I1_reg[7] 
       (.C(can_clk),
        .CE(\CRC_CRCWORD_I1[14]_i_2_n_0 ),
        .D(CRC_CRCWORD_I[7]),
        .Q(\CRC_CRCWORD_I1_reg[14]_0 [3]),
        .R(CRC_CRCWORD_I1));
  FDRE \CRC_CRCWORD_I1_reg[8] 
       (.C(can_clk),
        .CE(\CRC_CRCWORD_I1[14]_i_2_n_0 ),
        .D(CRC_CRCWORD_I[8]),
        .Q(CRC_CRCWORD[6]),
        .R(CRC_CRCWORD_I1));
  FDRE \CRC_CRCWORD_I1_reg[9] 
       (.C(can_clk),
        .CE(\CRC_CRCWORD_I1[14]_i_2_n_0 ),
        .D(CRC_CRCWORD[6]),
        .Q(CRC_CRCWORD[5]),
        .R(CRC_CRCWORD_I1));
  LUT5 #(
    .INIT(32'hA80000A8)) 
    EMU_CTR_FLG_I_i_1
       (.I0(dest_arst),
        .I1(EMU_CTR_FLG_I0),
        .I2(EMU_CTR_FLG_I),
        .I3(EMU_WR_ACK_FS3),
        .I4(EMU_WR_ACK_FS2),
        .O(EMU_CTR_FLG_I_i_1_n_0));
  FDRE EMU_CTR_FLG_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(EMU_CTR_FLG_I_i_1_n_0),
        .Q(EMU_CTR_FLG_I),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000FE00FFFFFFFF)) 
    \EMU_OL_ECR_I[0]_i_1 
       (.I0(\EMU_TEC_I_reg[4]_0 ),
        .I1(\EMU_REC_I_reg[7]_3 ),
        .I2(\EMU_OL_ECR_I_reg[0]_1 ),
        .I3(EMU_CTR_FLG_I0),
        .I4(EMU_CTR_FLG_I),
        .I5(dest_arst),
        .O(\EMU_OL_ECR_I[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \EMU_OL_ECR_I[15]_i_1 
       (.I0(in),
        .I1(EMU_TEC_I_reg[0]),
        .O(EMU_TEC_I2_0[0]));
  LUT6 #(
    .INIT(64'h5554555500000000)) 
    \EMU_OL_ECR_I[15]_i_2 
       (.I0(\EMU_OL_ECR_I_reg[12]_0 ),
        .I1(EMU_TEC_I_reg[6]),
        .I2(EMU_TEC_I_reg[5]),
        .I3(Q),
        .I4(IC_SYNC_SR_ERRWRN_i_4_n_0),
        .I5(\EMU_OL_ECR_I_reg[15]_0 ),
        .O(in));
  FDRE \EMU_OL_ECR_I_reg[0] 
       (.C(can_clk),
        .CE(\EMU_OL_ECR_I_reg[0]_3 ),
        .D(EMU_REC_I2[7]),
        .Q(\EMU_OL_ECR_I_reg[0]_0 [15]),
        .R(\EMU_OL_ECR_I[0]_i_1_n_0 ));
  FDRE \EMU_OL_ECR_I_reg[10] 
       (.C(can_clk),
        .CE(\EMU_OL_ECR_I_reg[0]_3 ),
        .D(EMU_TEC_I2_0[5]),
        .Q(\EMU_OL_ECR_I_reg[0]_0 [5]),
        .R(\EMU_OL_ECR_I[0]_i_1_n_0 ));
  FDRE \EMU_OL_ECR_I_reg[11] 
       (.C(can_clk),
        .CE(\EMU_OL_ECR_I_reg[0]_3 ),
        .D(EMU_TEC_I2_0[4]),
        .Q(\EMU_OL_ECR_I_reg[0]_0 [4]),
        .R(\EMU_OL_ECR_I[0]_i_1_n_0 ));
  FDRE \EMU_OL_ECR_I_reg[12] 
       (.C(can_clk),
        .CE(\EMU_OL_ECR_I_reg[0]_3 ),
        .D(EMU_TEC_I2_0[3]),
        .Q(\EMU_OL_ECR_I_reg[0]_0 [3]),
        .R(\EMU_OL_ECR_I[0]_i_1_n_0 ));
  FDRE \EMU_OL_ECR_I_reg[13] 
       (.C(can_clk),
        .CE(\EMU_OL_ECR_I_reg[0]_3 ),
        .D(EMU_TEC_I2_0[2]),
        .Q(\EMU_OL_ECR_I_reg[0]_0 [2]),
        .R(\EMU_OL_ECR_I[0]_i_1_n_0 ));
  FDRE \EMU_OL_ECR_I_reg[14] 
       (.C(can_clk),
        .CE(\EMU_OL_ECR_I_reg[0]_3 ),
        .D(EMU_TEC_I2_0[1]),
        .Q(\EMU_OL_ECR_I_reg[0]_0 [1]),
        .R(\EMU_OL_ECR_I[0]_i_1_n_0 ));
  FDRE \EMU_OL_ECR_I_reg[15] 
       (.C(can_clk),
        .CE(\EMU_OL_ECR_I_reg[0]_3 ),
        .D(EMU_TEC_I2_0[0]),
        .Q(\EMU_OL_ECR_I_reg[0]_0 [0]),
        .R(\EMU_OL_ECR_I[0]_i_1_n_0 ));
  FDRE \EMU_OL_ECR_I_reg[1] 
       (.C(can_clk),
        .CE(\EMU_OL_ECR_I_reg[0]_3 ),
        .D(EMU_REC_I2[6]),
        .Q(\EMU_OL_ECR_I_reg[0]_0 [14]),
        .R(\EMU_OL_ECR_I[0]_i_1_n_0 ));
  FDRE \EMU_OL_ECR_I_reg[2] 
       (.C(can_clk),
        .CE(\EMU_OL_ECR_I_reg[0]_3 ),
        .D(EMU_REC_I2[5]),
        .Q(\EMU_OL_ECR_I_reg[0]_0 [13]),
        .R(\EMU_OL_ECR_I[0]_i_1_n_0 ));
  FDRE \EMU_OL_ECR_I_reg[3] 
       (.C(can_clk),
        .CE(\EMU_OL_ECR_I_reg[0]_3 ),
        .D(EMU_REC_I2[4]),
        .Q(\EMU_OL_ECR_I_reg[0]_0 [12]),
        .R(\EMU_OL_ECR_I[0]_i_1_n_0 ));
  FDRE \EMU_OL_ECR_I_reg[4] 
       (.C(can_clk),
        .CE(\EMU_OL_ECR_I_reg[0]_3 ),
        .D(EMU_REC_I2[3]),
        .Q(\EMU_OL_ECR_I_reg[0]_0 [11]),
        .R(\EMU_OL_ECR_I[0]_i_1_n_0 ));
  FDRE \EMU_OL_ECR_I_reg[5] 
       (.C(can_clk),
        .CE(\EMU_OL_ECR_I_reg[0]_3 ),
        .D(EMU_REC_I2[2]),
        .Q(\EMU_OL_ECR_I_reg[0]_0 [10]),
        .R(\EMU_OL_ECR_I[0]_i_1_n_0 ));
  FDRE \EMU_OL_ECR_I_reg[6] 
       (.C(can_clk),
        .CE(\EMU_OL_ECR_I_reg[0]_3 ),
        .D(EMU_REC_I2[1]),
        .Q(\EMU_OL_ECR_I_reg[0]_0 [9]),
        .R(\EMU_OL_ECR_I[0]_i_1_n_0 ));
  FDRE \EMU_OL_ECR_I_reg[7] 
       (.C(can_clk),
        .CE(\EMU_OL_ECR_I_reg[0]_3 ),
        .D(EMU_REC_I2[0]),
        .Q(\EMU_OL_ECR_I_reg[0]_0 [8]),
        .R(\EMU_OL_ECR_I[0]_i_1_n_0 ));
  FDRE \EMU_OL_ECR_I_reg[8] 
       (.C(can_clk),
        .CE(\EMU_OL_ECR_I_reg[0]_3 ),
        .D(EMU_TEC_I2_0[7]),
        .Q(\EMU_OL_ECR_I_reg[0]_0 [7]),
        .R(\EMU_OL_ECR_I[0]_i_1_n_0 ));
  FDRE \EMU_OL_ECR_I_reg[9] 
       (.C(can_clk),
        .CE(\EMU_OL_ECR_I_reg[0]_3 ),
        .D(EMU_TEC_I2_0[6]),
        .Q(\EMU_OL_ECR_I_reg[0]_0 [6]),
        .R(\EMU_OL_ECR_I[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hD2)) 
    EMU_OL_ECR_WEN_I_i_1
       (.I0(EMU_CTR_FLG_I0),
        .I1(EMU_CTR_FLG_I),
        .I2(IC_SYNC_ECR_WEN),
        .O(EMU_OL_ECR_WEN_I_i_1_n_0));
  FDRE EMU_OL_ECR_WEN_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(EMU_OL_ECR_WEN_I_i_1_n_0),
        .Q(IC_SYNC_ECR_WEN),
        .R(SYNC_RST_TL));
  CARRY4 EMU_REC_I20_carry
       (.CI(1'b0),
        .CO({EMU_REC_I20_carry_n_0,EMU_REC_I20_carry_n_1,EMU_REC_I20_carry_n_2,EMU_REC_I20_carry_n_3}),
        .CYINIT(1'b0),
        .DI({\EMU_REC_I_reg_n_0_[3] ,\EMU_REC_I_reg_n_0_[2] ,\EMU_REC_I_reg_n_0_[1] ,\EMU_REC_I_reg_n_0_[0] }),
        .O(EMU_REC_I20[3:0]),
        .S({EMU_REC_I20_carry_i_1_n_0,EMU_REC_I20_carry_i_2_n_0,EMU_REC_I20_carry_i_3_n_0,EMU_REC_I20_carry_i_4_n_0}));
  CARRY4 EMU_REC_I20_carry__0
       (.CI(EMU_REC_I20_carry_n_0),
        .CO({NLW_EMU_REC_I20_carry__0_CO_UNCONNECTED[3],EMU_REC_I20_carry__0_n_1,EMU_REC_I20_carry__0_n_2,EMU_REC_I20_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,\EMU_REC_I_reg_n_0_[6] ,\EMU_REC_I_reg_n_0_[5] ,\EMU_REC_I_reg_n_0_[4] }),
        .O(EMU_REC_I20[7:4]),
        .S({EMU_REC_I20_carry__0_i_1_n_0,EMU_REC_I20_carry__0_i_2_n_0,EMU_REC_I20_carry__0_i_3_n_0,EMU_REC_I20_carry__0_i_4_n_0}));
  LUT3 #(
    .INIT(8'h78)) 
    EMU_REC_I20_carry__0_i_1
       (.I0(EMU_REC_I20_carry_0),
        .I1(EMU_REC_I20_carry_i_5_n_0),
        .I2(\EMU_REC_I_reg[7]_0 ),
        .O(EMU_REC_I20_carry__0_i_1_n_0));
  LUT3 #(
    .INIT(8'h78)) 
    EMU_REC_I20_carry__0_i_2
       (.I0(EMU_REC_I20_carry_0),
        .I1(EMU_REC_I20_carry_i_5_n_0),
        .I2(\EMU_REC_I_reg_n_0_[6] ),
        .O(EMU_REC_I20_carry__0_i_2_n_0));
  LUT3 #(
    .INIT(8'h78)) 
    EMU_REC_I20_carry__0_i_3
       (.I0(EMU_REC_I20_carry_0),
        .I1(EMU_REC_I20_carry_i_5_n_0),
        .I2(\EMU_REC_I_reg_n_0_[5] ),
        .O(EMU_REC_I20_carry__0_i_3_n_0));
  LUT3 #(
    .INIT(8'h78)) 
    EMU_REC_I20_carry__0_i_4
       (.I0(EMU_REC_I20_carry_0),
        .I1(EMU_REC_I20_carry_i_5_n_0),
        .I2(\EMU_REC_I_reg_n_0_[4] ),
        .O(EMU_REC_I20_carry__0_i_4_n_0));
  LUT6 #(
    .INIT(64'h5455FFFFABAA0000)) 
    EMU_REC_I20_carry_i_1
       (.I0(EMU_REC_I20_carry_i_5_n_0),
        .I1(EMU_REC_I20_carry_1),
        .I2(\EMU_REC_I_reg[7]_0 ),
        .I3(EMU_REC_I20_carry_2),
        .I4(EMU_REC_I20_carry_0),
        .I5(\EMU_REC_I_reg_n_0_[3] ),
        .O(EMU_REC_I20_carry_i_1_n_0));
  LUT3 #(
    .INIT(8'h78)) 
    EMU_REC_I20_carry_i_2
       (.I0(EMU_REC_I20_carry_0),
        .I1(EMU_REC_I20_carry_i_5_n_0),
        .I2(\EMU_REC_I_reg_n_0_[2] ),
        .O(EMU_REC_I20_carry_i_2_n_0));
  LUT3 #(
    .INIT(8'h78)) 
    EMU_REC_I20_carry_i_3
       (.I0(EMU_REC_I20_carry_0),
        .I1(EMU_REC_I20_carry_i_5_n_0),
        .I2(\EMU_REC_I_reg_n_0_[1] ),
        .O(EMU_REC_I20_carry_i_3_n_0));
  LUT3 #(
    .INIT(8'h2D)) 
    EMU_REC_I20_carry_i_4
       (.I0(EMU_REC_I20_carry_0),
        .I1(EMU_REC_I20_carry_i_5_n_0),
        .I2(\EMU_REC_I_reg_n_0_[0] ),
        .O(EMU_REC_I20_carry_i_4_n_0));
  LUT5 #(
    .INIT(32'hAAA8AAAA)) 
    EMU_REC_I20_carry_i_5
       (.I0(\EMU_OL_ECR_I_reg[0]_2 ),
        .I1(\EMU_REC_I_reg[7]_0 ),
        .I2(\EMU_REC_I_reg_n_0_[5] ),
        .I3(\EMU_REC_I_reg_n_0_[6] ),
        .I4(IC_SYNC_SR_ERRWRN_i_2_n_0),
        .O(EMU_REC_I20_carry_i_5_n_0));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \EMU_REC_I[0]_i_1 
       (.I0(\EMU_REC_I_reg[7]_0 ),
        .I1(\EMU_OL_ECR_I_reg[0]_2 ),
        .I2(EMU_REC_I20[0]),
        .O(EMU_REC_I2[0]));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \EMU_REC_I[1]_i_1 
       (.I0(\EMU_REC_I_reg[7]_0 ),
        .I1(\EMU_OL_ECR_I_reg[0]_2 ),
        .I2(EMU_REC_I20[1]),
        .O(EMU_REC_I2[1]));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \EMU_REC_I[2]_i_1 
       (.I0(\EMU_REC_I_reg[7]_0 ),
        .I1(\EMU_OL_ECR_I_reg[0]_2 ),
        .I2(EMU_REC_I20[2]),
        .O(EMU_REC_I2[2]));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \EMU_REC_I[3]_i_1 
       (.I0(\EMU_REC_I_reg[7]_0 ),
        .I1(\EMU_OL_ECR_I_reg[0]_2 ),
        .I2(EMU_REC_I20[3]),
        .O(EMU_REC_I2[3]));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \EMU_REC_I[4]_i_1 
       (.I0(\EMU_REC_I_reg[7]_0 ),
        .I1(\EMU_OL_ECR_I_reg[0]_2 ),
        .I2(EMU_REC_I20[4]),
        .O(EMU_REC_I2[4]));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \EMU_REC_I[5]_i_1 
       (.I0(\EMU_REC_I_reg[7]_0 ),
        .I1(\EMU_OL_ECR_I_reg[0]_2 ),
        .I2(EMU_REC_I20[5]),
        .O(EMU_REC_I2[5]));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \EMU_REC_I[6]_i_1 
       (.I0(\EMU_REC_I_reg[7]_0 ),
        .I1(\EMU_OL_ECR_I_reg[0]_2 ),
        .I2(EMU_REC_I20[6]),
        .O(EMU_REC_I2[6]));
  LUT5 #(
    .INIT(32'hFE00FFFF)) 
    \EMU_REC_I[7]_i_1 
       (.I0(\EMU_TEC_I_reg[4]_0 ),
        .I1(\EMU_REC_I_reg[7]_3 ),
        .I2(\EMU_OL_ECR_I_reg[0]_1 ),
        .I3(E),
        .I4(dest_arst),
        .O(\EMU_REC_I[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \EMU_REC_I[7]_i_2 
       (.I0(\EMU_REC_I_reg[7]_0 ),
        .I1(\EMU_OL_ECR_I_reg[0]_2 ),
        .I2(EMU_REC_I20[7]),
        .O(EMU_REC_I2[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \EMU_REC_I[7]_i_3 
       (.I0(\EMU_OL_ECR_I_reg[12]_0 ),
        .I1(EMU_TEC_I_reg[4]),
        .I2(EMU_TEC_I_reg[3]),
        .I3(Q),
        .I4(EMU_TEC_I_reg[6]),
        .I5(EMU_TEC_I_reg[5]),
        .O(\EMU_TEC_I_reg[4]_0 ));
  LUT5 #(
    .INIT(32'h00004000)) 
    \EMU_REC_I[7]_i_6 
       (.I0(\EMU_REC_I_reg[7]_0 ),
        .I1(\EMU_REC_I_reg_n_0_[1] ),
        .I2(\EMU_REC_I_reg_n_0_[2] ),
        .I3(\EMU_REC_I_reg_n_0_[0] ),
        .I4(\EMU_REC_I[7]_i_9_n_0 ),
        .O(\EMU_REC_I_reg[7]_2 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \EMU_REC_I[7]_i_9 
       (.I0(\EMU_REC_I_reg_n_0_[5] ),
        .I1(\EMU_REC_I_reg_n_0_[6] ),
        .I2(\EMU_REC_I_reg_n_0_[4] ),
        .I3(\EMU_REC_I_reg_n_0_[3] ),
        .O(\EMU_REC_I[7]_i_9_n_0 ));
  FDRE \EMU_REC_I_reg[0] 
       (.C(can_clk),
        .CE(E),
        .D(EMU_REC_I2[0]),
        .Q(\EMU_REC_I_reg_n_0_[0] ),
        .R(\EMU_REC_I[7]_i_1_n_0 ));
  FDRE \EMU_REC_I_reg[1] 
       (.C(can_clk),
        .CE(E),
        .D(EMU_REC_I2[1]),
        .Q(\EMU_REC_I_reg_n_0_[1] ),
        .R(\EMU_REC_I[7]_i_1_n_0 ));
  FDRE \EMU_REC_I_reg[2] 
       (.C(can_clk),
        .CE(E),
        .D(EMU_REC_I2[2]),
        .Q(\EMU_REC_I_reg_n_0_[2] ),
        .R(\EMU_REC_I[7]_i_1_n_0 ));
  FDRE \EMU_REC_I_reg[3] 
       (.C(can_clk),
        .CE(E),
        .D(EMU_REC_I2[3]),
        .Q(\EMU_REC_I_reg_n_0_[3] ),
        .R(\EMU_REC_I[7]_i_1_n_0 ));
  FDRE \EMU_REC_I_reg[4] 
       (.C(can_clk),
        .CE(E),
        .D(EMU_REC_I2[4]),
        .Q(\EMU_REC_I_reg_n_0_[4] ),
        .R(\EMU_REC_I[7]_i_1_n_0 ));
  FDRE \EMU_REC_I_reg[5] 
       (.C(can_clk),
        .CE(E),
        .D(EMU_REC_I2[5]),
        .Q(\EMU_REC_I_reg_n_0_[5] ),
        .R(\EMU_REC_I[7]_i_1_n_0 ));
  FDRE \EMU_REC_I_reg[6] 
       (.C(can_clk),
        .CE(E),
        .D(EMU_REC_I2[6]),
        .Q(\EMU_REC_I_reg_n_0_[6] ),
        .R(\EMU_REC_I[7]_i_1_n_0 ));
  FDRE \EMU_REC_I_reg[7] 
       (.C(can_clk),
        .CE(E),
        .D(EMU_REC_I2[7]),
        .Q(\EMU_REC_I_reg[7]_0 ),
        .R(\EMU_REC_I[7]_i_1_n_0 ));
  CARRY4 EMU_TEC_I2__0_carry
       (.CI(1'b0),
        .CO({EMU_TEC_I2__0_carry_n_0,EMU_TEC_I2__0_carry_n_1,EMU_TEC_I2__0_carry_n_2,EMU_TEC_I2__0_carry_n_3}),
        .CYINIT(1'b0),
        .DI(EMU_TEC_I_reg[3:0]),
        .O({EMU_TEC_I2_0[3:1],NLW_EMU_TEC_I2__0_carry_O_UNCONNECTED[0]}),
        .S({EMU_TEC_I2__0_carry_i_1_n_0,EMU_TEC_I2__0_carry_i_2_n_0,EMU_TEC_I2__0_carry_i_3_n_0,EMU_TEC_I2__0_carry_i_4_n_0}));
  CARRY4 EMU_TEC_I2__0_carry__0
       (.CI(EMU_TEC_I2__0_carry_n_0),
        .CO({NLW_EMU_TEC_I2__0_carry__0_CO_UNCONNECTED[3],EMU_TEC_I2__0_carry__0_n_1,EMU_TEC_I2__0_carry__0_n_2,EMU_TEC_I2__0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,EMU_TEC_I_reg[6:4]}),
        .O(EMU_TEC_I2_0[7:4]),
        .S({EMU_TEC_I2__0_carry__0_i_1_n_0,EMU_TEC_I2__0_carry__0_i_2_n_0,EMU_TEC_I2__0_carry__0_i_3_n_0,EMU_TEC_I2__0_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    EMU_TEC_I2__0_carry__0_i_1
       (.I0(in),
        .I1(Q),
        .O(EMU_TEC_I2__0_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    EMU_TEC_I2__0_carry__0_i_2
       (.I0(in),
        .I1(EMU_TEC_I_reg[6]),
        .O(EMU_TEC_I2__0_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    EMU_TEC_I2__0_carry__0_i_3
       (.I0(in),
        .I1(EMU_TEC_I_reg[5]),
        .O(EMU_TEC_I2__0_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    EMU_TEC_I2__0_carry__0_i_4
       (.I0(in),
        .I1(EMU_TEC_I_reg[4]),
        .O(EMU_TEC_I2__0_carry__0_i_4_n_0));
  LUT3 #(
    .INIT(8'h2D)) 
    EMU_TEC_I2__0_carry_i_1
       (.I0(EMU_TEC_I2_carry_i_5_n_0),
        .I1(\EMU_OL_ECR_I_reg[12]_0 ),
        .I2(EMU_TEC_I_reg[3]),
        .O(EMU_TEC_I2__0_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    EMU_TEC_I2__0_carry_i_2
       (.I0(in),
        .I1(EMU_TEC_I_reg[2]),
        .O(EMU_TEC_I2__0_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    EMU_TEC_I2__0_carry_i_3
       (.I0(in),
        .I1(EMU_TEC_I_reg[1]),
        .O(EMU_TEC_I2__0_carry_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    EMU_TEC_I2__0_carry_i_4
       (.I0(in),
        .I1(EMU_TEC_I_reg[0]),
        .O(EMU_TEC_I2__0_carry_i_4_n_0));
  CARRY4 EMU_TEC_I2_carry
       (.CI(1'b0),
        .CO({EMU_TEC_I2_carry_n_0,EMU_TEC_I2_carry_n_1,EMU_TEC_I2_carry_n_2,EMU_TEC_I2_carry_n_3}),
        .CYINIT(1'b0),
        .DI(EMU_TEC_I_reg[3:0]),
        .O(EMU_TEC_I2[3:0]),
        .S({EMU_TEC_I2_carry_i_1_n_0,EMU_TEC_I2_carry_i_2_n_0,EMU_TEC_I2_carry_i_3_n_0,EMU_TEC_I2_carry_i_4_n_0}));
  CARRY4 EMU_TEC_I2_carry__0
       (.CI(EMU_TEC_I2_carry_n_0),
        .CO({NLW_EMU_TEC_I2_carry__0_CO_UNCONNECTED[3],EMU_TEC_I2_carry__0_n_1,EMU_TEC_I2_carry__0_n_2,EMU_TEC_I2_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,EMU_TEC_I_reg[6:4]}),
        .O(EMU_TEC_I2[7:4]),
        .S({EMU_TEC_I2_carry__0_i_1_n_0,EMU_TEC_I2_carry__0_i_2_n_0,EMU_TEC_I2_carry__0_i_3_n_0,EMU_TEC_I2_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    EMU_TEC_I2_carry__0_i_1
       (.I0(in),
        .I1(Q),
        .O(EMU_TEC_I2_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    EMU_TEC_I2_carry__0_i_2
       (.I0(in),
        .I1(EMU_TEC_I_reg[6]),
        .O(EMU_TEC_I2_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    EMU_TEC_I2_carry__0_i_3
       (.I0(in),
        .I1(EMU_TEC_I_reg[5]),
        .O(EMU_TEC_I2_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    EMU_TEC_I2_carry__0_i_4
       (.I0(in),
        .I1(EMU_TEC_I_reg[4]),
        .O(EMU_TEC_I2_carry__0_i_4_n_0));
  LUT3 #(
    .INIT(8'h2D)) 
    EMU_TEC_I2_carry_i_1
       (.I0(EMU_TEC_I2_carry_i_5_n_0),
        .I1(\EMU_OL_ECR_I_reg[12]_0 ),
        .I2(EMU_TEC_I_reg[3]),
        .O(EMU_TEC_I2_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    EMU_TEC_I2_carry_i_2
       (.I0(in),
        .I1(EMU_TEC_I_reg[2]),
        .O(EMU_TEC_I2_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    EMU_TEC_I2_carry_i_3
       (.I0(in),
        .I1(EMU_TEC_I_reg[1]),
        .O(EMU_TEC_I2_carry_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    EMU_TEC_I2_carry_i_4
       (.I0(in),
        .I1(EMU_TEC_I_reg[0]),
        .O(EMU_TEC_I2_carry_i_4_n_0));
  LUT5 #(
    .INIT(32'h5555555D)) 
    EMU_TEC_I2_carry_i_5
       (.I0(\EMU_OL_ECR_I_reg[15]_0 ),
        .I1(IC_SYNC_SR_ERRWRN_i_4_n_0),
        .I2(Q),
        .I3(EMU_TEC_I_reg[5]),
        .I4(EMU_TEC_I_reg[6]),
        .O(EMU_TEC_I2_carry_i_5_n_0));
  FDRE \EMU_TEC_I_reg[0] 
       (.C(can_clk),
        .CE(E),
        .D(EMU_TEC_I2[0]),
        .Q(EMU_TEC_I_reg[0]),
        .R(\EMU_REC_I[7]_i_1_n_0 ));
  FDRE \EMU_TEC_I_reg[1] 
       (.C(can_clk),
        .CE(E),
        .D(EMU_TEC_I2[1]),
        .Q(EMU_TEC_I_reg[1]),
        .R(\EMU_REC_I[7]_i_1_n_0 ));
  FDRE \EMU_TEC_I_reg[2] 
       (.C(can_clk),
        .CE(E),
        .D(EMU_TEC_I2[2]),
        .Q(EMU_TEC_I_reg[2]),
        .R(\EMU_REC_I[7]_i_1_n_0 ));
  FDRE \EMU_TEC_I_reg[3] 
       (.C(can_clk),
        .CE(E),
        .D(EMU_TEC_I2[3]),
        .Q(EMU_TEC_I_reg[3]),
        .R(\EMU_REC_I[7]_i_1_n_0 ));
  FDRE \EMU_TEC_I_reg[4] 
       (.C(can_clk),
        .CE(E),
        .D(EMU_TEC_I2[4]),
        .Q(EMU_TEC_I_reg[4]),
        .R(\EMU_REC_I[7]_i_1_n_0 ));
  FDRE \EMU_TEC_I_reg[5] 
       (.C(can_clk),
        .CE(E),
        .D(EMU_TEC_I2[5]),
        .Q(EMU_TEC_I_reg[5]),
        .R(\EMU_REC_I[7]_i_1_n_0 ));
  FDRE \EMU_TEC_I_reg[6] 
       (.C(can_clk),
        .CE(E),
        .D(EMU_TEC_I2[6]),
        .Q(EMU_TEC_I_reg[6]),
        .R(\EMU_REC_I[7]_i_1_n_0 ));
  FDRE \EMU_TEC_I_reg[7] 
       (.C(can_clk),
        .CE(E),
        .D(EMU_TEC_I2[7]),
        .Q(Q),
        .R(\EMU_REC_I[7]_i_1_n_0 ));
  FDRE EMU_WR_ACK_FS3_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(EMU_WR_ACK_FS2),
        .Q(EMU_WR_ACK_FS3),
        .R(SYNC_RST_TL));
  LUT6 #(
    .INIT(64'hFFFFFFFF4040FF40)) 
    IC_SYNC_SR_ERRWRN_i_1
       (.I0(IC_SYNC_SR_ERRWRN_i_2_n_0),
        .I1(\EMU_REC_I_reg_n_0_[6] ),
        .I2(\EMU_REC_I_reg_n_0_[5] ),
        .I3(IC_SYNC_SR_ERRWRN_i_3_n_0),
        .I4(IC_SYNC_SR_ERRWRN_i_4_n_0),
        .I5(EMU_STAT1),
        .O(EMU_ERRWRN));
  LUT5 #(
    .INIT(32'h00000001)) 
    IC_SYNC_SR_ERRWRN_i_2
       (.I0(\EMU_REC_I_reg_n_0_[1] ),
        .I1(\EMU_REC_I_reg_n_0_[3] ),
        .I2(\EMU_REC_I_reg_n_0_[0] ),
        .I3(\EMU_REC_I_reg_n_0_[4] ),
        .I4(\EMU_REC_I_reg_n_0_[2] ),
        .O(IC_SYNC_SR_ERRWRN_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT2 #(
    .INIT(4'h8)) 
    IC_SYNC_SR_ERRWRN_i_3
       (.I0(EMU_TEC_I_reg[6]),
        .I1(EMU_TEC_I_reg[5]),
        .O(IC_SYNC_SR_ERRWRN_i_3_n_0));
  LUT5 #(
    .INIT(32'h00000001)) 
    IC_SYNC_SR_ERRWRN_i_4
       (.I0(EMU_TEC_I_reg[0]),
        .I1(EMU_TEC_I_reg[2]),
        .I2(EMU_TEC_I_reg[4]),
        .I3(EMU_TEC_I_reg[3]),
        .I4(EMU_TEC_I_reg[1]),
        .O(IC_SYNC_SR_ERRWRN_i_4_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    \IC_SYNC_SR_ESTAT[1]_i_1 
       (.I0(\EMU_REC_I_reg[7]_0 ),
        .I1(Q),
        .O(EMU_STAT1));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \ISO_CRC.CRC17_FD_CRCWORD_I1[11]_i_1 
       (.I0(CRC17_CRCWORD[6]),
        .I1(\ISO_CRC.CRC17_FD_CRCWORD_I1_reg[16]_0 ),
        .I2(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[3]_0 ),
        .O(CRC17_FD_CRCWORD_I[11]));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \ISO_CRC.CRC17_FD_CRCWORD_I1[13]_i_1 
       (.I0(CRC17_CRCWORD[4]),
        .I1(\ISO_CRC.CRC17_FD_CRCWORD_I1_reg[16]_0 ),
        .I2(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[3]_0 ),
        .O(CRC17_FD_CRCWORD_I[13]));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \ISO_CRC.CRC17_FD_CRCWORD_I1[14]_i_1 
       (.I0(CRC17_CRCWORD[3]),
        .I1(\ISO_CRC.CRC17_FD_CRCWORD_I1_reg[16]_0 ),
        .I2(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[3]_0 ),
        .O(CRC17_FD_CRCWORD_I[14]));
  LUT4 #(
    .INIT(16'h00EB)) 
    \ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1 
       (.I0(\COUNTER_I_reg[0]_0 ),
        .I1(p_1_in),
        .I2(\SM_REG_I_reg_n_0_[0] ),
        .I3(\CRC_CRCWORD_I1_reg[0]_0 ),
        .O(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_2 
       (.I0(CRC17_CRCWORD[1]),
        .I1(\ISO_CRC.CRC17_FD_CRCWORD_I1_reg[16]_0 ),
        .I2(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[3]_0 ),
        .O(CRC17_FD_CRCWORD_I[16]));
  LUT5 #(
    .INIT(32'hEFFFFFFF)) 
    \ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_3 
       (.I0(COUNTER_I[0]),
        .I1(COUNTER_I[1]),
        .I2(SM_FLAG_I_FSB),
        .I3(PREV_COUNTER_I[1]),
        .I4(PREV_COUNTER_I[0]),
        .O(\COUNTER_I_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \ISO_CRC.CRC17_FD_CRCWORD_I1[1]_i_1 
       (.I0(CRC17_CRCWORD[16]),
        .I1(\ISO_CRC.CRC17_FD_CRCWORD_I1_reg[16]_0 ),
        .I2(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[3]_0 ),
        .O(CRC17_FD_CRCWORD_I[1]));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \ISO_CRC.CRC17_FD_CRCWORD_I1[3]_i_1 
       (.I0(CRC17_CRCWORD[14]),
        .I1(\ISO_CRC.CRC17_FD_CRCWORD_I1_reg[16]_0 ),
        .I2(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[3]_0 ),
        .O(CRC17_FD_CRCWORD_I[3]));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \ISO_CRC.CRC17_FD_CRCWORD_I1[4]_i_1 
       (.I0(CRC17_CRCWORD[13]),
        .I1(\ISO_CRC.CRC17_FD_CRCWORD_I1_reg[16]_0 ),
        .I2(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[3]_0 ),
        .O(CRC17_FD_CRCWORD_I[4]));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \ISO_CRC.CRC17_FD_CRCWORD_I1[6]_i_1 
       (.I0(CRC17_CRCWORD[11]),
        .I1(\ISO_CRC.CRC17_FD_CRCWORD_I1_reg[16]_0 ),
        .I2(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[3]_0 ),
        .O(CRC17_FD_CRCWORD_I[6]));
  FDSE \ISO_CRC.CRC17_FD_CRCWORD_I1_reg[0] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(\ISO_CRC.CRC17_FD_CRCWORD_I1_reg[0]_0 ),
        .Q(CRC17_CRCWORD[16]),
        .S(CRC_CRCWORD_I1));
  FDRE \ISO_CRC.CRC17_FD_CRCWORD_I1_reg[10] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC17_CRCWORD[7]),
        .Q(CRC17_CRCWORD[6]),
        .R(CRC_CRCWORD_I1));
  FDSE \ISO_CRC.CRC17_FD_CRCWORD_I1_reg[11] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC17_FD_CRCWORD_I[11]),
        .Q(CRC17_CRCWORD[5]),
        .S(CRC_CRCWORD_I1));
  FDRE \ISO_CRC.CRC17_FD_CRCWORD_I1_reg[12] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC17_CRCWORD[5]),
        .Q(CRC17_CRCWORD[4]),
        .R(CRC_CRCWORD_I1));
  FDSE \ISO_CRC.CRC17_FD_CRCWORD_I1_reg[13] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC17_FD_CRCWORD_I[13]),
        .Q(CRC17_CRCWORD[3]),
        .S(CRC_CRCWORD_I1));
  FDSE \ISO_CRC.CRC17_FD_CRCWORD_I1_reg[14] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC17_FD_CRCWORD_I[14]),
        .Q(CRC17_CRCWORD[2]),
        .S(CRC_CRCWORD_I1));
  FDRE \ISO_CRC.CRC17_FD_CRCWORD_I1_reg[15] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC17_CRCWORD[2]),
        .Q(CRC17_CRCWORD[1]),
        .R(CRC_CRCWORD_I1));
  FDSE \ISO_CRC.CRC17_FD_CRCWORD_I1_reg[16] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC17_FD_CRCWORD_I[16]),
        .Q(\ISO_CRC.CRC17_FD_CRCWORD_I1_reg[16]_0 ),
        .S(CRC_CRCWORD_I1));
  FDSE \ISO_CRC.CRC17_FD_CRCWORD_I1_reg[1] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC17_FD_CRCWORD_I[1]),
        .Q(CRC17_CRCWORD[15]),
        .S(CRC_CRCWORD_I1));
  FDRE \ISO_CRC.CRC17_FD_CRCWORD_I1_reg[2] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC17_CRCWORD[15]),
        .Q(CRC17_CRCWORD[14]),
        .R(CRC_CRCWORD_I1));
  FDSE \ISO_CRC.CRC17_FD_CRCWORD_I1_reg[3] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC17_FD_CRCWORD_I[3]),
        .Q(CRC17_CRCWORD[13]),
        .S(CRC_CRCWORD_I1));
  FDSE \ISO_CRC.CRC17_FD_CRCWORD_I1_reg[4] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC17_FD_CRCWORD_I[4]),
        .Q(CRC17_CRCWORD[12]),
        .S(CRC_CRCWORD_I1));
  FDRE \ISO_CRC.CRC17_FD_CRCWORD_I1_reg[5] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC17_CRCWORD[12]),
        .Q(CRC17_CRCWORD[11]),
        .R(CRC_CRCWORD_I1));
  FDSE \ISO_CRC.CRC17_FD_CRCWORD_I1_reg[6] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC17_FD_CRCWORD_I[6]),
        .Q(CRC17_CRCWORD[10]),
        .S(CRC_CRCWORD_I1));
  FDRE \ISO_CRC.CRC17_FD_CRCWORD_I1_reg[7] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC17_CRCWORD[10]),
        .Q(CRC17_CRCWORD[9]),
        .R(CRC_CRCWORD_I1));
  FDRE \ISO_CRC.CRC17_FD_CRCWORD_I1_reg[8] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC17_CRCWORD[9]),
        .Q(CRC17_CRCWORD[8]),
        .R(CRC_CRCWORD_I1));
  FDRE \ISO_CRC.CRC17_FD_CRCWORD_I1_reg[9] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC17_CRCWORD[8]),
        .Q(CRC17_CRCWORD[7]),
        .R(CRC_CRCWORD_I1));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \ISO_CRC.CRC21_FD_CRCWORD_I1[11]_i_1 
       (.I0(CRC21_CRCWORD[10]),
        .I1(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[20]_0 [5]),
        .I2(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[3]_0 ),
        .O(CRC21_FD_CRCWORD_I[11]));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \ISO_CRC.CRC21_FD_CRCWORD_I1[13]_i_1 
       (.I0(CRC21_CRCWORD[8]),
        .I1(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[20]_0 [5]),
        .I2(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[3]_0 ),
        .O(CRC21_FD_CRCWORD_I[13]));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \ISO_CRC.CRC21_FD_CRCWORD_I1[20]_i_1 
       (.I0(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[20]_0 [4]),
        .I1(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[20]_0 [5]),
        .I2(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[3]_0 ),
        .O(CRC21_FD_CRCWORD_I[20]));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \ISO_CRC.CRC21_FD_CRCWORD_I1[3]_i_1 
       (.I0(CRC21_CRCWORD[18]),
        .I1(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[20]_0 [5]),
        .I2(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[3]_0 ),
        .O(CRC21_FD_CRCWORD_I[3]));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \ISO_CRC.CRC21_FD_CRCWORD_I1[4]_i_1 
       (.I0(CRC21_CRCWORD[17]),
        .I1(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[20]_0 [5]),
        .I2(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[3]_0 ),
        .O(CRC21_FD_CRCWORD_I[4]));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \ISO_CRC.CRC21_FD_CRCWORD_I1[7]_i_1 
       (.I0(CRC21_CRCWORD[14]),
        .I1(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[20]_0 [5]),
        .I2(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[3]_0 ),
        .O(CRC21_FD_CRCWORD_I[7]));
  FDSE \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[0] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[0]_0 ),
        .Q(CRC21_CRCWORD[20]),
        .S(CRC_CRCWORD_I1));
  FDRE \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[10] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC21_CRCWORD[11]),
        .Q(CRC21_CRCWORD[10]),
        .R(CRC_CRCWORD_I1));
  FDSE \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[11] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC21_FD_CRCWORD_I[11]),
        .Q(CRC21_CRCWORD[9]),
        .S(CRC_CRCWORD_I1));
  FDRE \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[12] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC21_CRCWORD[9]),
        .Q(CRC21_CRCWORD[8]),
        .R(CRC_CRCWORD_I1));
  FDSE \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[13] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC21_FD_CRCWORD_I[13]),
        .Q(CRC21_CRCWORD[7]),
        .S(CRC_CRCWORD_I1));
  FDRE \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[14] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC21_CRCWORD[7]),
        .Q(CRC21_CRCWORD[6]),
        .R(CRC_CRCWORD_I1));
  FDRE \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[15] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC21_CRCWORD[6]),
        .Q(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[20]_0 [0]),
        .R(CRC_CRCWORD_I1));
  FDRE \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[16] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[20]_0 [0]),
        .Q(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[20]_0 [1]),
        .R(CRC_CRCWORD_I1));
  FDRE \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[17] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[20]_0 [1]),
        .Q(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[20]_0 [2]),
        .R(CRC_CRCWORD_I1));
  FDRE \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[18] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[20]_0 [2]),
        .Q(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[20]_0 [3]),
        .R(CRC_CRCWORD_I1));
  FDRE \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[19] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[20]_0 [3]),
        .Q(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[20]_0 [4]),
        .R(CRC_CRCWORD_I1));
  FDRE \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[1] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC21_CRCWORD[20]),
        .Q(CRC21_CRCWORD[19]),
        .R(CRC_CRCWORD_I1));
  FDSE \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[20] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC21_FD_CRCWORD_I[20]),
        .Q(\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[20]_0 [5]),
        .S(CRC_CRCWORD_I1));
  FDRE \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[2] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC21_CRCWORD[19]),
        .Q(CRC21_CRCWORD[18]),
        .R(CRC_CRCWORD_I1));
  FDSE \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[3] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC21_FD_CRCWORD_I[3]),
        .Q(CRC21_CRCWORD[17]),
        .S(CRC_CRCWORD_I1));
  FDSE \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[4] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC21_FD_CRCWORD_I[4]),
        .Q(CRC21_CRCWORD[16]),
        .S(CRC_CRCWORD_I1));
  FDRE \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[5] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC21_CRCWORD[16]),
        .Q(CRC21_CRCWORD[15]),
        .R(CRC_CRCWORD_I1));
  FDRE \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[6] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC21_CRCWORD[15]),
        .Q(CRC21_CRCWORD[14]),
        .R(CRC_CRCWORD_I1));
  FDSE \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[7] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC21_FD_CRCWORD_I[7]),
        .Q(CRC21_CRCWORD[13]),
        .S(CRC_CRCWORD_I1));
  FDRE \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[8] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC21_CRCWORD[13]),
        .Q(CRC21_CRCWORD[12]),
        .R(CRC_CRCWORD_I1));
  FDRE \ISO_CRC.CRC21_FD_CRCWORD_I1_reg[9] 
       (.C(can_clk),
        .CE(\ISO_CRC.CRC17_FD_CRCWORD_I1[16]_i_1_n_0 ),
        .D(CRC21_CRCWORD[12]),
        .Q(CRC21_CRCWORD[11]),
        .R(CRC_CRCWORD_I1));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT5 #(
    .INIT(32'h00006AAA)) 
    \ISO_CRC.SBC[0]_i_1 
       (.I0(p_1_in0_in),
        .I1(\ISO_CRC.SBC[0]_i_2_n_0 ),
        .I2(\ISO_CRC.SBC_reg_n_0_[1] ),
        .I3(p_0_out),
        .I4(CRC_CRCWORD_I1),
        .O(\ISO_CRC.SBC[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \ISO_CRC.SBC[0]_i_2 
       (.I0(SM_FLAG_I),
        .I1(\CRC_CRCWORD_I1[14]_i_4_n_0 ),
        .I2(SM_FLAG_I_FSB),
        .I3(E),
        .O(\ISO_CRC.SBC[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT4 #(
    .INIT(16'h006A)) 
    \ISO_CRC.SBC[1]_i_1 
       (.I0(\ISO_CRC.SBC_reg_n_0_[1] ),
        .I1(\ISO_CRC.SBC[0]_i_2_n_0 ),
        .I2(p_0_out),
        .I3(CRC_CRCWORD_I1),
        .O(\ISO_CRC.SBC[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h06)) 
    \ISO_CRC.SBC[2]_i_1 
       (.I0(p_0_out),
        .I1(\ISO_CRC.SBC[0]_i_2_n_0 ),
        .I2(CRC_CRCWORD_I1),
        .O(\ISO_CRC.SBC[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ISO_CRC.SBC_SEQ_REG[1]_i_1 
       (.I0(\ISO_CRC.SBC_reg_n_0_[1] ),
        .I1(p_1_in0_in),
        .O(\ISO_CRC.SBC_SEQ_CMB01_out ));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ISO_CRC.SBC_SEQ_REG[2]_i_1 
       (.I0(\ISO_CRC.SBC_reg_n_0_[1] ),
        .I1(p_0_out),
        .O(\ISO_CRC.SBC_SEQ_CMB0 ));
  FDRE \ISO_CRC.SBC_SEQ_REG_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(p_1_in0_in),
        .Q(SBC_SEQ[0]),
        .R(SYNC_RST_TL));
  FDRE \ISO_CRC.SBC_SEQ_REG_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ISO_CRC.SBC_SEQ_CMB01_out ),
        .Q(SBC_SEQ[1]),
        .R(SYNC_RST_TL));
  FDRE \ISO_CRC.SBC_SEQ_REG_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ISO_CRC.SBC_SEQ_CMB0 ),
        .Q(SBC_SEQ[2]),
        .R(SYNC_RST_TL));
  FDRE \ISO_CRC.SBC_SEQ_REG_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(p_0_out),
        .Q(SBC_SEQ[3]),
        .R(SYNC_RST_TL));
  FDRE \ISO_CRC.SBC_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ISO_CRC.SBC[0]_i_1_n_0 ),
        .Q(p_1_in0_in),
        .R(1'b0));
  FDRE \ISO_CRC.SBC_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ISO_CRC.SBC[1]_i_1_n_0 ),
        .Q(\ISO_CRC.SBC_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \ISO_CRC.SBC_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ISO_CRC.SBC[2]_i_1_n_0 ),
        .Q(p_0_out),
        .R(1'b0));
  FDSE \PREV_COUNTER_I_reg[0] 
       (.C(can_clk),
        .CE(\PREV_COUNTER_I_reg[0]_0 ),
        .D(COUNTER_I[0]),
        .Q(PREV_COUNTER_I[0]),
        .S(SYNC_RST_TL));
  FDSE \PREV_COUNTER_I_reg[1] 
       (.C(can_clk),
        .CE(\PREV_COUNTER_I_reg[0]_0 ),
        .D(COUNTER_I[1]),
        .Q(PREV_COUNTER_I[1]),
        .S(SYNC_RST_TL));
  LUT6 #(
    .INIT(64'hEBEBEBEB00EBEBEB)) 
    \RXE_MSGPAD_SEL_FS1[1]_i_2 
       (.I0(\COUNTER_I_reg[0]_0 ),
        .I1(p_1_in),
        .I2(\SM_REG_I_reg_n_0_[0] ),
        .I3(SM_FLAG_I),
        .I4(\CRC_CRCWORD_I1[14]_i_4_n_0 ),
        .I5(SM_FLAG_I_FSB),
        .O(\SM_REG_I_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h7777F0FF7777FFFF)) 
    \RXE_SREG_I[0]_i_2 
       (.I0(COUNTER_I[1]),
        .I1(COUNTER_I[0]),
        .I2(\RXE_SREG_I[0]_i_4_n_0 ),
        .I3(SM_FLAG_I),
        .I4(SM_FLAG_I_FSB),
        .I5(\RXE_SREG_I[0]_i_5_n_0 ),
        .O(\COUNTER_I_reg[1]_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \RXE_SREG_I[0]_i_4 
       (.I0(\SM_REG_I_reg_n_0_[5] ),
        .I1(\SM_REG_I_reg_n_0_[4] ),
        .O(\RXE_SREG_I[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h3000000000000005)) 
    \RXE_SREG_I[0]_i_5 
       (.I0(\SM_REG_I_reg_n_0_[4] ),
        .I1(\SM_REG_I_reg_n_0_[5] ),
        .I2(\SM_REG_I_reg_n_0_[0] ),
        .I3(p_1_in),
        .I4(\SM_REG_I_reg_n_0_[3] ),
        .I5(\SM_REG_I_reg_n_0_[2] ),
        .O(\RXE_SREG_I[0]_i_5_n_0 ));
  FDRE SM_FLAG_I_FSB_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(SM_FLAG_I_FSB_reg_0),
        .Q(SM_FLAG_I_FSB),
        .R(1'b0));
  FDRE SM_FLAG_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(SM_FLAG_I_reg_1),
        .Q(SM_FLAG_I),
        .R(1'b0));
  FDRE \SM_REG_I_reg[0] 
       (.C(can_clk),
        .CE(\PREV_COUNTER_I_reg[0]_0 ),
        .D(D),
        .Q(\SM_REG_I_reg_n_0_[0] ),
        .R(SYNC_RST_TL));
  FDRE \SM_REG_I_reg[1] 
       (.C(can_clk),
        .CE(\PREV_COUNTER_I_reg[0]_0 ),
        .D(\SM_REG_I_reg_n_0_[0] ),
        .Q(p_1_in),
        .R(SYNC_RST_TL));
  FDRE \SM_REG_I_reg[2] 
       (.C(can_clk),
        .CE(\PREV_COUNTER_I_reg[0]_0 ),
        .D(p_1_in),
        .Q(\SM_REG_I_reg_n_0_[2] ),
        .R(SYNC_RST_TL));
  FDRE \SM_REG_I_reg[3] 
       (.C(can_clk),
        .CE(\PREV_COUNTER_I_reg[0]_0 ),
        .D(\SM_REG_I_reg_n_0_[2] ),
        .Q(\SM_REG_I_reg_n_0_[3] ),
        .R(SYNC_RST_TL));
  FDRE \SM_REG_I_reg[4] 
       (.C(can_clk),
        .CE(\PREV_COUNTER_I_reg[0]_0 ),
        .D(\SM_REG_I_reg_n_0_[3] ),
        .Q(\SM_REG_I_reg_n_0_[4] ),
        .R(SYNC_RST_TL));
  FDRE \SM_REG_I_reg[5] 
       (.C(can_clk),
        .CE(\PREV_COUNTER_I_reg[0]_0 ),
        .D(\SM_REG_I_reg_n_0_[4] ),
        .Q(\SM_REG_I_reg_n_0_[5] ),
        .R(SYNC_RST_TL));
  LUT1 #(
    .INIT(2'h1)) 
    SM_STUFFBIT_PD1_i_1
       (.I0(\COUNTER_I_reg[1]_0 ),
        .O(SM_STUFFBIT_PD));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT3 #(
    .INIT(8'h01)) 
    TXE_PASSTX_I_i_2
       (.I0(\EMU_REC_I_reg[7]_3 ),
        .I1(Q),
        .I2(\EMU_REC_I_reg[7]_0 ),
        .O(IC_REG_MSR_SNOOP_FS2_D1_reg));
  LUT6 #(
    .INIT(64'h55FCFC55550C0C55)) 
    TXE_TX_REN_I_CFD_D1_i_36
       (.I0(TXE_TX_REN_I_CFD_D1_reg_i_48_n_0),
        .I1(TXE_TX_REN_I_CFD_D1_i_49_n_0),
        .I2(TXE_TX_REN_I_CFD_D1_reg_i_19_0[3]),
        .I3(TXE_TX_REN_I_CFD_D1_reg_i_19_0[2]),
        .I4(TXE_TX_REN_I_CFD_D1_reg_i_19_0[1]),
        .I5(TXE_TX_REN_I_CFD_D1_i_50_n_0),
        .O(TXE_TX_REN_I_CFD_D1_i_36_n_0));
  LUT3 #(
    .INIT(8'h35)) 
    TXE_TX_REN_I_CFD_D1_i_37
       (.I0(\ISO_CRC.CRC17_FD_CRCWORD_I1_reg[16]_0 ),
        .I1(CRC17_CRCWORD[1]),
        .I2(TXE_TX_REN_I_CFD_D1_reg_i_19_0[0]),
        .O(TXE_TX_REN_I_CFD_D1_i_37_n_0));
  LUT6 #(
    .INIT(64'h0F5500330F55FF33)) 
    TXE_TX_REN_I_CFD_D1_i_49
       (.I0(CRC17_CRCWORD[2]),
        .I1(CRC17_CRCWORD[4]),
        .I2(CRC17_CRCWORD[3]),
        .I3(TXE_TX_REN_I_CFD_D1_reg_i_19_0[0]),
        .I4(TXE_TX_REN_I_CFD_D1_reg_i_19_0[1]),
        .I5(CRC17_CRCWORD[5]),
        .O(TXE_TX_REN_I_CFD_D1_i_49_n_0));
  LUT6 #(
    .INIT(64'h0F5500330F55FF33)) 
    TXE_TX_REN_I_CFD_D1_i_50
       (.I0(CRC17_CRCWORD[10]),
        .I1(CRC17_CRCWORD[12]),
        .I2(CRC17_CRCWORD[11]),
        .I3(TXE_TX_REN_I_CFD_D1_reg_i_19_0[0]),
        .I4(TXE_TX_REN_I_CFD_D1_reg_i_19_0[1]),
        .I5(CRC17_CRCWORD[13]),
        .O(TXE_TX_REN_I_CFD_D1_i_50_n_0));
  LUT5 #(
    .INIT(32'hFA0C0A0C)) 
    TXE_TX_REN_I_CFD_D1_i_56
       (.I0(CRC17_CRCWORD[14]),
        .I1(CRC17_CRCWORD[16]),
        .I2(TXE_TX_REN_I_CFD_D1_reg_i_19_0[0]),
        .I3(TXE_TX_REN_I_CFD_D1_reg_i_19_0[1]),
        .I4(CRC17_CRCWORD[15]),
        .O(TXE_TX_REN_I_CFD_D1_i_56_n_0));
  LUT6 #(
    .INIT(64'hAAFFF0CCAA00F0CC)) 
    TXE_TX_REN_I_CFD_D1_i_57
       (.I0(CRC17_CRCWORD[7]),
        .I1(CRC17_CRCWORD[8]),
        .I2(CRC17_CRCWORD[9]),
        .I3(TXE_TX_REN_I_CFD_D1_reg_i_19_0[0]),
        .I4(TXE_TX_REN_I_CFD_D1_reg_i_19_0[1]),
        .I5(CRC17_CRCWORD[6]),
        .O(TXE_TX_REN_I_CFD_D1_i_57_n_0));
  MUXF7 TXE_TX_REN_I_CFD_D1_reg_i_19
       (.I0(TXE_TX_REN_I_CFD_D1_i_36_n_0),
        .I1(TXE_TX_REN_I_CFD_D1_i_37_n_0),
        .O(\RXE_COUNTER_I_reg[4] ),
        .S(TXE_TX_REN_I_CFD_D1_i_9));
  MUXF7 TXE_TX_REN_I_CFD_D1_reg_i_48
       (.I0(TXE_TX_REN_I_CFD_D1_i_56_n_0),
        .I1(TXE_TX_REN_I_CFD_D1_i_57_n_0),
        .O(TXE_TX_REN_I_CFD_D1_reg_i_48_n_0),
        .S(TXE_TX_REN_I_CFD_D1_i_36_0));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__28 \XPM_CDC_MODULES.EMU_2C_CDC_TO 
       (.dest_clk(can_clk),
        .dest_out(EMU_WR_ACK_FS2),
        .src_clk(1'b0),
        .src_in(\syncstages_ff_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \state[0]_i_22 
       (.I0(EMU_TEC_I_reg[5]),
        .I1(EMU_TEC_I_reg[6]),
        .I2(Q),
        .I3(EMU_TEC_I_reg[3]),
        .I4(EMU_TEC_I_reg[4]),
        .O(\EMU_TEC_I_reg[5]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT4 #(
    .INIT(16'hAAAB)) 
    \state[1]_i_12 
       (.I0(\state[1]_i_5 ),
        .I1(\EMU_REC_I_reg[7]_0 ),
        .I2(Q),
        .I3(\EMU_REC_I_reg[7]_3 ),
        .O(\EMU_REC_I_reg[7]_1 ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_tl_synch
   (IC_REG_MSR_LBACK_FS2_D1_reg_0,
    MSR_DPEE_FS2,
    MSR_SBR_FS2,
    MSR_DAR_FS2,
    IC_REG_IFF_EN_FS2_reg_0,
    IFF6_EN_FS2,
    IFF5_EN_FS2,
    MSR_BRSD_FS2,
    MSR_SLEEP_FS2,
    TDC_EN_FS2,
    MSR_SNOOP_FS2,
    CAN_PHY_RX_I,
    IC_REG_MSR_LBACK_FS2_D1_reg_1,
    D,
    IC_TIMESTAMP_RST_FS3_reg_0,
    IC_TIMESTAMP_RST_P,
    IC_REG_MSR_LBACK,
    can_clk,
    \syncstages_ff_reg[0] ,
    \syncstages_ff_reg[0]_0 ,
    \syncstages_ff_reg[0]_1 ,
    \syncstages_ff_reg[0]_2 ,
    \syncstages_ff_reg[0]_3 ,
    \syncstages_ff_reg[0]_4 ,
    \syncstages_ff_reg[0]_5 ,
    \syncstages_ff_reg[0]_6 ,
    \syncstages_ff_reg[0]_7 ,
    SYNC_RST_TL,
    CAN_PHY_RX_I_NEG_FLOP,
    \SM_REG_I_reg[0] ,
    dest_arst,
    SSP_EN,
    CAN_PHY_TX_LP,
    TS_COUNTER_SW_RST_D1);
  output IC_REG_MSR_LBACK_FS2_D1_reg_0;
  output MSR_DPEE_FS2;
  output MSR_SBR_FS2;
  output MSR_DAR_FS2;
  output IC_REG_IFF_EN_FS2_reg_0;
  output IFF6_EN_FS2;
  output IFF5_EN_FS2;
  output MSR_BRSD_FS2;
  output MSR_SLEEP_FS2;
  output TDC_EN_FS2;
  output MSR_SNOOP_FS2;
  output CAN_PHY_RX_I;
  output [0:0]IC_REG_MSR_LBACK_FS2_D1_reg_1;
  output [0:0]D;
  output IC_TIMESTAMP_RST_FS3_reg_0;
  output IC_TIMESTAMP_RST_P;
  input IC_REG_MSR_LBACK;
  input can_clk;
  input [0:0]\syncstages_ff_reg[0] ;
  input \syncstages_ff_reg[0]_0 ;
  input \syncstages_ff_reg[0]_1 ;
  input \syncstages_ff_reg[0]_2 ;
  input [2:0]\syncstages_ff_reg[0]_3 ;
  input \syncstages_ff_reg[0]_4 ;
  input \syncstages_ff_reg[0]_5 ;
  input \syncstages_ff_reg[0]_6 ;
  input \syncstages_ff_reg[0]_7 ;
  input SYNC_RST_TL;
  input CAN_PHY_RX_I_NEG_FLOP;
  input \SM_REG_I_reg[0] ;
  input dest_arst;
  input SSP_EN;
  input CAN_PHY_TX_LP;
  input TS_COUNTER_SW_RST_D1;

  wire CAN_PHY_RX_I;
  wire CAN_PHY_RX_I_NEG_FLOP;
  wire CAN_PHY_TX_LP;
  wire [0:0]D;
  wire IC_REG_F_BRPR_TDC_EN_FS2_I;
  wire IC_REG_IFF5_EN_FS2_I;
  wire IC_REG_IFF6_EN_FS2_I;
  wire IC_REG_IFF_EN_FS2_I;
  wire IC_REG_IFF_EN_FS2_reg_0;
  wire IC_REG_MSR_BRSD_FS2_I;
  wire IC_REG_MSR_DAR_FS2_I;
  wire IC_REG_MSR_DPEE_FS2_I;
  wire IC_REG_MSR_LBACK;
  wire IC_REG_MSR_LBACK_FS2;
  wire IC_REG_MSR_LBACK_FS2_D1_reg_0;
  wire [0:0]IC_REG_MSR_LBACK_FS2_D1_reg_1;
  wire IC_REG_MSR_SLEEP_FS2_I;
  wire IC_REG_MSR_SNOOP_FS2;
  wire IC_REG_SBR_FS2_I;
  wire IC_TIMESTAMP_RST_FS2;
  wire IC_TIMESTAMP_RST_FS3;
  wire IC_TIMESTAMP_RST_FS3_reg_0;
  wire IC_TIMESTAMP_RST_P;
  wire IFF5_EN_FS2;
  wire IFF6_EN_FS2;
  wire MSR_BRSD_FS2;
  wire MSR_DAR_FS2;
  wire MSR_DPEE_FS2;
  wire MSR_SBR_FS2;
  wire MSR_SLEEP_FS2;
  wire MSR_SNOOP_FS2;
  wire \SM_REG_I_reg[0] ;
  wire SSP_EN;
  wire SYNC_RST_TL;
  wire TDC_EN_FS2;
  wire TS_COUNTER_SW_RST_D1;
  wire can_clk;
  wire dest_arst;
  wire [0:0]\syncstages_ff_reg[0] ;
  wire \syncstages_ff_reg[0]_0 ;
  wire \syncstages_ff_reg[0]_1 ;
  wire \syncstages_ff_reg[0]_2 ;
  wire [2:0]\syncstages_ff_reg[0]_3 ;
  wire \syncstages_ff_reg[0]_4 ;
  wire \syncstages_ff_reg[0]_5 ;
  wire \syncstages_ff_reg[0]_6 ;
  wire \syncstages_ff_reg[0]_7 ;

  LUT6 #(
    .INIT(64'hFFFFFFB8000000B8)) 
    CAN_PHY_RX_D_i_1
       (.I0(CAN_PHY_RX_I_NEG_FLOP),
        .I1(IC_REG_IFF_EN_FS2_reg_0),
        .I2(\SM_REG_I_reg[0] ),
        .I3(IC_REG_MSR_LBACK_FS2_D1_reg_0),
        .I4(SSP_EN),
        .I5(CAN_PHY_TX_LP),
        .O(D));
  FDRE IC_REG_F_BRPR_TDC_EN_FS2_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(IC_REG_F_BRPR_TDC_EN_FS2_I),
        .Q(TDC_EN_FS2),
        .R(SYNC_RST_TL));
  FDRE IC_REG_IFF5_EN_FS2_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(IC_REG_IFF5_EN_FS2_I),
        .Q(IFF5_EN_FS2),
        .R(SYNC_RST_TL));
  FDRE IC_REG_IFF6_EN_FS2_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(IC_REG_IFF6_EN_FS2_I),
        .Q(IFF6_EN_FS2),
        .R(SYNC_RST_TL));
  FDRE IC_REG_IFF_EN_FS2_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(IC_REG_IFF_EN_FS2_I),
        .Q(IC_REG_IFF_EN_FS2_reg_0),
        .R(SYNC_RST_TL));
  FDRE IC_REG_MSR_BRSD_FS2_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(IC_REG_MSR_BRSD_FS2_I),
        .Q(MSR_BRSD_FS2),
        .R(SYNC_RST_TL));
  FDRE IC_REG_MSR_DAR_FS2_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(IC_REG_MSR_DAR_FS2_I),
        .Q(MSR_DAR_FS2),
        .R(SYNC_RST_TL));
  FDRE IC_REG_MSR_DPEE_FS2_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(IC_REG_MSR_DPEE_FS2_I),
        .Q(MSR_DPEE_FS2),
        .R(SYNC_RST_TL));
  FDRE IC_REG_MSR_LBACK_FS2_D1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(IC_REG_MSR_LBACK_FS2),
        .Q(IC_REG_MSR_LBACK_FS2_D1_reg_0),
        .R(SYNC_RST_TL));
  FDRE IC_REG_MSR_SLEEP_FS2_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(IC_REG_MSR_SLEEP_FS2_I),
        .Q(MSR_SLEEP_FS2),
        .R(SYNC_RST_TL));
  FDRE IC_REG_MSR_SNOOP_FS2_D1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(IC_REG_MSR_SNOOP_FS2),
        .Q(MSR_SNOOP_FS2),
        .R(SYNC_RST_TL));
  FDRE IC_REG_SBR_FS2_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(IC_REG_SBR_FS2_I),
        .Q(MSR_SBR_FS2),
        .R(SYNC_RST_TL));
  FDRE IC_TIMESTAMP_RST_FS3_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(IC_TIMESTAMP_RST_FS2),
        .Q(IC_TIMESTAMP_RST_FS3),
        .R(SYNC_RST_TL));
  LUT3 #(
    .INIT(8'hB8)) 
    \SM_REG_I[5]_i_5 
       (.I0(CAN_PHY_RX_I_NEG_FLOP),
        .I1(IC_REG_IFF_EN_FS2_reg_0),
        .I2(\SM_REG_I_reg[0] ),
        .O(CAN_PHY_RX_I));
  LUT2 #(
    .INIT(4'hB)) 
    \SSP_COUNT_DOWN[6]_i_1 
       (.I0(IC_REG_MSR_LBACK_FS2_D1_reg_0),
        .I1(dest_arst),
        .O(IC_REG_MSR_LBACK_FS2_D1_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT4 #(
    .INIT(16'hFF6F)) 
    \TIME_STAMP_CNT[15]_i_1 
       (.I0(IC_TIMESTAMP_RST_FS3),
        .I1(IC_TIMESTAMP_RST_FS2),
        .I2(dest_arst),
        .I3(TS_COUNTER_SW_RST_D1),
        .O(IC_TIMESTAMP_RST_FS3_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT2 #(
    .INIT(4'h6)) 
    TS_COUNTER_SW_RST_D1_i_1
       (.I0(IC_TIMESTAMP_RST_FS2),
        .I1(IC_TIMESTAMP_RST_FS3),
        .O(IC_TIMESTAMP_RST_P));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__26 \XPM_CDC_MODULES.BRSD_2C_CDC_TO 
       (.dest_clk(can_clk),
        .dest_out(IC_REG_MSR_BRSD_FS2_I),
        .src_clk(1'b0),
        .src_in(\syncstages_ff_reg[0]_6 ));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__20 \XPM_CDC_MODULES.DAR_2C_CDC_TO 
       (.dest_clk(can_clk),
        .dest_out(IC_REG_MSR_DAR_FS2_I),
        .src_clk(1'b0),
        .src_in(\syncstages_ff_reg[0]_2 ));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__24 \XPM_CDC_MODULES.DPEE_2C_CDC_TO 
       (.dest_clk(can_clk),
        .dest_out(IC_REG_MSR_DPEE_FS2_I),
        .src_clk(1'b0),
        .src_in(\syncstages_ff_reg[0]_4 ));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__23 \XPM_CDC_MODULES.IFF5_2C_CDC_TO 
       (.dest_clk(can_clk),
        .dest_out(IC_REG_IFF5_EN_FS2_I),
        .src_clk(1'b0),
        .src_in(\syncstages_ff_reg[0]_3 [2]));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__22 \XPM_CDC_MODULES.IFF6_2C_CDC_TO 
       (.dest_clk(can_clk),
        .dest_out(IC_REG_IFF6_EN_FS2_I),
        .src_clk(1'b0),
        .src_in(\syncstages_ff_reg[0]_3 [1]));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__21 \XPM_CDC_MODULES.IFF_2C_CDC_TO 
       (.dest_clk(can_clk),
        .dest_out(IC_REG_IFF_EN_FS2_I),
        .src_clk(1'b0),
        .src_in(\syncstages_ff_reg[0]_3 [0]));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__16 \XPM_CDC_MODULES.LBACK_2C_CDC_TO 
       (.dest_clk(can_clk),
        .dest_out(IC_REG_MSR_LBACK_FS2),
        .src_clk(1'b0),
        .src_in(IC_REG_MSR_LBACK));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__25 \XPM_CDC_MODULES.SBR_2C_CDC_TO 
       (.dest_clk(can_clk),
        .dest_out(IC_REG_SBR_FS2_I),
        .src_clk(1'b0),
        .src_in(\syncstages_ff_reg[0]_5 ));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__18 \XPM_CDC_MODULES.SLEEP_2C_CDC_TO 
       (.dest_clk(can_clk),
        .dest_out(IC_REG_MSR_SLEEP_FS2_I),
        .src_clk(1'b0),
        .src_in(\syncstages_ff_reg[0]_0 ));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__19 \XPM_CDC_MODULES.SNOOP_2C_CDC_TO 
       (.dest_clk(can_clk),
        .dest_out(IC_REG_MSR_SNOOP_FS2),
        .src_clk(1'b0),
        .src_in(\syncstages_ff_reg[0]_1 ));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__17 \XPM_CDC_MODULES.TDC_EN_2C_CDC_TO 
       (.dest_clk(can_clk),
        .dest_out(IC_REG_F_BRPR_TDC_EN_FS2_I),
        .src_clk(1'b0),
        .src_in(\syncstages_ff_reg[0] ));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_single__27 \XPM_CDC_MODULES.TSMP_2C_CDC_TO 
       (.dest_clk(can_clk),
        .dest_out(IC_TIMESTAMP_RST_FS2),
        .src_clk(1'b0),
        .src_in(\syncstages_ff_reg[0]_7 ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_tl_tdc
   (TXING_BRS_EN_BTR_D1,
    TDC_SSP_SAMP_PT_reg_0,
    TDC_SSP_SAMP_PT_D1,
    SSP_RCVD_RXBIT,
    SSP_BTL_TXBIT_I,
    \MEM_reg[3]_0 ,
    RSYNC_OCCR_D_reg,
    Q,
    \arststages_ff_reg[1] ,
    TXE_TXING_reg,
    HSYNC_OCCR_D_reg,
    \PIPELINED_BITS_reg[1]_0 ,
    \PIPELINED_BITS_reg[0]_0 ,
    S,
    BRSD_P_ERR_1TQ_FD_reg,
    BRSD_P_ERR_1TQ_FD_reg_0,
    BRSD_P_ERR_1TQ_FD_reg_1,
    DI,
    BRSD_P_ERR_1TQ_FD_reg_2,
    \BTL_COUNTER_I_REG_reg[1] ,
    ERR_TXBERR_I_FD_SSP_EN_1_reg_0,
    SR,
    TXING_BRS_EN_BTR_D1_reg_0,
    can_clk,
    FAST_TRANSMT_PT_D1_reg_0,
    SSP_RCVD_RXBIT_reg_0,
    SSP_BTL_TXBIT_I_reg_0,
    \BTL_COUNTER_I_REG[5]_i_6 ,
    D,
    HSYNC_FLG_I_reg,
    HSYNC_FLG_I_reg_0,
    RSYNC_FLG_I_i_3_0,
    \TDC_COUNTER_reg[6]_0 ,
    O,
    dest_arst,
    RSYNC_FLG_I_reg,
    FIRST_FAST_TRANSMT_PT_FLG_reg_0,
    RSYNC_FLG_I_reg_0,
    RSYNC_FLG_I_reg_1,
    HSYNC_FLG_I_reg_1,
    RSYNC_FLG_I_i_3_1,
    BRS_EN_BTR,
    SSP_EN_D1,
    SSP_EN,
    HSYNC_FLG_I_reg_2,
    \TDC_COUNTER_reg[6]_1 ,
    \TDC_COUNTER_reg[6]_2 ,
    CAN_PHY_RX_I_NEG_FLOP,
    \MEM_reg[0]_0 ,
    TDC_TRIG_COND_D1,
    \CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry ,
    \CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_0 ,
    \CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_1 ,
    CAN_PHY_TX_POS_FLOP_X26_carry_i_3,
    \BTL_COUNTER_I_REG_reg[0] ,
    \BTL_COUNTER_I_REG_reg[0]_0 ,
    CAN_PHY_TX_POS_FLOP_X26_carry_i_3_0,
    CAN_PHY_TX_POS_FLOP_X27,
    \BTL_COUNTER_I_REG_reg[0]_1 ,
    CAN_PHY_TX_POS_FLOP_X26_carry,
    BTL_COUNTER_I16_carry_i_4,
    \SSP_COUNT_DOWN_reg[6]_0 ,
    \PIPELINED_BITS_reg[0]_1 ,
    \RD_PTR_reg[1]_0 ,
    \WR_PTR_reg[1]_0 ,
    ERR_TXBERR_I_FD_SSP_EN_1_reg_1);
  output TXING_BRS_EN_BTR_D1;
  output TDC_SSP_SAMP_PT_reg_0;
  output TDC_SSP_SAMP_PT_D1;
  output SSP_RCVD_RXBIT;
  output SSP_BTL_TXBIT_I;
  output \MEM_reg[3]_0 ;
  output RSYNC_OCCR_D_reg;
  output [6:0]Q;
  output \arststages_ff_reg[1] ;
  output TXE_TXING_reg;
  output HSYNC_OCCR_D_reg;
  output \PIPELINED_BITS_reg[1]_0 ;
  output \PIPELINED_BITS_reg[0]_0 ;
  output [0:0]S;
  output BRSD_P_ERR_1TQ_FD_reg;
  output [0:0]BRSD_P_ERR_1TQ_FD_reg_0;
  output BRSD_P_ERR_1TQ_FD_reg_1;
  output [0:0]DI;
  output [0:0]BRSD_P_ERR_1TQ_FD_reg_2;
  output \BTL_COUNTER_I_REG_reg[1] ;
  output ERR_TXBERR_I_FD_SSP_EN_1_reg_0;
  input [0:0]SR;
  input TXING_BRS_EN_BTR_D1_reg_0;
  input can_clk;
  input FAST_TRANSMT_PT_D1_reg_0;
  input SSP_RCVD_RXBIT_reg_0;
  input SSP_BTL_TXBIT_I_reg_0;
  input \BTL_COUNTER_I_REG[5]_i_6 ;
  input [0:0]D;
  input HSYNC_FLG_I_reg;
  input HSYNC_FLG_I_reg_0;
  input RSYNC_FLG_I_i_3_0;
  input [5:0]\TDC_COUNTER_reg[6]_0 ;
  input [0:0]O;
  input dest_arst;
  input RSYNC_FLG_I_reg;
  input FIRST_FAST_TRANSMT_PT_FLG_reg_0;
  input RSYNC_FLG_I_reg_0;
  input RSYNC_FLG_I_reg_1;
  input HSYNC_FLG_I_reg_1;
  input RSYNC_FLG_I_i_3_1;
  input BRS_EN_BTR;
  input SSP_EN_D1;
  input SSP_EN;
  input HSYNC_FLG_I_reg_2;
  input \TDC_COUNTER_reg[6]_1 ;
  input \TDC_COUNTER_reg[6]_2 ;
  input CAN_PHY_RX_I_NEG_FLOP;
  input \MEM_reg[0]_0 ;
  input TDC_TRIG_COND_D1;
  input [2:0]\CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry ;
  input \CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_0 ;
  input \CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_1 ;
  input CAN_PHY_TX_POS_FLOP_X26_carry_i_3;
  input \BTL_COUNTER_I_REG_reg[0] ;
  input \BTL_COUNTER_I_REG_reg[0]_0 ;
  input [2:0]CAN_PHY_TX_POS_FLOP_X26_carry_i_3_0;
  input [1:0]CAN_PHY_TX_POS_FLOP_X27;
  input \BTL_COUNTER_I_REG_reg[0]_1 ;
  input CAN_PHY_TX_POS_FLOP_X26_carry;
  input [0:0]BTL_COUNTER_I16_carry_i_4;
  input [0:0]\SSP_COUNT_DOWN_reg[6]_0 ;
  input \PIPELINED_BITS_reg[0]_1 ;
  input \RD_PTR_reg[1]_0 ;
  input \WR_PTR_reg[1]_0 ;
  input ERR_TXBERR_I_FD_SSP_EN_1_reg_1;

  wire BRSD_P_ERR_1TQ_FD_reg;
  wire [0:0]BRSD_P_ERR_1TQ_FD_reg_0;
  wire BRSD_P_ERR_1TQ_FD_reg_1;
  wire [0:0]BRSD_P_ERR_1TQ_FD_reg_2;
  wire BRS_EN_BTR;
  wire [0:0]BTL_COUNTER_I16_carry_i_4;
  wire \BTL_COUNTER_I_REG[5]_i_6 ;
  wire \BTL_COUNTER_I_REG_reg[0] ;
  wire \BTL_COUNTER_I_REG_reg[0]_0 ;
  wire \BTL_COUNTER_I_REG_reg[0]_1 ;
  wire \BTL_COUNTER_I_REG_reg[1] ;
  wire CAN_PHY_RX_I_NEG_FLOP;
  wire [2:0]\CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry ;
  wire \CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_0 ;
  wire \CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_1 ;
  wire CAN_PHY_TX_POS_FLOP_X26_carry;
  wire CAN_PHY_TX_POS_FLOP_X26_carry_i_3;
  wire [2:0]CAN_PHY_TX_POS_FLOP_X26_carry_i_3_0;
  wire [1:0]CAN_PHY_TX_POS_FLOP_X27;
  wire [0:0]D;
  wire [0:0]DI;
  wire ERR_TXBERR_I_FD_SSP_EN_1_i_1_n_0;
  wire ERR_TXBERR_I_FD_SSP_EN_1_reg_0;
  wire ERR_TXBERR_I_FD_SSP_EN_1_reg_1;
  wire FAST_BIT_TIME_IN_CAN_CLK_COUNTS0;
  wire \FAST_BIT_TIME_IN_CAN_CLK_COUNTS[6]_i_3_n_0 ;
  wire [6:0]FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg;
  wire FAST_TRANSMT_PT_D1;
  wire FAST_TRANSMT_PT_D1_reg_0;
  wire FIRST_FAST_TRANSMT_PT_FLG;
  wire FIRST_FAST_TRANSMT_PT_FLG_i_1_n_0;
  wire FIRST_FAST_TRANSMT_PT_FLG_reg_0;
  wire HSYNC_FLG_I_reg;
  wire HSYNC_FLG_I_reg_0;
  wire HSYNC_FLG_I_reg_1;
  wire HSYNC_FLG_I_reg_2;
  wire HSYNC_OCCR_D_reg;
  wire [0:3]MEM;
  wire \MEM[0]_i_1_n_0 ;
  wire \MEM[1]_i_1_n_0 ;
  wire \MEM[2]_i_1_n_0 ;
  wire \MEM[3]_i_1_n_0 ;
  wire \MEM_reg[0]_0 ;
  wire \MEM_reg[3]_0 ;
  wire [0:0]O;
  wire \PIPELINED_BITS[0]_i_1_n_0 ;
  wire \PIPELINED_BITS[1]_i_1_n_0 ;
  wire \PIPELINED_BITS_reg[0]_0 ;
  wire \PIPELINED_BITS_reg[0]_1 ;
  wire \PIPELINED_BITS_reg[1]_0 ;
  wire [6:0]Q;
  wire [1:0]RD_PTR;
  wire \RD_PTR[0]_i_1_n_0 ;
  wire \RD_PTR[1]_i_2_n_0 ;
  wire \RD_PTR_reg[1]_0 ;
  wire RSYNC_FLG_I_i_3_0;
  wire RSYNC_FLG_I_i_3_1;
  wire RSYNC_FLG_I_i_4_n_0;
  wire RSYNC_FLG_I_i_6_n_0;
  wire RSYNC_FLG_I_reg;
  wire RSYNC_FLG_I_reg_0;
  wire RSYNC_FLG_I_reg_1;
  wire RSYNC_OCCR_D_reg;
  wire [0:0]S;
  wire SECOND_FAST_TRANSMT_PT_FLG;
  wire SECOND_FAST_TRANSMT_PT_FLG_i_1_n_0;
  wire [0:0]SR;
  wire SSP_BTL_TXBIT_I;
  wire SSP_BTL_TXBIT_I_reg_0;
  wire [6:0]SSP_COUNT_DOWN1_in;
  wire \SSP_COUNT_DOWN[1]_i_2_n_0 ;
  wire \SSP_COUNT_DOWN[1]_i_3_n_0 ;
  wire \SSP_COUNT_DOWN[3]_i_2_n_0 ;
  wire \SSP_COUNT_DOWN[3]_i_3_n_0 ;
  wire \SSP_COUNT_DOWN[3]_i_4_n_0 ;
  wire \SSP_COUNT_DOWN[5]_i_1_n_0 ;
  wire \SSP_COUNT_DOWN[6]_i_10_n_0 ;
  wire \SSP_COUNT_DOWN[6]_i_11_n_0 ;
  wire \SSP_COUNT_DOWN[6]_i_12_n_0 ;
  wire \SSP_COUNT_DOWN[6]_i_2_n_0 ;
  wire \SSP_COUNT_DOWN[6]_i_4_n_0 ;
  wire \SSP_COUNT_DOWN[6]_i_5_n_0 ;
  wire \SSP_COUNT_DOWN[6]_i_6_n_0 ;
  wire \SSP_COUNT_DOWN[6]_i_7_n_0 ;
  wire \SSP_COUNT_DOWN[6]_i_8_n_0 ;
  wire \SSP_COUNT_DOWN[6]_i_9_n_0 ;
  wire [0:0]\SSP_COUNT_DOWN_reg[6]_0 ;
  wire \SSP_COUNT_DOWN_reg_n_0_[0] ;
  wire \SSP_COUNT_DOWN_reg_n_0_[1] ;
  wire \SSP_COUNT_DOWN_reg_n_0_[2] ;
  wire \SSP_COUNT_DOWN_reg_n_0_[3] ;
  wire \SSP_COUNT_DOWN_reg_n_0_[4] ;
  wire \SSP_COUNT_DOWN_reg_n_0_[5] ;
  wire \SSP_COUNT_DOWN_reg_n_0_[6] ;
  wire SSP_EN;
  wire SSP_EN_D1;
  wire SSP_RCVD_RXBIT;
  wire SSP_RCVD_RXBIT_reg_0;
  wire [6:0]TDC_COUNTER;
  wire \TDC_COUNTER[1]_i_1_n_0 ;
  wire \TDC_COUNTER[2]_i_2_n_0 ;
  wire \TDC_COUNTER[3]_i_2_n_0 ;
  wire \TDC_COUNTER[4]_i_1_n_0 ;
  wire \TDC_COUNTER[4]_i_2_n_0 ;
  wire \TDC_COUNTER[6]_i_1_n_0 ;
  wire \TDC_COUNTER[6]_i_3_n_0 ;
  wire \TDC_COUNTER[6]_i_4_n_0 ;
  wire \TDC_COUNTER[6]_i_5_n_0 ;
  wire \TDC_COUNTER[6]_i_6_n_0 ;
  wire [5:0]\TDC_COUNTER_reg[6]_0 ;
  wire \TDC_COUNTER_reg[6]_1 ;
  wire \TDC_COUNTER_reg[6]_2 ;
  wire TDC_COUNTING_START;
  wire TDC_COUNTING_START_D1;
  wire TDC_SSP_SAMP_PT0;
  wire TDC_SSP_SAMP_PT_D1;
  wire TDC_SSP_SAMP_PT_reg_0;
  wire TDC_TRIG_COND_D1;
  wire TXE_TXING_reg;
  wire TXING_BRS_EN_BTR_D1;
  wire TXING_BRS_EN_BTR_D1_reg_0;
  wire [1:0]WR_PTR;
  wire \WR_PTR[0]_i_1_n_0 ;
  wire \WR_PTR[1]_i_1_n_0 ;
  wire \WR_PTR_reg[1]_0 ;
  wire \arststages_ff_reg[1] ;
  wire can_clk;
  wire dest_arst;
  wire i__carry_i_7__5_n_0;
  wire [6:0]p_0_in;

  LUT5 #(
    .INIT(32'hEB55AA14)) 
    \BTL_COUNTER_I_REG[1]_i_3 
       (.I0(\BTL_COUNTER_I_REG_reg[0] ),
        .I1(BRS_EN_BTR),
        .I2(\BTL_COUNTER_I_REG_reg[0]_0 ),
        .I3(\BTL_COUNTER_I_REG_reg[0]_1 ),
        .I4(CAN_PHY_TX_POS_FLOP_X26_carry_i_3_0[0]),
        .O(BRSD_P_ERR_1TQ_FD_reg_1));
  LUT5 #(
    .INIT(32'h45555555)) 
    \BTL_COUNTER_I_REG[8]_i_12 
       (.I0(\BTL_COUNTER_I_REG[5]_i_6 ),
        .I1(D),
        .I2(HSYNC_FLG_I_reg),
        .I3(HSYNC_FLG_I_reg_0),
        .I4(RSYNC_FLG_I_i_3_0),
        .O(RSYNC_OCCR_D_reg));
  LUT5 #(
    .INIT(32'h32230220)) 
    CAN_PHY_TX_POS_FLOP_X26_carry_i_14
       (.I0(CAN_PHY_TX_POS_FLOP_X26_carry_i_3),
        .I1(\BTL_COUNTER_I_REG_reg[0] ),
        .I2(\BTL_COUNTER_I_REG_reg[0]_0 ),
        .I3(BRS_EN_BTR),
        .I4(CAN_PHY_TX_POS_FLOP_X26_carry_i_3_0[2]),
        .O(BRSD_P_ERR_1TQ_FD_reg));
  LUT6 #(
    .INIT(64'h0082008200BE0082)) 
    CAN_PHY_TX_POS_FLOP_X26_carry_i_15
       (.I0(CAN_PHY_TX_POS_FLOP_X26_carry_i_3_0[1]),
        .I1(\BTL_COUNTER_I_REG_reg[0]_0 ),
        .I2(BRS_EN_BTR),
        .I3(\BTL_COUNTER_I_REG_reg[0] ),
        .I4(dest_arst),
        .I5(BTL_COUNTER_I16_carry_i_4),
        .O(\BTL_COUNTER_I_REG_reg[1] ));
  LUT5 #(
    .INIT(32'h0CFF080C)) 
    CAN_PHY_TX_POS_FLOP_X26_carry_i_4
       (.I0(\BTL_COUNTER_I_REG_reg[0] ),
        .I1(BRSD_P_ERR_1TQ_FD_reg_1),
        .I2(\BTL_COUNTER_I_REG_reg[0]_1 ),
        .I3(CAN_PHY_TX_POS_FLOP_X26_carry),
        .I4(\BTL_COUNTER_I_REG_reg[1] ),
        .O(BRSD_P_ERR_1TQ_FD_reg_2));
  LUT6 #(
    .INIT(64'hAEEA000000000000)) 
    ERR_TXBERR_I_FD_SSP_EN_1_i_1
       (.I0(ERR_TXBERR_I_FD_SSP_EN_1_reg_0),
        .I1(ERR_TXBERR_I_FD_SSP_EN_1_reg_1),
        .I2(SSP_BTL_TXBIT_I),
        .I3(SSP_RCVD_RXBIT),
        .I4(TXING_BRS_EN_BTR_D1_reg_0),
        .I5(dest_arst),
        .O(ERR_TXBERR_I_FD_SSP_EN_1_i_1_n_0));
  FDRE ERR_TXBERR_I_FD_SSP_EN_1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(ERR_TXBERR_I_FD_SSP_EN_1_i_1_n_0),
        .Q(ERR_TXBERR_I_FD_SSP_EN_1_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \FAST_BIT_TIME_IN_CAN_CLK_COUNTS[0]_i_1 
       (.I0(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \FAST_BIT_TIME_IN_CAN_CLK_COUNTS[1]_i_1 
       (.I0(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[0]),
        .I1(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \FAST_BIT_TIME_IN_CAN_CLK_COUNTS[2]_i_1 
       (.I0(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[2]),
        .I1(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[1]),
        .I2(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[0]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \FAST_BIT_TIME_IN_CAN_CLK_COUNTS[3]_i_1 
       (.I0(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[3]),
        .I1(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[0]),
        .I2(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[1]),
        .I3(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[2]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \FAST_BIT_TIME_IN_CAN_CLK_COUNTS[4]_i_1 
       (.I0(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[4]),
        .I1(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[2]),
        .I2(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[1]),
        .I3(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[0]),
        .I4(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[3]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \FAST_BIT_TIME_IN_CAN_CLK_COUNTS[5]_i_1 
       (.I0(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[5]),
        .I1(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[3]),
        .I2(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[0]),
        .I3(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[1]),
        .I4(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[2]),
        .I5(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[4]),
        .O(p_0_in[5]));
  LUT2 #(
    .INIT(4'h2)) 
    \FAST_BIT_TIME_IN_CAN_CLK_COUNTS[6]_i_1 
       (.I0(FIRST_FAST_TRANSMT_PT_FLG),
        .I1(SECOND_FAST_TRANSMT_PT_FLG),
        .O(FAST_BIT_TIME_IN_CAN_CLK_COUNTS0));
  LUT3 #(
    .INIT(8'h6A)) 
    \FAST_BIT_TIME_IN_CAN_CLK_COUNTS[6]_i_2 
       (.I0(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[6]),
        .I1(\FAST_BIT_TIME_IN_CAN_CLK_COUNTS[6]_i_3_n_0 ),
        .I2(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[5]),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \FAST_BIT_TIME_IN_CAN_CLK_COUNTS[6]_i_3 
       (.I0(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[4]),
        .I1(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[2]),
        .I2(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[1]),
        .I3(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[0]),
        .I4(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[3]),
        .O(\FAST_BIT_TIME_IN_CAN_CLK_COUNTS[6]_i_3_n_0 ));
  FDRE \FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[0] 
       (.C(can_clk),
        .CE(FAST_BIT_TIME_IN_CAN_CLK_COUNTS0),
        .D(p_0_in[0]),
        .Q(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[0]),
        .R(\RD_PTR_reg[1]_0 ));
  FDRE \FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[1] 
       (.C(can_clk),
        .CE(FAST_BIT_TIME_IN_CAN_CLK_COUNTS0),
        .D(p_0_in[1]),
        .Q(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[1]),
        .R(\RD_PTR_reg[1]_0 ));
  FDRE \FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[2] 
       (.C(can_clk),
        .CE(FAST_BIT_TIME_IN_CAN_CLK_COUNTS0),
        .D(p_0_in[2]),
        .Q(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[2]),
        .R(\RD_PTR_reg[1]_0 ));
  FDRE \FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[3] 
       (.C(can_clk),
        .CE(FAST_BIT_TIME_IN_CAN_CLK_COUNTS0),
        .D(p_0_in[3]),
        .Q(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[3]),
        .R(\RD_PTR_reg[1]_0 ));
  FDRE \FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[4] 
       (.C(can_clk),
        .CE(FAST_BIT_TIME_IN_CAN_CLK_COUNTS0),
        .D(p_0_in[4]),
        .Q(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[4]),
        .R(\RD_PTR_reg[1]_0 ));
  FDRE \FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[5] 
       (.C(can_clk),
        .CE(FAST_BIT_TIME_IN_CAN_CLK_COUNTS0),
        .D(p_0_in[5]),
        .Q(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[5]),
        .R(\RD_PTR_reg[1]_0 ));
  FDRE \FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[6] 
       (.C(can_clk),
        .CE(FAST_BIT_TIME_IN_CAN_CLK_COUNTS0),
        .D(p_0_in[6]),
        .Q(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[6]),
        .R(\RD_PTR_reg[1]_0 ));
  FDRE FAST_TRANSMT_PT_D1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(FAST_TRANSMT_PT_D1_reg_0),
        .Q(FAST_TRANSMT_PT_D1),
        .R(SR));
  LUT5 #(
    .INIT(32'hE0000000)) 
    FIRST_FAST_TRANSMT_PT_FLG_i_1
       (.I0(FIRST_FAST_TRANSMT_PT_FLG),
        .I1(FAST_TRANSMT_PT_D1),
        .I2(FIRST_FAST_TRANSMT_PT_FLG_reg_0),
        .I3(BRS_EN_BTR),
        .I4(dest_arst),
        .O(FIRST_FAST_TRANSMT_PT_FLG_i_1_n_0));
  FDRE FIRST_FAST_TRANSMT_PT_FLG_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(FIRST_FAST_TRANSMT_PT_FLG_i_1_n_0),
        .Q(FIRST_FAST_TRANSMT_PT_FLG),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h45555555)) 
    HSYNC_FLG_I_i_2
       (.I0(HSYNC_FLG_I_reg_2),
        .I1(D),
        .I2(HSYNC_FLG_I_reg),
        .I3(HSYNC_FLG_I_reg_0),
        .I4(HSYNC_FLG_I_reg_1),
        .O(HSYNC_OCCR_D_reg));
  LUT5 #(
    .INIT(32'hFFFB0008)) 
    \MEM[0]_i_1 
       (.I0(\MEM_reg[0]_0 ),
        .I1(\WR_PTR_reg[1]_0 ),
        .I2(WR_PTR[0]),
        .I3(WR_PTR[1]),
        .I4(MEM[0]),
        .O(\MEM[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFBF0080)) 
    \MEM[1]_i_1 
       (.I0(\MEM_reg[0]_0 ),
        .I1(WR_PTR[0]),
        .I2(\WR_PTR_reg[1]_0 ),
        .I3(WR_PTR[1]),
        .I4(MEM[1]),
        .O(\MEM[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \MEM[2]_i_1 
       (.I0(\MEM_reg[0]_0 ),
        .I1(WR_PTR[0]),
        .I2(WR_PTR[1]),
        .I3(\WR_PTR_reg[1]_0 ),
        .I4(MEM[2]),
        .O(\MEM[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \MEM[3]_i_1 
       (.I0(\MEM_reg[0]_0 ),
        .I1(WR_PTR[0]),
        .I2(WR_PTR[1]),
        .I3(\WR_PTR_reg[1]_0 ),
        .I4(MEM[3]),
        .O(\MEM[3]_i_1_n_0 ));
  FDRE \MEM_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\MEM[0]_i_1_n_0 ),
        .Q(MEM[0]),
        .R(SR));
  FDRE \MEM_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\MEM[1]_i_1_n_0 ),
        .Q(MEM[1]),
        .R(SR));
  FDRE \MEM_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\MEM[2]_i_1_n_0 ),
        .Q(MEM[2]),
        .R(SR));
  FDRE \MEM_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\MEM[3]_i_1_n_0 ),
        .Q(MEM[3]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT5 #(
    .INIT(32'h0000A4DA)) 
    \PIPELINED_BITS[0]_i_1 
       (.I0(\PIPELINED_BITS_reg[0]_0 ),
        .I1(\PIPELINED_BITS_reg[1]_0 ),
        .I2(FAST_TRANSMT_PT_D1),
        .I3(TDC_SSP_SAMP_PT_reg_0),
        .I4(\PIPELINED_BITS_reg[0]_1 ),
        .O(\PIPELINED_BITS[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT5 #(
    .INIT(32'h0000FD40)) 
    \PIPELINED_BITS[1]_i_1 
       (.I0(TDC_SSP_SAMP_PT_reg_0),
        .I1(FAST_TRANSMT_PT_D1),
        .I2(\PIPELINED_BITS_reg[0]_0 ),
        .I3(\PIPELINED_BITS_reg[1]_0 ),
        .I4(\PIPELINED_BITS_reg[0]_1 ),
        .O(\PIPELINED_BITS[1]_i_1_n_0 ));
  FDRE \PIPELINED_BITS_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\PIPELINED_BITS[0]_i_1_n_0 ),
        .Q(\PIPELINED_BITS_reg[0]_0 ),
        .R(1'b0));
  FDRE \PIPELINED_BITS_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\PIPELINED_BITS[1]_i_1_n_0 ),
        .Q(\PIPELINED_BITS_reg[1]_0 ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \RD_PTR[0]_i_1 
       (.I0(TDC_SSP_SAMP_PT_reg_0),
        .I1(RD_PTR[0]),
        .O(\RD_PTR[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \RD_PTR[1]_i_2 
       (.I0(RD_PTR[0]),
        .I1(TDC_SSP_SAMP_PT_reg_0),
        .I2(RD_PTR[1]),
        .O(\RD_PTR[1]_i_2_n_0 ));
  FDRE \RD_PTR_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\RD_PTR[0]_i_1_n_0 ),
        .Q(RD_PTR[0]),
        .R(\RD_PTR_reg[1]_0 ));
  FDRE \RD_PTR_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\RD_PTR[1]_i_2_n_0 ),
        .Q(RD_PTR[1]),
        .R(\RD_PTR_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hFFFFF444FFFFFF44)) 
    RSYNC_FLG_I_i_3
       (.I0(RSYNC_FLG_I_reg),
        .I1(FIRST_FAST_TRANSMT_PT_FLG_reg_0),
        .I2(RSYNC_FLG_I_reg_0),
        .I3(RSYNC_FLG_I_reg_1),
        .I4(RSYNC_FLG_I_i_4_n_0),
        .I5(RSYNC_OCCR_D_reg),
        .O(TXE_TXING_reg));
  LUT6 #(
    .INIT(64'h888888F8FFFFFFFF)) 
    RSYNC_FLG_I_i_4
       (.I0(HSYNC_FLG_I_reg_1),
        .I1(RSYNC_FLG_I_reg_1),
        .I2(RSYNC_FLG_I_i_3_1),
        .I3(RSYNC_FLG_I_i_6_n_0),
        .I4(RSYNC_FLG_I_i_3_0),
        .I5(dest_arst),
        .O(RSYNC_FLG_I_i_4_n_0));
  LUT6 #(
    .INIT(64'h00000000AAAA0888)) 
    RSYNC_FLG_I_i_6
       (.I0(RSYNC_OCCR_D_reg),
        .I1(TXING_BRS_EN_BTR_D1),
        .I2(FIRST_FAST_TRANSMT_PT_FLG_reg_0),
        .I3(BRS_EN_BTR),
        .I4(SSP_EN_D1),
        .I5(SSP_EN),
        .O(RSYNC_FLG_I_i_6_n_0));
  LUT6 #(
    .INIT(64'hEA00000000000000)) 
    SECOND_FAST_TRANSMT_PT_FLG_i_1
       (.I0(SECOND_FAST_TRANSMT_PT_FLG),
        .I1(FIRST_FAST_TRANSMT_PT_FLG),
        .I2(FAST_TRANSMT_PT_D1),
        .I3(FIRST_FAST_TRANSMT_PT_FLG_reg_0),
        .I4(BRS_EN_BTR),
        .I5(dest_arst),
        .O(SECOND_FAST_TRANSMT_PT_FLG_i_1_n_0));
  FDRE SECOND_FAST_TRANSMT_PT_FLG_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(SECOND_FAST_TRANSMT_PT_FLG_i_1_n_0),
        .Q(SECOND_FAST_TRANSMT_PT_FLG),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    SSP_BTL_TXBIT_I0
       (.I0(MEM[3]),
        .I1(MEM[2]),
        .I2(RD_PTR[1]),
        .I3(MEM[1]),
        .I4(RD_PTR[0]),
        .I5(MEM[0]),
        .O(\MEM_reg[3]_0 ));
  FDSE SSP_BTL_TXBIT_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(SSP_BTL_TXBIT_I_reg_0),
        .Q(SSP_BTL_TXBIT_I),
        .S(SR));
  LUT6 #(
    .INIT(64'h0B000B0B0BBB0B0B)) 
    \SSP_COUNT_DOWN[0]_i_1 
       (.I0(\SSP_COUNT_DOWN[6]_i_7_n_0 ),
        .I1(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[0]),
        .I2(\SSP_COUNT_DOWN_reg_n_0_[0] ),
        .I3(FIRST_FAST_TRANSMT_PT_FLG),
        .I4(FAST_TRANSMT_PT_D1),
        .I5(Q[0]),
        .O(SSP_COUNT_DOWN1_in[0]));
  LUT6 #(
    .INIT(64'h9A959A95AAAA9A95)) 
    \SSP_COUNT_DOWN[1]_i_1 
       (.I0(\SSP_COUNT_DOWN[1]_i_2_n_0 ),
        .I1(Q[0]),
        .I2(\SSP_COUNT_DOWN[1]_i_3_n_0 ),
        .I3(\SSP_COUNT_DOWN_reg_n_0_[0] ),
        .I4(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[0]),
        .I5(\SSP_COUNT_DOWN[6]_i_7_n_0 ),
        .O(SSP_COUNT_DOWN1_in[1]));
  LUT6 #(
    .INIT(64'hF444F444FFFFF444)) 
    \SSP_COUNT_DOWN[1]_i_2 
       (.I0(\SSP_COUNT_DOWN[6]_i_5_n_0 ),
        .I1(\SSP_COUNT_DOWN_reg_n_0_[1] ),
        .I2(Q[1]),
        .I3(\SSP_COUNT_DOWN[1]_i_3_n_0 ),
        .I4(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[1]),
        .I5(\SSP_COUNT_DOWN[6]_i_7_n_0 ),
        .O(\SSP_COUNT_DOWN[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \SSP_COUNT_DOWN[1]_i_3 
       (.I0(FAST_TRANSMT_PT_D1),
        .I1(FIRST_FAST_TRANSMT_PT_FLG),
        .O(\SSP_COUNT_DOWN[1]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \SSP_COUNT_DOWN[2]_i_1 
       (.I0(\SSP_COUNT_DOWN[3]_i_3_n_0 ),
        .I1(\SSP_COUNT_DOWN[3]_i_2_n_0 ),
        .O(SSP_COUNT_DOWN1_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT3 #(
    .INIT(8'hD2)) 
    \SSP_COUNT_DOWN[3]_i_1 
       (.I0(\SSP_COUNT_DOWN[3]_i_2_n_0 ),
        .I1(\SSP_COUNT_DOWN[3]_i_3_n_0 ),
        .I2(\SSP_COUNT_DOWN[3]_i_4_n_0 ),
        .O(SSP_COUNT_DOWN1_in[3]));
  LUT6 #(
    .INIT(64'h0000000047470047)) 
    \SSP_COUNT_DOWN[3]_i_2 
       (.I0(Q[0]),
        .I1(\SSP_COUNT_DOWN[1]_i_3_n_0 ),
        .I2(\SSP_COUNT_DOWN_reg_n_0_[0] ),
        .I3(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[0]),
        .I4(\SSP_COUNT_DOWN[6]_i_7_n_0 ),
        .I5(\SSP_COUNT_DOWN[1]_i_2_n_0 ),
        .O(\SSP_COUNT_DOWN[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF444F444FFFFF444)) 
    \SSP_COUNT_DOWN[3]_i_3 
       (.I0(\SSP_COUNT_DOWN[6]_i_5_n_0 ),
        .I1(\SSP_COUNT_DOWN_reg_n_0_[2] ),
        .I2(Q[2]),
        .I3(\SSP_COUNT_DOWN[1]_i_3_n_0 ),
        .I4(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[2]),
        .I5(\SSP_COUNT_DOWN[6]_i_7_n_0 ),
        .O(\SSP_COUNT_DOWN[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF44F444F444F4)) 
    \SSP_COUNT_DOWN[3]_i_4 
       (.I0(\SSP_COUNT_DOWN[6]_i_7_n_0 ),
        .I1(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[3]),
        .I2(\SSP_COUNT_DOWN_reg_n_0_[3] ),
        .I3(\SSP_COUNT_DOWN[6]_i_5_n_0 ),
        .I4(Q[3]),
        .I5(\SSP_COUNT_DOWN[1]_i_3_n_0 ),
        .O(\SSP_COUNT_DOWN[3]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \SSP_COUNT_DOWN[4]_i_1 
       (.I0(\SSP_COUNT_DOWN[6]_i_10_n_0 ),
        .I1(\SSP_COUNT_DOWN[6]_i_9_n_0 ),
        .O(SSP_COUNT_DOWN1_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT3 #(
    .INIT(8'h65)) 
    \SSP_COUNT_DOWN[5]_i_1 
       (.I0(\SSP_COUNT_DOWN[6]_i_8_n_0 ),
        .I1(\SSP_COUNT_DOWN[6]_i_10_n_0 ),
        .I2(\SSP_COUNT_DOWN[6]_i_9_n_0 ),
        .O(\SSP_COUNT_DOWN[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF444F444FFFFF444)) 
    \SSP_COUNT_DOWN[6]_i_10 
       (.I0(\SSP_COUNT_DOWN[6]_i_5_n_0 ),
        .I1(\SSP_COUNT_DOWN_reg_n_0_[4] ),
        .I2(Q[4]),
        .I3(\SSP_COUNT_DOWN[1]_i_3_n_0 ),
        .I4(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[4]),
        .I5(\SSP_COUNT_DOWN[6]_i_7_n_0 ),
        .O(\SSP_COUNT_DOWN[6]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hDDFDFDFDDFFFFFFF)) 
    \SSP_COUNT_DOWN[6]_i_11 
       (.I0(\SSP_COUNT_DOWN[6]_i_4_n_0 ),
        .I1(\SSP_COUNT_DOWN_reg_n_0_[0] ),
        .I2(TXING_BRS_EN_BTR_D1_reg_0),
        .I3(SECOND_FAST_TRANSMT_PT_FLG),
        .I4(FIRST_FAST_TRANSMT_PT_FLG),
        .I5(\SSP_COUNT_DOWN[6]_i_12_n_0 ),
        .O(\SSP_COUNT_DOWN[6]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \SSP_COUNT_DOWN[6]_i_12 
       (.I0(\PIPELINED_BITS_reg[1]_0 ),
        .I1(\PIPELINED_BITS_reg[0]_0 ),
        .O(\SSP_COUNT_DOWN[6]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'hFD)) 
    \SSP_COUNT_DOWN[6]_i_2 
       (.I0(\SSP_COUNT_DOWN[6]_i_4_n_0 ),
        .I1(\SSP_COUNT_DOWN_reg_n_0_[0] ),
        .I2(\SSP_COUNT_DOWN[6]_i_5_n_0 ),
        .O(\SSP_COUNT_DOWN[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAEAEAEAE51AEAEAE)) 
    \SSP_COUNT_DOWN[6]_i_3 
       (.I0(\SSP_COUNT_DOWN[6]_i_6_n_0 ),
        .I1(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[6]),
        .I2(\SSP_COUNT_DOWN[6]_i_7_n_0 ),
        .I3(\SSP_COUNT_DOWN[6]_i_8_n_0 ),
        .I4(\SSP_COUNT_DOWN[6]_i_9_n_0 ),
        .I5(\SSP_COUNT_DOWN[6]_i_10_n_0 ),
        .O(SSP_COUNT_DOWN1_in[6]));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \SSP_COUNT_DOWN[6]_i_4 
       (.I0(\SSP_COUNT_DOWN_reg_n_0_[5] ),
        .I1(\SSP_COUNT_DOWN_reg_n_0_[4] ),
        .I2(\SSP_COUNT_DOWN_reg_n_0_[3] ),
        .I3(\SSP_COUNT_DOWN_reg_n_0_[1] ),
        .I4(\SSP_COUNT_DOWN_reg_n_0_[2] ),
        .I5(\SSP_COUNT_DOWN_reg_n_0_[6] ),
        .O(\SSP_COUNT_DOWN[6]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \SSP_COUNT_DOWN[6]_i_5 
       (.I0(FIRST_FAST_TRANSMT_PT_FLG),
        .I1(FAST_TRANSMT_PT_D1),
        .I2(\SSP_COUNT_DOWN[6]_i_11_n_0 ),
        .O(\SSP_COUNT_DOWN[6]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT5 #(
    .INIT(32'h20FF2020)) 
    \SSP_COUNT_DOWN[6]_i_6 
       (.I0(FAST_TRANSMT_PT_D1),
        .I1(FIRST_FAST_TRANSMT_PT_FLG),
        .I2(Q[6]),
        .I3(\SSP_COUNT_DOWN[6]_i_5_n_0 ),
        .I4(\SSP_COUNT_DOWN_reg_n_0_[6] ),
        .O(\SSP_COUNT_DOWN[6]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \SSP_COUNT_DOWN[6]_i_7 
       (.I0(\SSP_COUNT_DOWN[6]_i_11_n_0 ),
        .I1(FIRST_FAST_TRANSMT_PT_FLG),
        .I2(FAST_TRANSMT_PT_D1),
        .O(\SSP_COUNT_DOWN[6]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0000BB0BBB0BBB0B)) 
    \SSP_COUNT_DOWN[6]_i_8 
       (.I0(\SSP_COUNT_DOWN[6]_i_7_n_0 ),
        .I1(FAST_BIT_TIME_IN_CAN_CLK_COUNTS_reg[5]),
        .I2(\SSP_COUNT_DOWN_reg_n_0_[5] ),
        .I3(\SSP_COUNT_DOWN[6]_i_5_n_0 ),
        .I4(Q[5]),
        .I5(\SSP_COUNT_DOWN[1]_i_3_n_0 ),
        .O(\SSP_COUNT_DOWN[6]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \SSP_COUNT_DOWN[6]_i_9 
       (.I0(\SSP_COUNT_DOWN[3]_i_2_n_0 ),
        .I1(\SSP_COUNT_DOWN[3]_i_3_n_0 ),
        .I2(\SSP_COUNT_DOWN[3]_i_4_n_0 ),
        .O(\SSP_COUNT_DOWN[6]_i_9_n_0 ));
  FDRE \SSP_COUNT_DOWN_reg[0] 
       (.C(can_clk),
        .CE(\SSP_COUNT_DOWN[6]_i_2_n_0 ),
        .D(SSP_COUNT_DOWN1_in[0]),
        .Q(\SSP_COUNT_DOWN_reg_n_0_[0] ),
        .R(\SSP_COUNT_DOWN_reg[6]_0 ));
  FDRE \SSP_COUNT_DOWN_reg[1] 
       (.C(can_clk),
        .CE(\SSP_COUNT_DOWN[6]_i_2_n_0 ),
        .D(SSP_COUNT_DOWN1_in[1]),
        .Q(\SSP_COUNT_DOWN_reg_n_0_[1] ),
        .R(\SSP_COUNT_DOWN_reg[6]_0 ));
  FDRE \SSP_COUNT_DOWN_reg[2] 
       (.C(can_clk),
        .CE(\SSP_COUNT_DOWN[6]_i_2_n_0 ),
        .D(SSP_COUNT_DOWN1_in[2]),
        .Q(\SSP_COUNT_DOWN_reg_n_0_[2] ),
        .R(\SSP_COUNT_DOWN_reg[6]_0 ));
  FDRE \SSP_COUNT_DOWN_reg[3] 
       (.C(can_clk),
        .CE(\SSP_COUNT_DOWN[6]_i_2_n_0 ),
        .D(SSP_COUNT_DOWN1_in[3]),
        .Q(\SSP_COUNT_DOWN_reg_n_0_[3] ),
        .R(\SSP_COUNT_DOWN_reg[6]_0 ));
  FDRE \SSP_COUNT_DOWN_reg[4] 
       (.C(can_clk),
        .CE(\SSP_COUNT_DOWN[6]_i_2_n_0 ),
        .D(SSP_COUNT_DOWN1_in[4]),
        .Q(\SSP_COUNT_DOWN_reg_n_0_[4] ),
        .R(\SSP_COUNT_DOWN_reg[6]_0 ));
  FDRE \SSP_COUNT_DOWN_reg[5] 
       (.C(can_clk),
        .CE(\SSP_COUNT_DOWN[6]_i_2_n_0 ),
        .D(\SSP_COUNT_DOWN[5]_i_1_n_0 ),
        .Q(\SSP_COUNT_DOWN_reg_n_0_[5] ),
        .R(\SSP_COUNT_DOWN_reg[6]_0 ));
  FDRE \SSP_COUNT_DOWN_reg[6] 
       (.C(can_clk),
        .CE(\SSP_COUNT_DOWN[6]_i_2_n_0 ),
        .D(SSP_COUNT_DOWN1_in[6]),
        .Q(\SSP_COUNT_DOWN_reg_n_0_[6] ),
        .R(\SSP_COUNT_DOWN_reg[6]_0 ));
  FDSE SSP_RCVD_RXBIT_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(SSP_RCVD_RXBIT_reg_0),
        .Q(SSP_RCVD_RXBIT),
        .S(SR));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT5 #(
    .INIT(32'h55455575)) 
    \TDC_COUNTER[0]_i_1 
       (.I0(Q[0]),
        .I1(TDC_COUNTING_START_D1),
        .I2(TDC_TRIG_COND_D1),
        .I3(\MEM_reg[0]_0 ),
        .I4(\TDC_COUNTER_reg[6]_0 [0]),
        .O(TDC_COUNTER[0]));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT5 #(
    .INIT(32'h335ACC5A)) 
    \TDC_COUNTER[1]_i_1 
       (.I0(Q[0]),
        .I1(\TDC_COUNTER_reg[6]_0 [0]),
        .I2(Q[1]),
        .I3(\TDC_COUNTER[6]_i_3_n_0 ),
        .I4(\TDC_COUNTER_reg[6]_0 [1]),
        .O(\TDC_COUNTER[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h5FA03F3F5FA0C0C0)) 
    \TDC_COUNTER[2]_i_1 
       (.I0(\TDC_COUNTER_reg[6]_0 [1]),
        .I1(Q[1]),
        .I2(\TDC_COUNTER[2]_i_2_n_0 ),
        .I3(\TDC_COUNTER_reg[6]_0 [2]),
        .I4(\TDC_COUNTER[6]_i_3_n_0 ),
        .I5(Q[2]),
        .O(TDC_COUNTER[2]));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    \TDC_COUNTER[2]_i_2 
       (.I0(\TDC_COUNTER_reg[6]_0 [0]),
        .I1(\MEM_reg[0]_0 ),
        .I2(TDC_TRIG_COND_D1),
        .I3(TDC_COUNTING_START_D1),
        .I4(Q[0]),
        .O(\TDC_COUNTER[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h3FC05F5F3FC0A0A0)) 
    \TDC_COUNTER[3]_i_1 
       (.I0(Q[2]),
        .I1(\TDC_COUNTER_reg[6]_0 [2]),
        .I2(\TDC_COUNTER[3]_i_2_n_0 ),
        .I3(\TDC_COUNTER_reg[6]_0 [3]),
        .I4(\TDC_COUNTER[6]_i_3_n_0 ),
        .I5(Q[3]),
        .O(TDC_COUNTER[3]));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT5 #(
    .INIT(32'hCCA000A0)) 
    \TDC_COUNTER[3]_i_2 
       (.I0(Q[0]),
        .I1(\TDC_COUNTER_reg[6]_0 [0]),
        .I2(Q[1]),
        .I3(\TDC_COUNTER[6]_i_3_n_0 ),
        .I4(\TDC_COUNTER_reg[6]_0 [1]),
        .O(\TDC_COUNTER[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h3F3F5FA0C0C05FA0)) 
    \TDC_COUNTER[4]_i_1 
       (.I0(Q[3]),
        .I1(\TDC_COUNTER_reg[6]_0 [3]),
        .I2(\TDC_COUNTER[4]_i_2_n_0 ),
        .I3(Q[4]),
        .I4(\TDC_COUNTER[6]_i_3_n_0 ),
        .I5(\TDC_COUNTER_reg[6]_0 [4]),
        .O(\TDC_COUNTER[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hA000C0C0A0000000)) 
    \TDC_COUNTER[4]_i_2 
       (.I0(\TDC_COUNTER_reg[6]_0 [1]),
        .I1(Q[1]),
        .I2(\TDC_COUNTER[2]_i_2_n_0 ),
        .I3(\TDC_COUNTER_reg[6]_0 [2]),
        .I4(\TDC_COUNTER[6]_i_3_n_0 ),
        .I5(Q[2]),
        .O(\TDC_COUNTER[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6666656666666A66)) 
    \TDC_COUNTER[5]_i_1 
       (.I0(\TDC_COUNTER[6]_i_6_n_0 ),
        .I1(Q[5]),
        .I2(TDC_COUNTING_START_D1),
        .I3(TDC_TRIG_COND_D1),
        .I4(\MEM_reg[0]_0 ),
        .I5(\TDC_COUNTER_reg[6]_0 [5]),
        .O(TDC_COUNTER[5]));
  LUT6 #(
    .INIT(64'hFFFFBFFFAAAAAAAA)) 
    \TDC_COUNTER[6]_i_1 
       (.I0(\TDC_COUNTER[6]_i_3_n_0 ),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[4]),
        .I4(\TDC_COUNTER[6]_i_4_n_0 ),
        .I5(\TDC_COUNTER[6]_i_5_n_0 ),
        .O(\TDC_COUNTER[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA0A03CCC)) 
    \TDC_COUNTER[6]_i_2 
       (.I0(\TDC_COUNTER_reg[6]_0 [5]),
        .I1(Q[6]),
        .I2(\TDC_COUNTER[6]_i_6_n_0 ),
        .I3(Q[5]),
        .I4(\TDC_COUNTER[6]_i_3_n_0 ),
        .O(TDC_COUNTER[6]));
  LUT3 #(
    .INIT(8'h04)) 
    \TDC_COUNTER[6]_i_3 
       (.I0(\MEM_reg[0]_0 ),
        .I1(TDC_TRIG_COND_D1),
        .I2(TDC_COUNTING_START_D1),
        .O(\TDC_COUNTER[6]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \TDC_COUNTER[6]_i_4 
       (.I0(Q[5]),
        .I1(Q[6]),
        .I2(Q[1]),
        .I3(Q[3]),
        .O(\TDC_COUNTER[6]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT5 #(
    .INIT(32'h00E20000)) 
    \TDC_COUNTER[6]_i_5 
       (.I0(\TDC_COUNTER_reg[6]_1 ),
        .I1(\TDC_COUNTER_reg[6]_2 ),
        .I2(CAN_PHY_RX_I_NEG_FLOP),
        .I3(\MEM_reg[0]_0 ),
        .I4(TDC_TRIG_COND_D1),
        .O(\TDC_COUNTER[6]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hC0C0A0000000A000)) 
    \TDC_COUNTER[6]_i_6 
       (.I0(Q[3]),
        .I1(\TDC_COUNTER_reg[6]_0 [3]),
        .I2(\TDC_COUNTER[4]_i_2_n_0 ),
        .I3(Q[4]),
        .I4(\TDC_COUNTER[6]_i_3_n_0 ),
        .I5(\TDC_COUNTER_reg[6]_0 [4]),
        .O(\TDC_COUNTER[6]_i_6_n_0 ));
  FDRE \TDC_COUNTER_reg[0] 
       (.C(can_clk),
        .CE(\TDC_COUNTER[6]_i_1_n_0 ),
        .D(TDC_COUNTER[0]),
        .Q(Q[0]),
        .R(\SSP_COUNT_DOWN_reg[6]_0 ));
  FDRE \TDC_COUNTER_reg[1] 
       (.C(can_clk),
        .CE(\TDC_COUNTER[6]_i_1_n_0 ),
        .D(\TDC_COUNTER[1]_i_1_n_0 ),
        .Q(Q[1]),
        .R(\SSP_COUNT_DOWN_reg[6]_0 ));
  FDRE \TDC_COUNTER_reg[2] 
       (.C(can_clk),
        .CE(\TDC_COUNTER[6]_i_1_n_0 ),
        .D(TDC_COUNTER[2]),
        .Q(Q[2]),
        .R(\SSP_COUNT_DOWN_reg[6]_0 ));
  FDRE \TDC_COUNTER_reg[3] 
       (.C(can_clk),
        .CE(\TDC_COUNTER[6]_i_1_n_0 ),
        .D(TDC_COUNTER[3]),
        .Q(Q[3]),
        .R(\SSP_COUNT_DOWN_reg[6]_0 ));
  FDRE \TDC_COUNTER_reg[4] 
       (.C(can_clk),
        .CE(\TDC_COUNTER[6]_i_1_n_0 ),
        .D(\TDC_COUNTER[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(\SSP_COUNT_DOWN_reg[6]_0 ));
  FDRE \TDC_COUNTER_reg[5] 
       (.C(can_clk),
        .CE(\TDC_COUNTER[6]_i_1_n_0 ),
        .D(TDC_COUNTER[5]),
        .Q(Q[5]),
        .R(\SSP_COUNT_DOWN_reg[6]_0 ));
  FDRE \TDC_COUNTER_reg[6] 
       (.C(can_clk),
        .CE(\TDC_COUNTER[6]_i_1_n_0 ),
        .D(TDC_COUNTER[6]),
        .Q(Q[6]),
        .R(\SSP_COUNT_DOWN_reg[6]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT2 #(
    .INIT(4'h2)) 
    TDC_COUNTING_START_D1_i_1
       (.I0(TDC_TRIG_COND_D1),
        .I1(\MEM_reg[0]_0 ),
        .O(TDC_COUNTING_START));
  FDRE TDC_COUNTING_START_D1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TDC_COUNTING_START),
        .Q(TDC_COUNTING_START_D1),
        .R(SR));
  FDRE TDC_SSP_SAMP_PT_D1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TDC_SSP_SAMP_PT_reg_0),
        .Q(TDC_SSP_SAMP_PT_D1),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT4 #(
    .INIT(16'hA800)) 
    TDC_SSP_SAMP_PT_i_1
       (.I0(\SSP_COUNT_DOWN[6]_i_4_n_0 ),
        .I1(\PIPELINED_BITS_reg[1]_0 ),
        .I2(\PIPELINED_BITS_reg[0]_0 ),
        .I3(\SSP_COUNT_DOWN_reg_n_0_[0] ),
        .O(TDC_SSP_SAMP_PT0));
  FDRE TDC_SSP_SAMP_PT_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TDC_SSP_SAMP_PT0),
        .Q(TDC_SSP_SAMP_PT_reg_0),
        .R(SR));
  FDRE TXING_BRS_EN_BTR_D1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TXING_BRS_EN_BTR_D1_reg_0),
        .Q(TXING_BRS_EN_BTR_D1),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \WR_PTR[0]_i_1 
       (.I0(\WR_PTR_reg[1]_0 ),
        .I1(WR_PTR[0]),
        .O(\WR_PTR[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \WR_PTR[1]_i_1 
       (.I0(WR_PTR[0]),
        .I1(\WR_PTR_reg[1]_0 ),
        .I2(WR_PTR[1]),
        .O(\WR_PTR[1]_i_1_n_0 ));
  FDRE \WR_PTR_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\WR_PTR[0]_i_1_n_0 ),
        .Q(WR_PTR[0]),
        .R(\RD_PTR_reg[1]_0 ));
  FDRE \WR_PTR_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\WR_PTR[1]_i_1_n_0 ),
        .Q(WR_PTR[1]),
        .R(\RD_PTR_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h0000000006CC6000)) 
    i__carry_i_3__5
       (.I0(\CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry [1]),
        .I1(\CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_0 ),
        .I2(\CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry [2]),
        .I3(dest_arst),
        .I4(\CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_1 ),
        .I5(i__carry_i_7__5_n_0),
        .O(S));
  LUT4 #(
    .INIT(16'hF220)) 
    i__carry_i_4__4
       (.I0(CAN_PHY_TX_POS_FLOP_X27[0]),
        .I1(BRSD_P_ERR_1TQ_FD_reg_1),
        .I2(\CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_0 ),
        .I3(CAN_PHY_TX_POS_FLOP_X27[1]),
        .O(DI));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    i__carry_i_7__5
       (.I0(BRSD_P_ERR_1TQ_FD_reg_1),
        .I1(dest_arst),
        .I2(\CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry [0]),
        .O(i__carry_i_7__5_n_0));
  LUT4 #(
    .INIT(16'h0990)) 
    i__carry_i_8__4
       (.I0(BRSD_P_ERR_1TQ_FD_reg_1),
        .I1(CAN_PHY_TX_POS_FLOP_X27[0]),
        .I2(\CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_0 ),
        .I3(CAN_PHY_TX_POS_FLOP_X27[1]),
        .O(BRSD_P_ERR_1TQ_FD_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT2 #(
    .INIT(4'h8)) 
    i__carry_i_8__5
       (.I0(O),
        .I1(dest_arst),
        .O(\arststages_ff_reg[1] ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_tl_top
   (TXING_BRS_EN_BTR,
    TDC_SSP_SAMP_PT,
    CAN_PHY_RX_D,
    CLKM_EN,
    CAN_PHY_RX_I1,
    BTL_SAMP_EN_FD2,
    BTL_SAMP_EN_FD1,
    MATCH_RESULT_FS2_D1,
    MATCH_RESULT_1_D1,
    RXE_MSGVAL_EARLY_F1,
    TS_RX_WEN_F1,
    RXE_RXMSG_VAL_F1,
    MATCH_RESULT_0_D1,
    RXE_RXMSG_INVAL_F1,
    RXE_RXMSG_VAL_F0,
    RXE_MSGVAL_EARLY_F0,
    RXE_RXMSG_INVAL_F0,
    TS_COUNTER_SW_RST_D2,
    CLKM_EN_D1,
    TS_RX_WEN,
    dest_out,
    BIS_HSYNC_FLG_I,
    TXE_TX_REN_D1_reg,
    CANCEL_OR_INVALIDATE_CONFIRMED_TL2OL,
    RXE_MSGVAL_FD1,
    RXE_MSGVAL_FD2,
    TXE_MSGVAL_FD1,
    TXE_MSGVAL_FD2,
    IC_SYNC_ISR_ARBLST,
    TXE_IC_ARBLSS_I,
    BSP_IN_IFSPACE,
    BSP_IN_ID_STATE_I,
    BSP_IN_ID_STATE_D1,
    BSP_IDVALID_FD1,
    BSP_IDVALID_FD2,
    ID_MATCH_EN,
    BSP_IN_EOF,
    RXE_RXFIFO_WEN_FD1,
    RXE_RXFIFO_WEN_FD2,
    MSR_LBACK_FS2,
    IFF_EN_FS2,
    IFF6_EN_FS2,
    MSR_SNOOP_FS2,
    IC_SYNC_SR_BSFR,
    IC_SYNC_SR_PEE,
    IC_SYNC_SR_RSTST,
    IC_SYNC_SR_SLEEP,
    IC_SYNC_SR_LBACK,
    IC_SYNC_SR_BIDLE,
    IC_SYNC_SR_ERRWRN,
    \IC_SYNC_SR_ESTAT_reg[1]_0 ,
    IC_SYNC_ISR_BSOFF,
    D,
    CO,
    BTL_SAMP_EN,
    CAN_PHY_TX_LP,
    SSP_RCVD_RXBIT,
    SSP_BTL_TXBIT_I,
    BTL_RXBIT,
    HSYNC_FLG_I,
    BSP_TXBIT_FD_reg,
    CAN_PHY_TX_POS_FLOP_X2_reg,
    CAN_PHY_TX_POS_FLOP_reg,
    IC_SYNC_ECR_WEN,
    IC_SYNC_ISR_MSGLST_F1,
    IC_SYNC_ISR_MSGLST,
    IC_SYNC_TSR_WEN,
    RXE_RTR_I,
    RXE_IDE_I,
    TXE_PASSTX_I,
    TXE_TX_REN_D1,
    TXE_TRNSMT_FLG_reg,
    BSP_TXBIT_FD,
    BSP_CRCERR_I_CAN_FLG,
    BSP_CRCERR_I_CANFD_FLG,
    TXE_TXING_reg,
    RXE_PASSFLG_I,
    IC_SYNC_ISR_RXOK,
    IC_SYNC_ISR_TXOK,
    BRS_EN_I_FLAG,
    IC_SYNC_ESR_BERR,
    IC_SYNC_ESR_CRCER,
    IC_SYNC_ESR_FMER,
    IC_SYNC_ESR_STER,
    IC_SYNC_ESR_ACKER,
    IC_SYNC_ESR_F_STER,
    IC_SYNC_ESR_F_FMER,
    IC_SYNC_ESR_F_CRCER,
    IC_SYNC_ESR_F_BERR,
    MSG_ON_CAN_BUS,
    RXE_FDF_I,
    RXE_ESI_I_reg,
    RXE_BRS_I,
    TDCV_CNT_REG_WEN,
    TXE_TXING_reg_0,
    \state_reg[4] ,
    \state_reg[0] ,
    BTL_SAMP_EN_D1_reg,
    \SM_REG_I_reg[1] ,
    \state_reg[2] ,
    \RXE_COUNTER_I_reg[4] ,
    \RXE_COUNTER_I_reg[5] ,
    TXE_TXING_reg_1,
    CAN_PHY_TX_POS_FLOP_X2,
    \RXE_COUNTER_I_reg[1] ,
    \RXE_COUNTER_I_reg[0] ,
    \state_reg[2]_0 ,
    Q,
    IC_REG_MSR_SNOOP_FS2_D1_reg,
    ena,
    TXE_MSGVAL_D1_I_reg,
    RXE_RXMSG_VAL_F0_reg,
    RXE_RXMSG_VAL_F0_reg_0,
    RXE_RXMSG_VAL_F1_reg,
    RXE_RXMSG_VAL_F1_reg_0,
    RXF_FULL_AT_MSG_BOUNDARY_reg,
    \RXE_DATA_STORED_AT_DLC_reg[0] ,
    \RXE_SREG_I_reg[24] ,
    TS_RX_WDATA_F1,
    \RXE_SREG_I_reg[30] ,
    BSP_TXBIT_FD_reg_0,
    \state_reg[0]_0 ,
    \state_reg[4]_0 ,
    BSP_CRCERR_I_CAN_FLG0,
    BSP_CRCERR_I_CANFD_FLG0,
    \state_reg[2]_1 ,
    BSP_TXBIT_FD_reg_1,
    BSP_TXBIT_I,
    BTL_RXBIT_I_reg,
    BRS_L_SP_FE_reg,
    BTL_RXBIT_I_reg_0,
    TXE_TXING055_out,
    HSYNC_FLG_I0,
    TXE_TX_REN_I,
    \RXE_COUNTER_I_reg[4]_0 ,
    \RXE_COUNTER_I_reg[6] ,
    \RXE_COUNTER_I_reg[4]_1 ,
    \RXE_COUNTER_I_reg[4]_2 ,
    \RXE_COUNTER_I_reg[4]_3 ,
    SM_FLAG_I_reg,
    \state_reg[3] ,
    ERR_TXBERR_I_FD_SSP_EN_1_reg,
    TXE_TXING_reg_2,
    HSYNC_OCCR_D_reg,
    \state_reg[0]_1 ,
    RXE_IDE_I_reg,
    BTL_RXBIT_I_reg_1,
    \state_reg[4]_1 ,
    \RXE_COUNTER_I_reg[0]_0 ,
    BTL_NTQ_I0_carry__0,
    \MATCHED_FILTER_INDEX_FS2_D1_reg[0] ,
    \MEM_reg[3] ,
    \EMU_OL_ECR_I_reg[0] ,
    \ID_FOR_MATCH_reg[0] ,
    IC_REG_MSR_LBACK,
    can_clk,
    \syncstages_ff_reg[0] ,
    \syncstages_ff_reg[0]_0 ,
    \syncstages_ff_reg[0]_1 ,
    \syncstages_ff_reg[0]_2 ,
    \syncstages_ff_reg[0]_3 ,
    \syncstages_ff_reg[0]_4 ,
    \syncstages_ff_reg[0]_5 ,
    \syncstages_ff_reg[0]_6 ,
    \syncstages_ff_reg[0]_7 ,
    SYNC_RST_TL,
    can_clk_x2,
    \syncstages_ff_reg[0]_8 ,
    \syncstages_ff_reg[0][4] ,
    \syncstages_ff_reg[0]_9 ,
    MATCH_RESULT_TO_BSP0,
    \syncstages_ff_reg[0]_10 ,
    src_in,
    \TXE_DLC_I_reg[0] ,
    E,
    ID_MATCH_EN_reg,
    CAN_PHY_TX_LP_reg,
    SSP_RCVD_RXBIT_reg,
    SSP_BTL_TXBIT_I_reg,
    BIS_HSYNC_FLG_I_reg,
    BTL_RXBIT_I_reg_2,
    HSYNC_FLG_I_reg,
    BSP_TXBIT_FD_reg_2,
    CAN_PHY_TX_POS_FLOP_X2_reg_0,
    CAN_PHY_TX_POS_FLOP_reg_0,
    IC_SYNC_ISR_MSGLST_F1_reg,
    IC_SYNC_ISR_MSGLST_reg,
    TIME_STAMP_CNT_REG_WEN_reg,
    RXE_RTR_I_reg,
    RXE_IDE_I_reg_0,
    TXE_PASSTX_I_reg,
    TXE_TX_REN_D1_reg_0,
    BSP_TXBIT_D1_reg,
    BSP_CRCERR_I_CAN_FLG_reg,
    BSP_CRCERR_I_CANFD_FLG_reg,
    CANCEL_CONFIRMED_TL2OL_I_reg,
    TXE_TXING_reg_3,
    RXE_IC_RXOK_I_reg,
    TXE_IC_TXOK_I_reg,
    TXE_IC_ARBLSS_I_reg,
    BSP_IC_BIT_ERROR_I_reg,
    BSP_IC_CRC_ERROR_I_reg,
    BSP_IC_FRM_ERROR_I_reg,
    BSP_IC_STUFF_ERROR_I_reg,
    BSP_IC_ACK_ERROR_I_reg,
    BSP_IC_F_STUFF_ERROR_I_reg,
    BSP_IC_F_FRM_ERROR_I_reg,
    BSP_IC_F_CRC_ERROR_I_reg,
    BSP_IC_F_BIT_ERROR_I_reg,
    MSG_ON_CAN_BUS_reg,
    RXE_FDF_I_reg,
    RXE_ESI_I_reg_0,
    RXE_BRS_I_reg,
    TDCV_CNT_REG_WEN_reg,
    dest_arst,
    CAN_PHY_RX_I_NEG_FLOP,
    \SM_REG_I_reg[0] ,
    OL_RX_FIFO_FULL,
    RXF_FULL_AT_MSG_BOUNDARY,
    TXE_BRAM_WEN,
    \addr_location_incr_count_reg[0] ,
    \wr_index_i_reg[6] ,
    \wr_index_i_reg[6]_0 ,
    RXF_FULL_AT_MSG_BOUNDARY_F1,
    OL_RX_FIFO_FULL_F1,
    \gen_wr_a.gen_word_narrow.mem_reg_1 ,
    RXE_PASSFLG_I_reg,
    S,
    \TIME_STAMP_CNT_CAPTURE_reg[15] ,
    SR,
    \ic_reg_n_brpr_cdc_tig_reg[0]_0 ,
    \ic_reg_n_btr_ts1_cdc_tig_reg[0]_0 ,
    \ic_reg_f_btr_ts1_cdc_tig_reg[0]_0 ,
    \ic_reg_n_btr_ts2_cdc_tig_reg[0]_0 ,
    \ic_reg_f_btr_ts2_cdc_tig_reg[0]_0 ,
    \ic_reg_n_btr_sjw_cdc_tig_reg[0]_0 ,
    \ic_reg_f_btr_sjw_cdc_tig_reg[0]_0 ,
    \ic_reg_wmr_rxfp_cdc_tig_reg[0]_0 );
  output TXING_BRS_EN_BTR;
  output TDC_SSP_SAMP_PT;
  output CAN_PHY_RX_D;
  output CLKM_EN;
  output CAN_PHY_RX_I1;
  output BTL_SAMP_EN_FD2;
  output BTL_SAMP_EN_FD1;
  output MATCH_RESULT_FS2_D1;
  output MATCH_RESULT_1_D1;
  output RXE_MSGVAL_EARLY_F1;
  output TS_RX_WEN_F1;
  output RXE_RXMSG_VAL_F1;
  output MATCH_RESULT_0_D1;
  output RXE_RXMSG_INVAL_F1;
  output RXE_RXMSG_VAL_F0;
  output RXE_MSGVAL_EARLY_F0;
  output RXE_RXMSG_INVAL_F0;
  output TS_COUNTER_SW_RST_D2;
  output CLKM_EN_D1;
  output TS_RX_WEN;
  output dest_out;
  output BIS_HSYNC_FLG_I;
  output TXE_TX_REN_D1_reg;
  output CANCEL_OR_INVALIDATE_CONFIRMED_TL2OL;
  output RXE_MSGVAL_FD1;
  output RXE_MSGVAL_FD2;
  output TXE_MSGVAL_FD1;
  output TXE_MSGVAL_FD2;
  output IC_SYNC_ISR_ARBLST;
  output TXE_IC_ARBLSS_I;
  output BSP_IN_IFSPACE;
  output BSP_IN_ID_STATE_I;
  output BSP_IN_ID_STATE_D1;
  output BSP_IDVALID_FD1;
  output BSP_IDVALID_FD2;
  output ID_MATCH_EN;
  output BSP_IN_EOF;
  output RXE_RXFIFO_WEN_FD1;
  output RXE_RXFIFO_WEN_FD2;
  output MSR_LBACK_FS2;
  output IFF_EN_FS2;
  output IFF6_EN_FS2;
  output MSR_SNOOP_FS2;
  output IC_SYNC_SR_BSFR;
  output IC_SYNC_SR_PEE;
  output IC_SYNC_SR_RSTST;
  output IC_SYNC_SR_SLEEP;
  output IC_SYNC_SR_LBACK;
  output IC_SYNC_SR_BIDLE;
  output IC_SYNC_SR_ERRWRN;
  output [0:0]\IC_SYNC_SR_ESTAT_reg[1]_0 ;
  output IC_SYNC_ISR_BSOFF;
  output [15:0]D;
  output [0:0]CO;
  output BTL_SAMP_EN;
  output CAN_PHY_TX_LP;
  output SSP_RCVD_RXBIT;
  output SSP_BTL_TXBIT_I;
  output BTL_RXBIT;
  output HSYNC_FLG_I;
  output BSP_TXBIT_FD_reg;
  output CAN_PHY_TX_POS_FLOP_X2_reg;
  output CAN_PHY_TX_POS_FLOP_reg;
  output IC_SYNC_ECR_WEN;
  output IC_SYNC_ISR_MSGLST_F1;
  output IC_SYNC_ISR_MSGLST;
  output IC_SYNC_TSR_WEN;
  output RXE_RTR_I;
  output RXE_IDE_I;
  output TXE_PASSTX_I;
  output TXE_TX_REN_D1;
  output TXE_TRNSMT_FLG_reg;
  output BSP_TXBIT_FD;
  output BSP_CRCERR_I_CAN_FLG;
  output BSP_CRCERR_I_CANFD_FLG;
  output TXE_TXING_reg;
  output RXE_PASSFLG_I;
  output IC_SYNC_ISR_RXOK;
  output IC_SYNC_ISR_TXOK;
  output BRS_EN_I_FLAG;
  output IC_SYNC_ESR_BERR;
  output IC_SYNC_ESR_CRCER;
  output IC_SYNC_ESR_FMER;
  output IC_SYNC_ESR_STER;
  output IC_SYNC_ESR_ACKER;
  output IC_SYNC_ESR_F_STER;
  output IC_SYNC_ESR_F_FMER;
  output IC_SYNC_ESR_F_CRCER;
  output IC_SYNC_ESR_F_BERR;
  output MSG_ON_CAN_BUS;
  output RXE_FDF_I;
  output RXE_ESI_I_reg;
  output RXE_BRS_I;
  output TDCV_CNT_REG_WEN;
  output TXE_TXING_reg_0;
  output \state_reg[4] ;
  output \state_reg[0] ;
  output BTL_SAMP_EN_D1_reg;
  output \SM_REG_I_reg[1] ;
  output \state_reg[2] ;
  output \RXE_COUNTER_I_reg[4] ;
  output \RXE_COUNTER_I_reg[5] ;
  output TXE_TXING_reg_1;
  output CAN_PHY_TX_POS_FLOP_X2;
  output \RXE_COUNTER_I_reg[1] ;
  output \RXE_COUNTER_I_reg[0] ;
  output \state_reg[2]_0 ;
  output [6:0]Q;
  output IC_REG_MSR_SNOOP_FS2_D1_reg;
  output ena;
  output [0:0]TXE_MSGVAL_D1_I_reg;
  output RXE_RXMSG_VAL_F0_reg;
  output [0:0]RXE_RXMSG_VAL_F0_reg_0;
  output RXE_RXMSG_VAL_F1_reg;
  output [0:0]RXE_RXMSG_VAL_F1_reg_0;
  output [0:0]RXF_FULL_AT_MSG_BOUNDARY_reg;
  output [31:0]\RXE_DATA_STORED_AT_DLC_reg[0] ;
  output [31:0]\RXE_SREG_I_reg[24] ;
  output [20:0]TS_RX_WDATA_F1;
  output [0:0]\RXE_SREG_I_reg[30] ;
  output BSP_TXBIT_FD_reg_0;
  output \state_reg[0]_0 ;
  output \state_reg[4]_0 ;
  output BSP_CRCERR_I_CAN_FLG0;
  output BSP_CRCERR_I_CANFD_FLG0;
  output \state_reg[2]_1 ;
  output BSP_TXBIT_FD_reg_1;
  output BSP_TXBIT_I;
  output BTL_RXBIT_I_reg;
  output BRS_L_SP_FE_reg;
  output BTL_RXBIT_I_reg_0;
  output TXE_TXING055_out;
  output HSYNC_FLG_I0;
  output TXE_TX_REN_I;
  output \RXE_COUNTER_I_reg[4]_0 ;
  output \RXE_COUNTER_I_reg[6] ;
  output \RXE_COUNTER_I_reg[4]_1 ;
  output \RXE_COUNTER_I_reg[4]_2 ;
  output \RXE_COUNTER_I_reg[4]_3 ;
  output SM_FLAG_I_reg;
  output \state_reg[3] ;
  output ERR_TXBERR_I_FD_SSP_EN_1_reg;
  output TXE_TXING_reg_2;
  output HSYNC_OCCR_D_reg;
  output \state_reg[0]_1 ;
  output RXE_IDE_I_reg;
  output BTL_RXBIT_I_reg_1;
  output \state_reg[4]_1 ;
  output \RXE_COUNTER_I_reg[0]_0 ;
  output [0:0]BTL_NTQ_I0_carry__0;
  output \MATCHED_FILTER_INDEX_FS2_D1_reg[0] ;
  output \MEM_reg[3] ;
  output [15:0]\EMU_OL_ECR_I_reg[0] ;
  output [31:0]\ID_FOR_MATCH_reg[0] ;
  input IC_REG_MSR_LBACK;
  input can_clk;
  input [14:0]\syncstages_ff_reg[0] ;
  input \syncstages_ff_reg[0]_0 ;
  input \syncstages_ff_reg[0]_1 ;
  input \syncstages_ff_reg[0]_2 ;
  input [2:0]\syncstages_ff_reg[0]_3 ;
  input \syncstages_ff_reg[0]_4 ;
  input \syncstages_ff_reg[0]_5 ;
  input \syncstages_ff_reg[0]_6 ;
  input \syncstages_ff_reg[0]_7 ;
  input SYNC_RST_TL;
  input can_clk_x2;
  input \syncstages_ff_reg[0]_8 ;
  input [4:0]\syncstages_ff_reg[0][4] ;
  input \syncstages_ff_reg[0]_9 ;
  input MATCH_RESULT_TO_BSP0;
  input \syncstages_ff_reg[0]_10 ;
  input src_in;
  input [31:0]\TXE_DLC_I_reg[0] ;
  input [0:0]E;
  input ID_MATCH_EN_reg;
  input CAN_PHY_TX_LP_reg;
  input SSP_RCVD_RXBIT_reg;
  input SSP_BTL_TXBIT_I_reg;
  input BIS_HSYNC_FLG_I_reg;
  input BTL_RXBIT_I_reg_2;
  input HSYNC_FLG_I_reg;
  input BSP_TXBIT_FD_reg_2;
  input CAN_PHY_TX_POS_FLOP_X2_reg_0;
  input CAN_PHY_TX_POS_FLOP_reg_0;
  input IC_SYNC_ISR_MSGLST_F1_reg;
  input IC_SYNC_ISR_MSGLST_reg;
  input TIME_STAMP_CNT_REG_WEN_reg;
  input RXE_RTR_I_reg;
  input RXE_IDE_I_reg_0;
  input TXE_PASSTX_I_reg;
  input TXE_TX_REN_D1_reg_0;
  input BSP_TXBIT_D1_reg;
  input BSP_CRCERR_I_CAN_FLG_reg;
  input BSP_CRCERR_I_CANFD_FLG_reg;
  input CANCEL_CONFIRMED_TL2OL_I_reg;
  input TXE_TXING_reg_3;
  input RXE_IC_RXOK_I_reg;
  input TXE_IC_TXOK_I_reg;
  input TXE_IC_ARBLSS_I_reg;
  input BSP_IC_BIT_ERROR_I_reg;
  input BSP_IC_CRC_ERROR_I_reg;
  input BSP_IC_FRM_ERROR_I_reg;
  input BSP_IC_STUFF_ERROR_I_reg;
  input BSP_IC_ACK_ERROR_I_reg;
  input BSP_IC_F_STUFF_ERROR_I_reg;
  input BSP_IC_F_FRM_ERROR_I_reg;
  input BSP_IC_F_CRC_ERROR_I_reg;
  input BSP_IC_F_BIT_ERROR_I_reg;
  input MSG_ON_CAN_BUS_reg;
  input RXE_FDF_I_reg;
  input RXE_ESI_I_reg_0;
  input RXE_BRS_I_reg;
  input TDCV_CNT_REG_WEN_reg;
  input dest_arst;
  input CAN_PHY_RX_I_NEG_FLOP;
  input \SM_REG_I_reg[0] ;
  input OL_RX_FIFO_FULL;
  input RXF_FULL_AT_MSG_BOUNDARY;
  input TXE_BRAM_WEN;
  input \addr_location_incr_count_reg[0] ;
  input [0:0]\wr_index_i_reg[6] ;
  input [0:0]\wr_index_i_reg[6]_0 ;
  input RXF_FULL_AT_MSG_BOUNDARY_F1;
  input OL_RX_FIFO_FULL_F1;
  input [10:0]\gen_wr_a.gen_word_narrow.mem_reg_1 ;
  input RXE_PASSFLG_I_reg;
  input [0:0]S;
  input [0:0]\TIME_STAMP_CNT_CAPTURE_reg[15] ;
  input [0:0]SR;
  input [7:0]\ic_reg_n_brpr_cdc_tig_reg[0]_0 ;
  input [7:0]\ic_reg_n_btr_ts1_cdc_tig_reg[0]_0 ;
  input [4:0]\ic_reg_f_btr_ts1_cdc_tig_reg[0]_0 ;
  input [6:0]\ic_reg_n_btr_ts2_cdc_tig_reg[0]_0 ;
  input [3:0]\ic_reg_f_btr_ts2_cdc_tig_reg[0]_0 ;
  input [6:0]\ic_reg_n_btr_sjw_cdc_tig_reg[0]_0 ;
  input [3:0]\ic_reg_f_btr_sjw_cdc_tig_reg[0]_0 ;
  input [4:0]\ic_reg_wmr_rxfp_cdc_tig_reg[0]_0 ;

  wire BIS_COUNTER_I0;
  wire BIS_HSYNC_FLG_I;
  wire BIS_HSYNC_FLG_I_D1;
  wire BIS_HSYNC_FLG_I_reg;
  wire BRSD_P_ERR_1TQ;
  wire BRSD_P_ERR_1TQ_FD;
  wire BRS_EN_BTR;
  wire BRS_EN_BTR_D1;
  wire BRS_EN_I_FLAG;
  wire BRS_L_SP_FE_reg;
  wire BSP_CRCERR_I_CANFD_FLG;
  wire BSP_CRCERR_I_CANFD_FLG0;
  wire BSP_CRCERR_I_CANFD_FLG_reg;
  wire BSP_CRCERR_I_CAN_FLG;
  wire BSP_CRCERR_I_CAN_FLG0;
  wire BSP_CRCERR_I_CAN_FLG_reg;
  wire BSP_IC_ACK_ERROR_I_reg;
  wire BSP_IC_BIT_ERROR_I_reg;
  wire BSP_IC_CRC_ERROR_I_reg;
  wire BSP_IC_FRM_ERROR_I_reg;
  wire BSP_IC_F_BIT_ERROR_I_reg;
  wire BSP_IC_F_CRC_ERROR_I_reg;
  wire BSP_IC_F_FRM_ERROR_I_reg;
  wire BSP_IC_F_STUFF_ERROR_I_reg;
  wire BSP_IC_STUFF_ERROR_I_reg;
  wire BSP_IDVALID_FD1;
  wire BSP_IDVALID_FD2;
  wire BSP_IN_EOF;
  wire BSP_IN_ID_STATE_D1;
  wire BSP_IN_ID_STATE_I;
  wire BSP_IN_IFSPACE;
  wire BSP_TXBIT_D1_reg;
  wire BSP_TXBIT_FD;
  wire BSP_TXBIT_FD_reg;
  wire BSP_TXBIT_FD_reg_0;
  wire BSP_TXBIT_FD_reg_1;
  wire BSP_TXBIT_FD_reg_2;
  wire BSP_TXBIT_I;
  wire [0:0]BTL_COUNTER_I;
  wire [0:0]BTL_NTQ_I0_carry__0;
  wire BTL_RXBIT;
  wire BTL_RXBIT_I_reg;
  wire BTL_RXBIT_I_reg_0;
  wire BTL_RXBIT_I_reg_1;
  wire BTL_RXBIT_I_reg_2;
  wire BTL_SAMP_EN;
  wire BTL_SAMP_EN_D1_reg;
  wire BTL_SAMP_EN_FD1;
  wire BTL_SAMP_EN_FD2;
  wire BTL_TRNSMT_EN_FD1;
  wire BTL_TRNSMT_EN_I1;
  wire CANCEL_CONFIRMED_TL2OL_I_reg;
  wire CANCEL_OR_INVALIDATE_CONFIRMED_TL2OL;
  wire CAN_PHY_RX_D;
  wire CAN_PHY_RX_I;
  wire CAN_PHY_RX_I1;
  wire CAN_PHY_RX_I_NEG_FLOP;
  wire CAN_PHY_TX_LP;
  wire CAN_PHY_TX_LP_reg;
  wire CAN_PHY_TX_POS_FLOP_X2;
  wire [8:0]CAN_PHY_TX_POS_FLOP_X27;
  wire CAN_PHY_TX_POS_FLOP_X2_reg;
  wire CAN_PHY_TX_POS_FLOP_X2_reg_0;
  wire CAN_PHY_TX_POS_FLOP_reg;
  wire CAN_PHY_TX_POS_FLOP_reg_0;
  wire [1:2]CLKD_COUNTER_I_reg;
  wire CLKM_EN;
  wire CLKM_EN_D1;
  wire CNTR_EQ_NTMSJW_I;
  wire CNTR_EQ_SAMP1;
  wire CNTR_EQ_SAMP2;
  wire CNTR_GT_2PSAMP_I;
  wire CNTR_GT_SAMP_I;
  wire CNTR_LEQ_SJW_I1;
  wire CNTR_LT_NTMSJW_I;
  wire [0:0]CO;
  wire [0:0]CRC17_CRCWORD;
  wire CRC17_FD_CRCWORD_I10;
  wire [0:5]CRC21_CRCWORD;
  wire CRC21_FD_CRCWORD_I10;
  wire [0:14]CRC_CRCWORD;
  wire CRC_CRCWORD_I1;
  wire CRC_CRCWORD_I10;
  wire [15:0]D;
  wire [0:0]E;
  wire EMU_CTR_FLG_I;
  wire EMU_CTR_FLG_I0;
  wire EMU_ERRWRN;
  wire [15:0]\EMU_OL_ECR_I_reg[0] ;
  wire EMU_OL_ECR_WEN_I0;
  wire EMU_REC_GR7F;
  wire EMU_STAT1;
  wire [7:7]EMU_TEC_I_reg;
  wire ERR_TXBERR_I_FD_SSP_EN_1_reg;
  wire FBR_ERR_1TQ;
  wire HSYNC_FLG_I;
  wire HSYNC_FLG_I0;
  wire HSYNC_FLG_I_reg;
  wire HSYNC_OCCR_D_reg;
  wire [6:6]IC_REG_BTR_TS1;
  wire [5:5]IC_REG_BTR_TS2;
  wire IC_REG_MSR_LBACK;
  wire IC_REG_MSR_SNOOP_FS2_D1_reg;
  wire IC_SYNC_ECR_WEN;
  wire IC_SYNC_ESR_ACKER;
  wire IC_SYNC_ESR_BERR;
  wire IC_SYNC_ESR_CRCER;
  wire IC_SYNC_ESR_FMER;
  wire IC_SYNC_ESR_F_BERR;
  wire IC_SYNC_ESR_F_CRCER;
  wire IC_SYNC_ESR_F_FMER;
  wire IC_SYNC_ESR_F_STER;
  wire IC_SYNC_ESR_STER;
  wire IC_SYNC_ISR_ARBLST;
  wire IC_SYNC_ISR_BSOFF;
  wire IC_SYNC_ISR_MSGLST;
  wire IC_SYNC_ISR_MSGLST_F1;
  wire IC_SYNC_ISR_MSGLST_F1_reg;
  wire IC_SYNC_ISR_MSGLST_reg;
  wire IC_SYNC_ISR_RXOK;
  wire IC_SYNC_ISR_TXOK;
  wire IC_SYNC_SR_BIDLE;
  wire IC_SYNC_SR_BSFR;
  wire IC_SYNC_SR_ERRWRN;
  wire [0:0]\IC_SYNC_SR_ESTAT_reg[1]_0 ;
  wire IC_SYNC_SR_LBACK;
  wire IC_SYNC_SR_PEE;
  wire IC_SYNC_SR_RSTST;
  wire IC_SYNC_SR_SLEEP;
  wire IC_SYNC_TSR_WEN;
  wire IC_TIMESTAMP_RST_P;
  wire [31:0]\ID_FOR_MATCH_reg[0] ;
  wire ID_MATCH_EN;
  wire ID_MATCH_EN_reg;
  wire IFF5_EN_FS2;
  wire IFF6_EN_FS2;
  wire IFF_EN_FS2;
  wire \MATCHED_FILTER_INDEX_FS2_D1_reg[0] ;
  wire MATCH_RESULT_0_D1;
  wire MATCH_RESULT_1_D1;
  wire MATCH_RESULT_FS2_D1;
  wire MATCH_RESULT_TO_BSP;
  wire MATCH_RESULT_TO_BSP0;
  wire \MEM_reg[3] ;
  wire MSG_ON_CAN_BUS;
  wire MSG_ON_CAN_BUS_reg;
  wire MSR_BRSD_FS2;
  wire MSR_DAR_FS2;
  wire MSR_DPEE_FS2;
  wire MSR_LBACK_FS2;
  wire MSR_SBR_FS2;
  wire MSR_SLEEP_FS2;
  wire MSR_SNOOP_FS2;
  wire OL_RX_FIFO_FULL;
  wire OL_RX_FIFO_FULL_F1;
  wire [6:0]Q;
  wire RSYNC_FLG_I;
  wire RXE_BRS_I;
  wire RXE_BRS_I_reg;
  wire RXE_BTL_HSYNC_EN;
  wire \RXE_COUNTER_I_reg[0] ;
  wire \RXE_COUNTER_I_reg[0]_0 ;
  wire \RXE_COUNTER_I_reg[1] ;
  wire \RXE_COUNTER_I_reg[4] ;
  wire \RXE_COUNTER_I_reg[4]_0 ;
  wire \RXE_COUNTER_I_reg[4]_1 ;
  wire \RXE_COUNTER_I_reg[4]_2 ;
  wire \RXE_COUNTER_I_reg[4]_3 ;
  wire \RXE_COUNTER_I_reg[5] ;
  wire \RXE_COUNTER_I_reg[6] ;
  wire [31:0]\RXE_DATA_STORED_AT_DLC_reg[0] ;
  wire RXE_ESI_I_reg;
  wire RXE_ESI_I_reg_0;
  wire RXE_FDF_I;
  wire RXE_FDF_I_reg;
  wire RXE_IC_RXOK_I_reg;
  wire RXE_IDE_I;
  wire RXE_IDE_I_reg;
  wire RXE_IDE_I_reg_0;
  wire RXE_MSGVAL_EARLY_F0;
  wire RXE_MSGVAL_EARLY_F00;
  wire RXE_MSGVAL_EARLY_F1;
  wire RXE_MSGVAL_EARLY_F10;
  wire RXE_MSGVAL_FD1;
  wire RXE_MSGVAL_FD2;
  wire RXE_OL_BIDLE;
  wire RXE_OL_BSFR;
  wire RXE_OL_LBACK;
  wire RXE_OL_RSTST;
  wire RXE_OL_SLEEP;
  wire RXE_PASSFLG_I;
  wire RXE_PASSFLG_I_reg;
  wire RXE_RTR_I;
  wire RXE_RTR_I_reg;
  wire RXE_RXFIFO_WEN_FD1;
  wire RXE_RXFIFO_WEN_FD2;
  wire RXE_RXMSG_INVAL_F0;
  wire RXE_RXMSG_INVAL_F00;
  wire RXE_RXMSG_INVAL_F1;
  wire RXE_RXMSG_INVAL_F10;
  wire RXE_RXMSG_VAL_F0;
  wire RXE_RXMSG_VAL_F00;
  wire RXE_RXMSG_VAL_F0_reg;
  wire [0:0]RXE_RXMSG_VAL_F0_reg_0;
  wire RXE_RXMSG_VAL_F1;
  wire RXE_RXMSG_VAL_F10;
  wire RXE_RXMSG_VAL_F1_reg;
  wire [0:0]RXE_RXMSG_VAL_F1_reg_0;
  wire [31:0]\RXE_SREG_I_reg[24] ;
  wire [0:0]\RXE_SREG_I_reg[30] ;
  wire RXF_FULL_AT_MSG_BOUNDARY;
  wire RXF_FULL_AT_MSG_BOUNDARY_F1;
  wire [0:0]RXF_FULL_AT_MSG_BOUNDARY_reg;
  wire [0:0]S;
  wire SM_FLAG_I;
  wire SM_FLAG_I_FSB;
  wire SM_FLAG_I_reg;
  wire \SM_REG_I_reg[0] ;
  wire \SM_REG_I_reg[1] ;
  wire SM_STUFFBIT_PD;
  wire [0:0]SR;
  wire SSP_BTL_TXBIT_I;
  wire SSP_BTL_TXBIT_I_reg;
  wire SSP_EN;
  wire SSP_RCVD_RXBIT;
  wire SSP_RCVD_RXBIT_reg;
  wire SYNC_RST_TL;
  wire TDCV_CNT_REG_WEN;
  wire TDCV_CNT_REG_WEN_reg;
  wire TDC_EN_FS2;
  wire TDC_SSP_SAMP_PT;
  wire TDC_TRIG_COND;
  wire [0:0]\TIME_STAMP_CNT_CAPTURE_reg[15] ;
  wire TIME_STAMP_CNT_REG_WEN_reg;
  wire TS2_EQ_SJW1;
  wire TS2_EQ_SJW2;
  wire TS_COUNTER_SW_RST_D1;
  wire TS_COUNTER_SW_RST_D2;
  wire [20:0]TS_RX_WDATA_F1;
  wire TS_RX_WEN;
  wire TS_RX_WEN_F1;
  wire TXE_BRAM_WEN;
  wire [31:0]\TXE_DLC_I_reg[0] ;
  wire TXE_IC_ARBLSS_I;
  wire TXE_IC_ARBLSS_I_reg;
  wire TXE_IC_TXOK_I_reg;
  wire [0:0]TXE_MSGVAL_D1_I_reg;
  wire TXE_MSGVAL_FD1;
  wire TXE_MSGVAL_FD2;
  wire TXE_PASSTX_I;
  wire TXE_PASSTX_I_reg;
  wire TXE_TRNSMT_FLG_reg;
  wire TXE_TXING055_out;
  wire TXE_TXING_reg;
  wire TXE_TXING_reg_0;
  wire TXE_TXING_reg_1;
  wire TXE_TXING_reg_2;
  wire TXE_TXING_reg_3;
  wire TXE_TX_REN_D1;
  wire TXE_TX_REN_D1_reg;
  wire TXE_TX_REN_D1_reg_0;
  wire TXE_TX_REN_I;
  wire TXING_BRS_EN_BTR;
  wire TXING_BRS_EN_BTR_D1;
  wire \addr_location_incr_count_reg[0] ;
  wire bsp_n_100;
  wire bsp_n_101;
  wire bsp_n_118;
  wire bsp_n_120;
  wire bsp_n_121;
  wire bsp_n_126;
  wire bsp_n_127;
  wire bsp_n_132;
  wire bsp_n_136;
  wire bsp_n_137;
  wire bsp_n_143;
  wire bsp_n_145;
  wire bsp_n_147;
  wire bsp_n_149;
  wire bsp_n_152;
  wire bsp_n_160;
  wire bsp_n_161;
  wire bsp_n_162;
  wire bsp_n_163;
  wire bsp_n_164;
  wire bsp_n_165;
  wire bsp_n_166;
  wire bsp_n_167;
  wire bsp_n_168;
  wire bsp_n_169;
  wire bsp_n_174;
  wire bsp_n_176;
  wire bsp_n_183;
  wire bsp_n_184;
  wire bsp_n_185;
  wire bsp_n_186;
  wire bsp_n_187;
  wire bsp_n_188;
  wire bsp_n_189;
  wire bsp_n_190;
  wire bsp_n_191;
  wire bsp_n_192;
  wire bsp_n_193;
  wire bsp_n_194;
  wire bsp_n_195;
  wire bsp_n_196;
  wire bsp_n_197;
  wire bsp_n_198;
  wire bsp_n_199;
  wire bsp_n_200;
  wire bsp_n_201;
  wire bsp_n_202;
  wire bsp_n_203;
  wire bsp_n_204;
  wire bsp_n_205;
  wire bsp_n_206;
  wire bsp_n_207;
  wire bsp_n_208;
  wire bsp_n_209;
  wire bsp_n_210;
  wire bsp_n_211;
  wire bsp_n_212;
  wire bsp_n_213;
  wire bsp_n_214;
  wire bsp_n_215;
  wire bsp_n_216;
  wire bsp_n_217;
  wire bsp_n_218;
  wire bsp_n_219;
  wire bsp_n_220;
  wire bsp_n_221;
  wire bsp_n_222;
  wire bsp_n_223;
  wire bsp_n_224;
  wire bsp_n_225;
  wire bsp_n_226;
  wire bsp_n_228;
  wire bsp_n_229;
  wire bsp_n_230;
  wire bsp_n_231;
  wire bsp_n_232;
  wire bsp_n_233;
  wire bsp_n_234;
  wire bsp_n_235;
  wire bsp_n_236;
  wire bsp_n_237;
  wire bsp_n_239;
  wire bsp_n_276;
  wire bsp_n_277;
  wire bsp_n_278;
  wire bsp_n_279;
  wire bsp_n_280;
  wire bsp_n_50;
  wire bsp_n_53;
  wire bsp_n_54;
  wire bsp_n_55;
  wire bsp_n_57;
  wire bsp_n_59;
  wire bsp_n_63;
  wire bsp_n_65;
  wire bsp_n_66;
  wire bsp_n_67;
  wire bsp_n_68;
  wire bsp_n_69;
  wire bsp_n_71;
  wire bsp_n_72;
  wire bsp_n_75;
  wire bsp_n_76;
  wire bsp_n_77;
  wire bsp_n_78;
  wire bsp_n_79;
  wire bsp_n_81;
  wire bsp_n_82;
  wire bsp_n_83;
  wire bsp_n_84;
  wire bsp_n_85;
  wire bsp_n_86;
  wire bsp_n_87;
  wire bsp_n_88;
  wire bsp_n_89;
  wire bsp_n_9;
  wire bsp_n_90;
  wire bsp_n_91;
  wire bsp_n_92;
  wire bsp_n_93;
  wire bsp_n_94;
  wire bsp_n_95;
  wire bsp_n_96;
  wire bsp_n_97;
  wire bsp_n_98;
  wire bsp_n_99;
  wire btl_n_10;
  wire btl_n_11;
  wire btl_n_12;
  wire btl_n_13;
  wire btl_n_38;
  wire btl_n_39;
  wire btl_n_47;
  wire btl_n_49;
  wire btl_n_50;
  wire btl_n_52;
  wire btl_n_55;
  wire btl_n_56;
  wire btl_n_57;
  wire btl_n_58;
  wire btl_n_59;
  wire btl_n_60;
  wire btl_n_61;
  wire btl_n_62;
  wire btl_n_63;
  wire btl_n_64;
  wire btl_n_65;
  wire btl_n_66;
  wire btl_n_67;
  wire btl_n_68;
  wire btl_n_81;
  wire btl_n_82;
  wire btl_n_83;
  wire btl_n_84;
  wire btl_n_85;
  wire btl_n_9;
  wire can_clk;
  wire can_clk_x2;
  wire clkdiv_n_3;
  wire clkdiv_n_4;
  wire [26:22]data0;
  wire dest_arst;
  wire dest_out;
  wire ena;
  wire [10:0]\gen_wr_a.gen_word_narrow.mem_reg_1 ;
  wire [0:7]ic_reg_f_brpr_cdc_tig;
  wire [0:5]ic_reg_f_brpr_tdcoff_cdc_tig;
  wire [0:3]ic_reg_f_btr_sjw_cdc_tig;
  wire [3:0]\ic_reg_f_btr_sjw_cdc_tig_reg[0]_0 ;
  wire [0:4]ic_reg_f_btr_ts1_cdc_tig;
  wire [4:0]\ic_reg_f_btr_ts1_cdc_tig_reg[0]_0 ;
  wire [0:3]ic_reg_f_btr_ts2_cdc_tig;
  wire [3:0]\ic_reg_f_btr_ts2_cdc_tig_reg[0]_0 ;
  wire [0:7]ic_reg_n_brpr_cdc_tig;
  wire [7:0]\ic_reg_n_brpr_cdc_tig_reg[0]_0 ;
  wire [0:6]ic_reg_n_btr_sjw_cdc_tig;
  wire [6:0]\ic_reg_n_btr_sjw_cdc_tig_reg[0]_0 ;
  wire [0:7]ic_reg_n_btr_ts1_cdc_tig;
  wire [7:0]\ic_reg_n_btr_ts1_cdc_tig_reg[0]_0 ;
  wire [0:6]ic_reg_n_btr_ts2_cdc_tig;
  wire [6:0]\ic_reg_n_btr_ts2_cdc_tig_reg[0]_0 ;
  wire [0:4]ic_reg_wmr_rxfp_cdc_tig;
  wire [4:0]\ic_reg_wmr_rxfp_cdc_tig_reg[0]_0 ;
  wire src_in;
  wire \state_reg[0] ;
  wire \state_reg[0]_0 ;
  wire \state_reg[0]_1 ;
  wire \state_reg[2] ;
  wire \state_reg[2]_0 ;
  wire \state_reg[2]_1 ;
  wire \state_reg[3] ;
  wire \state_reg[4] ;
  wire \state_reg[4]_0 ;
  wire \state_reg[4]_1 ;
  wire [14:0]\syncstages_ff_reg[0] ;
  wire [4:0]\syncstages_ff_reg[0][4] ;
  wire \syncstages_ff_reg[0]_0 ;
  wire \syncstages_ff_reg[0]_1 ;
  wire \syncstages_ff_reg[0]_10 ;
  wire \syncstages_ff_reg[0]_2 ;
  wire [2:0]\syncstages_ff_reg[0]_3 ;
  wire \syncstages_ff_reg[0]_4 ;
  wire \syncstages_ff_reg[0]_5 ;
  wire \syncstages_ff_reg[0]_6 ;
  wire \syncstages_ff_reg[0]_7 ;
  wire \syncstages_ff_reg[0]_8 ;
  wire \syncstages_ff_reg[0]_9 ;
  wire \tdc/TDC_SSP_SAMP_PT_D1 ;
  wire tlom_n_10;
  wire tlom_n_17;
  wire tlom_n_18;
  wire tlom_n_25;
  wire tlom_n_26;
  wire tlom_n_28;
  wire tlom_n_29;
  wire tlom_n_31;
  wire tlom_n_34;
  wire tlom_n_37;
  wire tlom_n_38;
  wire tlom_n_7;
  wire tlom_n_8;
  wire tlom_n_9;
  wire tlsync_n_12;
  wire tlsync_n_14;
  wire [0:0]\wr_index_i_reg[6] ;
  wire [0:0]\wr_index_i_reg[6]_0 ;

  FDRE IC_SYNC_ISR_BSOFF_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(bsp_n_72),
        .Q(IC_SYNC_ISR_BSOFF),
        .R(SYNC_RST_TL));
  FDRE IC_SYNC_SR_BIDLE_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXE_OL_BIDLE),
        .Q(IC_SYNC_SR_BIDLE),
        .R(SYNC_RST_TL));
  FDRE IC_SYNC_SR_BSFR_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXE_OL_BSFR),
        .Q(IC_SYNC_SR_BSFR),
        .R(SYNC_RST_TL));
  FDRE IC_SYNC_SR_ERRWRN_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(EMU_ERRWRN),
        .Q(IC_SYNC_SR_ERRWRN),
        .R(SYNC_RST_TL));
  FDRE \IC_SYNC_SR_ESTAT_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(EMU_STAT1),
        .Q(\IC_SYNC_SR_ESTAT_reg[1]_0 ),
        .R(SYNC_RST_TL));
  FDRE IC_SYNC_SR_LBACK_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXE_OL_LBACK),
        .Q(IC_SYNC_SR_LBACK),
        .R(SYNC_RST_TL));
  FDRE IC_SYNC_SR_PEE_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(bsp_n_71),
        .Q(IC_SYNC_SR_PEE),
        .R(SYNC_RST_TL));
  FDSE IC_SYNC_SR_RSTST_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXE_OL_RSTST),
        .Q(IC_SYNC_SR_RSTST),
        .S(SYNC_RST_TL));
  FDRE IC_SYNC_SR_SLEEP_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXE_OL_SLEEP),
        .Q(IC_SYNC_SR_SLEEP),
        .R(SYNC_RST_TL));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_tl_bsp bsp
       (.\BIS_COUNTER_I_reg[3]_0 (btl_n_81),
        .\BIS_COUNTER_I_reg[3]_1 (BIS_COUNTER_I0),
        .BIS_HSYNC_FLG_I_D1(BIS_HSYNC_FLG_I_D1),
        .BIS_HSYNC_FLG_I_D1_reg_0(BIS_HSYNC_FLG_I),
        .BRSD_P_ERR_1TQ(BRSD_P_ERR_1TQ),
        .BRSD_P_ERR_1TQ_FD(BRSD_P_ERR_1TQ_FD),
        .BRSD_P_ERR_1TQ_FD_reg(bsp_n_86),
        .BRSD_P_ERR_1TQ_FD_reg_0(bsp_n_93),
        .BRSD_P_ERR_1TQ_FD_reg_1(bsp_n_94),
        .BRSD_P_ERR_1TQ_FD_reg_10({bsp_n_228,bsp_n_229,bsp_n_230,bsp_n_231}),
        .BRSD_P_ERR_1TQ_FD_reg_11({bsp_n_232,bsp_n_233,bsp_n_234}),
        .BRSD_P_ERR_1TQ_FD_reg_12(bsp_n_276),
        .BRSD_P_ERR_1TQ_FD_reg_13(clkdiv_n_3),
        .BRSD_P_ERR_1TQ_FD_reg_14(clkdiv_n_4),
        .BRSD_P_ERR_1TQ_FD_reg_15(SM_FLAG_I_reg),
        .BRSD_P_ERR_1TQ_FD_reg_2(bsp_n_95),
        .BRSD_P_ERR_1TQ_FD_reg_3({bsp_n_99,bsp_n_100,bsp_n_101}),
        .BRSD_P_ERR_1TQ_FD_reg_4({bsp_n_161,bsp_n_162,bsp_n_163,bsp_n_164,bsp_n_165,bsp_n_166,bsp_n_167,bsp_n_168,bsp_n_169}),
        .BRSD_P_ERR_1TQ_FD_reg_5({bsp_n_207,bsp_n_208,bsp_n_209,bsp_n_210}),
        .BRSD_P_ERR_1TQ_FD_reg_6({bsp_n_215,bsp_n_216,bsp_n_217}),
        .BRSD_P_ERR_1TQ_FD_reg_7({bsp_n_218,bsp_n_219,bsp_n_220}),
        .BRSD_P_ERR_1TQ_FD_reg_8({bsp_n_221,bsp_n_222,bsp_n_223}),
        .BRSD_P_ERR_1TQ_FD_reg_9({bsp_n_224,bsp_n_225,bsp_n_226}),
        .BRS_EN_BTR(BRS_EN_BTR),
        .BRS_EN_BTR_D1(BRS_EN_BTR_D1),
        .BRS_EN_I_FLAG_reg_0(BRS_EN_I_FLAG),
        .BRS_L_SP_FE_reg_0(bsp_n_63),
        .BRS_L_SP_FE_reg_1(bsp_n_82),
        .BRS_L_SP_FE_reg_2(BRS_L_SP_FE_reg),
        .BRS_L_SP_FE_reg_3({bsp_n_184,bsp_n_185,bsp_n_186}),
        .BRS_L_SP_FE_reg_4({bsp_n_187,bsp_n_188,bsp_n_189}),
        .BRS_L_SP_FE_reg_5(bsp_n_190),
        .BSP_CRCERR_I_CANFD_FLG0(BSP_CRCERR_I_CANFD_FLG0),
        .BSP_CRCERR_I_CANFD_FLG_i_2_0(tlom_n_18),
        .BSP_CRCERR_I_CANFD_FLG_i_2_1(tlom_n_25),
        .BSP_CRCERR_I_CANFD_FLG_i_4_0({CRC21_CRCWORD[0],CRC21_CRCWORD[1],CRC21_CRCWORD[2],CRC21_CRCWORD[3],CRC21_CRCWORD[4],CRC21_CRCWORD[5]}),
        .BSP_CRCERR_I_CANFD_FLG_reg_0(BSP_CRCERR_I_CANFD_FLG),
        .BSP_CRCERR_I_CANFD_FLG_reg_1(BSP_CRCERR_I_CANFD_FLG_reg),
        .BSP_CRCERR_I_CAN_FLG0(BSP_CRCERR_I_CAN_FLG0),
        .BSP_CRCERR_I_CAN_FLG_i_3_0(tlom_n_10),
        .BSP_CRCERR_I_CAN_FLG_i_3_1(tlom_n_17),
        .BSP_CRCERR_I_CAN_FLG_i_3_2(tlom_n_29),
        .BSP_CRCERR_I_CAN_FLG_i_7_0({CRC_CRCWORD[1],CRC_CRCWORD[7],CRC_CRCWORD[12],CRC_CRCWORD[13],CRC_CRCWORD[14]}),
        .BSP_CRCERR_I_CAN_FLG_reg_0(BSP_CRCERR_I_CAN_FLG),
        .BSP_CRCERR_I_CAN_FLG_reg_1(BSP_CRCERR_I_CAN_FLG_reg),
        .BSP_IC_ACK_ERROR_I_reg_0(BSP_IC_ACK_ERROR_I_reg),
        .BSP_IC_BIT_ERROR_I_reg_0(BSP_IC_BIT_ERROR_I_reg),
        .BSP_IC_CRC_ERROR_I_reg_0(BSP_IC_CRC_ERROR_I_reg),
        .BSP_IC_FRM_ERROR_I_reg_0(BSP_IC_FRM_ERROR_I_reg),
        .BSP_IC_F_BIT_ERROR_I_reg_0(BSP_IC_F_BIT_ERROR_I_reg),
        .BSP_IC_F_BIT_ERROR_I_reg_1(ERR_TXBERR_I_FD_SSP_EN_1_reg),
        .BSP_IC_F_CRC_ERROR_I_reg_0(BSP_IC_F_CRC_ERROR_I_reg),
        .BSP_IC_F_FRM_ERROR_I_reg_0(BSP_IC_F_FRM_ERROR_I_reg),
        .BSP_IC_F_FRM_ERROR_I_reg_1(tlom_n_9),
        .BSP_IC_F_FRM_ERROR_I_reg_2(tlom_n_34),
        .BSP_IC_F_STUFF_ERROR_I_reg_0(BSP_IC_F_STUFF_ERROR_I_reg),
        .BSP_IC_STUFF_ERROR_I_reg_0(BSP_IC_STUFF_ERROR_I_reg),
        .BSP_IDVALID_FD1(BSP_IDVALID_FD1),
        .BSP_IDVALID_FD2(BSP_IDVALID_FD2),
        .BSP_IN_EOF(BSP_IN_EOF),
        .BSP_IN_ID_STATE_D1(BSP_IN_ID_STATE_D1),
        .BSP_IN_ID_STATE_I(BSP_IN_ID_STATE_I),
        .BSP_IN_IFSPACE(BSP_IN_IFSPACE),
        .BSP_TXBIT_D1_reg_0(BSP_TXBIT_FD),
        .BSP_TXBIT_D1_reg_1(BSP_TXBIT_D1_reg),
        .BSP_TXBIT_FD_reg(BSP_TXBIT_FD_reg_1),
        .BSP_TXBIT_FD_reg_0(BSP_TXBIT_FD_reg_0),
        .BTL_COUNTER_I15_carry({ic_reg_n_btr_sjw_cdc_tig[0],ic_reg_n_btr_sjw_cdc_tig[1],ic_reg_n_btr_sjw_cdc_tig[2],ic_reg_n_btr_sjw_cdc_tig[3],ic_reg_n_btr_sjw_cdc_tig[4],ic_reg_n_btr_sjw_cdc_tig[5],ic_reg_n_btr_sjw_cdc_tig[6]}),
        .BTL_COUNTER_I17_carry_i_19(btl_n_10),
        .\BTL_COUNTER_I_REG_reg[0] (BTL_COUNTER_I),
        .\BTL_COUNTER_I_REG_reg[1] (CLKM_EN),
        .\BTL_COUNTER_I_REG_reg[1]_0 (btl_n_52),
        .\BTL_COUNTER_I_REG_reg[2] (bsp_n_85),
        .\BTL_COUNTER_I_REG_reg[3] (btl_n_47),
        .\BTL_COUNTER_I_REG_reg[3]_0 (btl_n_85),
        .\BTL_COUNTER_I_REG_reg[5] (CNTR_LEQ_SJW_I1),
        .\BTL_COUNTER_I_REG_reg[8] (btl_n_38),
        .\BTL_COUNTER_I_REG_reg[8]_0 (CNTR_LT_NTMSJW_I),
        .\BTL_COUNTER_I_REG_reg[8]_1 (CNTR_EQ_NTMSJW_I),
        .\BTL_COUNTER_I_REG_reg[8]_2 ({btl_n_61,btl_n_62,btl_n_63,btl_n_64,btl_n_65,btl_n_66,btl_n_67,btl_n_68}),
        .BTL_NTQ_I0_carry__0(BTL_NTQ_I0_carry__0),
        .BTL_NTQ_I0_carry__0_0({ic_reg_n_btr_ts2_cdc_tig[0],ic_reg_n_btr_ts2_cdc_tig[1],ic_reg_n_btr_ts2_cdc_tig[2],ic_reg_n_btr_ts2_cdc_tig[3],ic_reg_n_btr_ts2_cdc_tig[4],ic_reg_n_btr_ts2_cdc_tig[5],ic_reg_n_btr_ts2_cdc_tig[6]}),
        .BTL_NTQ_I0_carry__0_i_8_0({ic_reg_f_btr_ts2_cdc_tig[0],ic_reg_f_btr_ts2_cdc_tig[1],ic_reg_f_btr_ts2_cdc_tig[2],ic_reg_f_btr_ts2_cdc_tig[3]}),
        .BTL_RXBIT_I_reg(bsp_n_127),
        .BTL_RXBIT_I_reg_0(BTL_RXBIT_I_reg),
        .BTL_RXBIT_I_reg_1(BTL_RXBIT_I_reg_0),
        .BTL_RXBIT_I_reg_2(BTL_RXBIT_I_reg_1),
        .BTL_SAMP_EN_D1_reg(BTL_SAMP_EN_D1_reg),
        .BTL_SAMP_EN_D1_reg_0(bsp_n_136),
        .BTL_SAMP_EN_D1_reg_1(bsp_n_147),
        .BTL_SAMP_EN_FD2(BTL_SAMP_EN_FD2),
        .BTL_TRNSMT_EN_FD1(BTL_TRNSMT_EN_FD1),
        .BTL_TRNSMT_EN_FD13_carry_i_6_0({ic_reg_f_btr_ts1_cdc_tig[0],ic_reg_f_btr_ts1_cdc_tig[1],ic_reg_f_btr_ts1_cdc_tig[2],ic_reg_f_btr_ts1_cdc_tig[3],ic_reg_f_btr_ts1_cdc_tig[4]}),
        .BTL_TRNSMT_EN_FD1_reg(HSYNC_OCCR_D_reg),
        .BTL_TRNSMT_EN_FD1_reg_0(CNTR_EQ_SAMP1),
        .BTL_TRNSMT_EN_FD1_reg_1(TS2_EQ_SJW2),
        .BTL_TRNSMT_EN_FD1_reg_2(TS2_EQ_SJW1),
        .BTL_TRNSMT_EN_I1(BTL_TRNSMT_EN_I1),
        .BUFFER_EMPTY_INTERNAL_i_2_0(EMU_REC_GR7F),
        .BUFFER_EMPTY_INTERNAL_i_2_1(EMU_TEC_I_reg),
        .CANCEL_CONFIRMED_TL2OL_I_reg_0(CANCEL_OR_INVALIDATE_CONFIRMED_TL2OL),
        .CANCEL_CONFIRMED_TL2OL_I_reg_1(CANCEL_CONFIRMED_TL2OL_I_reg),
        .CAN_PHY_TX_INT_reg(btl_n_55),
        .CAN_PHY_TX_LP_i_2_0(btl_n_58),
        .CAN_PHY_TX_LP_i_2_1(btl_n_59),
        .CAN_PHY_TX_LP_i_2_2(CNTR_GT_2PSAMP_I),
        .CAN_PHY_TX_POS_FLOP_X2(CAN_PHY_TX_POS_FLOP_X2),
        .CAN_PHY_TX_POS_FLOP_X26_carry(btl_n_60),
        .CAN_PHY_TX_POS_FLOP_X27(CAN_PHY_TX_POS_FLOP_X27),
        .CLKD_COUNTER_I_reg({CLKD_COUNTER_I_reg[1],CLKD_COUNTER_I_reg[2]}),
        .\CLKD_COUNTER_I_reg[7] ({ic_reg_f_brpr_cdc_tig[1],ic_reg_f_brpr_cdc_tig[2]}),
        .\CLKD_COUNTER_I_reg[7]_0 ({ic_reg_n_brpr_cdc_tig[1],ic_reg_n_brpr_cdc_tig[2]}),
        .CLKM_EN_reg(bsp_n_53),
        .CO(CNTR_GT_SAMP_I),
        .CRC_CRCWORD_I1(CRC_CRCWORD_I1),
        .D(CAN_PHY_RX_I1),
        .DI({bsp_n_88,bsp_n_89,bsp_n_90,bsp_n_91}),
        .E(BTL_SAMP_EN_FD1),
        .EMU_CTR_FLG_I(EMU_CTR_FLG_I),
        .EMU_CTR_FLG_I0(EMU_CTR_FLG_I0),
        .EMU_CTR_FLG_I_reg(EMU_OL_ECR_WEN_I0),
        .ERR_ACKERRPASS_I_reg_0(btl_n_82),
        .FAST_TRANSMT_PT_D1_reg(CNTR_EQ_SAMP2),
        .FBR_ERR_1TQ(FBR_ERR_1TQ),
        .IC_SYNC_ESR_ACKER(IC_SYNC_ESR_ACKER),
        .IC_SYNC_ESR_BERR(IC_SYNC_ESR_BERR),
        .IC_SYNC_ESR_CRCER(IC_SYNC_ESR_CRCER),
        .IC_SYNC_ESR_FMER(IC_SYNC_ESR_FMER),
        .IC_SYNC_ESR_F_BERR(IC_SYNC_ESR_F_BERR),
        .IC_SYNC_ESR_F_CRCER(IC_SYNC_ESR_F_CRCER),
        .IC_SYNC_ESR_F_FMER(IC_SYNC_ESR_F_FMER),
        .IC_SYNC_ESR_F_STER(IC_SYNC_ESR_F_STER),
        .IC_SYNC_ESR_STER(IC_SYNC_ESR_STER),
        .IC_SYNC_ISR_ARBLST(IC_SYNC_ISR_ARBLST),
        .IC_SYNC_ISR_RXOK(IC_SYNC_ISR_RXOK),
        .IC_SYNC_ISR_TXOK(IC_SYNC_ISR_TXOK),
        .\ID_FOR_MATCH_reg[0]_0 (\ID_FOR_MATCH_reg[0] ),
        .\ID_FOR_MATCH_reg[31]_0 (E),
        .ID_MATCH_EN(ID_MATCH_EN),
        .ID_MATCH_EN_reg_0(ID_MATCH_EN_reg),
        .MATCH_RESULT_TO_BSP(MATCH_RESULT_TO_BSP),
        .MSG_ON_CAN_BUS(MSG_ON_CAN_BUS),
        .MSG_ON_CAN_BUS_reg_0(MSG_ON_CAN_BUS_reg),
        .MSR_BRSD_FS2(MSR_BRSD_FS2),
        .MSR_DAR_FS2(MSR_DAR_FS2),
        .MSR_DPEE_FS2(MSR_DPEE_FS2),
        .MSR_SBR_FS2(MSR_SBR_FS2),
        .MSR_SLEEP_FS2(MSR_SLEEP_FS2),
        .O({btl_n_11,btl_n_12,btl_n_13}),
        .OL_RX_FIFO_FULL(OL_RX_FIFO_FULL),
        .OL_RX_FIFO_FULL_F1(OL_RX_FIFO_FULL_F1),
        .Q(bsp_n_54),
        .RSYNC_FLG_I(RSYNC_FLG_I),
        .RSYNC_FLG_I_reg(bsp_n_132),
        .RSYNC_FLG_I_reg_0(CO),
        .RSYNC_FLG_I_reg_1(btl_n_50),
        .RSYNC_FLG_I_reg_2(BSP_TXBIT_FD_reg),
        .RXE_BRS_I(RXE_BRS_I),
        .RXE_BRS_I_reg_0(RXE_BRS_I_reg),
        .RXE_BTL_HSYNC_EN(RXE_BTL_HSYNC_EN),
        .\RXE_COUNTER_I_reg[0]_0 (\RXE_COUNTER_I_reg[0] ),
        .\RXE_COUNTER_I_reg[0]_1 (bsp_n_145),
        .\RXE_COUNTER_I_reg[0]_2 (\RXE_COUNTER_I_reg[0]_0 ),
        .\RXE_COUNTER_I_reg[0]_3 (btl_n_39),
        .\RXE_COUNTER_I_reg[1]_0 (\RXE_COUNTER_I_reg[1] ),
        .\RXE_COUNTER_I_reg[1]_1 (bsp_n_203),
        .\RXE_COUNTER_I_reg[3]_0 ({bsp_n_66,bsp_n_67,bsp_n_68,bsp_n_69}),
        .\RXE_COUNTER_I_reg[3]_1 (bsp_n_183),
        .\RXE_COUNTER_I_reg[4]_0 (\RXE_COUNTER_I_reg[4] ),
        .\RXE_COUNTER_I_reg[4]_1 (\RXE_COUNTER_I_reg[4]_0 ),
        .\RXE_COUNTER_I_reg[4]_2 (\RXE_COUNTER_I_reg[4]_1 ),
        .\RXE_COUNTER_I_reg[4]_3 (\RXE_COUNTER_I_reg[4]_2 ),
        .\RXE_COUNTER_I_reg[4]_4 (\RXE_COUNTER_I_reg[4]_3 ),
        .\RXE_COUNTER_I_reg[4]_5 (bsp_n_202),
        .\RXE_COUNTER_I_reg[5]_0 (\RXE_COUNTER_I_reg[5] ),
        .\RXE_COUNTER_I_reg[6]_0 (\RXE_COUNTER_I_reg[6] ),
        .\RXE_COUNTER_I_reg[8]_0 (btl_n_83),
        .RXE_ERRFLG_I_reg_0(BTL_RXBIT),
        .RXE_ESI_I_reg_0(RXE_ESI_I_reg),
        .RXE_ESI_I_reg_1(RXE_ESI_I_reg_0),
        .RXE_FDF_I(RXE_FDF_I),
        .RXE_FDF_I_reg_0(RXE_FDF_I_reg),
        .RXE_IC_RXOK_I_reg_0(RXE_IC_RXOK_I_reg),
        .RXE_IDE_I(RXE_IDE_I),
        .RXE_IDE_I_reg_0(RXE_IDE_I_reg),
        .RXE_IDE_I_reg_1(RXE_IDE_I_reg_0),
        .\RXE_MSGPAD_SEL_FS1_reg[0]_0 (\SM_REG_I_reg[1] ),
        .\RXE_MSGPAD_SEL_FS1_reg[1]_0 (bsp_n_121),
        .RXE_MSGVAL_EARLY_F00(RXE_MSGVAL_EARLY_F00),
        .RXE_MSGVAL_EARLY_F10(RXE_MSGVAL_EARLY_F10),
        .RXE_MSGVAL_FD1_reg_0(RXE_MSGVAL_FD1),
        .RXE_MSGVAL_FD2_reg_0(RXE_MSGVAL_FD2),
        .RXE_OL_BIDLE(RXE_OL_BIDLE),
        .RXE_OL_BSFR(RXE_OL_BSFR),
        .RXE_OL_LBACK(RXE_OL_LBACK),
        .RXE_OL_LBACK_reg_0(MSR_LBACK_FS2),
        .RXE_OL_RSTST(RXE_OL_RSTST),
        .RXE_OL_SLEEP(RXE_OL_SLEEP),
        .RXE_PASSFLG_I(RXE_PASSFLG_I),
        .RXE_PASSFLG_I_reg_0(IC_REG_MSR_SNOOP_FS2_D1_reg),
        .RXE_PASSFLG_I_reg_1(RXE_PASSFLG_I_reg),
        .RXE_RTR_I(RXE_RTR_I),
        .RXE_RTR_I_reg_0(RXE_RTR_I_reg),
        .RXE_RXFIFO_WEN_FD1_reg_0(RXE_RXFIFO_WEN_FD1),
        .RXE_RXFIFO_WEN_FD2(RXE_RXFIFO_WEN_FD2),
        .RXE_RXMSG_INVAL_F00(RXE_RXMSG_INVAL_F00),
        .RXE_RXMSG_INVAL_F0_reg(MATCH_RESULT_1_D1),
        .RXE_RXMSG_INVAL_F10(RXE_RXMSG_INVAL_F10),
        .RXE_RXMSG_VAL_F00(RXE_RXMSG_VAL_F00),
        .RXE_RXMSG_VAL_F0_reg(MATCH_RESULT_0_D1),
        .RXE_RXMSG_VAL_F10(RXE_RXMSG_VAL_F10),
        .\RXE_SREG_I_reg[24]_0 ({data0,bsp_n_118,\RXE_SREG_I_reg[30] ,bsp_n_120}),
        .\RXE_SREG_I_reg[24]_1 (\RXE_SREG_I_reg[24] ),
        .\RXE_SREG_I_reg[31]_0 (BTL_SAMP_EN),
        .RXF_FULL_AT_MSG_BOUNDARY(RXF_FULL_AT_MSG_BOUNDARY),
        .RXF_FULL_AT_MSG_BOUNDARY_F1(RXF_FULL_AT_MSG_BOUNDARY_F1),
        .RXF_FULL_AT_MSG_BOUNDARY_reg(RXF_FULL_AT_MSG_BOUNDARY_reg),
        .S({bsp_n_75,bsp_n_76,bsp_n_77,bsp_n_78}),
        .SM_FLAG_I(SM_FLAG_I),
        .SM_FLAG_I_FSB(SM_FLAG_I_FSB),
        .SM_FLAG_I_FSB_reg(bsp_n_149),
        .SM_FLAG_I_reg(tlom_n_31),
        .SM_STUFFBIT_PD(SM_STUFFBIT_PD),
        .SR(bsp_n_59),
        .SSP_EN(SSP_EN),
        .SSP_EN_D1_reg(btl_n_56),
        .SSP_EN_D1_reg_0(btl_n_57),
        .SYNC_RST_TL(SYNC_RST_TL),
        .TDCV_CNT_REG_WEN(TDCV_CNT_REG_WEN),
        .TDCV_CNT_REG_WEN_reg_0(TDCV_CNT_REG_WEN_reg),
        .TDC_EN_FS2(TDC_EN_FS2),
        .TDC_SSP_SAMP_PT_D1(\tdc/TDC_SSP_SAMP_PT_D1 ),
        .TDC_SSP_SAMP_PT_D1_reg(bsp_n_174),
        .TDC_TRIG_COND(TDC_TRIG_COND),
        .\TIME_STAMP_CNT_CAPTURE_reg[0] (\RXE_DATA_STORED_AT_DLC_reg[0] [15:8]),
        .TS_RX_WDATA_F1(TS_RX_WDATA_F1[15:8]),
        .TS_RX_WEN(TS_RX_WEN),
        .TXE_BRAM_WEN(TXE_BRAM_WEN),
        .\TXE_DLC_I_reg[0]_0 (\TXE_DLC_I_reg[0] ),
        .TXE_IC_ARBLSS_I(TXE_IC_ARBLSS_I),
        .TXE_IC_ARBLSS_I_reg_0(TXE_IC_ARBLSS_I_reg),
        .TXE_IC_TXOK_I_reg_0(TXE_IC_TXOK_I_reg),
        .TXE_MSGVAL_D1_I_reg_0(TXE_MSGVAL_D1_I_reg),
        .TXE_MSGVAL_FD1(TXE_MSGVAL_FD1),
        .TXE_MSGVAL_FD2(TXE_MSGVAL_FD2),
        .TXE_PASSTX_I_reg_0(TXE_PASSTX_I),
        .TXE_PASSTX_I_reg_1(TXE_PASSTX_I_reg),
        .TXE_TRNSMT_FLG_reg_0(TXE_TRNSMT_FLG_reg),
        .TXE_TXING055_out(TXE_TXING055_out),
        .TXE_TXING_reg_0(TXE_TXING_reg),
        .TXE_TXING_reg_1(TXE_TXING_reg_0),
        .TXE_TXING_reg_2(bsp_n_126),
        .TXE_TXING_reg_3(bsp_n_152),
        .TXE_TXING_reg_4(TXE_TXING_reg_2),
        .TXE_TXING_reg_5(bsp_n_160),
        .TXE_TXING_reg_6(TXING_BRS_EN_BTR),
        .TXE_TXING_reg_7(TXE_TXING_reg_3),
        .TXE_TXING_reg_8(tlom_n_37),
        .TXE_TX_REN_D1(TXE_TX_REN_D1),
        .TXE_TX_REN_D1_reg_0(TXE_TX_REN_D1_reg),
        .TXE_TX_REN_D1_reg_1(TXE_TX_REN_D1_reg_0),
        .TXE_TX_REN_I(TXE_TX_REN_I),
        .TXE_TX_REN_I_CFD_D1_i_4_0(tlom_n_26),
        .TXE_TX_REN_I_CFD_D1_i_9_0(tlom_n_28),
        .TXING_BRS_EN_BTR_D1(TXING_BRS_EN_BTR_D1),
        .TXING_BRS_EN_BTR_D1_reg(bsp_n_65),
        .TXING_BRS_EN_BTR_D1_reg_0(bsp_n_176),
        .\addr_location_incr_count_reg[0] (\addr_location_incr_count_reg[0] ),
        .\arststages_ff_reg[1] (bsp_n_55),
        .\arststages_ff_reg[1]_0 (bsp_n_79),
        .\arststages_ff_reg[1]_1 (bsp_n_81),
        .\arststages_ff_reg[1]_2 (bsp_n_84),
        .\arststages_ff_reg[1]_3 (bsp_n_87),
        .\arststages_ff_reg[1]_4 (bsp_n_97),
        .\arststages_ff_reg[1]_5 ({bsp_n_195,bsp_n_196,bsp_n_197,bsp_n_198}),
        .\arststages_ff_reg[1]_6 (bsp_n_214),
        .\arststages_ff_reg[1]_7 ({bsp_n_235,bsp_n_236}),
        .can_clk(can_clk),
        .dest_arst(dest_arst),
        .dest_out(dest_out),
        .ena(ena),
        .\gen_wr_a.gen_word_narrow.mem_reg_0 (TS_RX_WEN_F1),
        .i__carry_i_1__4_0({ic_reg_n_btr_ts1_cdc_tig[0],ic_reg_n_btr_ts1_cdc_tig[1],ic_reg_n_btr_ts1_cdc_tig[2],ic_reg_n_btr_ts1_cdc_tig[3],ic_reg_n_btr_ts1_cdc_tig[4],ic_reg_n_btr_ts1_cdc_tig[5],ic_reg_n_btr_ts1_cdc_tig[6],ic_reg_n_btr_ts1_cdc_tig[7]}),
        .i__carry_i_1__5_0(btl_n_49),
        .i__carry_i_2__3_0(btl_n_9),
        .i__carry_i_7__1_0({ic_reg_f_btr_sjw_cdc_tig[0],ic_reg_f_btr_sjw_cdc_tig[1],ic_reg_f_btr_sjw_cdc_tig[2],ic_reg_f_btr_sjw_cdc_tig[3]}),
        .\ic_reg_f_btr_ts1_cdc_tig_reg[2] (bsp_n_237),
        .\ic_reg_f_btr_ts1_cdc_tig_reg[3] (IC_REG_BTR_TS1),
        .\ic_reg_f_btr_ts2_cdc_tig_reg[2] (IC_REG_BTR_TS2),
        .\ic_reg_n_brpr_cdc_tig_reg[1] (bsp_n_137),
        .\ic_reg_n_btr_sjw_cdc_tig_reg[0] (bsp_n_83),
        .\ic_reg_n_btr_sjw_cdc_tig_reg[0]_0 ({bsp_n_191,bsp_n_192,bsp_n_193,bsp_n_194}),
        .\ic_reg_n_btr_sjw_cdc_tig_reg[1] (bsp_n_98),
        .\ic_reg_n_btr_ts1_cdc_tig_reg[1] (bsp_n_92),
        .\ic_reg_n_btr_ts1_cdc_tig_reg[1]_0 (bsp_n_96),
        .\ic_reg_n_btr_ts1_cdc_tig_reg[1]_1 ({bsp_n_204,bsp_n_205,bsp_n_206}),
        .\ic_reg_n_btr_ts1_cdc_tig_reg[1]_2 ({bsp_n_211,bsp_n_212,bsp_n_213}),
        .\ic_reg_n_btr_ts1_cdc_tig_reg[1]_3 (bsp_n_239),
        .\ic_reg_n_btr_ts1_cdc_tig_reg[1]_4 ({bsp_n_277,bsp_n_278,bsp_n_279,bsp_n_280}),
        .\ic_reg_n_btr_ts2_cdc_tig_reg[4] ({bsp_n_199,bsp_n_200,bsp_n_201}),
        .src_in(src_in),
        .\state[0]_i_10_0 (btl_n_84),
        .\state[0]_i_2_0 (tlom_n_38),
        .\state[1]_i_5_0 (MSR_SNOOP_FS2),
        .\state_reg[0]_0 (\state_reg[0] ),
        .\state_reg[0]_1 (bsp_n_57),
        .\state_reg[0]_2 (bsp_n_71),
        .\state_reg[0]_3 (bsp_n_72),
        .\state_reg[0]_4 (\state_reg[0]_0 ),
        .\state_reg[0]_5 (\state_reg[0]_1 ),
        .\state_reg[1]_0 (bsp_n_9),
        .\state_reg[1]_1 (tlom_n_8),
        .\state_reg[2]_0 (\state_reg[2] ),
        .\state_reg[2]_1 (\state_reg[2]_0 ),
        .\state_reg[2]_2 (\state_reg[2]_1 ),
        .\state_reg[2]_3 (bsp_n_143),
        .\state_reg[2]_4 (tlom_n_7),
        .\state_reg[3]_0 (\state_reg[3] ),
        .\state_reg[4]_0 (bsp_n_50),
        .\state_reg[4]_1 (\state_reg[4] ),
        .\state_reg[4]_2 (\state_reg[4]_0 ),
        .\state_reg[4]_3 (BSP_TXBIT_I),
        .\state_reg[4]_4 (\state_reg[4]_1 ),
        .\syncstages_ff_reg[0] (\syncstages_ff_reg[0]_10 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_tl_btl btl
       (.\BIS_COUNTER_I_reg[3] (\state_reg[0]_1 ),
        .BIS_HSYNC_FLG_I_D1(BIS_HSYNC_FLG_I_D1),
        .BIS_HSYNC_FLG_I_reg_0(BIS_HSYNC_FLG_I),
        .BIS_HSYNC_FLG_I_reg_1(BIS_HSYNC_FLG_I_reg),
        .BRSD_P_ERR_1TQ(BRSD_P_ERR_1TQ),
        .BRSD_P_ERR_1TQ_FD(BRSD_P_ERR_1TQ_FD),
        .BRSD_P_ERR_1TQ_FD_reg_0(CNTR_LEQ_SJW_I1),
        .BRSD_P_ERR_1TQ_FD_reg_1(BTL_COUNTER_I),
        .BRSD_P_ERR_1TQ_FD_reg_2(btl_n_60),
        .BRS_EN_BTR(BRS_EN_BTR),
        .BRS_EN_BTR_D1(BRS_EN_BTR_D1),
        .BRS_L_SP_FE_reg(btl_n_10),
        .BRS_L_SP_FE_reg_0(TS2_EQ_SJW1),
        .BRS_L_SP_FE_reg_1(TS2_EQ_SJW2),
        .BSP_TXBIT_FD_reg_0(BSP_TXBIT_FD_reg),
        .BSP_TXBIT_FD_reg_1(BSP_TXBIT_FD_reg_2),
        .BTL_COUNTER_I15_carry__0_0({bsp_n_195,bsp_n_196,bsp_n_197,bsp_n_198}),
        .BTL_COUNTER_I15_carry__0_1({bsp_n_191,bsp_n_192,bsp_n_193,bsp_n_194}),
        .BTL_COUNTER_I16_carry_0(bsp_n_97),
        .BTL_COUNTER_I16_carry__0_0({bsp_n_204,bsp_n_205,bsp_n_206}),
        .BTL_COUNTER_I16_carry__0_1({bsp_n_207,bsp_n_208,bsp_n_209,bsp_n_210}),
        .BTL_COUNTER_I16_carry_i_4_0(IC_REG_BTR_TS1),
        .BTL_COUNTER_I17_carry_i_3(CNTR_EQ_NTMSJW_I),
        .BTL_COUNTER_I17_carry_i_4_0(bsp_n_83),
        .BTL_COUNTER_I17_carry_i_4_1(bsp_n_84),
        .BTL_COUNTER_I17_carry_i_4_2(bsp_n_82),
        .BTL_COUNTER_I17_carry_i_7_0(ic_reg_f_btr_sjw_cdc_tig[3]),
        .BTL_COUNTER_I17_carry_i_7_1(ic_reg_n_btr_sjw_cdc_tig[6]),
        .BTL_COUNTER_I17_carry_i_7_2(bsp_n_81),
        .BTL_COUNTER_I17_carry_i_7_3(bsp_n_79),
        .BTL_COUNTER_I17_carry_i_7_4(bsp_n_87),
        .\BTL_COUNTER_I_REG[5]_i_6 (bsp_n_93),
        .\BTL_COUNTER_I_REG[5]_i_6_0 (bsp_n_94),
        .\BTL_COUNTER_I_REG[5]_i_6_1 (bsp_n_96),
        .\BTL_COUNTER_I_REG[5]_i_6_2 (bsp_n_95),
        .\BTL_COUNTER_I_REG[8]_i_4 ({bsp_n_215,bsp_n_216,bsp_n_217}),
        .\BTL_COUNTER_I_REG[8]_i_4_0 (bsp_n_276),
        .\BTL_COUNTER_I_REG_reg[0]_0 (bsp_n_214),
        .\BTL_COUNTER_I_REG_reg[8]_0 ({btl_n_61,btl_n_62,btl_n_63,btl_n_64,btl_n_65,btl_n_66,btl_n_67,btl_n_68}),
        .\BTL_COUNTER_I_REG_reg[8]_1 ({bsp_n_161,bsp_n_162,bsp_n_163,bsp_n_164,bsp_n_165,bsp_n_166,bsp_n_167,bsp_n_168,bsp_n_169}),
        .BTL_RXBIT_I_reg_0(BTL_RXBIT),
        .BTL_RXBIT_I_reg_1(CRC_CRCWORD_I10),
        .BTL_RXBIT_I_reg_2(CRC17_FD_CRCWORD_I10),
        .BTL_RXBIT_I_reg_3(CRC21_FD_CRCWORD_I10),
        .BTL_RXBIT_I_reg_4(btl_n_81),
        .BTL_RXBIT_I_reg_5(btl_n_84),
        .BTL_RXBIT_I_reg_6(BTL_RXBIT_I_reg_2),
        .BTL_SAMP_EN_D1_X2_reg_0({bsp_n_211,bsp_n_212,bsp_n_213}),
        .BTL_SAMP_EN_D1_reg_0(btl_n_39),
        .BTL_SAMP_EN_D1_reg_1(BIS_COUNTER_I0),
        .BTL_SAMP_EN_D1_reg_2(btl_n_82),
        .BTL_SAMP_EN_D1_reg_3(btl_n_83),
        .BTL_SAMP_EN_FD2(BTL_SAMP_EN_FD2),
        .BTL_TRNSMT_EN_FD1(BTL_TRNSMT_EN_FD1),
        .BTL_TRNSMT_EN_FD1_i_2({bsp_n_184,bsp_n_185,bsp_n_186}),
        .BTL_TRNSMT_EN_FD1_i_2_0({bsp_n_187,bsp_n_188,bsp_n_189}),
        .BTL_TRNSMT_EN_FD1_reg_0(btl_n_55),
        .BTL_TRNSMT_EN_FD1_reg_1(CLKM_EN),
        .BTL_TRNSMT_EN_FD1_reg_2({bsp_n_224,bsp_n_225,bsp_n_226}),
        .BTL_TRNSMT_EN_I1(BTL_TRNSMT_EN_I1),
        .CANCEL_CONFIRMED_TL2OL_I_reg(TXE_TRNSMT_FLG_reg),
        .CAN_PHY_RX_D(CAN_PHY_RX_D),
        .CAN_PHY_RX_D_reg_0(btl_n_52),
        .CAN_PHY_RX_I(CAN_PHY_RX_I),
        .CAN_PHY_RX_I_NEG_FLOP(CAN_PHY_RX_I_NEG_FLOP),
        .CAN_PHY_TX_INT_reg_0(BSP_TXBIT_FD_reg_0),
        .CAN_PHY_TX_LP_i_2(bsp_n_190),
        .CAN_PHY_TX_LP_i_6_0({ic_reg_f_brpr_cdc_tig[0],ic_reg_f_brpr_cdc_tig[1],ic_reg_f_brpr_cdc_tig[3],ic_reg_f_brpr_cdc_tig[4],ic_reg_f_brpr_cdc_tig[5],ic_reg_f_brpr_cdc_tig[6],ic_reg_f_brpr_cdc_tig[7]}),
        .CAN_PHY_TX_LP_i_7_0({ic_reg_n_brpr_cdc_tig[0],ic_reg_n_brpr_cdc_tig[1],ic_reg_n_brpr_cdc_tig[3],ic_reg_n_brpr_cdc_tig[4],ic_reg_n_brpr_cdc_tig[5],ic_reg_n_brpr_cdc_tig[6],ic_reg_n_brpr_cdc_tig[7]}),
        .CAN_PHY_TX_LP_reg_0(CAN_PHY_TX_LP),
        .CAN_PHY_TX_LP_reg_1(CAN_PHY_TX_LP_reg),
        .CAN_PHY_TX_POS_FLOP_X2(CAN_PHY_TX_POS_FLOP_X2),
        .\CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_0 (bsp_n_86),
        .\CAN_PHY_TX_POS_FLOP_X25_inferred__0/i__carry_1 (bsp_n_85),
        .CAN_PHY_TX_POS_FLOP_X26_carry__0_0({bsp_n_232,bsp_n_233,bsp_n_234}),
        .CAN_PHY_TX_POS_FLOP_X26_carry__0_1({bsp_n_228,bsp_n_229,bsp_n_230,bsp_n_231}),
        .CAN_PHY_TX_POS_FLOP_X26_carry__0_i_2(CNTR_GT_2PSAMP_I),
        .CAN_PHY_TX_POS_FLOP_X26_carry_i_3(bsp_n_237),
        .\CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry__0_0 ({bsp_n_221,bsp_n_222,bsp_n_223}),
        .\CAN_PHY_TX_POS_FLOP_X26_inferred__0/i__carry__0_1 ({bsp_n_218,bsp_n_219,bsp_n_220}),
        .CAN_PHY_TX_POS_FLOP_X27(CAN_PHY_TX_POS_FLOP_X27),
        .CAN_PHY_TX_POS_FLOP_X2_reg_0(CAN_PHY_TX_POS_FLOP_X2_reg),
        .CAN_PHY_TX_POS_FLOP_X2_reg_1(CAN_PHY_TX_POS_FLOP_X2_reg_0),
        .CAN_PHY_TX_POS_FLOP_reg_0(CAN_PHY_TX_POS_FLOP_reg),
        .CAN_PHY_TX_POS_FLOP_reg_1(CAN_PHY_TX_POS_FLOP_reg_0),
        .CO(CNTR_GT_SAMP_I),
        .\CRC_CRCWORD_I1_reg[0] (CRC_CRCWORD[0]),
        .D(CAN_PHY_RX_I1),
        .DI({bsp_n_199,IC_REG_BTR_TS2,bsp_n_200,bsp_n_201}),
        .E(BTL_SAMP_EN_FD1),
        .ERR_TXBERR_I_FD_SSP_EN_1_reg(ERR_TXBERR_I_FD_SSP_EN_1_reg),
        .ERR_TXBERR_I_FD_SSP_EN_1_reg_0(bsp_n_174),
        .FAST_TRANSMT_PT_D1_i_2({bsp_n_99,bsp_n_100,bsp_n_101}),
        .FAST_TRANSMT_PT_D1_i_3(bsp_n_239),
        .FAST_TRANSMT_PT_D1_i_3_0(bsp_n_92),
        .FAST_TRANSMT_PT_D1_reg(bsp_n_63),
        .FBR_ERR_1TQ(FBR_ERR_1TQ),
        .FBR_ERR_1TQ_reg_0(bsp_n_53),
        .FIRST_FAST_TRANSMT_PT_FLG_reg(TXE_TXING_reg),
        .HSYNC_FLG_I0(HSYNC_FLG_I0),
        .HSYNC_FLG_I_reg_0(HSYNC_FLG_I),
        .HSYNC_FLG_I_reg_1(HSYNC_FLG_I_reg),
        .HSYNC_FLG_I_reg_2(bsp_n_145),
        .HSYNC_OCCR_D_reg_0(BTL_SAMP_EN),
        .HSYNC_OCCR_D_reg_1(HSYNC_OCCR_D_reg),
        .IFF5_EN_FS2(IFF5_EN_FS2),
        .\ISO_CRC.CRC17_FD_CRCWORD_I1_reg[0] (CRC17_CRCWORD),
        .\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[0] (CRC21_CRCWORD[0]),
        .\MEM_reg[3] (\MEM_reg[3] ),
        .O({btl_n_11,btl_n_12,btl_n_13}),
        .\PIPELINED_BITS_reg[0] (btl_n_57),
        .\PIPELINED_BITS_reg[0]_0 (bsp_n_176),
        .\PIPELINED_BITS_reg[1] (btl_n_56),
        .Q(Q),
        .\RD_PTR_reg[1] (bsp_n_65),
        .RSYNC_FLG_I(RSYNC_FLG_I),
        .RSYNC_FLG_I_reg_0({bsp_n_235,bsp_n_236}),
        .RSYNC_FLG_I_reg_1(bsp_n_132),
        .RSYNC_FLG_I_reg_2(bsp_n_136),
        .RSYNC_OCCR_D_reg_0(btl_n_38),
        .RXE_BTL_HSYNC_EN(RXE_BTL_HSYNC_EN),
        .\RXE_COUNTER_I_reg[0] (\SM_REG_I_reg[1] ),
        .\RXE_COUNTER_I_reg[8] (bsp_n_54),
        .S({bsp_n_75,bsp_n_76,bsp_n_77,bsp_n_78}),
        .SR({bsp_n_59,SYNC_RST_TL}),
        .SSP_BTL_TXBIT_I(SSP_BTL_TXBIT_I),
        .SSP_BTL_TXBIT_I_reg(SSP_BTL_TXBIT_I_reg),
        .\SSP_COUNT_DOWN_reg[6] (tlsync_n_12),
        .SSP_EN(SSP_EN),
        .SSP_RCVD_RXBIT(SSP_RCVD_RXBIT),
        .SSP_RCVD_RXBIT_reg(SSP_RCVD_RXBIT_reg),
        .\TDC_COUNTER_reg[6] ({ic_reg_f_brpr_tdcoff_cdc_tig[0],ic_reg_f_brpr_tdcoff_cdc_tig[1],ic_reg_f_brpr_tdcoff_cdc_tig[2],ic_reg_f_brpr_tdcoff_cdc_tig[3],ic_reg_f_brpr_tdcoff_cdc_tig[4],ic_reg_f_brpr_tdcoff_cdc_tig[5]}),
        .\TDC_COUNTER_reg[6]_0 (\SM_REG_I_reg[0] ),
        .\TDC_COUNTER_reg[6]_1 (IFF_EN_FS2),
        .TDC_SSP_SAMP_PT_D1(\tdc/TDC_SSP_SAMP_PT_D1 ),
        .TDC_SSP_SAMP_PT_reg(TDC_SSP_SAMP_PT),
        .TDC_TRIG_COND(TDC_TRIG_COND),
        .TXE_TXING_reg(TXE_TXING_reg_1),
        .TXE_TXING_reg_0(btl_n_50),
        .TXING_BRS_EN_BTR_D1(TXING_BRS_EN_BTR_D1),
        .TXING_BRS_EN_BTR_D1_reg(TXING_BRS_EN_BTR),
        .\arststages_ff_reg[1] (CNTR_EQ_SAMP1),
        .\arststages_ff_reg[1]_0 (CO),
        .\arststages_ff_reg[1]_1 (btl_n_47),
        .\arststages_ff_reg[1]_2 (btl_n_49),
        .can_clk(can_clk),
        .can_clk_x2(can_clk_x2),
        .dest_arst(dest_arst),
        .hsyn_occured_new_flag_reg_0(MSR_LBACK_FS2),
        .i__carry__0_i_2__1(CNTR_LT_NTMSJW_I),
        .i__carry__0_i_2__1_0(S),
        .i__carry_i_2__3({bsp_n_88,bsp_n_89,bsp_n_90,bsp_n_91}),
        .i__carry_i_2__3_0({bsp_n_277,bsp_n_278,bsp_n_279,bsp_n_280}),
        .i__carry_i_2__5(bsp_n_98),
        .i__carry_i_3__6(CNTR_EQ_SAMP2),
        .\ic_reg_f_brpr_cdc_tig_reg[5] (btl_n_58),
        .\ic_reg_f_btr_sjw_cdc_tig_reg[3] (btl_n_85),
        .\ic_reg_n_brpr_cdc_tig_reg[5] (btl_n_59),
        .\ic_reg_n_btr_ts2_cdc_tig_reg[4] (btl_n_9),
        .\state[0]_i_24 (\RXE_SREG_I_reg[30] ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_tl_clkdiv clkdiv
       (.BRS_EN_BTR(BRS_EN_BTR),
        .\CLKD_COUNTER_I_reg[1]_0 ({CLKD_COUNTER_I_reg[1],CLKD_COUNTER_I_reg[2]}),
        .\CLKD_COUNTER_I_reg[7]_0 (bsp_n_137),
        .CLKM_EN_i_2_0({ic_reg_f_brpr_cdc_tig[0],ic_reg_f_brpr_cdc_tig[3],ic_reg_f_brpr_cdc_tig[4],ic_reg_f_brpr_cdc_tig[5],ic_reg_f_brpr_cdc_tig[6],ic_reg_f_brpr_cdc_tig[7]}),
        .CLKM_EN_reg_0(CLKM_EN),
        .CLKM_EN_reg_1(clkdiv_n_3),
        .CLKM_EN_reg_2(clkdiv_n_4),
        .CLKM_EN_reg_3(bsp_n_136),
        .FBR_ERR_1TQ(FBR_ERR_1TQ),
        .Q({ic_reg_n_brpr_cdc_tig[0],ic_reg_n_brpr_cdc_tig[3],ic_reg_n_brpr_cdc_tig[4],ic_reg_n_brpr_cdc_tig[5],ic_reg_n_brpr_cdc_tig[6],ic_reg_n_brpr_cdc_tig[7]}),
        .SYNC_RST_TL(SYNC_RST_TL),
        .can_clk(can_clk),
        .dest_arst(dest_arst));
  FDRE \ic_reg_f_brpr_cdc_tig_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\syncstages_ff_reg[0] [7]),
        .Q(ic_reg_f_brpr_cdc_tig[0]),
        .R(SR));
  FDRE \ic_reg_f_brpr_cdc_tig_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\syncstages_ff_reg[0] [6]),
        .Q(ic_reg_f_brpr_cdc_tig[1]),
        .R(SR));
  FDRE \ic_reg_f_brpr_cdc_tig_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\syncstages_ff_reg[0] [5]),
        .Q(ic_reg_f_brpr_cdc_tig[2]),
        .R(SR));
  FDRE \ic_reg_f_brpr_cdc_tig_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\syncstages_ff_reg[0] [4]),
        .Q(ic_reg_f_brpr_cdc_tig[3]),
        .R(SR));
  FDRE \ic_reg_f_brpr_cdc_tig_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\syncstages_ff_reg[0] [3]),
        .Q(ic_reg_f_brpr_cdc_tig[4]),
        .R(SR));
  FDRE \ic_reg_f_brpr_cdc_tig_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\syncstages_ff_reg[0] [2]),
        .Q(ic_reg_f_brpr_cdc_tig[5]),
        .R(SR));
  FDRE \ic_reg_f_brpr_cdc_tig_reg[6] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\syncstages_ff_reg[0] [1]),
        .Q(ic_reg_f_brpr_cdc_tig[6]),
        .R(SR));
  FDRE \ic_reg_f_brpr_cdc_tig_reg[7] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\syncstages_ff_reg[0] [0]),
        .Q(ic_reg_f_brpr_cdc_tig[7]),
        .R(SR));
  FDRE \ic_reg_f_brpr_tdcoff_cdc_tig_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\syncstages_ff_reg[0] [13]),
        .Q(ic_reg_f_brpr_tdcoff_cdc_tig[0]),
        .R(SR));
  FDRE \ic_reg_f_brpr_tdcoff_cdc_tig_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\syncstages_ff_reg[0] [12]),
        .Q(ic_reg_f_brpr_tdcoff_cdc_tig[1]),
        .R(SR));
  FDRE \ic_reg_f_brpr_tdcoff_cdc_tig_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\syncstages_ff_reg[0] [11]),
        .Q(ic_reg_f_brpr_tdcoff_cdc_tig[2]),
        .R(SR));
  FDRE \ic_reg_f_brpr_tdcoff_cdc_tig_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\syncstages_ff_reg[0] [10]),
        .Q(ic_reg_f_brpr_tdcoff_cdc_tig[3]),
        .R(SR));
  FDRE \ic_reg_f_brpr_tdcoff_cdc_tig_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\syncstages_ff_reg[0] [9]),
        .Q(ic_reg_f_brpr_tdcoff_cdc_tig[4]),
        .R(SR));
  FDRE \ic_reg_f_brpr_tdcoff_cdc_tig_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\syncstages_ff_reg[0] [8]),
        .Q(ic_reg_f_brpr_tdcoff_cdc_tig[5]),
        .R(SR));
  FDRE \ic_reg_f_btr_sjw_cdc_tig_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_f_btr_sjw_cdc_tig_reg[0]_0 [3]),
        .Q(ic_reg_f_btr_sjw_cdc_tig[0]),
        .R(SR));
  FDRE \ic_reg_f_btr_sjw_cdc_tig_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_f_btr_sjw_cdc_tig_reg[0]_0 [2]),
        .Q(ic_reg_f_btr_sjw_cdc_tig[1]),
        .R(SR));
  FDRE \ic_reg_f_btr_sjw_cdc_tig_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_f_btr_sjw_cdc_tig_reg[0]_0 [1]),
        .Q(ic_reg_f_btr_sjw_cdc_tig[2]),
        .R(SR));
  FDRE \ic_reg_f_btr_sjw_cdc_tig_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_f_btr_sjw_cdc_tig_reg[0]_0 [0]),
        .Q(ic_reg_f_btr_sjw_cdc_tig[3]),
        .R(SR));
  FDRE \ic_reg_f_btr_ts1_cdc_tig_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_f_btr_ts1_cdc_tig_reg[0]_0 [4]),
        .Q(ic_reg_f_btr_ts1_cdc_tig[0]),
        .R(SR));
  FDRE \ic_reg_f_btr_ts1_cdc_tig_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_f_btr_ts1_cdc_tig_reg[0]_0 [3]),
        .Q(ic_reg_f_btr_ts1_cdc_tig[1]),
        .R(SR));
  FDRE \ic_reg_f_btr_ts1_cdc_tig_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_f_btr_ts1_cdc_tig_reg[0]_0 [2]),
        .Q(ic_reg_f_btr_ts1_cdc_tig[2]),
        .R(SR));
  FDRE \ic_reg_f_btr_ts1_cdc_tig_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_f_btr_ts1_cdc_tig_reg[0]_0 [1]),
        .Q(ic_reg_f_btr_ts1_cdc_tig[3]),
        .R(SR));
  FDRE \ic_reg_f_btr_ts1_cdc_tig_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_f_btr_ts1_cdc_tig_reg[0]_0 [0]),
        .Q(ic_reg_f_btr_ts1_cdc_tig[4]),
        .R(SR));
  FDRE \ic_reg_f_btr_ts2_cdc_tig_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_f_btr_ts2_cdc_tig_reg[0]_0 [3]),
        .Q(ic_reg_f_btr_ts2_cdc_tig[0]),
        .R(SR));
  FDRE \ic_reg_f_btr_ts2_cdc_tig_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_f_btr_ts2_cdc_tig_reg[0]_0 [2]),
        .Q(ic_reg_f_btr_ts2_cdc_tig[1]),
        .R(SR));
  FDRE \ic_reg_f_btr_ts2_cdc_tig_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_f_btr_ts2_cdc_tig_reg[0]_0 [1]),
        .Q(ic_reg_f_btr_ts2_cdc_tig[2]),
        .R(SR));
  FDRE \ic_reg_f_btr_ts2_cdc_tig_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_f_btr_ts2_cdc_tig_reg[0]_0 [0]),
        .Q(ic_reg_f_btr_ts2_cdc_tig[3]),
        .R(SR));
  FDRE \ic_reg_n_brpr_cdc_tig_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_brpr_cdc_tig_reg[0]_0 [7]),
        .Q(ic_reg_n_brpr_cdc_tig[0]),
        .R(SR));
  FDRE \ic_reg_n_brpr_cdc_tig_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_brpr_cdc_tig_reg[0]_0 [6]),
        .Q(ic_reg_n_brpr_cdc_tig[1]),
        .R(SR));
  FDRE \ic_reg_n_brpr_cdc_tig_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_brpr_cdc_tig_reg[0]_0 [5]),
        .Q(ic_reg_n_brpr_cdc_tig[2]),
        .R(SR));
  FDRE \ic_reg_n_brpr_cdc_tig_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_brpr_cdc_tig_reg[0]_0 [4]),
        .Q(ic_reg_n_brpr_cdc_tig[3]),
        .R(SR));
  FDRE \ic_reg_n_brpr_cdc_tig_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_brpr_cdc_tig_reg[0]_0 [3]),
        .Q(ic_reg_n_brpr_cdc_tig[4]),
        .R(SR));
  FDRE \ic_reg_n_brpr_cdc_tig_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_brpr_cdc_tig_reg[0]_0 [2]),
        .Q(ic_reg_n_brpr_cdc_tig[5]),
        .R(SR));
  FDRE \ic_reg_n_brpr_cdc_tig_reg[6] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_brpr_cdc_tig_reg[0]_0 [1]),
        .Q(ic_reg_n_brpr_cdc_tig[6]),
        .R(SR));
  FDRE \ic_reg_n_brpr_cdc_tig_reg[7] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_brpr_cdc_tig_reg[0]_0 [0]),
        .Q(ic_reg_n_brpr_cdc_tig[7]),
        .R(SR));
  FDRE \ic_reg_n_btr_sjw_cdc_tig_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_btr_sjw_cdc_tig_reg[0]_0 [6]),
        .Q(ic_reg_n_btr_sjw_cdc_tig[0]),
        .R(SR));
  FDRE \ic_reg_n_btr_sjw_cdc_tig_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_btr_sjw_cdc_tig_reg[0]_0 [5]),
        .Q(ic_reg_n_btr_sjw_cdc_tig[1]),
        .R(SR));
  FDRE \ic_reg_n_btr_sjw_cdc_tig_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_btr_sjw_cdc_tig_reg[0]_0 [4]),
        .Q(ic_reg_n_btr_sjw_cdc_tig[2]),
        .R(SR));
  FDRE \ic_reg_n_btr_sjw_cdc_tig_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_btr_sjw_cdc_tig_reg[0]_0 [3]),
        .Q(ic_reg_n_btr_sjw_cdc_tig[3]),
        .R(SR));
  FDRE \ic_reg_n_btr_sjw_cdc_tig_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_btr_sjw_cdc_tig_reg[0]_0 [2]),
        .Q(ic_reg_n_btr_sjw_cdc_tig[4]),
        .R(SR));
  FDRE \ic_reg_n_btr_sjw_cdc_tig_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_btr_sjw_cdc_tig_reg[0]_0 [1]),
        .Q(ic_reg_n_btr_sjw_cdc_tig[5]),
        .R(SR));
  FDRE \ic_reg_n_btr_sjw_cdc_tig_reg[6] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_btr_sjw_cdc_tig_reg[0]_0 [0]),
        .Q(ic_reg_n_btr_sjw_cdc_tig[6]),
        .R(SR));
  FDRE \ic_reg_n_btr_ts1_cdc_tig_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_btr_ts1_cdc_tig_reg[0]_0 [7]),
        .Q(ic_reg_n_btr_ts1_cdc_tig[0]),
        .R(SR));
  FDRE \ic_reg_n_btr_ts1_cdc_tig_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_btr_ts1_cdc_tig_reg[0]_0 [6]),
        .Q(ic_reg_n_btr_ts1_cdc_tig[1]),
        .R(SR));
  FDRE \ic_reg_n_btr_ts1_cdc_tig_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_btr_ts1_cdc_tig_reg[0]_0 [5]),
        .Q(ic_reg_n_btr_ts1_cdc_tig[2]),
        .R(SR));
  FDRE \ic_reg_n_btr_ts1_cdc_tig_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_btr_ts1_cdc_tig_reg[0]_0 [4]),
        .Q(ic_reg_n_btr_ts1_cdc_tig[3]),
        .R(SR));
  FDRE \ic_reg_n_btr_ts1_cdc_tig_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_btr_ts1_cdc_tig_reg[0]_0 [3]),
        .Q(ic_reg_n_btr_ts1_cdc_tig[4]),
        .R(SR));
  FDRE \ic_reg_n_btr_ts1_cdc_tig_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_btr_ts1_cdc_tig_reg[0]_0 [2]),
        .Q(ic_reg_n_btr_ts1_cdc_tig[5]),
        .R(SR));
  FDRE \ic_reg_n_btr_ts1_cdc_tig_reg[6] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_btr_ts1_cdc_tig_reg[0]_0 [1]),
        .Q(ic_reg_n_btr_ts1_cdc_tig[6]),
        .R(SR));
  FDRE \ic_reg_n_btr_ts1_cdc_tig_reg[7] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_btr_ts1_cdc_tig_reg[0]_0 [0]),
        .Q(ic_reg_n_btr_ts1_cdc_tig[7]),
        .R(SR));
  FDRE \ic_reg_n_btr_ts2_cdc_tig_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_btr_ts2_cdc_tig_reg[0]_0 [6]),
        .Q(ic_reg_n_btr_ts2_cdc_tig[0]),
        .R(SR));
  FDRE \ic_reg_n_btr_ts2_cdc_tig_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_btr_ts2_cdc_tig_reg[0]_0 [5]),
        .Q(ic_reg_n_btr_ts2_cdc_tig[1]),
        .R(SR));
  FDRE \ic_reg_n_btr_ts2_cdc_tig_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_btr_ts2_cdc_tig_reg[0]_0 [4]),
        .Q(ic_reg_n_btr_ts2_cdc_tig[2]),
        .R(SR));
  FDRE \ic_reg_n_btr_ts2_cdc_tig_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_btr_ts2_cdc_tig_reg[0]_0 [3]),
        .Q(ic_reg_n_btr_ts2_cdc_tig[3]),
        .R(SR));
  FDRE \ic_reg_n_btr_ts2_cdc_tig_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_btr_ts2_cdc_tig_reg[0]_0 [2]),
        .Q(ic_reg_n_btr_ts2_cdc_tig[4]),
        .R(SR));
  FDRE \ic_reg_n_btr_ts2_cdc_tig_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_btr_ts2_cdc_tig_reg[0]_0 [1]),
        .Q(ic_reg_n_btr_ts2_cdc_tig[5]),
        .R(SR));
  FDRE \ic_reg_n_btr_ts2_cdc_tig_reg[6] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_n_btr_ts2_cdc_tig_reg[0]_0 [0]),
        .Q(ic_reg_n_btr_ts2_cdc_tig[6]),
        .R(SR));
  FDRE \ic_reg_wmr_rxfp_cdc_tig_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_wmr_rxfp_cdc_tig_reg[0]_0 [4]),
        .Q(ic_reg_wmr_rxfp_cdc_tig[0]),
        .R(SR));
  FDRE \ic_reg_wmr_rxfp_cdc_tig_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_wmr_rxfp_cdc_tig_reg[0]_0 [3]),
        .Q(ic_reg_wmr_rxfp_cdc_tig[1]),
        .R(SR));
  FDRE \ic_reg_wmr_rxfp_cdc_tig_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_wmr_rxfp_cdc_tig_reg[0]_0 [2]),
        .Q(ic_reg_wmr_rxfp_cdc_tig[2]),
        .R(SR));
  FDRE \ic_reg_wmr_rxfp_cdc_tig_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_wmr_rxfp_cdc_tig_reg[0]_0 [1]),
        .Q(ic_reg_wmr_rxfp_cdc_tig[3]),
        .R(SR));
  FDRE \ic_reg_wmr_rxfp_cdc_tig_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\ic_reg_wmr_rxfp_cdc_tig_reg[0]_0 [0]),
        .Q(ic_reg_wmr_rxfp_cdc_tig[4]),
        .R(SR));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_timestamp timestamp
       (.\CLKD_COUNTER_I_reg[3]_0 (tlsync_n_14),
        .CLKM_EN_D1(CLKM_EN_D1),
        .D(D),
        .IC_SYNC_ISR_MSGLST(IC_SYNC_ISR_MSGLST),
        .IC_SYNC_ISR_MSGLST_F1(IC_SYNC_ISR_MSGLST_F1),
        .IC_SYNC_ISR_MSGLST_F1_reg_0(IC_SYNC_ISR_MSGLST_F1_reg),
        .IC_SYNC_ISR_MSGLST_reg_0(IC_SYNC_ISR_MSGLST_reg),
        .IC_SYNC_TSR_WEN(IC_SYNC_TSR_WEN),
        .IC_TIMESTAMP_RST_P(IC_TIMESTAMP_RST_P),
        .\MATCHED_FILTER_INDEX_FS2_D1_reg[0]_0 (\MATCHED_FILTER_INDEX_FS2_D1_reg[0] ),
        .MATCH_RESULT_0_D1(MATCH_RESULT_0_D1),
        .MATCH_RESULT_1_D1(MATCH_RESULT_1_D1),
        .MATCH_RESULT_FS2_D1(MATCH_RESULT_FS2_D1),
        .MATCH_RESULT_TO_BSP(MATCH_RESULT_TO_BSP),
        .MATCH_RESULT_TO_BSP0(MATCH_RESULT_TO_BSP0),
        .Q({ic_reg_wmr_rxfp_cdc_tig[0],ic_reg_wmr_rxfp_cdc_tig[1],ic_reg_wmr_rxfp_cdc_tig[2],ic_reg_wmr_rxfp_cdc_tig[3],ic_reg_wmr_rxfp_cdc_tig[4]}),
        .\RXE_DATA_STORED_AT_DLC_reg[0] ({\RXE_DATA_STORED_AT_DLC_reg[0] [31:16],\RXE_DATA_STORED_AT_DLC_reg[0] [7:0]}),
        .RXE_MSGVAL_EARLY_F0(RXE_MSGVAL_EARLY_F0),
        .RXE_MSGVAL_EARLY_F00(RXE_MSGVAL_EARLY_F00),
        .RXE_MSGVAL_EARLY_F1(RXE_MSGVAL_EARLY_F1),
        .RXE_MSGVAL_EARLY_F10(RXE_MSGVAL_EARLY_F10),
        .RXE_RXMSG_INVAL_F0(RXE_RXMSG_INVAL_F0),
        .RXE_RXMSG_INVAL_F00(RXE_RXMSG_INVAL_F00),
        .RXE_RXMSG_INVAL_F1(RXE_RXMSG_INVAL_F1),
        .RXE_RXMSG_INVAL_F10(RXE_RXMSG_INVAL_F10),
        .RXE_RXMSG_VAL_F0(RXE_RXMSG_VAL_F0),
        .RXE_RXMSG_VAL_F00(RXE_RXMSG_VAL_F00),
        .RXE_RXMSG_VAL_F0_reg_0(RXE_RXMSG_VAL_F0_reg),
        .RXE_RXMSG_VAL_F0_reg_1(RXE_RXMSG_VAL_F0_reg_0),
        .RXE_RXMSG_VAL_F1(RXE_RXMSG_VAL_F1),
        .RXE_RXMSG_VAL_F10(RXE_RXMSG_VAL_F10),
        .RXE_RXMSG_VAL_F1_reg_0(RXE_RXMSG_VAL_F1_reg),
        .RXE_RXMSG_VAL_F1_reg_1(RXE_RXMSG_VAL_F1_reg_0),
        .SYNC_RST_TL(SYNC_RST_TL),
        .\TIME_STAMP_CNT_CAPTURE_reg[15]_0 (\TIME_STAMP_CNT_CAPTURE_reg[15] ),
        .TIME_STAMP_CNT_REG_WEN_reg_0(TIME_STAMP_CNT_REG_WEN_reg),
        .TS_COUNTER_SW_RST_D1(TS_COUNTER_SW_RST_D1),
        .TS_COUNTER_SW_RST_D2(TS_COUNTER_SW_RST_D2),
        .TS_RX_WDATA_F1(TS_RX_WDATA_F1),
        .TS_RX_WEN(TS_RX_WEN),
        .TS_RX_WEN_F1_reg_0(TS_RX_WEN_F1),
        .can_clk(can_clk),
        .\gen_wr_a.gen_word_narrow.mem_reg_0 ({data0,bsp_n_118,\RXE_SREG_I_reg[30] ,bsp_n_120}),
        .\gen_wr_a.gen_word_narrow.mem_reg_0_0 (bsp_n_121),
        .\gen_wr_a.gen_word_narrow.mem_reg_1 (\gen_wr_a.gen_word_narrow.mem_reg_1 ),
        .\gen_wr_a.gen_word_narrow.mem_reg_1_0 (\RXE_SREG_I_reg[24] [31:16]),
        .\syncstages_ff_reg[0] (\syncstages_ff_reg[0]_9 ),
        .\syncstages_ff_reg[0][4] (\syncstages_ff_reg[0][4] ),
        .\wr_index_i_reg[6] (\wr_index_i_reg[6] ),
        .\wr_index_i_reg[6]_0 (\wr_index_i_reg[6]_0 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_tl_om tlom
       (.BSP_CRCERR_I_CANFD_FLG_i_4(bsp_n_203),
        .\COUNTER_I_reg[0]_0 (tlom_n_9),
        .\COUNTER_I_reg[1]_0 (tlom_n_31),
        .\COUNTER_I_reg[1]_1 (bsp_n_55),
        .CRC_CRCWORD_I1(CRC_CRCWORD_I1),
        .\CRC_CRCWORD_I1_reg[0]_0 (bsp_n_57),
        .\CRC_CRCWORD_I1_reg[0]_1 (CRC_CRCWORD_I10),
        .\CRC_CRCWORD_I1_reg[14]_0 ({CRC_CRCWORD[0],CRC_CRCWORD[1],CRC_CRCWORD[7],CRC_CRCWORD[12],CRC_CRCWORD[13],CRC_CRCWORD[14]}),
        .\CRC_CRCWORD_I1_reg[14]_1 (tlom_n_29),
        .\CRC_CRCWORD_I1_reg[4]_0 (tlom_n_10),
        .\CRC_CRCWORD_I1_reg[9]_0 (tlom_n_17),
        .D(CAN_PHY_RX_I1),
        .E(BTL_SAMP_EN_FD1),
        .EMU_CTR_FLG_I(EMU_CTR_FLG_I),
        .EMU_CTR_FLG_I0(EMU_CTR_FLG_I0),
        .EMU_ERRWRN(EMU_ERRWRN),
        .\EMU_OL_ECR_I_reg[0]_0 (\EMU_OL_ECR_I_reg[0] ),
        .\EMU_OL_ECR_I_reg[0]_1 (bsp_n_143),
        .\EMU_OL_ECR_I_reg[0]_2 (bsp_n_160),
        .\EMU_OL_ECR_I_reg[0]_3 (EMU_OL_ECR_WEN_I0),
        .\EMU_OL_ECR_I_reg[12]_0 (bsp_n_126),
        .\EMU_OL_ECR_I_reg[15]_0 (bsp_n_9),
        .EMU_REC_I20_carry_0(bsp_n_152),
        .EMU_REC_I20_carry_1(TXE_TXING_reg),
        .EMU_REC_I20_carry_2(bsp_n_127),
        .\EMU_REC_I_reg[7]_0 (EMU_REC_GR7F),
        .\EMU_REC_I_reg[7]_1 (tlom_n_8),
        .\EMU_REC_I_reg[7]_2 (tlom_n_37),
        .\EMU_REC_I_reg[7]_3 (MSR_SNOOP_FS2),
        .EMU_STAT1(EMU_STAT1),
        .\EMU_TEC_I_reg[4]_0 (tlom_n_7),
        .\EMU_TEC_I_reg[5]_0 (tlom_n_38),
        .IC_REG_MSR_SNOOP_FS2_D1_reg(IC_REG_MSR_SNOOP_FS2_D1_reg),
        .IC_SYNC_ECR_WEN(IC_SYNC_ECR_WEN),
        .\ISO_CRC.CRC17_FD_CRCWORD_I1_reg[0]_0 (CRC17_FD_CRCWORD_I10),
        .\ISO_CRC.CRC17_FD_CRCWORD_I1_reg[16]_0 (CRC17_CRCWORD),
        .\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[0]_0 (CRC21_FD_CRCWORD_I10),
        .\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[20]_0 ({CRC21_CRCWORD[0],CRC21_CRCWORD[1],CRC21_CRCWORD[2],CRC21_CRCWORD[3],CRC21_CRCWORD[4],CRC21_CRCWORD[5]}),
        .\ISO_CRC.CRC21_FD_CRCWORD_I1_reg[3]_0 (BTL_RXBIT),
        .\ISO_CRC.SBC_SEQ_REG_reg[3]_0 (tlom_n_28),
        .\PREV_COUNTER_I_reg[0]_0 (BTL_SAMP_EN),
        .Q(EMU_TEC_I_reg),
        .\RXE_COUNTER_I_reg[1] (tlom_n_18),
        .\RXE_COUNTER_I_reg[1]_0 (tlom_n_25),
        .\RXE_COUNTER_I_reg[4] (tlom_n_26),
        .SM_FLAG_I(SM_FLAG_I),
        .SM_FLAG_I_FSB(SM_FLAG_I_FSB),
        .SM_FLAG_I_FSB_reg_0(bsp_n_149),
        .SM_FLAG_I_reg_0(SM_FLAG_I_reg),
        .SM_FLAG_I_reg_1(bsp_n_147),
        .\SM_REG_I_reg[1]_0 (\SM_REG_I_reg[1] ),
        .\SM_REG_I_reg[1]_1 (tlom_n_34),
        .SM_STUFFBIT_PD(SM_STUFFBIT_PD),
        .SYNC_RST_TL(SYNC_RST_TL),
        .TXE_TX_REN_I_CFD_D1_i_36_0(bsp_n_183),
        .TXE_TX_REN_I_CFD_D1_i_9(bsp_n_202),
        .TXE_TX_REN_I_CFD_D1_reg_i_19_0({bsp_n_66,bsp_n_67,bsp_n_68,bsp_n_69}),
        .can_clk(can_clk),
        .dest_arst(dest_arst),
        .\state[1]_i_5 (bsp_n_50),
        .\syncstages_ff_reg[0] (\syncstages_ff_reg[0]_8 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_tl_synch tlsync
       (.CAN_PHY_RX_I(CAN_PHY_RX_I),
        .CAN_PHY_RX_I_NEG_FLOP(CAN_PHY_RX_I_NEG_FLOP),
        .CAN_PHY_TX_LP(CAN_PHY_TX_LP),
        .D(CAN_PHY_RX_I1),
        .IC_REG_IFF_EN_FS2_reg_0(IFF_EN_FS2),
        .IC_REG_MSR_LBACK(IC_REG_MSR_LBACK),
        .IC_REG_MSR_LBACK_FS2_D1_reg_0(MSR_LBACK_FS2),
        .IC_REG_MSR_LBACK_FS2_D1_reg_1(tlsync_n_12),
        .IC_TIMESTAMP_RST_FS3_reg_0(tlsync_n_14),
        .IC_TIMESTAMP_RST_P(IC_TIMESTAMP_RST_P),
        .IFF5_EN_FS2(IFF5_EN_FS2),
        .IFF6_EN_FS2(IFF6_EN_FS2),
        .MSR_BRSD_FS2(MSR_BRSD_FS2),
        .MSR_DAR_FS2(MSR_DAR_FS2),
        .MSR_DPEE_FS2(MSR_DPEE_FS2),
        .MSR_SBR_FS2(MSR_SBR_FS2),
        .MSR_SLEEP_FS2(MSR_SLEEP_FS2),
        .MSR_SNOOP_FS2(MSR_SNOOP_FS2),
        .\SM_REG_I_reg[0] (\SM_REG_I_reg[0] ),
        .SSP_EN(SSP_EN),
        .SYNC_RST_TL(SYNC_RST_TL),
        .TDC_EN_FS2(TDC_EN_FS2),
        .TS_COUNTER_SW_RST_D1(TS_COUNTER_SW_RST_D1),
        .can_clk(can_clk),
        .dest_arst(dest_arst),
        .\syncstages_ff_reg[0] (\syncstages_ff_reg[0] [14]),
        .\syncstages_ff_reg[0]_0 (\syncstages_ff_reg[0]_0 ),
        .\syncstages_ff_reg[0]_1 (\syncstages_ff_reg[0]_1 ),
        .\syncstages_ff_reg[0]_2 (\syncstages_ff_reg[0]_2 ),
        .\syncstages_ff_reg[0]_3 (\syncstages_ff_reg[0]_3 ),
        .\syncstages_ff_reg[0]_4 (\syncstages_ff_reg[0]_4 ),
        .\syncstages_ff_reg[0]_5 (\syncstages_ff_reg[0]_5 ),
        .\syncstages_ff_reg[0]_6 (\syncstages_ff_reg[0]_6 ),
        .\syncstages_ff_reg[0]_7 (\syncstages_ff_reg[0]_7 ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_tx_event_fifo_cntl
   (TXE_MSGVAL_D2_reg_0,
    RXF_FULL_AXI,
    TXEWM_SET,
    RXF_FULL_I_reg_0,
    TXE_MSGVAL_D1_reg_0,
    addr_location_incr_count_reg_0,
    IC_SYNC_ISR_MSGLST_TXE,
    D,
    Q,
    \FILL_LEVEL_reg[2]_0 ,
    \FILL_LEVEL_reg[5]_0 ,
    \IC_REG_WMR_I2_reg[3]_0 ,
    addra,
    TXE_BRAM_WEN,
    dina,
    SR,
    \SINGLE_BIT.s_level_out_d1_cdc_to_reg ,
    can_clk,
    \SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ,
    \MULTI_BIT.s_level_out_bus_d5_reg[0] ,
    s_axi_aclk,
    addr_location_incr_count_reg_1,
    IC_SYNC_ISR_MSGLST_reg_0,
    \RD_DATA_RET_reg[27] ,
    \RD_DATA_RET_reg[29] ,
    \RD_DATA_RET_reg[29]_0 ,
    \RD_DATA_RET_reg[29]_1 ,
    \RD_DATA_RET_reg[28] ,
    \RD_DATA_RET_reg[28]_0 ,
    \RD_DATA_RET_reg[28]_1 ,
    \RD_DATA_RET_reg[27]_0 ,
    \RD_DATA_RET_reg[27]_1 ,
    \RD_DATA_RET_reg[27]_2 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1 ,
    TXE_MSGVAL_D1_reg_1,
    TXE_MSGVAL_FD2,
    TXE_MSGVAL_FD1,
    dest_arst,
    \gen_wr_a.gen_word_narrow.mem_reg_1_0 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1_1 ,
    TS_RX_WEN,
    \gen_wr_a.gen_word_narrow.mem_reg_1_2 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1_3 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1_4 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1_5 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1_6 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1_7 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1_8 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1_9 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1_10 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1_11 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1_12 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1_13 ,
    TS_RX_WDATA_F1,
    \gen_wr_a.gen_word_narrow.mem_reg_1_14 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1_15 ,
    \gen_wr_a.gen_word_narrow.mem_reg_0 ,
    \gen_wr_a.gen_word_narrow.mem_reg_0_0 ,
    \FILL_LEVEL_reg[4]_0 ,
    E,
    s_axi_wdata,
    \RD_INDEX_reg[5]_0 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1_16 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1_17 );
  output TXE_MSGVAL_D2_reg_0;
  output RXF_FULL_AXI;
  output TXEWM_SET;
  output RXF_FULL_I_reg_0;
  output TXE_MSGVAL_D1_reg_0;
  output [0:0]addr_location_incr_count_reg_0;
  output IC_SYNC_ISR_MSGLST_TXE;
  output [2:0]D;
  output [4:0]Q;
  output \FILL_LEVEL_reg[2]_0 ;
  output [5:0]\FILL_LEVEL_reg[5]_0 ;
  output [1:0]\IC_REG_WMR_I2_reg[3]_0 ;
  output [10:0]addra;
  output TXE_BRAM_WEN;
  output [31:0]dina;
  input [0:0]SR;
  input \SINGLE_BIT.s_level_out_d1_cdc_to_reg ;
  input can_clk;
  input \SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ;
  input \MULTI_BIT.s_level_out_bus_d5_reg[0] ;
  input s_axi_aclk;
  input addr_location_incr_count_reg_1;
  input IC_SYNC_ISR_MSGLST_reg_0;
  input \RD_DATA_RET_reg[27] ;
  input \RD_DATA_RET_reg[29] ;
  input \RD_DATA_RET_reg[29]_0 ;
  input \RD_DATA_RET_reg[29]_1 ;
  input \RD_DATA_RET_reg[28] ;
  input \RD_DATA_RET_reg[28]_0 ;
  input \RD_DATA_RET_reg[28]_1 ;
  input \RD_DATA_RET_reg[27]_0 ;
  input \RD_DATA_RET_reg[27]_1 ;
  input \RD_DATA_RET_reg[27]_2 ;
  input [9:0]\gen_wr_a.gen_word_narrow.mem_reg_1 ;
  input [0:0]TXE_MSGVAL_D1_reg_1;
  input TXE_MSGVAL_FD2;
  input TXE_MSGVAL_FD1;
  input dest_arst;
  input \gen_wr_a.gen_word_narrow.mem_reg_1_0 ;
  input [10:0]\gen_wr_a.gen_word_narrow.mem_reg_1_1 ;
  input TS_RX_WEN;
  input [31:0]\gen_wr_a.gen_word_narrow.mem_reg_1_2 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_1_3 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_1_4 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_1_5 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_1_6 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_1_7 ;
  input [16:0]\gen_wr_a.gen_word_narrow.mem_reg_1_8 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_1_9 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_1_10 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_1_11 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_1_12 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_1_13 ;
  input [20:0]TS_RX_WDATA_F1;
  input \gen_wr_a.gen_word_narrow.mem_reg_1_14 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_1_15 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_0 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_0_0 ;
  input [0:0]\FILL_LEVEL_reg[4]_0 ;
  input [0:0]E;
  input [4:0]s_axi_wdata;
  input [0:0]\RD_INDEX_reg[5]_0 ;
  input [0:0]\gen_wr_a.gen_word_narrow.mem_reg_1_16 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_1_17 ;

  wire CANCEL_REQ_2C_CDC_TO_n_0;
  wire [2:0]D;
  wire DAR_ENABLED_FS2;
  wire DAR_ENABLED_FS2_D1;
  wire [0:0]E;
  wire \FILL_LEVEL[0]_i_1__1_n_0 ;
  wire \FILL_LEVEL[1]_i_1_n_0 ;
  wire \FILL_LEVEL[2]_i_1_n_0 ;
  wire \FILL_LEVEL[3]_i_1_n_0 ;
  wire \FILL_LEVEL[4]_i_2_n_0 ;
  wire \FILL_LEVEL[4]_i_3_n_0 ;
  wire \FILL_LEVEL[5]_i_1_n_0 ;
  wire \FILL_LEVEL[5]_i_2_n_0 ;
  wire \FILL_LEVEL[5]_i_3_n_0 ;
  wire \FILL_LEVEL[5]_i_4_n_0 ;
  wire \FILL_LEVEL[5]_i_5_n_0 ;
  wire \FILL_LEVEL_reg[2]_0 ;
  wire [0:0]\FILL_LEVEL_reg[4]_0 ;
  wire [5:0]\FILL_LEVEL_reg[5]_0 ;
  wire [1:0]\IC_REG_WMR_I2_reg[3]_0 ;
  wire [1:3]IC_REG_WMR_I_TXE;
  wire IC_SYNC_ISR_MSGLST_TXE;
  wire IC_SYNC_ISR_MSGLST_reg_0;
  wire \MULTI_BIT.s_level_out_bus_d5_reg[0] ;
  wire [4:0]Q;
  wire \RD_DATA_RET_reg[27] ;
  wire \RD_DATA_RET_reg[27]_0 ;
  wire \RD_DATA_RET_reg[27]_1 ;
  wire \RD_DATA_RET_reg[27]_2 ;
  wire \RD_DATA_RET_reg[28] ;
  wire \RD_DATA_RET_reg[28]_0 ;
  wire \RD_DATA_RET_reg[28]_1 ;
  wire \RD_DATA_RET_reg[29] ;
  wire \RD_DATA_RET_reg[29]_0 ;
  wire \RD_DATA_RET_reg[29]_1 ;
  wire \RD_INDEX[5]_i_1_n_0 ;
  wire [0:0]\RD_INDEX_reg[5]_0 ;
  wire RXF_FULL_AXI;
  wire RXF_FULL_AXI0;
  wire RXF_FULL_AXI_i_2_n_0;
  wire RXF_FULL_AXI_i_3_n_0;
  wire RXF_FULL_I0;
  wire RXF_FULL_I1__6;
  wire RXF_FULL_I_i_2_n_0;
  wire RXF_FULL_I_i_4_n_0;
  wire RXF_FULL_I_reg_0;
  wire RXWM_SET_i_1_n_0;
  wire RXWM_SET_i_2_n_0;
  wire \SINGLE_BIT.s_level_out_d1_cdc_to_reg ;
  wire \SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ;
  wire [0:0]SR;
  wire [20:0]TS_RX_WDATA_F1;
  wire TS_RX_WEN;
  wire TXEWM_SET;
  wire [5:9]TXE_BRAM_ADDR;
  wire TXE_BRAM_WEN;
  wire TXE_MSGVAL_D10;
  wire TXE_MSGVAL_D1_reg_0;
  wire [0:0]TXE_MSGVAL_D1_reg_1;
  wire TXE_MSGVAL_D20;
  wire TXE_MSGVAL_D2_reg_0;
  wire TXE_MSGVAL_D3;
  wire TXE_MSGVAL_FD1;
  wire TXE_MSGVAL_FD2;
  wire [0:0]addr_location_incr_count_reg_0;
  wire addr_location_incr_count_reg_1;
  wire [10:0]addra;
  wire can_clk;
  wire dest_arst;
  wire [31:0]dina;
  wire \gen_fifo_rx0.u_rxxpm_1_i_55_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_0 ;
  wire [9:0]\gen_wr_a.gen_word_narrow.mem_reg_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1_0 ;
  wire [10:0]\gen_wr_a.gen_word_narrow.mem_reg_1_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1_10 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1_11 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1_12 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1_13 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1_14 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1_15 ;
  wire [0:0]\gen_wr_a.gen_word_narrow.mem_reg_1_16 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1_17 ;
  wire [31:0]\gen_wr_a.gen_word_narrow.mem_reg_1_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1_3 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1_4 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1_5 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1_6 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1_7 ;
  wire [16:0]\gen_wr_a.gen_word_narrow.mem_reg_1_8 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1_9 ;
  wire [5:2]p_0_in;
  wire p_0_in0_in;
  wire p_0_in26_in;
  wire p_0_in32_in;
  wire p_0_in_0;
  wire [5:1]p_0_in__3;
  wire p_1_in;
  wire p_1_in11_in;
  wire p_1_in13_in;
  wire p_1_in1_in;
  wire p_1_in21_in;
  wire p_1_in8_in;
  wire p_1_in9_in;
  wire [0:5]rd_index_gray_reg;
  wire rd_index_gray_reg0;
  wire rd_index_gray_reg01_out;
  wire rd_index_gray_reg03_out;
  wire rd_index_gray_reg05_out;
  wire rd_index_gray_reg07_out;
  wire [0:5]rd_index_gray_synced_fs2;
  wire \rd_index_gray_synced_fs2_d1_reg_n_0_[2] ;
  wire \rd_index_gray_synced_fs2_d1_reg_n_0_[3] ;
  wire \rd_index_gray_synced_fs2_d1_reg_n_0_[4] ;
  wire \rd_index_gray_synced_fs2_d1_reg_n_0_[5] ;
  wire s_axi_aclk;
  wire [4:0]s_axi_wdata;
  wire transmit_mode_d1;
  wire [2:5]wr_index_binary_synced_fs3;
  wire \wr_index_binary_synced_fs3_d1_reg_n_0_[1] ;
  wire \wr_index_binary_synced_fs3_d1_reg_n_0_[2] ;
  wire \wr_index_binary_synced_fs3_d1_reg_n_0_[3] ;
  wire \wr_index_binary_synced_fs3_d1_reg_n_0_[4] ;
  wire \wr_index_binary_synced_fs3_d1_reg_n_0_[5] ;
  wire wr_index_gray_2msb_xor_axi;
  wire [1:5]wr_index_gray_reg;
  wire wr_index_gray_reg0;
  wire wr_index_gray_reg010_out;
  wire wr_index_gray_reg012_out;
  wire wr_index_gray_reg014_out;
  wire wr_index_gray_reg016_out;
  wire \wr_index_gray_reg[1]_i_2_n_0 ;
  wire [0:5]wr_index_gray_synced_fs3;
  wire \wr_index_gray_synced_fs3_d1_reg_n_0_[2] ;
  wire \wr_index_gray_synced_fs3_d1_reg_n_0_[3] ;
  wire \wr_index_gray_synced_fs3_d1_reg_n_0_[5] ;
  wire \wr_index_i[5]_i_1_n_0 ;
  wire [0:5]wr_index_i_reg;
  wire \wr_index_id_loc[1]_i_1_n_0 ;
  wire \wr_index_id_loc[1]_i_3_n_0 ;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync CANCEL_REQ_2C_CDC_TO
       (.DAR_ENABLED_FS2_D1(DAR_ENABLED_FS2_D1),
        .\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 (\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ),
        .\SINGLE_BIT.s_level_out_d2_reg_0 (CANCEL_REQ_2C_CDC_TO_n_0),
        .SR(SR),
        .can_clk(can_clk),
        .dest_arst(dest_arst));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync_5 DAR_2C_CDC_TO
       (.\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 (\SINGLE_BIT.s_level_out_d1_cdc_to_reg ),
        .SR(SR),
        .can_clk(can_clk),
        .out(DAR_ENABLED_FS2));
  FDRE DAR_ENABLED_FS2_D1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(DAR_ENABLED_FS2),
        .Q(DAR_ENABLED_FS2_D1),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \FILL_LEVEL[0]_i_1__1 
       (.I0(Q[0]),
        .I1(\wr_index_binary_synced_fs3_d1_reg_n_0_[5] ),
        .O(\FILL_LEVEL[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT4 #(
    .INIT(16'h6696)) 
    \FILL_LEVEL[1]_i_1 
       (.I0(Q[1]),
        .I1(\wr_index_binary_synced_fs3_d1_reg_n_0_[4] ),
        .I2(Q[0]),
        .I3(\wr_index_binary_synced_fs3_d1_reg_n_0_[5] ),
        .O(\FILL_LEVEL[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h6696666699996696)) 
    \FILL_LEVEL[2]_i_1 
       (.I0(Q[2]),
        .I1(\wr_index_binary_synced_fs3_d1_reg_n_0_[3] ),
        .I2(Q[0]),
        .I3(\wr_index_binary_synced_fs3_d1_reg_n_0_[5] ),
        .I4(Q[1]),
        .I5(\wr_index_binary_synced_fs3_d1_reg_n_0_[4] ),
        .O(\FILL_LEVEL[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h69)) 
    \FILL_LEVEL[3]_i_1 
       (.I0(Q[3]),
        .I1(\wr_index_binary_synced_fs3_d1_reg_n_0_[2] ),
        .I2(\FILL_LEVEL[4]_i_3_n_0 ),
        .O(\FILL_LEVEL[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT5 #(
    .INIT(32'h66969699)) 
    \FILL_LEVEL[4]_i_2 
       (.I0(Q[4]),
        .I1(\wr_index_binary_synced_fs3_d1_reg_n_0_[1] ),
        .I2(Q[3]),
        .I3(\wr_index_binary_synced_fs3_d1_reg_n_0_[2] ),
        .I4(\FILL_LEVEL[4]_i_3_n_0 ),
        .O(\FILL_LEVEL[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB2BB0000FFFFB2BB)) 
    \FILL_LEVEL[4]_i_3 
       (.I0(\wr_index_binary_synced_fs3_d1_reg_n_0_[4] ),
        .I1(Q[1]),
        .I2(\wr_index_binary_synced_fs3_d1_reg_n_0_[5] ),
        .I3(Q[0]),
        .I4(\wr_index_binary_synced_fs3_d1_reg_n_0_[3] ),
        .I5(Q[2]),
        .O(\FILL_LEVEL[4]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF65A6)) 
    \FILL_LEVEL[5]_i_1 
       (.I0(\FILL_LEVEL[5]_i_2_n_0 ),
        .I1(\FILL_LEVEL[5]_i_3_n_0 ),
        .I2(Q[4]),
        .I3(\wr_index_binary_synced_fs3_d1_reg_n_0_[1] ),
        .I4(RXF_FULL_AXI),
        .O(\FILL_LEVEL[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEF0EFF0F0F00EF0E)) 
    \FILL_LEVEL[5]_i_2 
       (.I0(\FILL_LEVEL[5]_i_4_n_0 ),
        .I1(\FILL_LEVEL[5]_i_5_n_0 ),
        .I2(Q[4]),
        .I3(\wr_index_binary_synced_fs3_d1_reg_n_0_[1] ),
        .I4(Q[3]),
        .I5(\wr_index_binary_synced_fs3_d1_reg_n_0_[2] ),
        .O(\FILL_LEVEL[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \FILL_LEVEL[5]_i_3 
       (.I0(\FILL_LEVEL[4]_i_3_n_0 ),
        .I1(\wr_index_binary_synced_fs3_d1_reg_n_0_[2] ),
        .I2(Q[3]),
        .O(\FILL_LEVEL[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hDD0DDDDD0000DD0D)) 
    \FILL_LEVEL[5]_i_4 
       (.I0(Q[2]),
        .I1(\wr_index_binary_synced_fs3_d1_reg_n_0_[3] ),
        .I2(Q[0]),
        .I3(\wr_index_binary_synced_fs3_d1_reg_n_0_[5] ),
        .I4(Q[1]),
        .I5(\wr_index_binary_synced_fs3_d1_reg_n_0_[4] ),
        .O(\FILL_LEVEL[5]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FILL_LEVEL[5]_i_5 
       (.I0(\wr_index_binary_synced_fs3_d1_reg_n_0_[3] ),
        .I1(Q[2]),
        .O(\FILL_LEVEL[5]_i_5_n_0 ));
  FDRE \FILL_LEVEL_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FILL_LEVEL[0]_i_1__1_n_0 ),
        .Q(\FILL_LEVEL_reg[5]_0 [0]),
        .R(\FILL_LEVEL_reg[4]_0 ));
  FDRE \FILL_LEVEL_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FILL_LEVEL[1]_i_1_n_0 ),
        .Q(\FILL_LEVEL_reg[5]_0 [1]),
        .R(\FILL_LEVEL_reg[4]_0 ));
  FDRE \FILL_LEVEL_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FILL_LEVEL[2]_i_1_n_0 ),
        .Q(\FILL_LEVEL_reg[5]_0 [2]),
        .R(\FILL_LEVEL_reg[4]_0 ));
  FDRE \FILL_LEVEL_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FILL_LEVEL[3]_i_1_n_0 ),
        .Q(\FILL_LEVEL_reg[5]_0 [3]),
        .R(\FILL_LEVEL_reg[4]_0 ));
  FDRE \FILL_LEVEL_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FILL_LEVEL[4]_i_2_n_0 ),
        .Q(\FILL_LEVEL_reg[5]_0 [4]),
        .R(\FILL_LEVEL_reg[4]_0 ));
  FDRE \FILL_LEVEL_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FILL_LEVEL[5]_i_1_n_0 ),
        .Q(\FILL_LEVEL_reg[5]_0 [5]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \IC_REG_WMR_I2_reg[0] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[4]),
        .Q(IC_REG_WMR_I_TXE[1]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDSE \IC_REG_WMR_I2_reg[1] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[3]),
        .Q(IC_REG_WMR_I_TXE[2]),
        .S(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDSE \IC_REG_WMR_I2_reg[2] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[2]),
        .Q(IC_REG_WMR_I_TXE[3]),
        .S(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDSE \IC_REG_WMR_I2_reg[3] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[1]),
        .Q(\IC_REG_WMR_I2_reg[3]_0 [1]),
        .S(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDSE \IC_REG_WMR_I2_reg[4] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[0]),
        .Q(\IC_REG_WMR_I2_reg[3]_0 [0]),
        .S(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE IC_SYNC_ISR_MSGLST_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(IC_SYNC_ISR_MSGLST_reg_0),
        .Q(IC_SYNC_ISR_MSGLST_TXE),
        .R(SR));
  LUT5 #(
    .INIT(32'hFFFFFFF8)) 
    \RD_DATA_RET[27]_i_1 
       (.I0(IC_REG_WMR_I_TXE[1]),
        .I1(\RD_DATA_RET_reg[27] ),
        .I2(\RD_DATA_RET_reg[27]_0 ),
        .I3(\RD_DATA_RET_reg[27]_1 ),
        .I4(\RD_DATA_RET_reg[27]_2 ),
        .O(D[2]));
  LUT5 #(
    .INIT(32'hFFFFFFF8)) 
    \RD_DATA_RET[28]_i_1 
       (.I0(IC_REG_WMR_I_TXE[2]),
        .I1(\RD_DATA_RET_reg[27] ),
        .I2(\RD_DATA_RET_reg[28] ),
        .I3(\RD_DATA_RET_reg[28]_0 ),
        .I4(\RD_DATA_RET_reg[28]_1 ),
        .O(D[1]));
  LUT5 #(
    .INIT(32'hFFFFFFF8)) 
    \RD_DATA_RET[29]_i_1 
       (.I0(IC_REG_WMR_I_TXE[3]),
        .I1(\RD_DATA_RET_reg[27] ),
        .I2(\RD_DATA_RET_reg[29] ),
        .I3(\RD_DATA_RET_reg[29]_0 ),
        .I4(\RD_DATA_RET_reg[29]_1 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \RD_INDEX[0]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[3]),
        .I5(p_0_in_0),
        .O(p_0_in[5]));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \RD_INDEX[0]_i_4 
       (.I0(\FILL_LEVEL_reg[5]_0 [2]),
        .I1(\FILL_LEVEL_reg[5]_0 [3]),
        .I2(\FILL_LEVEL_reg[5]_0 [0]),
        .I3(\FILL_LEVEL_reg[5]_0 [1]),
        .I4(\FILL_LEVEL_reg[5]_0 [5]),
        .I5(\FILL_LEVEL_reg[5]_0 [4]),
        .O(\FILL_LEVEL_reg[2]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \RD_INDEX[1]_i_1 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[4]),
        .O(p_0_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \RD_INDEX[2]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \RD_INDEX[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \RD_INDEX[5]_i_1 
       (.I0(Q[0]),
        .O(\RD_INDEX[5]_i_1_n_0 ));
  FDRE \RD_INDEX_reg[0] 
       (.C(s_axi_aclk),
        .CE(\RD_INDEX_reg[5]_0 ),
        .D(p_0_in[5]),
        .Q(p_0_in_0),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \RD_INDEX_reg[1] 
       (.C(s_axi_aclk),
        .CE(\RD_INDEX_reg[5]_0 ),
        .D(p_0_in[4]),
        .Q(Q[4]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \RD_INDEX_reg[2] 
       (.C(s_axi_aclk),
        .CE(\RD_INDEX_reg[5]_0 ),
        .D(p_0_in[3]),
        .Q(Q[3]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \RD_INDEX_reg[3] 
       (.C(s_axi_aclk),
        .CE(\RD_INDEX_reg[5]_0 ),
        .D(p_0_in[2]),
        .Q(Q[2]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \RD_INDEX_reg[4] 
       (.C(s_axi_aclk),
        .CE(\RD_INDEX_reg[5]_0 ),
        .D(rd_index_gray_reg0),
        .Q(Q[1]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \RD_INDEX_reg[5] 
       (.C(s_axi_aclk),
        .CE(\RD_INDEX_reg[5]_0 ),
        .D(\RD_INDEX[5]_i_1_n_0 ),
        .Q(Q[0]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized0 RD_PTR_2C_CDC_TO
       (.D({rd_index_gray_synced_fs2[0],rd_index_gray_synced_fs2[1],rd_index_gray_synced_fs2[2],rd_index_gray_synced_fs2[3],rd_index_gray_synced_fs2[4],rd_index_gray_synced_fs2[5]}),
        .Q({rd_index_gray_reg[0],rd_index_gray_reg[1],rd_index_gray_reg[2],rd_index_gray_reg[3],rd_index_gray_reg[4],rd_index_gray_reg[5]}),
        .SR(SR),
        .can_clk(can_clk));
  LUT6 #(
    .INIT(64'h4224000000000000)) 
    RXF_FULL_AXI_i_1
       (.I0(p_1_in),
        .I1(p_0_in_0),
        .I2(p_0_in26_in),
        .I3(Q[4]),
        .I4(RXF_FULL_AXI_i_2_n_0),
        .I5(RXF_FULL_AXI_i_3_n_0),
        .O(RXF_FULL_AXI0));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT5 #(
    .INIT(32'h09606009)) 
    RXF_FULL_AXI_i_2
       (.I0(Q[1]),
        .I1(p_1_in21_in),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(\wr_index_gray_synced_fs3_d1_reg_n_0_[3] ),
        .O(RXF_FULL_AXI_i_2_n_0));
  LUT6 #(
    .INIT(64'h0069690069000069)) 
    RXF_FULL_AXI_i_3
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(\wr_index_gray_synced_fs3_d1_reg_n_0_[2] ),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(\wr_index_gray_synced_fs3_d1_reg_n_0_[5] ),
        .O(RXF_FULL_AXI_i_3_n_0));
  FDRE RXF_FULL_AXI_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(RXF_FULL_AXI0),
        .Q(RXF_FULL_AXI),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  LUT6 #(
    .INIT(64'h4824214200000000)) 
    RXF_FULL_I_i_1
       (.I0(p_0_in0_in),
        .I1(wr_index_i_reg[0]),
        .I2(RXF_FULL_I_i_2_n_0),
        .I3(wr_index_i_reg[1]),
        .I4(p_0_in32_in),
        .I5(RXF_FULL_I1__6),
        .O(RXF_FULL_I0));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    RXF_FULL_I_i_2
       (.I0(wr_index_i_reg[4]),
        .I1(wr_index_i_reg[5]),
        .I2(TXE_MSGVAL_D3),
        .I3(wr_index_i_reg[3]),
        .I4(wr_index_i_reg[2]),
        .O(RXF_FULL_I_i_2_n_0));
  LUT6 #(
    .INIT(64'h0060900060000090)) 
    RXF_FULL_I_i_3
       (.I0(\rd_index_gray_synced_fs2_d1_reg_n_0_[3] ),
        .I1(p_1_in9_in),
        .I2(RXF_FULL_I_i_4_n_0),
        .I3(p_1_in13_in),
        .I4(p_1_in11_in),
        .I5(\rd_index_gray_synced_fs2_d1_reg_n_0_[2] ),
        .O(RXF_FULL_I1__6));
  LUT6 #(
    .INIT(64'h0006699066600009)) 
    RXF_FULL_I_i_4
       (.I0(wr_index_i_reg[3]),
        .I1(\rd_index_gray_synced_fs2_d1_reg_n_0_[4] ),
        .I2(TXE_MSGVAL_D3),
        .I3(wr_index_i_reg[5]),
        .I4(wr_index_i_reg[4]),
        .I5(\rd_index_gray_synced_fs2_d1_reg_n_0_[5] ),
        .O(RXF_FULL_I_i_4_n_0));
  FDRE RXF_FULL_I_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(RXF_FULL_I0),
        .Q(RXF_FULL_I_reg_0),
        .R(SR));
  LUT6 #(
    .INIT(64'hEFAEFFAFAFAAEFAE)) 
    RXWM_SET_i_1
       (.I0(\FILL_LEVEL_reg[5]_0 [5]),
        .I1(RXWM_SET_i_2_n_0),
        .I2(IC_REG_WMR_I_TXE[1]),
        .I3(\FILL_LEVEL_reg[5]_0 [4]),
        .I4(IC_REG_WMR_I_TXE[2]),
        .I5(\FILL_LEVEL_reg[5]_0 [3]),
        .O(RXWM_SET_i_1_n_0));
  LUT6 #(
    .INIT(64'h22B2FFFF000022B2)) 
    RXWM_SET_i_2
       (.I0(\FILL_LEVEL_reg[5]_0 [1]),
        .I1(\IC_REG_WMR_I2_reg[3]_0 [1]),
        .I2(\FILL_LEVEL_reg[5]_0 [0]),
        .I3(\IC_REG_WMR_I2_reg[3]_0 [0]),
        .I4(IC_REG_WMR_I_TXE[3]),
        .I5(\FILL_LEVEL_reg[5]_0 [2]),
        .O(RXWM_SET_i_2_n_0));
  FDRE RXWM_SET_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(RXWM_SET_i_1_n_0),
        .Q(TXEWM_SET),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    TXE_MSGVAL_D1_i_1
       (.I0(RXF_FULL_I_reg_0),
        .I1(TXE_MSGVAL_D1_reg_1),
        .I2(TXE_MSGVAL_FD2),
        .I3(TXE_MSGVAL_FD1),
        .O(TXE_MSGVAL_D10));
  FDRE TXE_MSGVAL_D1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TXE_MSGVAL_D10),
        .Q(TXE_MSGVAL_D1_reg_0),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT3 #(
    .INIT(8'h40)) 
    TXE_MSGVAL_D2_i_1
       (.I0(RXF_FULL_I_reg_0),
        .I1(TXE_MSGVAL_D1_reg_1),
        .I2(TXE_MSGVAL_D1_reg_0),
        .O(TXE_MSGVAL_D20));
  FDRE TXE_MSGVAL_D2_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TXE_MSGVAL_D20),
        .Q(TXE_MSGVAL_D2_reg_0),
        .R(SR));
  FDRE TXE_MSGVAL_D3_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(TXE_MSGVAL_D2_reg_0),
        .Q(TXE_MSGVAL_D3),
        .R(SR));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized1 WR_PTR_2S_CDC_TO
       (.D({wr_index_gray_synced_fs3[0],wr_index_gray_synced_fs3[1],wr_index_gray_synced_fs3[2],wr_index_gray_synced_fs3[3],wr_index_gray_synced_fs3[4],wr_index_gray_synced_fs3[5]}),
        .\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 (\MULTI_BIT.s_level_out_bus_d5_reg[0] ),
        .Q({wr_index_gray_reg[1],wr_index_gray_reg[2],wr_index_gray_reg[3],wr_index_gray_reg[4],wr_index_gray_reg[5]}),
        .s_axi_aclk(s_axi_aclk),
        .wr_index_i_reg(wr_index_i_reg[0]));
  FDRE addr_location_incr_count_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(addr_location_incr_count_reg_1),
        .Q(addr_location_incr_count_reg_0),
        .R(SR));
  LUT4 #(
    .INIT(16'hABA8)) 
    \gen_fifo_rx0.u_rxxpm_1_i_10 
       (.I0(TXE_BRAM_ADDR[8]),
        .I1(TXE_MSGVAL_D1_reg_0),
        .I2(TXE_MSGVAL_D2_reg_0),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1 [1]),
        .O(addra[2]));
  LUT5 #(
    .INIT(32'hA8ABABA8)) 
    \gen_fifo_rx0.u_rxxpm_1_i_11 
       (.I0(TXE_BRAM_ADDR[9]),
        .I1(TXE_MSGVAL_D1_reg_0),
        .I2(TXE_MSGVAL_D2_reg_0),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_16 ),
        .I4(\gen_wr_a.gen_word_narrow.mem_reg_1_17 ),
        .O(addra[1]));
  LUT4 #(
    .INIT(16'hABA8)) 
    \gen_fifo_rx0.u_rxxpm_1_i_12 
       (.I0(addr_location_incr_count_reg_0),
        .I1(TXE_MSGVAL_D1_reg_0),
        .I2(TXE_MSGVAL_D2_reg_0),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1 [0]),
        .O(addra[0]));
  LUT6 #(
    .INIT(64'h555555555555DFD5)) 
    \gen_fifo_rx0.u_rxxpm_1_i_13 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_0 ),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg_1_1 [10]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [31]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[31]));
  LUT6 #(
    .INIT(64'h555555555555DFD5)) 
    \gen_fifo_rx0.u_rxxpm_1_i_14 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_3 ),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg_1_1 [9]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [30]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[30]));
  LUT6 #(
    .INIT(64'h555555555555DFD5)) 
    \gen_fifo_rx0.u_rxxpm_1_i_15 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_4 ),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg_1_1 [8]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [29]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[29]));
  LUT6 #(
    .INIT(64'h555555555555DFD5)) 
    \gen_fifo_rx0.u_rxxpm_1_i_16 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_5 ),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg_1_1 [7]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [28]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[28]));
  LUT6 #(
    .INIT(64'h555555555555DFD5)) 
    \gen_fifo_rx0.u_rxxpm_1_i_17 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_6 ),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg_1_1 [6]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [27]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[27]));
  LUT6 #(
    .INIT(64'h555555555555DFD5)) 
    \gen_fifo_rx0.u_rxxpm_1_i_18 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_7 ),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg_1_1 [5]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [26]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[26]));
  LUT6 #(
    .INIT(64'h555555555555DFD5)) 
    \gen_fifo_rx0.u_rxxpm_1_i_19 
       (.I0(\gen_fifo_rx0.u_rxxpm_1_i_55_n_0 ),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg_1_1 [4]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [25]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[25]));
  LUT3 #(
    .INIT(8'h02)) 
    \gen_fifo_rx0.u_rxxpm_1_i_2 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1 [9]),
        .I1(TXE_MSGVAL_D2_reg_0),
        .I2(TXE_MSGVAL_D1_reg_0),
        .O(addra[10]));
  LUT6 #(
    .INIT(64'h555555555555DFD5)) 
    \gen_fifo_rx0.u_rxxpm_1_i_20 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_9 ),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg_1_1 [3]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [24]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[24]));
  LUT6 #(
    .INIT(64'h555555555555DFD5)) 
    \gen_fifo_rx0.u_rxxpm_1_i_21 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_10 ),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg_1_1 [2]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [23]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[23]));
  LUT6 #(
    .INIT(64'h555555555555DFD5)) 
    \gen_fifo_rx0.u_rxxpm_1_i_22 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_11 ),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg_1_1 [1]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [22]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[22]));
  LUT6 #(
    .INIT(64'h555555555555DFD5)) 
    \gen_fifo_rx0.u_rxxpm_1_i_23 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_12 ),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg_1_1 [0]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [21]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[21]));
  LUT6 #(
    .INIT(64'h555555555555DFD5)) 
    \gen_fifo_rx0.u_rxxpm_1_i_24 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_13 ),
        .I1(TS_RX_WDATA_F1[20]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [20]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[20]));
  LUT6 #(
    .INIT(64'h555555555555DFD5)) 
    \gen_fifo_rx0.u_rxxpm_1_i_25 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_14 ),
        .I1(TS_RX_WDATA_F1[19]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [19]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[19]));
  LUT6 #(
    .INIT(64'h555555555555DFD5)) 
    \gen_fifo_rx0.u_rxxpm_1_i_26 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_15 ),
        .I1(TS_RX_WDATA_F1[18]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [18]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[18]));
  LUT6 #(
    .INIT(64'h555555555555DFD5)) 
    \gen_fifo_rx0.u_rxxpm_1_i_27 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_0 ),
        .I1(TS_RX_WDATA_F1[17]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [17]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[17]));
  LUT6 #(
    .INIT(64'h555555555555DFD5)) 
    \gen_fifo_rx0.u_rxxpm_1_i_28 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_0_0 ),
        .I1(TS_RX_WDATA_F1[16]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [16]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[16]));
  LUT6 #(
    .INIT(64'hAAAACCCCAAAACFC0)) 
    \gen_fifo_rx0.u_rxxpm_1_i_29 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_8 [15]),
        .I1(TS_RX_WDATA_F1[15]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [15]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[15]));
  LUT3 #(
    .INIT(8'h02)) 
    \gen_fifo_rx0.u_rxxpm_1_i_3 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1 [8]),
        .I1(TXE_MSGVAL_D2_reg_0),
        .I2(TXE_MSGVAL_D1_reg_0),
        .O(addra[9]));
  LUT6 #(
    .INIT(64'hAAAACCCCAAAACFC0)) 
    \gen_fifo_rx0.u_rxxpm_1_i_30 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_8 [14]),
        .I1(TS_RX_WDATA_F1[14]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [14]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[14]));
  LUT6 #(
    .INIT(64'hAAAACCCCAAAACFC0)) 
    \gen_fifo_rx0.u_rxxpm_1_i_31 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_8 [13]),
        .I1(TS_RX_WDATA_F1[13]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [13]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[13]));
  LUT6 #(
    .INIT(64'hAAAACCCCAAAACFC0)) 
    \gen_fifo_rx0.u_rxxpm_1_i_32 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_8 [12]),
        .I1(TS_RX_WDATA_F1[12]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [12]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[12]));
  LUT6 #(
    .INIT(64'hAAAACCCCAAAACFC0)) 
    \gen_fifo_rx0.u_rxxpm_1_i_33 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_8 [11]),
        .I1(TS_RX_WDATA_F1[11]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [11]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[11]));
  LUT6 #(
    .INIT(64'hAAAACCCCAAAACFC0)) 
    \gen_fifo_rx0.u_rxxpm_1_i_34 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_8 [10]),
        .I1(TS_RX_WDATA_F1[10]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [10]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[10]));
  LUT6 #(
    .INIT(64'hAAAACCCCAAAACFC0)) 
    \gen_fifo_rx0.u_rxxpm_1_i_35 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_8 [9]),
        .I1(TS_RX_WDATA_F1[9]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [9]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[9]));
  LUT6 #(
    .INIT(64'hAAAACCCCAAAACFC0)) 
    \gen_fifo_rx0.u_rxxpm_1_i_36 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_8 [8]),
        .I1(TS_RX_WDATA_F1[8]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [8]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[8]));
  LUT6 #(
    .INIT(64'hAAAACCCCAAAACFC0)) 
    \gen_fifo_rx0.u_rxxpm_1_i_37 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_8 [7]),
        .I1(TS_RX_WDATA_F1[7]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [7]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[7]));
  LUT6 #(
    .INIT(64'hAAAACCCCAAAACFC0)) 
    \gen_fifo_rx0.u_rxxpm_1_i_38 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_8 [6]),
        .I1(TS_RX_WDATA_F1[6]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [6]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[6]));
  LUT6 #(
    .INIT(64'hAAAACCCCAAAACFC0)) 
    \gen_fifo_rx0.u_rxxpm_1_i_39 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_8 [5]),
        .I1(TS_RX_WDATA_F1[5]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [5]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[5]));
  LUT3 #(
    .INIT(8'h02)) 
    \gen_fifo_rx0.u_rxxpm_1_i_4 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1 [7]),
        .I1(TXE_MSGVAL_D2_reg_0),
        .I2(TXE_MSGVAL_D1_reg_0),
        .O(addra[8]));
  LUT6 #(
    .INIT(64'hAAAACCCCAAAACFC0)) 
    \gen_fifo_rx0.u_rxxpm_1_i_40 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_8 [4]),
        .I1(TS_RX_WDATA_F1[4]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [4]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[4]));
  LUT6 #(
    .INIT(64'hAAAACCCCAAAACFC0)) 
    \gen_fifo_rx0.u_rxxpm_1_i_41 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_8 [3]),
        .I1(TS_RX_WDATA_F1[3]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [3]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[3]));
  LUT6 #(
    .INIT(64'hAAAACCCCAAAACFC0)) 
    \gen_fifo_rx0.u_rxxpm_1_i_42 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_8 [2]),
        .I1(TS_RX_WDATA_F1[2]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [2]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[2]));
  LUT6 #(
    .INIT(64'hAAAACCCCAAAACFC0)) 
    \gen_fifo_rx0.u_rxxpm_1_i_43 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_8 [1]),
        .I1(TS_RX_WDATA_F1[1]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [1]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[1]));
  LUT6 #(
    .INIT(64'hAAAACCCCAAAACFC0)) 
    \gen_fifo_rx0.u_rxxpm_1_i_44 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1_8 [0]),
        .I1(TS_RX_WDATA_F1[0]),
        .I2(TS_RX_WEN),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_2 [0]),
        .I4(TXE_MSGVAL_D1_reg_0),
        .I5(TXE_MSGVAL_D2_reg_0),
        .O(dina[0]));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_fifo_rx0.u_rxxpm_1_i_45 
       (.I0(TXE_MSGVAL_D1_reg_0),
        .I1(TXE_MSGVAL_D2_reg_0),
        .O(TXE_BRAM_WEN));
  LUT3 #(
    .INIT(8'h02)) 
    \gen_fifo_rx0.u_rxxpm_1_i_5 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1 [6]),
        .I1(TXE_MSGVAL_D2_reg_0),
        .I2(TXE_MSGVAL_D1_reg_0),
        .O(addra[7]));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT4 #(
    .INIT(16'h335F)) 
    \gen_fifo_rx0.u_rxxpm_1_i_55 
       (.I0(transmit_mode_d1),
        .I1(\gen_wr_a.gen_word_narrow.mem_reg_1_8 [16]),
        .I2(TXE_MSGVAL_D2_reg_0),
        .I3(TXE_MSGVAL_D1_reg_0),
        .O(\gen_fifo_rx0.u_rxxpm_1_i_55_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \gen_fifo_rx0.u_rxxpm_1_i_6 
       (.I0(\gen_wr_a.gen_word_narrow.mem_reg_1 [5]),
        .I1(TXE_MSGVAL_D2_reg_0),
        .I2(TXE_MSGVAL_D1_reg_0),
        .O(addra[6]));
  LUT4 #(
    .INIT(16'hABA8)) 
    \gen_fifo_rx0.u_rxxpm_1_i_7 
       (.I0(TXE_BRAM_ADDR[5]),
        .I1(TXE_MSGVAL_D1_reg_0),
        .I2(TXE_MSGVAL_D2_reg_0),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1 [4]),
        .O(addra[5]));
  LUT4 #(
    .INIT(16'hABA8)) 
    \gen_fifo_rx0.u_rxxpm_1_i_8 
       (.I0(TXE_BRAM_ADDR[6]),
        .I1(TXE_MSGVAL_D1_reg_0),
        .I2(TXE_MSGVAL_D2_reg_0),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1 [3]),
        .O(addra[4]));
  LUT4 #(
    .INIT(16'hABA8)) 
    \gen_fifo_rx0.u_rxxpm_1_i_9 
       (.I0(TXE_BRAM_ADDR[7]),
        .I1(TXE_MSGVAL_D1_reg_0),
        .I2(TXE_MSGVAL_D2_reg_0),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1 [2]),
        .O(addra[3]));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_index_gray_reg[1]_i_1 
       (.I0(Q[4]),
        .I1(p_0_in_0),
        .O(rd_index_gray_reg07_out));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_index_gray_reg[2]_i_1 
       (.I0(Q[3]),
        .I1(Q[4]),
        .O(rd_index_gray_reg05_out));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_index_gray_reg[3]_i_1__1 
       (.I0(Q[3]),
        .I1(Q[2]),
        .O(rd_index_gray_reg03_out));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_index_gray_reg[4]_i_1 
       (.I0(Q[1]),
        .I1(Q[2]),
        .O(rd_index_gray_reg01_out));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_index_gray_reg[5]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(rd_index_gray_reg0));
  FDRE \rd_index_gray_reg_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_0_in_0),
        .Q(rd_index_gray_reg[0]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \rd_index_gray_reg_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(rd_index_gray_reg07_out),
        .Q(rd_index_gray_reg[1]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \rd_index_gray_reg_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(rd_index_gray_reg05_out),
        .Q(rd_index_gray_reg[2]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \rd_index_gray_reg_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(rd_index_gray_reg03_out),
        .Q(rd_index_gray_reg[3]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \rd_index_gray_reg_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(rd_index_gray_reg01_out),
        .Q(rd_index_gray_reg[4]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \rd_index_gray_reg_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(rd_index_gray_reg0),
        .Q(rd_index_gray_reg[5]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \rd_index_gray_synced_fs2_d1_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(rd_index_gray_synced_fs2[0]),
        .Q(p_0_in0_in),
        .R(SR));
  FDRE \rd_index_gray_synced_fs2_d1_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(rd_index_gray_synced_fs2[1]),
        .Q(p_0_in32_in),
        .R(SR));
  FDRE \rd_index_gray_synced_fs2_d1_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(rd_index_gray_synced_fs2[2]),
        .Q(\rd_index_gray_synced_fs2_d1_reg_n_0_[2] ),
        .R(SR));
  FDRE \rd_index_gray_synced_fs2_d1_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(rd_index_gray_synced_fs2[3]),
        .Q(\rd_index_gray_synced_fs2_d1_reg_n_0_[3] ),
        .R(SR));
  FDRE \rd_index_gray_synced_fs2_d1_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(rd_index_gray_synced_fs2[4]),
        .Q(\rd_index_gray_synced_fs2_d1_reg_n_0_[4] ),
        .R(SR));
  FDRE \rd_index_gray_synced_fs2_d1_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(rd_index_gray_synced_fs2[5]),
        .Q(\rd_index_gray_synced_fs2_d1_reg_n_0_[5] ),
        .R(SR));
  FDRE transmit_mode_d1_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(CANCEL_REQ_2C_CDC_TO_n_0),
        .Q(transmit_mode_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_index_binary_synced_fs3_d1[1]_i_1 
       (.I0(p_0_in26_in),
        .I1(p_1_in),
        .O(wr_index_gray_2msb_xor_axi));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \wr_index_binary_synced_fs3_d1[2]_i_1 
       (.I0(\wr_index_gray_synced_fs3_d1_reg_n_0_[2] ),
        .I1(p_1_in),
        .I2(p_0_in26_in),
        .O(wr_index_binary_synced_fs3[2]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \wr_index_binary_synced_fs3_d1[3]_i_1 
       (.I0(\wr_index_gray_synced_fs3_d1_reg_n_0_[3] ),
        .I1(\wr_index_gray_synced_fs3_d1_reg_n_0_[2] ),
        .I2(p_1_in),
        .I3(p_0_in26_in),
        .O(wr_index_binary_synced_fs3[3]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \wr_index_binary_synced_fs3_d1[4]_i_1 
       (.I0(p_1_in21_in),
        .I1(p_0_in26_in),
        .I2(p_1_in),
        .I3(\wr_index_gray_synced_fs3_d1_reg_n_0_[2] ),
        .I4(\wr_index_gray_synced_fs3_d1_reg_n_0_[3] ),
        .O(wr_index_binary_synced_fs3[4]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \wr_index_binary_synced_fs3_d1[5]_i_1 
       (.I0(\wr_index_gray_synced_fs3_d1_reg_n_0_[3] ),
        .I1(\wr_index_gray_synced_fs3_d1_reg_n_0_[2] ),
        .I2(p_1_in),
        .I3(p_0_in26_in),
        .I4(\wr_index_gray_synced_fs3_d1_reg_n_0_[5] ),
        .I5(p_1_in21_in),
        .O(wr_index_binary_synced_fs3[5]));
  FDRE \wr_index_binary_synced_fs3_d1_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_gray_2msb_xor_axi),
        .Q(\wr_index_binary_synced_fs3_d1_reg_n_0_[1] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_binary_synced_fs3_d1_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_binary_synced_fs3[2]),
        .Q(\wr_index_binary_synced_fs3_d1_reg_n_0_[2] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_binary_synced_fs3_d1_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_binary_synced_fs3[3]),
        .Q(\wr_index_binary_synced_fs3_d1_reg_n_0_[3] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_binary_synced_fs3_d1_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_binary_synced_fs3[4]),
        .Q(\wr_index_binary_synced_fs3_d1_reg_n_0_[4] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_binary_synced_fs3_d1_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_binary_synced_fs3[5]),
        .Q(\wr_index_binary_synced_fs3_d1_reg_n_0_[5] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  LUT6 #(
    .INIT(64'h55555555AA6AAAAA)) 
    \wr_index_gray_reg[1]_i_1 
       (.I0(wr_index_i_reg[0]),
        .I1(wr_index_i_reg[2]),
        .I2(wr_index_i_reg[3]),
        .I3(\wr_index_gray_reg[1]_i_2_n_0 ),
        .I4(wr_index_i_reg[4]),
        .I5(wr_index_i_reg[1]),
        .O(wr_index_gray_reg016_out));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \wr_index_gray_reg[1]_i_2 
       (.I0(TXE_MSGVAL_D3),
        .I1(wr_index_i_reg[5]),
        .O(\wr_index_gray_reg[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h555555556AAAAAAA)) 
    \wr_index_gray_reg[2]_i_1 
       (.I0(wr_index_i_reg[1]),
        .I1(wr_index_i_reg[4]),
        .I2(wr_index_i_reg[5]),
        .I3(TXE_MSGVAL_D3),
        .I4(wr_index_i_reg[3]),
        .I5(wr_index_i_reg[2]),
        .O(wr_index_gray_reg014_out));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT5 #(
    .INIT(32'h56666666)) 
    \wr_index_gray_reg[3]_i_1 
       (.I0(wr_index_i_reg[2]),
        .I1(wr_index_i_reg[3]),
        .I2(TXE_MSGVAL_D3),
        .I3(wr_index_i_reg[5]),
        .I4(wr_index_i_reg[4]),
        .O(wr_index_gray_reg012_out));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT4 #(
    .INIT(16'h5666)) 
    \wr_index_gray_reg[4]_i_1 
       (.I0(wr_index_i_reg[3]),
        .I1(wr_index_i_reg[4]),
        .I2(wr_index_i_reg[5]),
        .I3(TXE_MSGVAL_D3),
        .O(wr_index_gray_reg010_out));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT3 #(
    .INIT(8'h1E)) 
    \wr_index_gray_reg[5]_i_1 
       (.I0(TXE_MSGVAL_D3),
        .I1(wr_index_i_reg[5]),
        .I2(wr_index_i_reg[4]),
        .O(wr_index_gray_reg0));
  FDRE \wr_index_gray_reg_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(wr_index_gray_reg016_out),
        .Q(wr_index_gray_reg[1]),
        .R(SR));
  FDRE \wr_index_gray_reg_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(wr_index_gray_reg014_out),
        .Q(wr_index_gray_reg[2]),
        .R(SR));
  FDRE \wr_index_gray_reg_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(wr_index_gray_reg012_out),
        .Q(wr_index_gray_reg[3]),
        .R(SR));
  FDRE \wr_index_gray_reg_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(wr_index_gray_reg010_out),
        .Q(wr_index_gray_reg[4]),
        .R(SR));
  FDRE \wr_index_gray_reg_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(wr_index_gray_reg0),
        .Q(wr_index_gray_reg[5]),
        .R(SR));
  FDRE \wr_index_gray_synced_fs3_d1_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_gray_synced_fs3[0]),
        .Q(p_1_in),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_gray_synced_fs3_d1_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_gray_synced_fs3[1]),
        .Q(p_0_in26_in),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_gray_synced_fs3_d1_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_gray_synced_fs3[2]),
        .Q(\wr_index_gray_synced_fs3_d1_reg_n_0_[2] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_gray_synced_fs3_d1_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_gray_synced_fs3[3]),
        .Q(\wr_index_gray_synced_fs3_d1_reg_n_0_[3] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_gray_synced_fs3_d1_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_gray_synced_fs3[4]),
        .Q(p_1_in21_in),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  FDRE \wr_index_gray_synced_fs3_d1_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_gray_synced_fs3[5]),
        .Q(\wr_index_gray_synced_fs3_d1_reg_n_0_[5] ),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0] ));
  LUT6 #(
    .INIT(64'hF7FFFFFF08000000)) 
    \wr_index_i[0]_i_1 
       (.I0(wr_index_i_reg[1]),
        .I1(wr_index_i_reg[4]),
        .I2(\wr_index_gray_reg[1]_i_2_n_0 ),
        .I3(wr_index_i_reg[3]),
        .I4(wr_index_i_reg[2]),
        .I5(wr_index_i_reg[0]),
        .O(p_1_in1_in));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \wr_index_i[1]_i_1 
       (.I0(wr_index_i_reg[2]),
        .I1(wr_index_i_reg[3]),
        .I2(TXE_MSGVAL_D3),
        .I3(wr_index_i_reg[5]),
        .I4(wr_index_i_reg[4]),
        .I5(wr_index_i_reg[1]),
        .O(p_1_in13_in));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wr_index_i[2]_i_1 
       (.I0(wr_index_i_reg[4]),
        .I1(wr_index_i_reg[5]),
        .I2(TXE_MSGVAL_D3),
        .I3(wr_index_i_reg[3]),
        .I4(wr_index_i_reg[2]),
        .O(p_1_in11_in));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_index_i[3]_i_1 
       (.I0(TXE_MSGVAL_D3),
        .I1(wr_index_i_reg[5]),
        .I2(wr_index_i_reg[4]),
        .I3(wr_index_i_reg[3]),
        .O(p_1_in9_in));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_index_i[4]_i_1 
       (.I0(wr_index_i_reg[5]),
        .I1(TXE_MSGVAL_D3),
        .I2(wr_index_i_reg[4]),
        .O(p_1_in8_in));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_index_i[5]_i_1 
       (.I0(TXE_MSGVAL_D3),
        .I1(wr_index_i_reg[5]),
        .O(\wr_index_i[5]_i_1_n_0 ));
  FDRE \wr_index_i_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(p_1_in1_in),
        .Q(wr_index_i_reg[0]),
        .R(SR));
  FDRE \wr_index_i_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(p_1_in13_in),
        .Q(wr_index_i_reg[1]),
        .R(SR));
  FDRE \wr_index_i_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(p_1_in11_in),
        .Q(wr_index_i_reg[2]),
        .R(SR));
  FDRE \wr_index_i_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(p_1_in9_in),
        .Q(wr_index_i_reg[3]),
        .R(SR));
  FDRE \wr_index_i_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(p_1_in8_in),
        .Q(wr_index_i_reg[4]),
        .R(SR));
  FDRE \wr_index_i_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(\wr_index_i[5]_i_1_n_0 ),
        .Q(wr_index_i_reg[5]),
        .R(SR));
  LUT2 #(
    .INIT(4'hB)) 
    \wr_index_id_loc[1]_i_1 
       (.I0(\wr_index_id_loc[1]_i_3_n_0 ),
        .I1(dest_arst),
        .O(\wr_index_id_loc[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wr_index_id_loc[1]_i_2 
       (.I0(TXE_BRAM_ADDR[6]),
        .I1(TXE_BRAM_ADDR[9]),
        .I2(TXE_BRAM_ADDR[8]),
        .I3(TXE_BRAM_ADDR[7]),
        .I4(TXE_BRAM_ADDR[5]),
        .O(p_0_in__3[5]));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \wr_index_id_loc[1]_i_3 
       (.I0(wr_index_i_reg[3]),
        .I1(wr_index_i_reg[2]),
        .I2(wr_index_i_reg[5]),
        .I3(wr_index_i_reg[4]),
        .I4(TXE_MSGVAL_D3),
        .I5(wr_index_i_reg[1]),
        .O(\wr_index_id_loc[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_index_id_loc[2]_i_1 
       (.I0(TXE_BRAM_ADDR[7]),
        .I1(TXE_BRAM_ADDR[8]),
        .I2(TXE_BRAM_ADDR[9]),
        .I3(TXE_BRAM_ADDR[6]),
        .O(p_0_in__3[4]));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_index_id_loc[3]_i_1 
       (.I0(TXE_BRAM_ADDR[9]),
        .I1(TXE_BRAM_ADDR[8]),
        .I2(TXE_BRAM_ADDR[7]),
        .O(p_0_in__3[3]));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_index_id_loc[4]_i_1 
       (.I0(TXE_BRAM_ADDR[9]),
        .I1(TXE_BRAM_ADDR[8]),
        .O(p_0_in__3[2]));
  LUT1 #(
    .INIT(2'h1)) 
    \wr_index_id_loc[5]_i_1 
       (.I0(TXE_BRAM_ADDR[9]),
        .O(p_0_in__3[1]));
  FDRE \wr_index_id_loc_reg[1] 
       (.C(can_clk),
        .CE(TXE_MSGVAL_D3),
        .D(p_0_in__3[5]),
        .Q(TXE_BRAM_ADDR[5]),
        .R(\wr_index_id_loc[1]_i_1_n_0 ));
  FDRE \wr_index_id_loc_reg[2] 
       (.C(can_clk),
        .CE(TXE_MSGVAL_D3),
        .D(p_0_in__3[4]),
        .Q(TXE_BRAM_ADDR[6]),
        .R(\wr_index_id_loc[1]_i_1_n_0 ));
  FDRE \wr_index_id_loc_reg[3] 
       (.C(can_clk),
        .CE(TXE_MSGVAL_D3),
        .D(p_0_in__3[3]),
        .Q(TXE_BRAM_ADDR[7]),
        .R(\wr_index_id_loc[1]_i_1_n_0 ));
  FDRE \wr_index_id_loc_reg[4] 
       (.C(can_clk),
        .CE(TXE_MSGVAL_D3),
        .D(p_0_in__3[2]),
        .Q(TXE_BRAM_ADDR[8]),
        .R(\wr_index_id_loc[1]_i_1_n_0 ));
  FDRE \wr_index_id_loc_reg[5] 
       (.C(can_clk),
        .CE(TXE_MSGVAL_D3),
        .D(p_0_in__3[1]),
        .Q(TXE_BRAM_ADDR[9]),
        .R(\wr_index_id_loc[1]_i_1_n_0 ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_txmsg_addr_gen
   (ADDR_M_CC,
    \TXE_DATA_TS_reg[0]_0 ,
    Q,
    \TXE_DATA_TS_reg[1]_0 ,
    \TXE_DATA_TS_reg[2]_0 ,
    \TXE_DATA_TS_reg[3]_0 ,
    \TXE_DATA_TS_reg[4]_0 ,
    \TXE_DATA_TS_reg[5]_0 ,
    \TXE_DATA_TS_reg[7]_0 ,
    \TXE_DATA_TS_reg[7]_1 ,
    \TXE_DATA_TS_reg[8]_0 ,
    \TXE_DATA_TS_reg[9]_0 ,
    \TXE_DATA_TS_reg[10]_0 ,
    \TXE_DATA_TS_reg[11]_0 ,
    \TXE_DATA_TS_reg[12]_0 ,
    \TXE_DATA_TS_reg[13]_0 ,
    \TXE_DATA_TS_reg[14]_0 ,
    \TXE_DATA_TS_reg[15]_0 ,
    \syncstages_ff_reg[0][9] ,
    can_clk,
    \addr_location_incr_count_reg[4]_0 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1 ,
    \gen_wr_a.gen_word_narrow.mem_reg_1_0 ,
    SR,
    \txe_id_data_i_reg[0]_0 ,
    \addr_location_incr_count_reg[0]_0 );
  output [9:0]ADDR_M_CC;
  output \TXE_DATA_TS_reg[0]_0 ;
  output [16:0]Q;
  output \TXE_DATA_TS_reg[1]_0 ;
  output \TXE_DATA_TS_reg[2]_0 ;
  output \TXE_DATA_TS_reg[3]_0 ;
  output \TXE_DATA_TS_reg[4]_0 ;
  output \TXE_DATA_TS_reg[5]_0 ;
  output \TXE_DATA_TS_reg[7]_0 ;
  output [0:0]\TXE_DATA_TS_reg[7]_1 ;
  output \TXE_DATA_TS_reg[8]_0 ;
  output \TXE_DATA_TS_reg[9]_0 ;
  output \TXE_DATA_TS_reg[10]_0 ;
  output \TXE_DATA_TS_reg[11]_0 ;
  output \TXE_DATA_TS_reg[12]_0 ;
  output \TXE_DATA_TS_reg[13]_0 ;
  output \TXE_DATA_TS_reg[14]_0 ;
  output \TXE_DATA_TS_reg[15]_0 ;
  input [8:0]\syncstages_ff_reg[0][9] ;
  input can_clk;
  input \addr_location_incr_count_reg[4]_0 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_1 ;
  input \gen_wr_a.gen_word_narrow.mem_reg_1_0 ;
  input [0:0]SR;
  input [31:0]\txe_id_data_i_reg[0]_0 ;
  input [0:0]\addr_location_incr_count_reg[0]_0 ;

  wire [9:0]ADDR_M_CC;
  wire [16:0]Q;
  wire [0:0]SR;
  wire \TXE_DATA_TS[0]_i_1_n_0 ;
  wire \TXE_DATA_TS_reg[0]_0 ;
  wire \TXE_DATA_TS_reg[10]_0 ;
  wire \TXE_DATA_TS_reg[11]_0 ;
  wire \TXE_DATA_TS_reg[12]_0 ;
  wire \TXE_DATA_TS_reg[13]_0 ;
  wire \TXE_DATA_TS_reg[14]_0 ;
  wire \TXE_DATA_TS_reg[15]_0 ;
  wire \TXE_DATA_TS_reg[1]_0 ;
  wire \TXE_DATA_TS_reg[2]_0 ;
  wire \TXE_DATA_TS_reg[3]_0 ;
  wire \TXE_DATA_TS_reg[4]_0 ;
  wire \TXE_DATA_TS_reg[5]_0 ;
  wire \TXE_DATA_TS_reg[7]_0 ;
  wire [0:0]\TXE_DATA_TS_reg[7]_1 ;
  wire \TXE_DATA_TS_reg[8]_0 ;
  wire \TXE_DATA_TS_reg[9]_0 ;
  wire \TXE_DATA_TS_reg_n_0_[0] ;
  wire \TXE_DATA_TS_reg_n_0_[10] ;
  wire \TXE_DATA_TS_reg_n_0_[11] ;
  wire \TXE_DATA_TS_reg_n_0_[12] ;
  wire \TXE_DATA_TS_reg_n_0_[13] ;
  wire \TXE_DATA_TS_reg_n_0_[14] ;
  wire \TXE_DATA_TS_reg_n_0_[15] ;
  wire \TXE_DATA_TS_reg_n_0_[1] ;
  wire \TXE_DATA_TS_reg_n_0_[2] ;
  wire \TXE_DATA_TS_reg_n_0_[3] ;
  wire \TXE_DATA_TS_reg_n_0_[4] ;
  wire \TXE_DATA_TS_reg_n_0_[5] ;
  wire \TXE_DATA_TS_reg_n_0_[8] ;
  wire \TXE_DATA_TS_reg_n_0_[9] ;
  wire \addr_location_incr_count[0]_i_2_n_0 ;
  wire [0:4]addr_location_incr_count_reg;
  wire [0:0]\addr_location_incr_count_reg[0]_0 ;
  wire \addr_location_incr_count_reg[4]_0 ;
  wire can_clk;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_1_0 ;
  wire [0:9]locked_id_loc_sig_fs2;
  wire [0:9]locked_id_loc_sig_fs2_d1;
  wire [4:0]p_0_in__2;
  wire [8:0]\syncstages_ff_reg[0][9] ;
  wire [0:15]txe_id_data_i;
  wire \txe_id_data_i[0]_i_1_n_0 ;
  wire [31:0]\txe_id_data_i_reg[0]_0 ;
  wire u_txxpm_1_i_1_n_3;
  wire u_txxpm_1_i_2_n_0;
  wire u_txxpm_1_i_2_n_1;
  wire u_txxpm_1_i_2_n_2;
  wire u_txxpm_1_i_2_n_3;
  wire u_txxpm_1_i_3_n_0;
  wire u_txxpm_1_i_3_n_1;
  wire u_txxpm_1_i_3_n_2;
  wire u_txxpm_1_i_3_n_3;
  wire u_txxpm_1_i_4_n_0;
  wire u_txxpm_1_i_5_n_0;
  wire u_txxpm_1_i_6_n_0;
  wire u_txxpm_1_i_7_n_0;
  wire u_txxpm_1_i_8_n_0;
  wire [3:1]NLW_u_txxpm_1_i_1_CO_UNCONNECTED;
  wire [3:2]NLW_u_txxpm_1_i_1_O_UNCONNECTED;

  LUT5 #(
    .INIT(32'h00000004)) 
    \TXE_DATA_TS[0]_i_1 
       (.I0(addr_location_incr_count_reg[4]),
        .I1(addr_location_incr_count_reg[3]),
        .I2(addr_location_incr_count_reg[2]),
        .I3(addr_location_incr_count_reg[0]),
        .I4(addr_location_incr_count_reg[1]),
        .O(\TXE_DATA_TS[0]_i_1_n_0 ));
  FDRE \TXE_DATA_TS_reg[0] 
       (.C(can_clk),
        .CE(\TXE_DATA_TS[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [31]),
        .Q(\TXE_DATA_TS_reg_n_0_[0] ),
        .R(SR));
  FDRE \TXE_DATA_TS_reg[10] 
       (.C(can_clk),
        .CE(\TXE_DATA_TS[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [21]),
        .Q(\TXE_DATA_TS_reg_n_0_[10] ),
        .R(SR));
  FDRE \TXE_DATA_TS_reg[11] 
       (.C(can_clk),
        .CE(\TXE_DATA_TS[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [20]),
        .Q(\TXE_DATA_TS_reg_n_0_[11] ),
        .R(SR));
  FDRE \TXE_DATA_TS_reg[12] 
       (.C(can_clk),
        .CE(\TXE_DATA_TS[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [19]),
        .Q(\TXE_DATA_TS_reg_n_0_[12] ),
        .R(SR));
  FDRE \TXE_DATA_TS_reg[13] 
       (.C(can_clk),
        .CE(\TXE_DATA_TS[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [18]),
        .Q(\TXE_DATA_TS_reg_n_0_[13] ),
        .R(SR));
  FDRE \TXE_DATA_TS_reg[14] 
       (.C(can_clk),
        .CE(\TXE_DATA_TS[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [17]),
        .Q(\TXE_DATA_TS_reg_n_0_[14] ),
        .R(SR));
  FDRE \TXE_DATA_TS_reg[15] 
       (.C(can_clk),
        .CE(\TXE_DATA_TS[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [16]),
        .Q(\TXE_DATA_TS_reg_n_0_[15] ),
        .R(SR));
  FDRE \TXE_DATA_TS_reg[1] 
       (.C(can_clk),
        .CE(\TXE_DATA_TS[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [30]),
        .Q(\TXE_DATA_TS_reg_n_0_[1] ),
        .R(SR));
  FDRE \TXE_DATA_TS_reg[2] 
       (.C(can_clk),
        .CE(\TXE_DATA_TS[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [29]),
        .Q(\TXE_DATA_TS_reg_n_0_[2] ),
        .R(SR));
  FDRE \TXE_DATA_TS_reg[3] 
       (.C(can_clk),
        .CE(\TXE_DATA_TS[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [28]),
        .Q(\TXE_DATA_TS_reg_n_0_[3] ),
        .R(SR));
  FDRE \TXE_DATA_TS_reg[4] 
       (.C(can_clk),
        .CE(\TXE_DATA_TS[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [27]),
        .Q(\TXE_DATA_TS_reg_n_0_[4] ),
        .R(SR));
  FDRE \TXE_DATA_TS_reg[5] 
       (.C(can_clk),
        .CE(\TXE_DATA_TS[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [26]),
        .Q(\TXE_DATA_TS_reg_n_0_[5] ),
        .R(SR));
  FDRE \TXE_DATA_TS_reg[7] 
       (.C(can_clk),
        .CE(\TXE_DATA_TS[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [24]),
        .Q(\TXE_DATA_TS_reg[7]_1 ),
        .R(SR));
  FDRE \TXE_DATA_TS_reg[8] 
       (.C(can_clk),
        .CE(\TXE_DATA_TS[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [23]),
        .Q(\TXE_DATA_TS_reg_n_0_[8] ),
        .R(SR));
  FDRE \TXE_DATA_TS_reg[9] 
       (.C(can_clk),
        .CE(\TXE_DATA_TS[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [22]),
        .Q(\TXE_DATA_TS_reg_n_0_[9] ),
        .R(SR));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_array_single \XPM_CDC_MODULES.LOCKED_ID_2C_CDC_TO 
       (.dest_clk(can_clk),
        .dest_out({locked_id_loc_sig_fs2[0],locked_id_loc_sig_fs2[1],locked_id_loc_sig_fs2[2],locked_id_loc_sig_fs2[3],locked_id_loc_sig_fs2[4],locked_id_loc_sig_fs2[5],locked_id_loc_sig_fs2[6],locked_id_loc_sig_fs2[7],locked_id_loc_sig_fs2[8],locked_id_loc_sig_fs2[9]}),
        .src_clk(1'b0),
        .src_in({\syncstages_ff_reg[0][9] ,1'b0}));
  LUT6 #(
    .INIT(64'h0001FFFF00000000)) 
    \addr_location_incr_count[0]_i_2 
       (.I0(addr_location_incr_count_reg[2]),
        .I1(addr_location_incr_count_reg[1]),
        .I2(addr_location_incr_count_reg[3]),
        .I3(addr_location_incr_count_reg[4]),
        .I4(addr_location_incr_count_reg[0]),
        .I5(\addr_location_incr_count_reg[4]_0 ),
        .O(\addr_location_incr_count[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \addr_location_incr_count[0]_i_3 
       (.I0(addr_location_incr_count_reg[1]),
        .I1(addr_location_incr_count_reg[4]),
        .I2(addr_location_incr_count_reg[3]),
        .I3(addr_location_incr_count_reg[2]),
        .I4(addr_location_incr_count_reg[0]),
        .O(p_0_in__2[4]));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \addr_location_incr_count[1]_i_1 
       (.I0(addr_location_incr_count_reg[2]),
        .I1(addr_location_incr_count_reg[3]),
        .I2(addr_location_incr_count_reg[4]),
        .I3(addr_location_incr_count_reg[1]),
        .O(p_0_in__2[3]));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \addr_location_incr_count[2]_i_1 
       (.I0(addr_location_incr_count_reg[4]),
        .I1(addr_location_incr_count_reg[3]),
        .I2(addr_location_incr_count_reg[2]),
        .O(p_0_in__2[2]));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \addr_location_incr_count[3]_i_1 
       (.I0(addr_location_incr_count_reg[4]),
        .I1(addr_location_incr_count_reg[3]),
        .O(p_0_in__2[1]));
  LUT1 #(
    .INIT(2'h1)) 
    \addr_location_incr_count[4]_i_1__1 
       (.I0(addr_location_incr_count_reg[4]),
        .O(p_0_in__2[0]));
  FDRE \addr_location_incr_count_reg[0] 
       (.C(can_clk),
        .CE(\addr_location_incr_count[0]_i_2_n_0 ),
        .D(p_0_in__2[4]),
        .Q(addr_location_incr_count_reg[0]),
        .R(\addr_location_incr_count_reg[0]_0 ));
  FDRE \addr_location_incr_count_reg[1] 
       (.C(can_clk),
        .CE(\addr_location_incr_count[0]_i_2_n_0 ),
        .D(p_0_in__2[3]),
        .Q(addr_location_incr_count_reg[1]),
        .R(\addr_location_incr_count_reg[0]_0 ));
  FDRE \addr_location_incr_count_reg[2] 
       (.C(can_clk),
        .CE(\addr_location_incr_count[0]_i_2_n_0 ),
        .D(p_0_in__2[2]),
        .Q(addr_location_incr_count_reg[2]),
        .R(\addr_location_incr_count_reg[0]_0 ));
  FDRE \addr_location_incr_count_reg[3] 
       (.C(can_clk),
        .CE(\addr_location_incr_count[0]_i_2_n_0 ),
        .D(p_0_in__2[1]),
        .Q(addr_location_incr_count_reg[3]),
        .R(\addr_location_incr_count_reg[0]_0 ));
  FDRE \addr_location_incr_count_reg[4] 
       (.C(can_clk),
        .CE(\addr_location_incr_count[0]_i_2_n_0 ),
        .D(p_0_in__2[0]),
        .Q(addr_location_incr_count_reg[4]),
        .R(\addr_location_incr_count_reg[0]_0 ));
  LUT4 #(
    .INIT(16'h335F)) 
    \gen_fifo_rx0.u_rxxpm_1_i_49 
       (.I0(\TXE_DATA_TS_reg_n_0_[0] ),
        .I1(txe_id_data_i[0]),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1 ),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_0 ),
        .O(\TXE_DATA_TS_reg[0]_0 ));
  LUT4 #(
    .INIT(16'h335F)) 
    \gen_fifo_rx0.u_rxxpm_1_i_50 
       (.I0(\TXE_DATA_TS_reg_n_0_[1] ),
        .I1(txe_id_data_i[1]),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1 ),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_0 ),
        .O(\TXE_DATA_TS_reg[1]_0 ));
  LUT4 #(
    .INIT(16'h335F)) 
    \gen_fifo_rx0.u_rxxpm_1_i_51 
       (.I0(\TXE_DATA_TS_reg_n_0_[2] ),
        .I1(txe_id_data_i[2]),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1 ),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_0 ),
        .O(\TXE_DATA_TS_reg[2]_0 ));
  LUT4 #(
    .INIT(16'h335F)) 
    \gen_fifo_rx0.u_rxxpm_1_i_52 
       (.I0(\TXE_DATA_TS_reg_n_0_[3] ),
        .I1(txe_id_data_i[3]),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1 ),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_0 ),
        .O(\TXE_DATA_TS_reg[3]_0 ));
  LUT4 #(
    .INIT(16'h335F)) 
    \gen_fifo_rx0.u_rxxpm_1_i_53 
       (.I0(\TXE_DATA_TS_reg_n_0_[4] ),
        .I1(txe_id_data_i[4]),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1 ),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_0 ),
        .O(\TXE_DATA_TS_reg[4]_0 ));
  LUT4 #(
    .INIT(16'h335F)) 
    \gen_fifo_rx0.u_rxxpm_1_i_54 
       (.I0(\TXE_DATA_TS_reg_n_0_[5] ),
        .I1(txe_id_data_i[5]),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1 ),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_0 ),
        .O(\TXE_DATA_TS_reg[5]_0 ));
  LUT4 #(
    .INIT(16'h335F)) 
    \gen_fifo_rx0.u_rxxpm_1_i_56 
       (.I0(\TXE_DATA_TS_reg[7]_1 ),
        .I1(txe_id_data_i[7]),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1 ),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_0 ),
        .O(\TXE_DATA_TS_reg[7]_0 ));
  LUT4 #(
    .INIT(16'h335F)) 
    \gen_fifo_rx0.u_rxxpm_1_i_57 
       (.I0(\TXE_DATA_TS_reg_n_0_[8] ),
        .I1(txe_id_data_i[8]),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1 ),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_0 ),
        .O(\TXE_DATA_TS_reg[8]_0 ));
  LUT4 #(
    .INIT(16'h335F)) 
    \gen_fifo_rx0.u_rxxpm_1_i_58 
       (.I0(\TXE_DATA_TS_reg_n_0_[9] ),
        .I1(txe_id_data_i[9]),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1 ),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_0 ),
        .O(\TXE_DATA_TS_reg[9]_0 ));
  LUT4 #(
    .INIT(16'h335F)) 
    \gen_fifo_rx0.u_rxxpm_1_i_59 
       (.I0(\TXE_DATA_TS_reg_n_0_[10] ),
        .I1(txe_id_data_i[10]),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1 ),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_0 ),
        .O(\TXE_DATA_TS_reg[10]_0 ));
  LUT4 #(
    .INIT(16'h335F)) 
    \gen_fifo_rx0.u_rxxpm_1_i_60 
       (.I0(\TXE_DATA_TS_reg_n_0_[11] ),
        .I1(txe_id_data_i[11]),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1 ),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_0 ),
        .O(\TXE_DATA_TS_reg[11]_0 ));
  LUT4 #(
    .INIT(16'h335F)) 
    \gen_fifo_rx0.u_rxxpm_1_i_61 
       (.I0(\TXE_DATA_TS_reg_n_0_[12] ),
        .I1(txe_id_data_i[12]),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1 ),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_0 ),
        .O(\TXE_DATA_TS_reg[12]_0 ));
  LUT4 #(
    .INIT(16'h335F)) 
    \gen_fifo_rx0.u_rxxpm_1_i_62 
       (.I0(\TXE_DATA_TS_reg_n_0_[13] ),
        .I1(txe_id_data_i[13]),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1 ),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_0 ),
        .O(\TXE_DATA_TS_reg[13]_0 ));
  LUT4 #(
    .INIT(16'h335F)) 
    \gen_fifo_rx0.u_rxxpm_1_i_63 
       (.I0(\TXE_DATA_TS_reg_n_0_[14] ),
        .I1(txe_id_data_i[14]),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1 ),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_0 ),
        .O(\TXE_DATA_TS_reg[14]_0 ));
  LUT4 #(
    .INIT(16'h335F)) 
    \gen_fifo_rx0.u_rxxpm_1_i_64 
       (.I0(\TXE_DATA_TS_reg_n_0_[15] ),
        .I1(txe_id_data_i[15]),
        .I2(\gen_wr_a.gen_word_narrow.mem_reg_1 ),
        .I3(\gen_wr_a.gen_word_narrow.mem_reg_1_0 ),
        .O(\TXE_DATA_TS_reg[15]_0 ));
  FDRE \locked_id_loc_sig_fs2_d1_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(locked_id_loc_sig_fs2[0]),
        .Q(locked_id_loc_sig_fs2_d1[0]),
        .R(SR));
  FDRE \locked_id_loc_sig_fs2_d1_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(locked_id_loc_sig_fs2[1]),
        .Q(locked_id_loc_sig_fs2_d1[1]),
        .R(SR));
  FDRE \locked_id_loc_sig_fs2_d1_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(locked_id_loc_sig_fs2[2]),
        .Q(locked_id_loc_sig_fs2_d1[2]),
        .R(SR));
  FDRE \locked_id_loc_sig_fs2_d1_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(locked_id_loc_sig_fs2[3]),
        .Q(locked_id_loc_sig_fs2_d1[3]),
        .R(SR));
  FDRE \locked_id_loc_sig_fs2_d1_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(locked_id_loc_sig_fs2[4]),
        .Q(locked_id_loc_sig_fs2_d1[4]),
        .R(SR));
  FDRE \locked_id_loc_sig_fs2_d1_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(locked_id_loc_sig_fs2[5]),
        .Q(locked_id_loc_sig_fs2_d1[5]),
        .R(SR));
  FDRE \locked_id_loc_sig_fs2_d1_reg[6] 
       (.C(can_clk),
        .CE(1'b1),
        .D(locked_id_loc_sig_fs2[6]),
        .Q(locked_id_loc_sig_fs2_d1[6]),
        .R(SR));
  FDRE \locked_id_loc_sig_fs2_d1_reg[7] 
       (.C(can_clk),
        .CE(1'b1),
        .D(locked_id_loc_sig_fs2[7]),
        .Q(locked_id_loc_sig_fs2_d1[7]),
        .R(SR));
  FDRE \locked_id_loc_sig_fs2_d1_reg[8] 
       (.C(can_clk),
        .CE(1'b1),
        .D(locked_id_loc_sig_fs2[8]),
        .Q(locked_id_loc_sig_fs2_d1[8]),
        .R(SR));
  FDRE \locked_id_loc_sig_fs2_d1_reg[9] 
       (.C(can_clk),
        .CE(1'b1),
        .D(locked_id_loc_sig_fs2[9]),
        .Q(locked_id_loc_sig_fs2_d1[9]),
        .R(SR));
  LUT5 #(
    .INIT(32'h00000002)) 
    \txe_id_data_i[0]_i_1 
       (.I0(addr_location_incr_count_reg[4]),
        .I1(addr_location_incr_count_reg[3]),
        .I2(addr_location_incr_count_reg[2]),
        .I3(addr_location_incr_count_reg[0]),
        .I4(addr_location_incr_count_reg[1]),
        .O(\txe_id_data_i[0]_i_1_n_0 ));
  FDRE \txe_id_data_i_reg[0] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [31]),
        .Q(txe_id_data_i[0]),
        .R(SR));
  FDRE \txe_id_data_i_reg[10] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [21]),
        .Q(txe_id_data_i[10]),
        .R(SR));
  FDRE \txe_id_data_i_reg[11] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [20]),
        .Q(txe_id_data_i[11]),
        .R(SR));
  FDRE \txe_id_data_i_reg[12] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [19]),
        .Q(txe_id_data_i[12]),
        .R(SR));
  FDRE \txe_id_data_i_reg[13] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [18]),
        .Q(txe_id_data_i[13]),
        .R(SR));
  FDRE \txe_id_data_i_reg[14] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [17]),
        .Q(txe_id_data_i[14]),
        .R(SR));
  FDRE \txe_id_data_i_reg[15] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [16]),
        .Q(txe_id_data_i[15]),
        .R(SR));
  FDRE \txe_id_data_i_reg[16] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [15]),
        .Q(Q[15]),
        .R(SR));
  FDRE \txe_id_data_i_reg[17] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [14]),
        .Q(Q[14]),
        .R(SR));
  FDRE \txe_id_data_i_reg[18] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [13]),
        .Q(Q[13]),
        .R(SR));
  FDRE \txe_id_data_i_reg[19] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [12]),
        .Q(Q[12]),
        .R(SR));
  FDRE \txe_id_data_i_reg[1] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [30]),
        .Q(txe_id_data_i[1]),
        .R(SR));
  FDRE \txe_id_data_i_reg[20] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [11]),
        .Q(Q[11]),
        .R(SR));
  FDRE \txe_id_data_i_reg[21] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [10]),
        .Q(Q[10]),
        .R(SR));
  FDRE \txe_id_data_i_reg[22] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [9]),
        .Q(Q[9]),
        .R(SR));
  FDRE \txe_id_data_i_reg[23] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [8]),
        .Q(Q[8]),
        .R(SR));
  FDRE \txe_id_data_i_reg[24] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [7]),
        .Q(Q[7]),
        .R(SR));
  FDRE \txe_id_data_i_reg[25] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [6]),
        .Q(Q[6]),
        .R(SR));
  FDRE \txe_id_data_i_reg[26] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [5]),
        .Q(Q[5]),
        .R(SR));
  FDRE \txe_id_data_i_reg[27] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [4]),
        .Q(Q[4]),
        .R(SR));
  FDRE \txe_id_data_i_reg[28] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [3]),
        .Q(Q[3]),
        .R(SR));
  FDRE \txe_id_data_i_reg[29] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [2]),
        .Q(Q[2]),
        .R(SR));
  FDRE \txe_id_data_i_reg[2] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [29]),
        .Q(txe_id_data_i[2]),
        .R(SR));
  FDRE \txe_id_data_i_reg[30] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [1]),
        .Q(Q[1]),
        .R(SR));
  FDRE \txe_id_data_i_reg[31] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \txe_id_data_i_reg[3] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [28]),
        .Q(txe_id_data_i[3]),
        .R(SR));
  FDRE \txe_id_data_i_reg[4] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [27]),
        .Q(txe_id_data_i[4]),
        .R(SR));
  FDRE \txe_id_data_i_reg[5] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [26]),
        .Q(txe_id_data_i[5]),
        .R(SR));
  FDRE \txe_id_data_i_reg[6] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [25]),
        .Q(Q[16]),
        .R(SR));
  FDRE \txe_id_data_i_reg[7] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [24]),
        .Q(txe_id_data_i[7]),
        .R(SR));
  FDRE \txe_id_data_i_reg[8] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [23]),
        .Q(txe_id_data_i[8]),
        .R(SR));
  FDRE \txe_id_data_i_reg[9] 
       (.C(can_clk),
        .CE(\txe_id_data_i[0]_i_1_n_0 ),
        .D(\txe_id_data_i_reg[0]_0 [22]),
        .Q(txe_id_data_i[9]),
        .R(SR));
  CARRY4 u_txxpm_1_i_1
       (.CI(u_txxpm_1_i_2_n_0),
        .CO({NLW_u_txxpm_1_i_1_CO_UNCONNECTED[3:1],u_txxpm_1_i_1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_u_txxpm_1_i_1_O_UNCONNECTED[3:2],ADDR_M_CC[9:8]}),
        .S({1'b0,1'b0,locked_id_loc_sig_fs2_d1[0],locked_id_loc_sig_fs2_d1[1]}));
  CARRY4 u_txxpm_1_i_2
       (.CI(u_txxpm_1_i_3_n_0),
        .CO({u_txxpm_1_i_2_n_0,u_txxpm_1_i_2_n_1,u_txxpm_1_i_2_n_2,u_txxpm_1_i_2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,locked_id_loc_sig_fs2_d1[5]}),
        .O(ADDR_M_CC[7:4]),
        .S({locked_id_loc_sig_fs2_d1[2],locked_id_loc_sig_fs2_d1[3],locked_id_loc_sig_fs2_d1[4],u_txxpm_1_i_4_n_0}));
  CARRY4 u_txxpm_1_i_3
       (.CI(1'b0),
        .CO({u_txxpm_1_i_3_n_0,u_txxpm_1_i_3_n_1,u_txxpm_1_i_3_n_2,u_txxpm_1_i_3_n_3}),
        .CYINIT(1'b0),
        .DI({locked_id_loc_sig_fs2_d1[6],locked_id_loc_sig_fs2_d1[7],locked_id_loc_sig_fs2_d1[8],locked_id_loc_sig_fs2_d1[9]}),
        .O(ADDR_M_CC[3:0]),
        .S({u_txxpm_1_i_5_n_0,u_txxpm_1_i_6_n_0,u_txxpm_1_i_7_n_0,u_txxpm_1_i_8_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    u_txxpm_1_i_4
       (.I0(locked_id_loc_sig_fs2_d1[5]),
        .I1(addr_location_incr_count_reg[0]),
        .O(u_txxpm_1_i_4_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    u_txxpm_1_i_5
       (.I0(locked_id_loc_sig_fs2_d1[6]),
        .I1(addr_location_incr_count_reg[1]),
        .O(u_txxpm_1_i_5_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    u_txxpm_1_i_6
       (.I0(locked_id_loc_sig_fs2_d1[7]),
        .I1(addr_location_incr_count_reg[2]),
        .O(u_txxpm_1_i_6_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    u_txxpm_1_i_7
       (.I0(locked_id_loc_sig_fs2_d1[8]),
        .I1(addr_location_incr_count_reg[3]),
        .O(u_txxpm_1_i_7_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    u_txxpm_1_i_8
       (.I0(locked_id_loc_sig_fs2_d1[9]),
        .I1(addr_location_incr_count_reg[4]),
        .O(u_txxpm_1_i_8_n_0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cantop
   (E_RST_I_reg,
    E_DATA_ACK,
    wea,
    enb,
    host_req_reg,
    ip2bus_intrevent,
    Bus2IP_Reset,
    Q,
    RX_ADDR_M_CC_F1,
    addrb,
    pr1_rd_req_reg,
    s_axi_wready,
    s_axi_arready,
    addra,
    \RD_DATA_RET_reg[0] ,
    dina,
    ena,
    TXE_TX_REN_D1_reg,
    RXF_FULL_AT_MSG_BOUNDARY_reg,
    \RXE_DATA_STORED_AT_DLC_reg[0] ,
    ADDR_M_CC,
    can_phy_tx,
    s_axi_aclk,
    can_clk,
    src_arst,
    s_axi_wdata,
    can_clk_x2,
    Bus2IP_RNW,
    Bus2IP_CS,
    D,
    doutb,
    \RD_DATA_RET_reg[0]_0 ,
    dest_rst,
    can_phy_rx,
    \ADDR_RET_reg[0] ,
    \TXE_DLC_I_reg[0] );
  output E_RST_I_reg;
  output E_DATA_ACK;
  output [0:0]wea;
  output enb;
  output host_req_reg;
  output ip2bus_intrevent;
  output Bus2IP_Reset;
  output [10:0]Q;
  output [10:0]RX_ADDR_M_CC_F1;
  output [9:0]addrb;
  output pr1_rd_req_reg;
  output s_axi_wready;
  output s_axi_arready;
  output [10:0]addra;
  output [31:0]\RD_DATA_RET_reg[0] ;
  output [31:0]dina;
  output ena;
  output TXE_TX_REN_D1_reg;
  output [0:0]RXF_FULL_AT_MSG_BOUNDARY_reg;
  output [31:0]\RXE_DATA_STORED_AT_DLC_reg[0] ;
  output [9:0]ADDR_M_CC;
  output can_phy_tx;
  input s_axi_aclk;
  input can_clk;
  input src_arst;
  input [31:0]s_axi_wdata;
  input can_clk_x2;
  input Bus2IP_RNW;
  input Bus2IP_CS;
  input [31:0]D;
  input [31:0]doutb;
  input [31:0]\RD_DATA_RET_reg[0]_0 ;
  input dest_rst;
  input can_phy_rx;
  input [12:0]\ADDR_RET_reg[0] ;
  input [31:0]\TXE_DLC_I_reg[0] ;

  wire ACK_S_SIG_IMM;
  wire [9:0]ADDR_M_CC;
  wire [12:0]\ADDR_RET_reg[0] ;
  wire BIS_HSYNC_FLG_I;
  wire BIS_HSYNC_FLG_I_i_1_n_0;
  wire BSP_CRCERR_I_CANFD_FLG_i_1_n_0;
  wire BSP_CRCERR_I_CAN_FLG_i_1_n_0;
  wire BSP_IC_ACK_ERROR_I_i_1_n_0;
  wire BSP_IC_BIT_ERROR_I_i_1_n_0;
  wire BSP_IC_CRC_ERROR_I_i_1_n_0;
  wire BSP_IC_FRM_ERROR_I_i_1_n_0;
  wire BSP_IC_F_BIT_ERROR_I_i_1_n_0;
  wire BSP_IC_F_CRC_ERROR_I_i_1_n_0;
  wire BSP_IC_F_FRM_ERROR_I_i_1_n_0;
  wire BSP_IC_F_STUFF_ERROR_I_i_1_n_0;
  wire BSP_IC_STUFF_ERROR_I_i_1_n_0;
  wire BSP_IN_EOF;
  wire BSP_IN_ID_STATE;
  wire BSP_IN_IFSPACE;
  wire BSP_IN_IFSPACE_OL;
  wire BSP_TXBIT_D1_i_1_n_0;
  wire BSP_TXBIT_FD;
  wire BSP_TXBIT_FD_i_1_n_0;
  wire BSP_TXBIT_I;
  wire BTL_RXBIT;
  wire BTL_RXBIT_I_i_1_n_0;
  wire BTL_SAMP_EN;
  wire BTL_SAMP_EN_FD1;
  wire BTL_SAMP_EN_FD2;
  wire BUFFER_IS_READY;
  wire Bus2IP_CS;
  wire Bus2IP_RNW;
  wire Bus2IP_Reset;
  wire CANCEL_CONFIRMED_TL2OL_I_i_1_n_0;
  wire CANCEL_OR_INVALIDATE_BUFFER_OL2TL;
  wire CANCEL_OR_INVALIDATE_CONFIRMED_TL2OL;
  wire CAN_PHY_RX_I1;
  wire CAN_PHY_RX_I_NEG_FLOP;
  wire CAN_PHY_RX_I_NEG_FLOP_X2_reg_n_0;
  wire CAN_PHY_TX_LP;
  wire CAN_PHY_TX_LP_i_1_n_0;
  wire CAN_PHY_TX_POS_FLOP_X2_i_1_n_0;
  wire CAN_PHY_TX_POS_FLOP_i_1_n_0;
  wire CLKM_EN;
  wire [31:0]D;
  wire E_DATA_ACK;
  wire E_RST_I_reg;
  wire HSYNC_FLG_I_i_1_n_0;
  wire IC_IPSIG_WRITE_I;
  wire [0:7]IC_REG_BRPR;
  wire IC_REG_ESR_ACKER_I_i_1_n_0;
  wire IC_REG_ESR_BERR_I_i_1_n_0;
  wire IC_REG_ESR_CRCER_I_i_1_n_0;
  wire IC_REG_ESR_FMER_I_i_1_n_0;
  wire IC_REG_ESR_F_BERR_I_i_1_n_0;
  wire IC_REG_ESR_F_CRCER_I_i_1_n_0;
  wire IC_REG_ESR_F_FMER_I_i_1_n_0;
  wire IC_REG_ESR_F_STER_I_i_1_n_0;
  wire IC_REG_ESR_STER_I_i_1_n_0;
  wire [0:7]IC_REG_F_BRPR;
  wire [0:5]IC_REG_F_BRPR_TDCOFF;
  wire IC_REG_F_BRPR_TDC_EN;
  wire [0:3]IC_REG_F_BTR_SJW;
  wire [0:4]IC_REG_F_BTR_TS1;
  wire [0:3]IC_REG_F_BTR_TS2;
  wire [5:7]IC_REG_IFF_EN;
  wire IC_REG_ISR_ARBLST_I_i_1_n_0;
  wire IC_REG_ISR_BSFRD_I_i_1_n_0;
  wire IC_REG_ISR_BSOFF_I_i_1_n_0;
  wire IC_REG_ISR_ERROR_I10_out;
  wire IC_REG_ISR_ERROR_I_i_1_n_0;
  wire IC_REG_ISR_MSGLST_I_F1_i_1_n_0;
  wire IC_REG_ISR_MSGLST_I_TXE_i_1_n_0;
  wire IC_REG_ISR_MSGLST_I_i_1_n_0;
  wire IC_REG_ISR_PEE_I_i_1_n_0;
  wire IC_REG_ISR_RXMNF_I_i_1_n_0;
  wire IC_REG_ISR_RXOK_I_i_1_n_0;
  wire IC_REG_ISR_RXWM_I_F1_i_1_n_0;
  wire IC_REG_ISR_RXWM_I_i_1_n_0;
  wire IC_REG_ISR_SLEEP_I_i_1_n_0;
  wire IC_REG_ISR_TSCNT_OFLW_I_i_1_n_0;
  wire IC_REG_ISR_TXCRS_I_i_1_n_0;
  wire IC_REG_ISR_TXEWM_I_i_1_n_0;
  wire IC_REG_ISR_TXOK_I_i_1_n_0;
  wire IC_REG_ISR_TXTRS_I_i_1_n_0;
  wire IC_REG_ISR_WKUP_I_i_1_n_0;
  wire IC_REG_MSR_BRSD;
  wire IC_REG_MSR_DAR;
  wire IC_REG_MSR_DPEE;
  wire IC_REG_MSR_LBACK;
  wire IC_REG_MSR_SBR_I_i_2_n_0;
  wire IC_REG_MSR_SLEEP;
  wire IC_REG_MSR_SNOOP;
  wire [0:6]IC_REG_N_BTR_SJW;
  wire [0:7]IC_REG_N_BTR_TS1;
  wire [0:6]IC_REG_N_BTR_TS2;
  wire IC_REG_SBR;
  wire IC_REG_SRR_CEN_I;
  wire IC_REG_SRR_CEN_I_i_1_n_0;
  wire IC_REG_SRR_SRST;
  wire IC_REG_SRR_SRST_I_i_1_n_0;
  wire [6:0]IC_REG_SR_TDCV;
  wire [0:4]IC_REG_WMR_RXFP;
  wire [0:15]IC_SYNC_ECR;
  wire IC_SYNC_ECR_ACK;
  wire IC_SYNC_ECR_WEN;
  wire IC_SYNC_ESR_ACKER;
  wire IC_SYNC_ESR_BERR;
  wire IC_SYNC_ESR_CRCER;
  wire IC_SYNC_ESR_FMER;
  wire IC_SYNC_ESR_F_BERR;
  wire IC_SYNC_ESR_F_CRCER;
  wire IC_SYNC_ESR_F_FMER;
  wire IC_SYNC_ESR_F_STER;
  wire IC_SYNC_ESR_STER;
  wire IC_SYNC_ISR_ARBLST;
  wire IC_SYNC_ISR_BSOFF;
  wire IC_SYNC_ISR_MSGLST;
  wire IC_SYNC_ISR_MSGLST_F1;
  wire IC_SYNC_ISR_MSGLST_F1_i_1_n_0;
  wire IC_SYNC_ISR_MSGLST_TXE;
  wire IC_SYNC_ISR_MSGLST_i_1__0_n_0;
  wire IC_SYNC_ISR_MSGLST_i_1_n_0;
  wire IC_SYNC_ISR_RXOK;
  wire IC_SYNC_ISR_TXOK;
  wire IC_SYNC_SR_BIDLE;
  wire IC_SYNC_SR_BSFR;
  wire IC_SYNC_SR_ERRWRN;
  wire [1:1]IC_SYNC_SR_ESTAT;
  wire IC_SYNC_SR_LBACK;
  wire IC_SYNC_SR_PEE;
  wire IC_SYNC_SR_RSTST;
  wire IC_SYNC_SR_SLEEP;
  wire IC_SYNC_TSR_WEN;
  wire IC_TIMESTAMP_RST;
  wire IC_TIMESTAMP_RST_i_1_n_0;
  wire [0:31]ID_FOR_MATCH;
  wire ID_MATCH_EN;
  wire ID_MATCH_EN_i_1_n_0;
  wire ID_MATCH_EN_i_2_n_0;
  wire IFF6_EN_FS2;
  wire IFF_EN_FS2;
  wire INDEX_VALID_SIG_i_1_n_0;
  wire [4:0]MATCHED_FILTER_INDEX;
  wire MATCH_RESULT;
  wire MATCH_RESULT_SIG_i_1_n_0;
  wire MATCH_RUNNING_SIG_i_1_n_0;
  wire MSG_ON_CAN_BUS;
  wire MSG_ON_CAN_BUS_AXI_D1;
  wire MSG_ON_CAN_BUS_i_1_n_0;
  wire MSR_LBACK_FS2;
  wire MSR_SNOOP_FS2;
  wire OL_FIFO_RST;
  wire OL_RX_FIFO_FULL;
  wire OL_RX_FIFO_FULL_F1;
  wire [10:0]Q;
  wire [31:0]\RD_DATA_RET_reg[0] ;
  wire [31:0]\RD_DATA_RET_reg[0]_0 ;
  wire RXE_BRS_I_i_1_n_0;
  wire [31:0]\RXE_DATA_STORED_AT_DLC_reg[0] ;
  wire [0:31]RXE_DOUT;
  wire RXE_ESI_I_i_1_n_0;
  wire RXE_FDF_I_i_1_n_0;
  wire RXE_IC_RXOK_I_i_1_n_0;
  wire RXE_IDE_I_i_1_n_0;
  wire RXE_MSGVAL_EARLY_F0;
  wire RXE_MSGVAL_EARLY_F1;
  wire RXE_PASSFLG_I_i_2_n_0;
  wire RXE_RTR_I_i_1_n_0;
  wire RXE_RXFIFO_WEN;
  wire RXE_RXMSG_INVAL_F0;
  wire RXE_RXMSG_INVAL_F1;
  wire RXE_RXMSG_VAL_F0;
  wire RXE_RXMSG_VAL_F1;
  wire RXF_FULL_AT_MSG_BOUNDARY;
  wire RXF_FULL_AT_MSG_BOUNDARY_F1;
  wire [0:0]RXF_FULL_AT_MSG_BOUNDARY_reg;
  wire RXMNF_SET;
  wire RXOK_FS2;
  wire RXOK_FS3;
  wire RXWM_SET;
  wire RXWM_SET_F1;
  wire [10:0]RX_ADDR_M_CC_F1;
  wire SSP_BTL_TXBIT_I_i_1_n_0;
  wire SSP_RCVD_RXBIT_i_1_n_0;
  wire SYNC_RST_TL;
  wire TDCV_CNT_REG_WEN;
  wire TDCV_CNT_REG_WEN_i_1_n_0;
  wire [0:15]TIME_STAMP_CNT;
  wire TIME_STAMP_CNT_REG_WEN_i_1_n_0;
  wire [11:31]TS_RX_WDATA_F1;
  wire TS_RX_WEN;
  wire TS_RX_WEN_F1;
  wire TXEWM_SET;
  wire [10:10]TXE_BRAM_ADDR;
  wire TXE_BRAM_WEN;
  wire [31:0]\TXE_DLC_I_reg[0] ;
  wire TXE_IC_ARBLSS_I_i_1_n_0;
  wire TXE_IC_TXOK_I_i_1_n_0;
  wire TXE_PASSTX_I_i_1_n_0;
  wire TXE_TXING_i_1_n_0;
  wire TXE_TX_REN_D1_i_1_n_0;
  wire TXE_TX_REN_D1_reg;
  wire TXING_BRS_EN_BTR;
  wire ack_s_gate_toggle_i_1_n_0;
  wire addr_location_incr_count_i_1_n_0;
  wire [10:0]addra;
  wire [9:0]addrb;
  wire \bsp/BRS_EN_I_FLAG ;
  wire \bsp/BSP_CRCERR_I_CANFD_FLG ;
  wire \bsp/BSP_CRCERR_I_CANFD_FLG0 ;
  wire \bsp/BSP_CRCERR_I_CAN_FLG ;
  wire \bsp/BSP_CRCERR_I_CAN_FLG0 ;
  wire \bsp/BSP_IDVALID_FD1 ;
  wire \bsp/BSP_IDVALID_FD2 ;
  wire \bsp/BSP_IN_ID_STATE_D1 ;
  wire \bsp/BSP_IN_ID_STATE_I ;
  wire \bsp/CANCEL_BUFFER ;
  wire \bsp/RXE_BRS_I ;
  wire \bsp/RXE_FDF_I ;
  wire \bsp/RXE_IDE_I ;
  wire \bsp/RXE_MSGVAL_FD1 ;
  wire \bsp/RXE_MSGVAL_FD2 ;
  wire \bsp/RXE_PASSFLG_I ;
  wire \bsp/RXE_RTR_I ;
  wire \bsp/RXE_RXFIFO_WEN_FD1 ;
  wire \bsp/RXE_RXFIFO_WEN_FD2 ;
  wire \bsp/TXE_IC_ARBLSS_I ;
  wire \bsp/TXE_MSGVAL_FD1 ;
  wire \bsp/TXE_MSGVAL_FD2 ;
  wire \bsp/TXE_PASSTX_I ;
  wire \bsp/TXE_TXING055_out ;
  wire \bsp/TXE_TX_REN_D1 ;
  wire \bsp/TXE_TX_REN_I ;
  wire \btl/CAN_PHY_RX_D ;
  wire \btl/CAN_PHY_TX_POS_FLOP_X2 ;
  wire \btl/CNTR_EQ_NTQ_I ;
  wire \btl/HSYNC_FLG_I ;
  wire \btl/HSYNC_FLG_I0 ;
  wire \btl/SSP_BTL_TXBIT_I ;
  wire \btl/SSP_RCVD_RXBIT ;
  wire \btl/tdc/TDC_SSP_SAMP_PT ;
  wire can_clk;
  wire can_clk_x2;
  wire can_phy_rx;
  wire can_phy_tx;
  wire dest_rst;
  wire [31:0]dina;
  wire [31:0]doutb;
  wire ena;
  wire enb;
  wire host_req_reg;
  wire \ic/IC_REG_ECR_I0 ;
  wire \ic/IC_REG_ESR_ACKER_FS2 ;
  wire \ic/IC_REG_ESR_ACKER_FS3 ;
  wire \ic/IC_REG_ESR_ACKER_I ;
  wire \ic/IC_REG_ESR_BERR_FS2 ;
  wire \ic/IC_REG_ESR_BERR_FS3 ;
  wire \ic/IC_REG_ESR_BERR_I ;
  wire \ic/IC_REG_ESR_CRCER_FS2 ;
  wire \ic/IC_REG_ESR_CRCER_FS3 ;
  wire \ic/IC_REG_ESR_CRCER_I ;
  wire \ic/IC_REG_ESR_FMER_FS2 ;
  wire \ic/IC_REG_ESR_FMER_FS3 ;
  wire \ic/IC_REG_ESR_FMER_I ;
  wire \ic/IC_REG_ESR_F_BERR_FS2 ;
  wire \ic/IC_REG_ESR_F_BERR_FS3 ;
  wire \ic/IC_REG_ESR_F_BERR_I ;
  wire \ic/IC_REG_ESR_F_CRCER_FS2 ;
  wire \ic/IC_REG_ESR_F_CRCER_FS3 ;
  wire \ic/IC_REG_ESR_F_CRCER_I ;
  wire \ic/IC_REG_ESR_F_FMER_FS2 ;
  wire \ic/IC_REG_ESR_F_FMER_FS3 ;
  wire \ic/IC_REG_ESR_F_FMER_I ;
  wire \ic/IC_REG_ESR_F_STER_FS2 ;
  wire \ic/IC_REG_ESR_F_STER_FS3 ;
  wire \ic/IC_REG_ESR_F_STER_I ;
  wire \ic/IC_REG_ESR_STER_FS2 ;
  wire \ic/IC_REG_ESR_STER_FS3 ;
  wire \ic/IC_REG_ESR_STER_I ;
  wire \ic/IC_REG_ISR_ARBLST_FS2 ;
  wire \ic/IC_REG_ISR_ARBLST_FS3 ;
  wire \ic/IC_REG_ISR_BSOFF_FS2 ;
  wire \ic/IC_REG_ISR_BSOFF_FS3 ;
  wire \ic/IC_REG_ISR_MSGLST_FS2 ;
  wire \ic/IC_REG_ISR_MSGLST_FS2_F1 ;
  wire \ic/IC_REG_ISR_MSGLST_FS2_TXE ;
  wire \ic/IC_REG_ISR_MSGLST_FS3 ;
  wire \ic/IC_REG_ISR_MSGLST_FS3_F1 ;
  wire \ic/IC_REG_ISR_MSGLST_FS3_TXE ;
  wire \ic/IC_REG_ISR_TSCNT_OFLW_I0 ;
  wire \ic/IC_REG_ISR_TXOK_FS2 ;
  wire \ic/IC_REG_ISR_TXOK_FS3 ;
  wire \ic/IC_REG_SR_BSFR_FS2 ;
  wire \ic/IC_REG_SR_PEE_FS2 ;
  wire \ic/IC_REG_SR_SLEEP_FS2 ;
  wire \ic/IC_REG_SR_SLEEP_FS3 ;
  wire \ic/IC_REG_TSR_I0 ;
  wire \ic/IC_SYNC_ECR_WEN_FS2 ;
  wire \ic/IC_SYNC_ECR_WEN_FS3 ;
  wire \ic/IC_SYNC_TSR_WEN_FS2 ;
  wire \ic/IC_SYNC_TSR_WEN_FS3 ;
  wire [31:0]\ic/p_13_in ;
  wire [10:9]\ic/p_14_in ;
  wire [6:6]\ic/p_3_in ;
  wire \ic/p_51_in ;
  wire \ic/p_71_in ;
  wire invalidate_buffer_i_1_n_0;
  wire ip2bus_intrevent;
  wire ol_n_127;
  wire ol_n_18;
  wire ol_n_20;
  wire ol_n_206;
  wire ol_n_210;
  wire ol_n_226;
  wire ol_n_227;
  wire ol_n_228;
  wire ol_n_229;
  wire ol_n_230;
  wire ol_n_231;
  wire ol_n_235;
  wire ol_n_247;
  wire ol_n_248;
  wire ol_n_249;
  wire ol_n_271;
  wire ol_n_310;
  wire ol_n_311;
  wire ol_n_312;
  wire ol_n_313;
  wire ol_n_314;
  wire ol_n_315;
  wire ol_n_316;
  wire ol_n_317;
  wire ol_n_318;
  wire ol_n_319;
  wire ol_n_320;
  wire [6:6]\ol_rbmm/GEN_FIFO_1_CNTL.rxmsg_fifo_cntl_1/wr_index_i_reg ;
  wire [6:6]\ol_rbmm/GEN_FIFO_CNTL.rxmsg_fifo_cntl/wr_index_i_reg ;
  wire \ol_rbmm/GEN_IMM.ol_imm/ACF_VAL_I ;
  wire \ol_rbmm/GEN_IMM.ol_imm/ID_MATCH_EN_D2 ;
  wire \ol_rbmm/GEN_IMM.ol_imm/ack_s_gate_toggle ;
  wire [1:0]\ol_rbmm/GEN_IMM.ol_imm/imm_cs ;
  wire \ol_tbmm/CANCEL_CONFIRMED_OL_D1 ;
  wire \ol_tbmm/TRR_REG_WRITE_PULSE ;
  wire \ol_tbmm/index_valid_sig ;
  wire \ol_tbmm/invalidate_buffer_i ;
  wire \ol_tbmm/ol_nrh/postpone_flag ;
  wire \ol_tbmm/ol_nrh/postpone_flag_2 ;
  wire [1:0]\ol_tbmm/ol_tbs/tbs_cs ;
  wire \ol_tbmm/ol_tbs/trigger_next_round ;
  wire \ol_tbmm/tbs_running_sig ;
  wire \ol_tbmm/tx_event_fifo_cntl/TXE_MSGVAL_D1 ;
  wire \ol_tbmm/tx_event_fifo_cntl/TXE_MSGVAL_D2 ;
  wire \olglue/ID_MATCH_EN_FS ;
  wire \olglue/ID_MATCH_EN_FS_D1 ;
  wire \olglue/sync_tl_rst_n ;
  wire postpone_flag_2_i_1_n_0;
  wire postpone_flag_i_1_n_0;
  wire pr1_rd_req_reg;
  wire s_axi_aclk;
  wire s_axi_arready;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire src_arst;
  wire \timestamp/CLKM_EN_D1 ;
  wire \timestamp/MATCH_RESULT_0_D1 ;
  wire \timestamp/MATCH_RESULT_1_D1 ;
  wire \timestamp/MATCH_RESULT_FS2_D1 ;
  wire \timestamp/MATCH_RESULT_TO_BSP0 ;
  wire \timestamp/TS_COUNTER_SW_RST_D2 ;
  wire tl_n_106;
  wire tl_n_109;
  wire tl_n_110;
  wire tl_n_111;
  wire tl_n_112;
  wire tl_n_113;
  wire tl_n_114;
  wire tl_n_115;
  wire tl_n_116;
  wire tl_n_117;
  wire tl_n_119;
  wire tl_n_120;
  wire tl_n_121;
  wire tl_n_129;
  wire tl_n_131;
  wire tl_n_132;
  wire tl_n_133;
  wire tl_n_134;
  wire tl_n_135;
  wire tl_n_222;
  wire tl_n_223;
  wire tl_n_224;
  wire tl_n_225;
  wire tl_n_228;
  wire tl_n_229;
  wire tl_n_231;
  wire tl_n_232;
  wire tl_n_233;
  wire tl_n_237;
  wire tl_n_238;
  wire tl_n_239;
  wire tl_n_240;
  wire tl_n_241;
  wire tl_n_242;
  wire tl_n_243;
  wire tl_n_244;
  wire tl_n_245;
  wire tl_n_246;
  wire tl_n_247;
  wire tl_n_248;
  wire tl_n_249;
  wire tl_n_250;
  wire tl_n_251;
  wire tl_n_252;
  wire tl_n_253;
  wire tl_n_254;
  wire tl_n_75;
  wire tl_n_76;
  wire tl_n_77;
  wire tl_n_86;
  wire tl_n_90;
  wire [0:0]wea;

  LUT5 #(
    .INIT(32'h51FF5500)) 
    BIS_HSYNC_FLG_I_i_1
       (.I0(tl_n_247),
        .I1(\btl/CAN_PHY_RX_D ),
        .I2(CAN_PHY_RX_I1),
        .I3(CLKM_EN),
        .I4(BIS_HSYNC_FLG_I),
        .O(BIS_HSYNC_FLG_I_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT3 #(
    .INIT(8'hDC)) 
    BSP_CRCERR_I_CANFD_FLG_i_1
       (.I0(tl_n_111),
        .I1(\bsp/BSP_CRCERR_I_CANFD_FLG0 ),
        .I2(\bsp/BSP_CRCERR_I_CANFD_FLG ),
        .O(BSP_CRCERR_I_CANFD_FLG_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT3 #(
    .INIT(8'hDC)) 
    BSP_CRCERR_I_CAN_FLG_i_1
       (.I0(tl_n_111),
        .I1(\bsp/BSP_CRCERR_I_CAN_FLG0 ),
        .I2(\bsp/BSP_CRCERR_I_CAN_FLG ),
        .O(BSP_CRCERR_I_CAN_FLG_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    BSP_IC_ACK_ERROR_I_i_1
       (.I0(tl_n_112),
        .I1(IC_SYNC_ESR_ACKER),
        .O(BSP_IC_ACK_ERROR_I_i_1_n_0));
  LUT6 #(
    .INIT(64'h00A2FFFFFF5D0000)) 
    BSP_IC_BIT_ERROR_I_i_1
       (.I0(tl_n_225),
        .I1(tl_n_245),
        .I2(\bsp/BRS_EN_I_FLAG ),
        .I3(tl_n_241),
        .I4(BTL_SAMP_EN_FD1),
        .I5(IC_SYNC_ESR_BERR),
        .O(BSP_IC_BIT_ERROR_I_i_1_n_0));
  LUT6 #(
    .INIT(64'hD0DDFFFF2F220000)) 
    BSP_IC_CRC_ERROR_I_i_1
       (.I0(tl_n_240),
        .I1(\bsp/BRS_EN_I_FLAG ),
        .I2(tl_n_239),
        .I3(\bsp/BSP_CRCERR_I_CAN_FLG ),
        .I4(BTL_SAMP_EN_FD1),
        .I5(IC_SYNC_ESR_CRCER),
        .O(BSP_IC_CRC_ERROR_I_i_1_n_0));
  LUT6 #(
    .INIT(64'h0054FFFFFFAB0000)) 
    BSP_IC_FRM_ERROR_I_i_1
       (.I0(tl_n_231),
        .I1(\bsp/BRS_EN_I_FLAG ),
        .I2(tl_n_233),
        .I3(tl_n_238),
        .I4(BTL_SAMP_EN_FD1),
        .I5(IC_SYNC_ESR_FMER),
        .O(BSP_IC_FRM_ERROR_I_i_1_n_0));
  LUT6 #(
    .INIT(64'h07FFFFFFF8000000)) 
    BSP_IC_F_BIT_ERROR_I_i_1
       (.I0(tl_n_244),
        .I1(TXING_BRS_EN_BTR),
        .I2(\bsp/BRS_EN_I_FLAG ),
        .I3(BTL_SAMP_EN_FD1),
        .I4(tl_n_232),
        .I5(IC_SYNC_ESR_F_BERR),
        .O(BSP_IC_F_BIT_ERROR_I_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFF7FFF00008000)) 
    BSP_IC_F_CRC_ERROR_I_i_1
       (.I0(BTL_SAMP_EN_FD1),
        .I1(\bsp/BRS_EN_I_FLAG ),
        .I2(tl_n_120),
        .I3(\bsp/BSP_CRCERR_I_CANFD_FLG ),
        .I4(tl_n_250),
        .I5(IC_SYNC_ESR_F_CRCER),
        .O(BSP_IC_F_CRC_ERROR_I_i_1_n_0));
  LUT4 #(
    .INIT(16'hF708)) 
    BSP_IC_F_FRM_ERROR_I_i_1
       (.I0(BTL_SAMP_EN_FD1),
        .I1(\bsp/BRS_EN_I_FLAG ),
        .I2(tl_n_233),
        .I3(IC_SYNC_ESR_F_FMER),
        .O(BSP_IC_F_FRM_ERROR_I_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    BSP_IC_F_STUFF_ERROR_I_i_1
       (.I0(BTL_SAMP_EN_FD1),
        .I1(tl_n_242),
        .I2(\bsp/BRS_EN_I_FLAG ),
        .I3(IC_SYNC_ESR_F_STER),
        .O(BSP_IC_F_STUFF_ERROR_I_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    BSP_IC_STUFF_ERROR_I_i_1
       (.I0(BTL_SAMP_EN_FD1),
        .I1(tl_n_242),
        .I2(\bsp/BRS_EN_I_FLAG ),
        .I3(IC_SYNC_ESR_STER),
        .O(BSP_IC_STUFF_ERROR_I_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    BSP_TXBIT_D1_i_1
       (.I0(BSP_TXBIT_I),
        .I1(BTL_SAMP_EN_FD2),
        .I2(BSP_TXBIT_FD),
        .O(BSP_TXBIT_D1_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    BSP_TXBIT_FD_i_1
       (.I0(BSP_TXBIT_I),
        .I1(BTL_SAMP_EN_FD2),
        .I2(tl_n_75),
        .O(BSP_TXBIT_FD_i_1_n_0));
  LUT3 #(
    .INIT(8'hB8)) 
    BTL_RXBIT_I_i_1
       (.I0(CAN_PHY_RX_I1),
        .I1(BTL_SAMP_EN),
        .I2(BTL_RXBIT),
        .O(BTL_RXBIT_I_i_1_n_0));
  LUT5 #(
    .INIT(32'hAAAA8A88)) 
    CANCEL_CONFIRMED_TL2OL_I_i_1
       (.I0(\bsp/CANCEL_BUFFER ),
        .I1(tl_n_117),
        .I2(tl_n_228),
        .I3(BTL_SAMP_EN_FD1),
        .I4(CANCEL_OR_INVALIDATE_CONFIRMED_TL2OL),
        .O(CANCEL_CONFIRMED_TL2OL_I_i_1_n_0));
  FDRE #(
    .IS_C_INVERTED(1'b1)) 
    CAN_PHY_RX_I_NEG_FLOP_X2_reg
       (.C(can_clk_x2),
        .CE(1'b1),
        .D(ol_n_235),
        .Q(CAN_PHY_RX_I_NEG_FLOP_X2_reg_n_0),
        .R(1'b0));
  FDRE #(
    .IS_C_INVERTED(1'b1)) 
    CAN_PHY_RX_I_NEG_FLOP_reg
       (.C(can_clk),
        .CE(1'b1),
        .D(ol_n_235),
        .Q(CAN_PHY_RX_I_NEG_FLOP),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    CAN_PHY_TX_LP_i_1
       (.I0(tl_n_223),
        .I1(\btl/CAN_PHY_TX_POS_FLOP_X2 ),
        .I2(CAN_PHY_TX_LP),
        .O(CAN_PHY_TX_LP_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE2FFFF)) 
    CAN_PHY_TX_POS_FLOP_X2_i_1
       (.I0(tl_n_76),
        .I1(\btl/CAN_PHY_TX_POS_FLOP_X2 ),
        .I2(tl_n_223),
        .I3(MSR_LBACK_FS2),
        .I4(\olglue/sync_tl_rst_n ),
        .I5(MSR_SNOOP_FS2),
        .O(CAN_PHY_TX_POS_FLOP_X2_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE2FFFF)) 
    CAN_PHY_TX_POS_FLOP_i_1
       (.I0(tl_n_77),
        .I1(\btl/CAN_PHY_TX_POS_FLOP_X2 ),
        .I2(tl_n_223),
        .I3(MSR_LBACK_FS2),
        .I4(\olglue/sync_tl_rst_n ),
        .I5(MSR_SNOOP_FS2),
        .O(CAN_PHY_TX_POS_FLOP_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF8CCC00CC)) 
    HSYNC_FLG_I_i_1
       (.I0(tl_n_229),
        .I1(\btl/HSYNC_FLG_I ),
        .I2(\btl/CNTR_EQ_NTQ_I ),
        .I3(CLKM_EN),
        .I4(tl_n_246),
        .I5(\btl/HSYNC_FLG_I0 ),
        .O(HSYNC_FLG_I_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    \IC_REG_ECR_I[0]_i_2 
       (.I0(\ic/IC_SYNC_ECR_WEN_FS3 ),
        .I1(\ic/IC_SYNC_ECR_WEN_FS2 ),
        .O(\ic/IC_REG_ECR_I0 ));
  LUT6 #(
    .INIT(64'h28AAAAAA28282828)) 
    IC_REG_ESR_ACKER_I_i_1
       (.I0(IC_REG_SRR_CEN_I),
        .I1(\ic/IC_REG_ESR_ACKER_FS2 ),
        .I2(\ic/IC_REG_ESR_ACKER_FS3 ),
        .I3(\ic/p_71_in ),
        .I4(s_axi_wdata[4]),
        .I5(\ic/IC_REG_ESR_ACKER_I ),
        .O(IC_REG_ESR_ACKER_I_i_1_n_0));
  LUT6 #(
    .INIT(64'h28AAAAAA28282828)) 
    IC_REG_ESR_BERR_I_i_1
       (.I0(IC_REG_SRR_CEN_I),
        .I1(\ic/IC_REG_ESR_BERR_FS2 ),
        .I2(\ic/IC_REG_ESR_BERR_FS3 ),
        .I3(\ic/p_71_in ),
        .I4(s_axi_wdata[3]),
        .I5(\ic/IC_REG_ESR_BERR_I ),
        .O(IC_REG_ESR_BERR_I_i_1_n_0));
  LUT6 #(
    .INIT(64'h28AAAAAA28282828)) 
    IC_REG_ESR_CRCER_I_i_1
       (.I0(IC_REG_SRR_CEN_I),
        .I1(\ic/IC_REG_ESR_CRCER_FS2 ),
        .I2(\ic/IC_REG_ESR_CRCER_FS3 ),
        .I3(s_axi_wdata[0]),
        .I4(\ic/p_71_in ),
        .I5(\ic/IC_REG_ESR_CRCER_I ),
        .O(IC_REG_ESR_CRCER_I_i_1_n_0));
  LUT6 #(
    .INIT(64'h28AAAAAA28282828)) 
    IC_REG_ESR_FMER_I_i_1
       (.I0(IC_REG_SRR_CEN_I),
        .I1(\ic/IC_REG_ESR_FMER_FS2 ),
        .I2(\ic/IC_REG_ESR_FMER_FS3 ),
        .I3(\ic/p_71_in ),
        .I4(s_axi_wdata[1]),
        .I5(\ic/IC_REG_ESR_FMER_I ),
        .O(IC_REG_ESR_FMER_I_i_1_n_0));
  LUT6 #(
    .INIT(64'h28AAAAAA28282828)) 
    IC_REG_ESR_F_BERR_I_i_1
       (.I0(IC_REG_SRR_CEN_I),
        .I1(\ic/IC_REG_ESR_F_BERR_FS2 ),
        .I2(\ic/IC_REG_ESR_F_BERR_FS3 ),
        .I3(\ic/p_71_in ),
        .I4(s_axi_wdata[11]),
        .I5(\ic/IC_REG_ESR_F_BERR_I ),
        .O(IC_REG_ESR_F_BERR_I_i_1_n_0));
  LUT6 #(
    .INIT(64'h28AAAAAA28282828)) 
    IC_REG_ESR_F_CRCER_I_i_1
       (.I0(IC_REG_SRR_CEN_I),
        .I1(\ic/IC_REG_ESR_F_CRCER_FS2 ),
        .I2(\ic/IC_REG_ESR_F_CRCER_FS3 ),
        .I3(\ic/p_71_in ),
        .I4(s_axi_wdata[8]),
        .I5(\ic/IC_REG_ESR_F_CRCER_I ),
        .O(IC_REG_ESR_F_CRCER_I_i_1_n_0));
  LUT6 #(
    .INIT(64'h28AAAAAA28282828)) 
    IC_REG_ESR_F_FMER_I_i_1
       (.I0(IC_REG_SRR_CEN_I),
        .I1(\ic/IC_REG_ESR_F_FMER_FS2 ),
        .I2(\ic/IC_REG_ESR_F_FMER_FS3 ),
        .I3(\ic/p_71_in ),
        .I4(s_axi_wdata[9]),
        .I5(\ic/IC_REG_ESR_F_FMER_I ),
        .O(IC_REG_ESR_F_FMER_I_i_1_n_0));
  LUT6 #(
    .INIT(64'h28AAAAAA28282828)) 
    IC_REG_ESR_F_STER_I_i_1
       (.I0(IC_REG_SRR_CEN_I),
        .I1(\ic/IC_REG_ESR_F_STER_FS2 ),
        .I2(\ic/IC_REG_ESR_F_STER_FS3 ),
        .I3(\ic/p_71_in ),
        .I4(s_axi_wdata[10]),
        .I5(\ic/IC_REG_ESR_F_STER_I ),
        .O(IC_REG_ESR_F_STER_I_i_1_n_0));
  LUT6 #(
    .INIT(64'h28AAAAAA28282828)) 
    IC_REG_ESR_STER_I_i_1
       (.I0(IC_REG_SRR_CEN_I),
        .I1(\ic/IC_REG_ESR_STER_FS2 ),
        .I2(\ic/IC_REG_ESR_STER_FS3 ),
        .I3(\ic/p_71_in ),
        .I4(s_axi_wdata[2]),
        .I5(\ic/IC_REG_ESR_STER_I ),
        .O(IC_REG_ESR_STER_I_i_1_n_0));
  LUT6 #(
    .INIT(64'h28AAAAAA28282828)) 
    IC_REG_ISR_ARBLST_I_i_1
       (.I0(IC_REG_SRR_CEN_I),
        .I1(\ic/IC_REG_ISR_ARBLST_FS3 ),
        .I2(\ic/IC_REG_ISR_ARBLST_FS2 ),
        .I3(s_axi_wdata[0]),
        .I4(\ic/p_51_in ),
        .I5(\ic/p_13_in [0]),
        .O(IC_REG_ISR_ARBLST_I_i_1_n_0));
  LUT6 #(
    .INIT(64'h08AAAAAA08080808)) 
    IC_REG_ISR_BSFRD_I_i_1
       (.I0(IC_REG_SRR_CEN_I),
        .I1(\ic/p_14_in [10]),
        .I2(\ic/IC_REG_SR_BSFR_FS2 ),
        .I3(\ic/p_51_in ),
        .I4(s_axi_wdata[3]),
        .I5(\ic/p_13_in [3]),
        .O(IC_REG_ISR_BSFRD_I_i_1_n_0));
  LUT6 #(
    .INIT(64'h08AAAAAA08080808)) 
    IC_REG_ISR_BSOFF_I_i_1
       (.I0(IC_REG_SRR_CEN_I),
        .I1(\ic/IC_REG_ISR_BSOFF_FS2 ),
        .I2(\ic/IC_REG_ISR_BSOFF_FS3 ),
        .I3(\ic/p_51_in ),
        .I4(s_axi_wdata[9]),
        .I5(\ic/p_13_in [9]),
        .O(IC_REG_ISR_BSOFF_I_i_1_n_0));
  LUT5 #(
    .INIT(32'hAA2AAA00)) 
    IC_REG_ISR_ERROR_I_i_1
       (.I0(IC_REG_SRR_CEN_I),
        .I1(s_axi_wdata[8]),
        .I2(\ic/p_51_in ),
        .I3(IC_REG_ISR_ERROR_I10_out),
        .I4(\ic/p_13_in [8]),
        .O(IC_REG_ISR_ERROR_I_i_1_n_0));
  LUT6 #(
    .INIT(64'h28AAAAAA28282828)) 
    IC_REG_ISR_MSGLST_I_F1_i_1
       (.I0(IC_REG_SRR_CEN_I),
        .I1(\ic/IC_REG_ISR_MSGLST_FS3_F1 ),
        .I2(\ic/IC_REG_ISR_MSGLST_FS2_F1 ),
        .I3(\ic/p_51_in ),
        .I4(s_axi_wdata[15]),
        .I5(\ic/p_13_in [15]),
        .O(IC_REG_ISR_MSGLST_I_F1_i_1_n_0));
  LUT6 #(
    .INIT(64'h28AAAAAA28282828)) 
    IC_REG_ISR_MSGLST_I_TXE_i_1
       (.I0(IC_REG_SRR_CEN_I),
        .I1(\ic/IC_REG_ISR_MSGLST_FS3_TXE ),
        .I2(\ic/IC_REG_ISR_MSGLST_FS2_TXE ),
        .I3(\ic/p_51_in ),
        .I4(s_axi_wdata[30]),
        .I5(\ic/p_13_in [30]),
        .O(IC_REG_ISR_MSGLST_I_TXE_i_1_n_0));
  LUT6 #(
    .INIT(64'h28AAAAAA28282828)) 
    IC_REG_ISR_MSGLST_I_i_1
       (.I0(IC_REG_SRR_CEN_I),
        .I1(\ic/IC_REG_ISR_MSGLST_FS3 ),
        .I2(\ic/IC_REG_ISR_MSGLST_FS2 ),
        .I3(\ic/p_51_in ),
        .I4(s_axi_wdata[6]),
        .I5(\ic/p_13_in [6]),
        .O(IC_REG_ISR_MSGLST_I_i_1_n_0));
  LUT6 #(
    .INIT(64'h08AAAAAA08080808)) 
    IC_REG_ISR_PEE_I_i_1
       (.I0(IC_REG_SRR_CEN_I),
        .I1(\ic/IC_REG_SR_PEE_FS2 ),
        .I2(\ic/p_14_in [9]),
        .I3(s_axi_wdata[2]),
        .I4(\ic/p_51_in ),
        .I5(\ic/p_13_in [2]),
        .O(IC_REG_ISR_PEE_I_i_1_n_0));
  LUT5 #(
    .INIT(32'h8AAA8888)) 
    IC_REG_ISR_RXMNF_I_i_1
       (.I0(IC_REG_SRR_CEN_I),
        .I1(RXMNF_SET),
        .I2(s_axi_wdata[17]),
        .I3(\ic/p_51_in ),
        .I4(\ic/p_13_in [17]),
        .O(IC_REG_ISR_RXMNF_I_i_1_n_0));
  LUT6 #(
    .INIT(64'h28AAAAAA28282828)) 
    IC_REG_ISR_RXOK_I_i_1
       (.I0(IC_REG_SRR_CEN_I),
        .I1(RXOK_FS3),
        .I2(RXOK_FS2),
        .I3(s_axi_wdata[4]),
        .I4(\ic/p_51_in ),
        .I5(\ic/p_13_in [4]),
        .O(IC_REG_ISR_RXOK_I_i_1_n_0));
  LUT5 #(
    .INIT(32'h8FFF8888)) 
    IC_REG_ISR_RXWM_I_F1_i_1
       (.I0(RXWM_SET_F1),
        .I1(IC_REG_SRR_CEN_I),
        .I2(s_axi_wdata[16]),
        .I3(\ic/p_51_in ),
        .I4(\ic/p_13_in [16]),
        .O(IC_REG_ISR_RXWM_I_F1_i_1_n_0));
  LUT5 #(
    .INIT(32'h8FFF8888)) 
    IC_REG_ISR_RXWM_I_i_1
       (.I0(RXWM_SET),
        .I1(IC_REG_SRR_CEN_I),
        .I2(s_axi_wdata[12]),
        .I3(\ic/p_51_in ),
        .I4(\ic/p_13_in [12]),
        .O(IC_REG_ISR_RXWM_I_i_1_n_0));
  LUT6 #(
    .INIT(64'h08AAAAAA08080808)) 
    IC_REG_ISR_SLEEP_I_i_1
       (.I0(IC_REG_SRR_CEN_I),
        .I1(\ic/IC_REG_SR_SLEEP_FS2 ),
        .I2(\ic/IC_REG_SR_SLEEP_FS3 ),
        .I3(s_axi_wdata[10]),
        .I4(\ic/p_51_in ),
        .I5(\ic/p_13_in [10]),
        .O(IC_REG_ISR_SLEEP_I_i_1_n_0));
  LUT5 #(
    .INIT(32'hFF2AFF00)) 
    IC_REG_ISR_TSCNT_OFLW_I_i_1
       (.I0(IC_REG_SRR_CEN_I),
        .I1(\ic/p_51_in ),
        .I2(s_axi_wdata[5]),
        .I3(\ic/IC_REG_ISR_TSCNT_OFLW_I0 ),
        .I4(\ic/p_13_in [5]),
        .O(IC_REG_ISR_TSCNT_OFLW_I_i_1_n_0));
  LUT6 #(
    .INIT(64'hFEFFFFFFFEFEFEFE)) 
    IC_REG_ISR_TXCRS_I_i_1
       (.I0(ol_n_230),
        .I1(ol_n_231),
        .I2(ol_n_229),
        .I3(s_axi_wdata[14]),
        .I4(\ic/p_51_in ),
        .I5(\ic/p_13_in [14]),
        .O(IC_REG_ISR_TXCRS_I_i_1_n_0));
  LUT5 #(
    .INIT(32'h8FFF8888)) 
    IC_REG_ISR_TXEWM_I_i_1
       (.I0(TXEWM_SET),
        .I1(IC_REG_SRR_CEN_I),
        .I2(s_axi_wdata[31]),
        .I3(\ic/p_51_in ),
        .I4(\ic/p_13_in [31]),
        .O(IC_REG_ISR_TXEWM_I_i_1_n_0));
  LUT6 #(
    .INIT(64'h28AAAAAA28282828)) 
    IC_REG_ISR_TXOK_I_i_1
       (.I0(IC_REG_SRR_CEN_I),
        .I1(\ic/IC_REG_ISR_TXOK_FS3 ),
        .I2(\ic/IC_REG_ISR_TXOK_FS2 ),
        .I3(s_axi_wdata[1]),
        .I4(\ic/p_51_in ),
        .I5(\ic/p_13_in [1]),
        .O(IC_REG_ISR_TXOK_I_i_1_n_0));
  LUT6 #(
    .INIT(64'hFEFFFFFFFEFEFEFE)) 
    IC_REG_ISR_TXTRS_I_i_1
       (.I0(ol_n_227),
        .I1(ol_n_228),
        .I2(ol_n_226),
        .I3(s_axi_wdata[13]),
        .I4(\ic/p_51_in ),
        .I5(\ic/p_13_in [13]),
        .O(IC_REG_ISR_TXTRS_I_i_1_n_0));
  LUT6 #(
    .INIT(64'h20AAAAAA20202020)) 
    IC_REG_ISR_WKUP_I_i_1
       (.I0(IC_REG_SRR_CEN_I),
        .I1(\ic/IC_REG_SR_SLEEP_FS2 ),
        .I2(\ic/IC_REG_SR_SLEEP_FS3 ),
        .I3(s_axi_wdata[11]),
        .I4(\ic/p_51_in ),
        .I5(\ic/p_13_in [11]),
        .O(IC_REG_ISR_WKUP_I_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFF2000FFFF0000)) 
    IC_REG_MSR_SBR_I_i_2
       (.I0(s_axi_wdata[6]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\ic/IC_REG_ISR_BSOFF_FS2 ),
        .I4(\ic/p_3_in ),
        .I5(ol_n_127),
        .O(IC_REG_MSR_SBR_I_i_2_n_0));
  LUT5 #(
    .INIT(32'hFFFB0008)) 
    IC_REG_SRR_CEN_I_i_1
       (.I0(s_axi_wdata[1]),
        .I1(ol_n_127),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(IC_REG_SRR_CEN_I),
        .O(IC_REG_SRR_CEN_I_i_1_n_0));
  LUT5 #(
    .INIT(32'hFFFB0008)) 
    IC_REG_SRR_SRST_I_i_1
       (.I0(s_axi_wdata[0]),
        .I1(ol_n_127),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(IC_REG_SRR_SRST),
        .O(IC_REG_SRR_SRST_I_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    \IC_REG_TSR_I[0]_i_1 
       (.I0(\ic/IC_SYNC_TSR_WEN_FS3 ),
        .I1(\ic/IC_SYNC_TSR_WEN_FS2 ),
        .O(\ic/IC_REG_TSR_I0 ));
  LUT6 #(
    .INIT(64'hFFFFABFF00005400)) 
    IC_SYNC_ISR_MSGLST_F1_i_1
       (.I0(\timestamp/MATCH_RESULT_1_D1 ),
        .I1(RXF_FULL_AT_MSG_BOUNDARY),
        .I2(OL_RX_FIFO_FULL_F1),
        .I3(\timestamp/MATCH_RESULT_FS2_D1 ),
        .I4(tl_n_253),
        .I5(IC_SYNC_ISR_MSGLST_F1),
        .O(IC_SYNC_ISR_MSGLST_F1_i_1_n_0));
  LUT5 #(
    .INIT(32'hDFFF2000)) 
    IC_SYNC_ISR_MSGLST_i_1
       (.I0(\bsp/TXE_MSGVAL_FD1 ),
        .I1(\bsp/TXE_MSGVAL_FD2 ),
        .I2(ol_n_249),
        .I3(ol_n_18),
        .I4(IC_SYNC_ISR_MSGLST_TXE),
        .O(IC_SYNC_ISR_MSGLST_i_1_n_0));
  LUT6 #(
    .INIT(64'hABFFFFFF54000000)) 
    IC_SYNC_ISR_MSGLST_i_1__0
       (.I0(\timestamp/MATCH_RESULT_0_D1 ),
        .I1(OL_RX_FIFO_FULL),
        .I2(RXF_FULL_AT_MSG_BOUNDARY),
        .I3(\timestamp/MATCH_RESULT_FS2_D1 ),
        .I4(tl_n_253),
        .I5(IC_SYNC_ISR_MSGLST),
        .O(IC_SYNC_ISR_MSGLST_i_1__0_n_0));
  LUT6 #(
    .INIT(64'hFF7FFFFF00800000)) 
    IC_TIMESTAMP_RST_i_1
       (.I0(ol_n_206),
        .I1(IC_IPSIG_WRITE_I),
        .I2(s_axi_wdata[0]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(IC_TIMESTAMP_RST),
        .O(IC_TIMESTAMP_RST_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    ID_MATCH_EN_i_1
       (.I0(\bsp/BSP_IDVALID_FD1 ),
        .I1(\bsp/BSP_IDVALID_FD2 ),
        .O(ID_MATCH_EN_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    ID_MATCH_EN_i_2
       (.I0(ID_MATCH_EN),
        .O(ID_MATCH_EN_i_2_n_0));
  LUT4 #(
    .INIT(16'h8F88)) 
    INDEX_VALID_SIG_i_1
       (.I0(\ol_tbmm/ol_tbs/tbs_cs [0]),
        .I1(\ol_tbmm/ol_tbs/tbs_cs [1]),
        .I2(\ol_tbmm/ol_tbs/trigger_next_round ),
        .I3(\ol_tbmm/index_valid_sig ),
        .O(INDEX_VALID_SIG_i_1_n_0));
  LUT4 #(
    .INIT(16'hEBAA)) 
    MATCH_RESULT_SIG_i_1
       (.I0(\ol_rbmm/GEN_IMM.ol_imm/ACF_VAL_I ),
        .I1(\olglue/ID_MATCH_EN_FS ),
        .I2(\olglue/ID_MATCH_EN_FS_D1 ),
        .I3(MATCH_RESULT),
        .O(MATCH_RESULT_SIG_i_1_n_0));
  LUT4 #(
    .INIT(16'hABA8)) 
    MATCH_RUNNING_SIG_i_1
       (.I0(ol_n_20),
        .I1(\ol_rbmm/GEN_IMM.ol_imm/imm_cs [0]),
        .I2(\ol_rbmm/GEN_IMM.ol_imm/imm_cs [1]),
        .I3(\ol_rbmm/GEN_IMM.ol_imm/ID_MATCH_EN_D2 ),
        .O(MATCH_RUNNING_SIG_i_1_n_0));
  LUT4 #(
    .INIT(16'h8C88)) 
    MSG_ON_CAN_BUS_i_1
       (.I0(tl_n_90),
        .I1(tl_n_86),
        .I2(CANCEL_OR_INVALIDATE_CONFIRMED_TL2OL),
        .I3(MSG_ON_CAN_BUS),
        .O(MSG_ON_CAN_BUS_i_1_n_0));
  LUT6 #(
    .INIT(64'hBA8A000000000000)) 
    RXE_BRS_I_i_1
       (.I0(\bsp/RXE_BRS_I ),
        .I1(tl_n_243),
        .I2(BTL_SAMP_EN_FD1),
        .I3(BTL_RXBIT),
        .I4(\bsp/RXE_FDF_I ),
        .I5(\olglue/sync_tl_rst_n ),
        .O(RXE_BRS_I_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    \RXE_DATA_STORED_AT_DLC[0]_i_3 
       (.I0(\bsp/RXE_RXFIFO_WEN_FD1 ),
        .I1(\bsp/RXE_RXFIFO_WEN_FD2 ),
        .O(RXE_RXFIFO_WEN));
  LUT6 #(
    .INIT(64'h00000000BAAA8AAA)) 
    RXE_ESI_I_i_1
       (.I0(tl_n_106),
        .I1(tl_n_114),
        .I2(BTL_SAMP_EN_FD1),
        .I3(tl_n_120),
        .I4(BTL_RXBIT),
        .I5(ol_n_247),
        .O(RXE_ESI_I_i_1_n_0));
  LUT5 #(
    .INIT(32'hFFBF0080)) 
    RXE_FDF_I_i_1
       (.I0(BTL_RXBIT),
        .I1(tl_n_113),
        .I2(BTL_SAMP_EN_FD1),
        .I3(tl_n_248),
        .I4(\bsp/RXE_FDF_I ),
        .O(RXE_FDF_I_i_1_n_0));
  LUT3 #(
    .INIT(8'hB4)) 
    RXE_IC_RXOK_I_i_1
       (.I0(\bsp/RXE_MSGVAL_FD2 ),
        .I1(\bsp/RXE_MSGVAL_FD1 ),
        .I2(IC_SYNC_ISR_RXOK),
        .O(RXE_IC_RXOK_I_i_1_n_0));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    RXE_IDE_I_i_1
       (.I0(BTL_RXBIT),
        .I1(tl_n_237),
        .I2(BTL_SAMP_EN_FD1),
        .I3(tl_n_110),
        .I4(tl_n_113),
        .I5(\bsp/RXE_IDE_I ),
        .O(RXE_IDE_I_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF01100000)) 
    RXE_PASSFLG_I_i_2
       (.I0(tl_n_115),
        .I1(tl_n_224),
        .I2(BTL_RXBIT),
        .I3(tl_n_222),
        .I4(BTL_SAMP_EN_FD1),
        .I5(\bsp/RXE_PASSFLG_I ),
        .O(RXE_PASSFLG_I_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    RXE_RTR_I_i_1
       (.I0(BTL_RXBIT),
        .I1(BTL_SAMP_EN_FD1),
        .I2(tl_n_110),
        .I3(tl_n_113),
        .I4(tl_n_251),
        .I5(\bsp/RXE_RTR_I ),
        .O(RXE_RTR_I_i_1_n_0));
  LUT3 #(
    .INIT(8'hB8)) 
    SSP_BTL_TXBIT_I_i_1
       (.I0(tl_n_254),
        .I1(\btl/tdc/TDC_SSP_SAMP_PT ),
        .I2(\btl/SSP_BTL_TXBIT_I ),
        .O(SSP_BTL_TXBIT_I_i_1_n_0));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    SSP_RCVD_RXBIT_i_1
       (.I0(CAN_PHY_RX_I_NEG_FLOP),
        .I1(IFF_EN_FS2),
        .I2(CAN_PHY_RX_I_NEG_FLOP_X2_reg_n_0),
        .I3(\btl/tdc/TDC_SSP_SAMP_PT ),
        .I4(\btl/SSP_RCVD_RXBIT ),
        .O(SSP_RCVD_RXBIT_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFF700000008)) 
    TDCV_CNT_REG_WEN_i_1
       (.I0(tl_n_90),
        .I1(BTL_SAMP_EN_FD1),
        .I2(tl_n_114),
        .I3(tl_n_119),
        .I4(tl_n_116),
        .I5(TDCV_CNT_REG_WEN),
        .O(TDCV_CNT_REG_WEN_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    \TIME_STAMP_CNT_CAPTURE[0]_i_1 
       (.I0(\bsp/BSP_IN_ID_STATE_I ),
        .I1(\bsp/BSP_IN_ID_STATE_D1 ),
        .O(BSP_IN_ID_STATE));
  LUT3 #(
    .INIT(8'h1E)) 
    TIME_STAMP_CNT_REG_WEN_i_1
       (.I0(\timestamp/TS_COUNTER_SW_RST_D2 ),
        .I1(\timestamp/CLKM_EN_D1 ),
        .I2(IC_SYNC_TSR_WEN),
        .O(TIME_STAMP_CNT_REG_WEN_i_1_n_0));
  LUT3 #(
    .INIT(8'h78)) 
    TXE_IC_ARBLSS_I_i_1
       (.I0(BTL_SAMP_EN_FD1),
        .I1(tl_n_109),
        .I2(\bsp/TXE_IC_ARBLSS_I ),
        .O(TXE_IC_ARBLSS_I_i_1_n_0));
  LUT3 #(
    .INIT(8'hB4)) 
    TXE_IC_TXOK_I_i_1
       (.I0(\bsp/TXE_MSGVAL_FD2 ),
        .I1(\bsp/TXE_MSGVAL_FD1 ),
        .I2(IC_SYNC_ISR_TXOK),
        .O(TXE_IC_TXOK_I_i_1_n_0));
  LUT5 #(
    .INIT(32'h2FFF2000)) 
    TXE_PASSTX_I_i_1
       (.I0(tl_n_90),
        .I1(tl_n_129),
        .I2(tl_n_121),
        .I3(BTL_RXBIT),
        .I4(\bsp/TXE_PASSTX_I ),
        .O(TXE_PASSTX_I_i_1_n_0));
  LUT5 #(
    .INIT(32'hF0F7F0F0)) 
    TXE_TXING_i_1
       (.I0(BTL_SAMP_EN_FD1),
        .I1(tl_n_109),
        .I2(\bsp/TXE_TXING055_out ),
        .I3(tl_n_249),
        .I4(tl_n_90),
        .O(TXE_TXING_i_1_n_0));
  LUT3 #(
    .INIT(8'hB8)) 
    TXE_TX_REN_D1_i_1
       (.I0(\bsp/TXE_TX_REN_I ),
        .I1(BTL_SAMP_EN_FD2),
        .I2(\bsp/TXE_TX_REN_D1 ),
        .O(TXE_TX_REN_D1_i_1_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    ack_s_gate_toggle_i_1
       (.I0(ACK_S_SIG_IMM),
        .I1(\ol_rbmm/GEN_IMM.ol_imm/ack_s_gate_toggle ),
        .O(ack_s_gate_toggle_i_1_n_0));
  LUT3 #(
    .INIT(8'h1E)) 
    addr_location_incr_count_i_1
       (.I0(\ol_tbmm/tx_event_fifo_cntl/TXE_MSGVAL_D2 ),
        .I1(\ol_tbmm/tx_event_fifo_cntl/TXE_MSGVAL_D1 ),
        .I2(TXE_BRAM_ADDR),
        .O(addr_location_incr_count_i_1_n_0));
  LUT3 #(
    .INIT(8'hB8)) 
    can_phy_tx_INST_0
       (.I0(tl_n_77),
        .I1(IFF6_EN_FS2),
        .I2(tl_n_76),
        .O(can_phy_tx));
  LUT6 #(
    .INIT(64'h4444440400440000)) 
    invalidate_buffer_i_1
       (.I0(MSG_ON_CAN_BUS_AXI_D1),
        .I1(\ol_tbmm/index_valid_sig ),
        .I2(\ol_tbmm/CANCEL_CONFIRMED_OL_D1 ),
        .I3(BSP_IN_IFSPACE_OL),
        .I4(ol_n_210),
        .I5(\ol_tbmm/invalidate_buffer_i ),
        .O(invalidate_buffer_i_1_n_0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_ol_top ol
       (.ACF_VAL_I(\ol_rbmm/GEN_IMM.ol_imm/ACF_VAL_I ),
        .ACK_S_SIG_IMM(ACK_S_SIG_IMM),
        .ADDR_M_CC(ADDR_M_CC),
        .\ADDR_RET_reg[0] (\ADDR_RET_reg[0] ),
        .\ADDR_RET_reg[2] (Q),
        .\ADDR_RET_reg[8] (ol_n_206),
        .BSP_IN_EOF(BSP_IN_EOF),
        .BSP_IN_IFSPACE(BSP_IN_IFSPACE),
        .BSP_IN_IFSPACE_OL(BSP_IN_IFSPACE_OL),
        .Bus2IP_CS(Bus2IP_CS),
        .Bus2IP_RNW(Bus2IP_RNW),
        .CANCEL_CONFIRMED_OL_D1(\ol_tbmm/CANCEL_CONFIRMED_OL_D1 ),
        .CANCEL_OR_INVALIDATE_CONFIRMED_TL2OL(CANCEL_OR_INVALIDATE_CONFIRMED_TL2OL),
        .CO(tl_n_252),
        .D(D),
        .E(\ic/IC_REG_ECR_I0 ),
        .E_DATA_ACK(E_DATA_ACK),
        .\FSM_sequential_tbs_cs_reg[1] (\ol_tbmm/ol_tbs/tbs_cs ),
        .IC_IPSIG_WRITE_I(IC_IPSIG_WRITE_I),
        .IC_IPSIG_WRITE_I_reg(ol_n_127),
        .\IC_REG_BRPR_I_reg[0] ({IC_REG_BRPR[0],IC_REG_BRPR[1],IC_REG_BRPR[2],IC_REG_BRPR[3],IC_REG_BRPR[4],IC_REG_BRPR[5],IC_REG_BRPR[6],IC_REG_BRPR[7]}),
        .IC_REG_ESR_ACKER_FS3(\ic/IC_REG_ESR_ACKER_FS3 ),
        .IC_REG_ESR_ACKER_I(\ic/IC_REG_ESR_ACKER_I ),
        .IC_REG_ESR_ACKER_I_reg(IC_REG_ESR_ACKER_I_i_1_n_0),
        .IC_REG_ESR_BERR_FS3(\ic/IC_REG_ESR_BERR_FS3 ),
        .IC_REG_ESR_BERR_I(\ic/IC_REG_ESR_BERR_I ),
        .IC_REG_ESR_BERR_I_reg(IC_REG_ESR_BERR_I_i_1_n_0),
        .IC_REG_ESR_CRCER_FS3(\ic/IC_REG_ESR_CRCER_FS3 ),
        .IC_REG_ESR_CRCER_I(\ic/IC_REG_ESR_CRCER_I ),
        .IC_REG_ESR_CRCER_I_reg(IC_REG_ESR_CRCER_I_i_1_n_0),
        .IC_REG_ESR_FMER_FS3(\ic/IC_REG_ESR_FMER_FS3 ),
        .IC_REG_ESR_FMER_I(\ic/IC_REG_ESR_FMER_I ),
        .IC_REG_ESR_FMER_I_reg(IC_REG_ESR_FMER_I_i_1_n_0),
        .IC_REG_ESR_F_BERR_FS3(\ic/IC_REG_ESR_F_BERR_FS3 ),
        .IC_REG_ESR_F_BERR_I(\ic/IC_REG_ESR_F_BERR_I ),
        .IC_REG_ESR_F_BERR_I_reg(IC_REG_ESR_F_BERR_I_i_1_n_0),
        .IC_REG_ESR_F_CRCER_FS3(\ic/IC_REG_ESR_F_CRCER_FS3 ),
        .IC_REG_ESR_F_CRCER_I(\ic/IC_REG_ESR_F_CRCER_I ),
        .IC_REG_ESR_F_CRCER_I_reg(IC_REG_ESR_F_CRCER_I_i_1_n_0),
        .IC_REG_ESR_F_FMER_FS3(\ic/IC_REG_ESR_F_FMER_FS3 ),
        .IC_REG_ESR_F_FMER_I(\ic/IC_REG_ESR_F_FMER_I ),
        .IC_REG_ESR_F_FMER_I_reg(IC_REG_ESR_F_FMER_I_i_1_n_0),
        .IC_REG_ESR_F_STER_FS3(\ic/IC_REG_ESR_F_STER_FS3 ),
        .IC_REG_ESR_F_STER_I(\ic/IC_REG_ESR_F_STER_I ),
        .IC_REG_ESR_F_STER_I_reg(IC_REG_ESR_F_STER_I_i_1_n_0),
        .IC_REG_ESR_STER_FS3(\ic/IC_REG_ESR_STER_FS3 ),
        .IC_REG_ESR_STER_I(\ic/IC_REG_ESR_STER_I ),
        .IC_REG_ESR_STER_I_reg(IC_REG_ESR_STER_I_i_1_n_0),
        .\IC_REG_F_BRPR_I_reg[15] ({IC_REG_F_BRPR_TDC_EN,IC_REG_F_BRPR_TDCOFF[0],IC_REG_F_BRPR_TDCOFF[1],IC_REG_F_BRPR_TDCOFF[2],IC_REG_F_BRPR_TDCOFF[3],IC_REG_F_BRPR_TDCOFF[4],IC_REG_F_BRPR_TDCOFF[5],IC_REG_F_BRPR[0],IC_REG_F_BRPR[1],IC_REG_F_BRPR[2],IC_REG_F_BRPR[3],IC_REG_F_BRPR[4],IC_REG_F_BRPR[5],IC_REG_F_BRPR[6],IC_REG_F_BRPR[7]}),
        .\IC_REG_F_BTR_SJW_I_reg[0] ({IC_REG_F_BTR_SJW[0],IC_REG_F_BTR_SJW[1],IC_REG_F_BTR_SJW[2],IC_REG_F_BTR_SJW[3]}),
        .\IC_REG_F_BTR_TS1_I_reg[0] ({IC_REG_F_BTR_TS1[0],IC_REG_F_BTR_TS1[1],IC_REG_F_BTR_TS1[2],IC_REG_F_BTR_TS1[3],IC_REG_F_BTR_TS1[4]}),
        .\IC_REG_F_BTR_TS2_I_reg[0] ({IC_REG_F_BTR_TS2[0],IC_REG_F_BTR_TS2[1],IC_REG_F_BTR_TS2[2],IC_REG_F_BTR_TS2[3]}),
        .\IC_REG_IECRS_I_reg[3] (ol_n_230),
        .\IC_REG_IECRS_I_reg[8] (ol_n_231),
        .\IC_REG_IFF_EN_I_reg[5] ({IC_REG_IFF_EN[5],IC_REG_IFF_EN[6],IC_REG_IFF_EN[7]}),
        .IC_REG_ISR_ARBLST_FS3(\ic/IC_REG_ISR_ARBLST_FS3 ),
        .IC_REG_ISR_ARBLST_I_reg(IC_REG_ISR_ARBLST_I_i_1_n_0),
        .IC_REG_ISR_BSFRD_I_reg(IC_REG_ISR_BSFRD_I_i_1_n_0),
        .IC_REG_ISR_BSOFF_FS3(\ic/IC_REG_ISR_BSOFF_FS3 ),
        .IC_REG_ISR_BSOFF_I_reg(IC_REG_ISR_BSOFF_I_i_1_n_0),
        .IC_REG_ISR_ERROR_I10_out(IC_REG_ISR_ERROR_I10_out),
        .IC_REG_ISR_ERROR_I_reg(IC_REG_ISR_ERROR_I_i_1_n_0),
        .IC_REG_ISR_MSGLST_FS3(\ic/IC_REG_ISR_MSGLST_FS3 ),
        .IC_REG_ISR_MSGLST_FS3_F1(\ic/IC_REG_ISR_MSGLST_FS3_F1 ),
        .IC_REG_ISR_MSGLST_FS3_TXE(\ic/IC_REG_ISR_MSGLST_FS3_TXE ),
        .IC_REG_ISR_MSGLST_I_F1_reg(IC_REG_ISR_MSGLST_I_F1_i_1_n_0),
        .IC_REG_ISR_MSGLST_I_TXE_reg(IC_REG_ISR_MSGLST_I_TXE_i_1_n_0),
        .IC_REG_ISR_MSGLST_I_reg(IC_REG_ISR_MSGLST_I_i_1_n_0),
        .IC_REG_ISR_PEE_I_reg(IC_REG_ISR_PEE_I_i_1_n_0),
        .IC_REG_ISR_RXMNF_I_reg(IC_REG_ISR_RXMNF_I_i_1_n_0),
        .IC_REG_ISR_RXOK_I_reg(IC_REG_ISR_RXOK_I_i_1_n_0),
        .IC_REG_ISR_RXWM_I_F1_reg(IC_REG_ISR_RXWM_I_F1_i_1_n_0),
        .IC_REG_ISR_RXWM_I_reg(IC_REG_ISR_RXWM_I_i_1_n_0),
        .IC_REG_ISR_SLEEP_I_reg(IC_REG_ISR_SLEEP_I_i_1_n_0),
        .IC_REG_ISR_TSCNT_OFLW_I0(\ic/IC_REG_ISR_TSCNT_OFLW_I0 ),
        .IC_REG_ISR_TSCNT_OFLW_I_reg(IC_REG_ISR_TSCNT_OFLW_I_i_1_n_0),
        .IC_REG_ISR_TXCRS_I_reg(IC_REG_ISR_TXCRS_I_i_1_n_0),
        .IC_REG_ISR_TXEWM_I_reg(IC_REG_ISR_TXEWM_I_i_1_n_0),
        .IC_REG_ISR_TXOK_FS3(\ic/IC_REG_ISR_TXOK_FS3 ),
        .IC_REG_ISR_TXOK_I_reg(IC_REG_ISR_TXOK_I_i_1_n_0),
        .IC_REG_ISR_TXTRS_I_reg(IC_REG_ISR_TXTRS_I_i_1_n_0),
        .IC_REG_ISR_WKUP_I_reg(IC_REG_ISR_WKUP_I_i_1_n_0),
        .IC_REG_MSR_BRSD_I_reg(IC_REG_MSR_BRSD),
        .IC_REG_MSR_DAR_I_reg(IC_REG_MSR_DAR),
        .IC_REG_MSR_DPEE_I_reg(IC_REG_MSR_DPEE),
        .IC_REG_MSR_LBACK(IC_REG_MSR_LBACK),
        .IC_REG_MSR_SBR_I_reg(\ic/p_3_in ),
        .IC_REG_MSR_SBR_I_reg_0(IC_REG_MSR_SBR_I_i_2_n_0),
        .IC_REG_MSR_SLEEP_reg(IC_REG_MSR_SLEEP),
        .\IC_REG_N_BTR_SJW_I_reg[0] ({IC_REG_N_BTR_SJW[0],IC_REG_N_BTR_SJW[1],IC_REG_N_BTR_SJW[2],IC_REG_N_BTR_SJW[3],IC_REG_N_BTR_SJW[4],IC_REG_N_BTR_SJW[5],IC_REG_N_BTR_SJW[6]}),
        .\IC_REG_N_BTR_TS1_I_reg[0] ({IC_REG_N_BTR_TS1[0],IC_REG_N_BTR_TS1[1],IC_REG_N_BTR_TS1[2],IC_REG_N_BTR_TS1[3],IC_REG_N_BTR_TS1[4],IC_REG_N_BTR_TS1[5],IC_REG_N_BTR_TS1[6],IC_REG_N_BTR_TS1[7]}),
        .\IC_REG_N_BTR_TS2_I_reg[0] ({IC_REG_N_BTR_TS2[0],IC_REG_N_BTR_TS2[1],IC_REG_N_BTR_TS2[2],IC_REG_N_BTR_TS2[3],IC_REG_N_BTR_TS2[4],IC_REG_N_BTR_TS2[5],IC_REG_N_BTR_TS2[6]}),
        .\IC_REG_RXFP_I2_reg[0] ({IC_REG_WMR_RXFP[0],IC_REG_WMR_RXFP[1],IC_REG_WMR_RXFP[2],IC_REG_WMR_RXFP[3],IC_REG_WMR_RXFP[4]}),
        .IC_REG_SBR_I_reg(IC_REG_SBR),
        .IC_REG_SRR_CEN_I(IC_REG_SRR_CEN_I),
        .IC_REG_SRR_CEN_I_reg(IC_REG_SRR_CEN_I_i_1_n_0),
        .IC_REG_SRR_SRST(IC_REG_SRR_SRST),
        .IC_REG_SRR_SRST_I_reg(IC_REG_SRR_SRST_I_i_1_n_0),
        .IC_REG_SR_SLEEP_FS3(\ic/IC_REG_SR_SLEEP_FS3 ),
        .IC_REG_SR_SNOOP_I_reg(IC_REG_MSR_SNOOP),
        .\IC_REG_TSR_I_reg[15] (\ic/IC_REG_TSR_I0 ),
        .IC_SYNC_ECR_ACK_I_reg(IC_SYNC_ECR_ACK),
        .IC_SYNC_ECR_WEN(IC_SYNC_ECR_WEN),
        .IC_SYNC_ECR_WEN_FS3(\ic/IC_SYNC_ECR_WEN_FS3 ),
        .IC_SYNC_ESR_ACKER(IC_SYNC_ESR_ACKER),
        .IC_SYNC_ESR_BERR(IC_SYNC_ESR_BERR),
        .IC_SYNC_ESR_CRCER(IC_SYNC_ESR_CRCER),
        .IC_SYNC_ESR_FMER(IC_SYNC_ESR_FMER),
        .IC_SYNC_ESR_F_BERR(IC_SYNC_ESR_F_BERR),
        .IC_SYNC_ESR_F_CRCER(IC_SYNC_ESR_F_CRCER),
        .IC_SYNC_ESR_F_FMER(IC_SYNC_ESR_F_FMER),
        .IC_SYNC_ESR_F_STER(IC_SYNC_ESR_F_STER),
        .IC_SYNC_ESR_STER(IC_SYNC_ESR_STER),
        .IC_SYNC_ISR_ARBLST(IC_SYNC_ISR_ARBLST),
        .IC_SYNC_ISR_BSOFF(IC_SYNC_ISR_BSOFF),
        .IC_SYNC_ISR_MSGLST(IC_SYNC_ISR_MSGLST),
        .IC_SYNC_ISR_MSGLST_F1(IC_SYNC_ISR_MSGLST_F1),
        .IC_SYNC_ISR_MSGLST_TXE(IC_SYNC_ISR_MSGLST_TXE),
        .IC_SYNC_ISR_MSGLST_reg(IC_SYNC_ISR_MSGLST_i_1_n_0),
        .IC_SYNC_ISR_RXOK(IC_SYNC_ISR_RXOK),
        .IC_SYNC_ISR_TXOK(IC_SYNC_ISR_TXOK),
        .IC_SYNC_SR_BIDLE(IC_SYNC_SR_BIDLE),
        .IC_SYNC_SR_BSFR(IC_SYNC_SR_BSFR),
        .IC_SYNC_SR_ERRWRN(IC_SYNC_SR_ERRWRN),
        .IC_SYNC_SR_LBACK(IC_SYNC_SR_LBACK),
        .IC_SYNC_SR_PEE(IC_SYNC_SR_PEE),
        .IC_SYNC_SR_RSTST(IC_SYNC_SR_RSTST),
        .IC_SYNC_SR_SLEEP(IC_SYNC_SR_SLEEP),
        .IC_SYNC_TSR_WEN(IC_SYNC_TSR_WEN),
        .IC_SYNC_TSR_WEN_FS3(\ic/IC_SYNC_TSR_WEN_FS3 ),
        .IC_TIMESTAMP_RST_reg(IC_TIMESTAMP_RST),
        .IC_TIMESTAMP_RST_reg_0(IC_TIMESTAMP_RST_i_1_n_0),
        .ID_MATCH_EN(ID_MATCH_EN),
        .ID_MATCH_EN_D2(\ol_rbmm/GEN_IMM.ol_imm/ID_MATCH_EN_D2 ),
        .ID_MATCH_EN_FS_D1(\olglue/ID_MATCH_EN_FS_D1 ),
        .INDEX_VALID_SIG_reg(INDEX_VALID_SIG_i_1_n_0),
        .\MATCHED_FILTER_INDEX_reg[4] (MATCHED_FILTER_INDEX),
        .MATCH_RESULT_FS2_D1(\timestamp/MATCH_RESULT_FS2_D1 ),
        .MATCH_RESULT_SIG_reg(MATCH_RESULT),
        .MATCH_RESULT_SIG_reg_0(MATCH_RESULT_SIG_i_1_n_0),
        .MATCH_RESULT_TO_BSP0(\timestamp/MATCH_RESULT_TO_BSP0 ),
        .MATCH_RESULT_TO_BSP_reg(tl_n_253),
        .MATCH_RUNNING_SIG_reg(ol_n_20),
        .MATCH_RUNNING_SIG_reg_0(MATCH_RUNNING_SIG_i_1_n_0),
        .MSG_ON_CAN_BUS(MSG_ON_CAN_BUS),
        .MSG_ON_CAN_BUS_AXI_D1(MSG_ON_CAN_BUS_AXI_D1),
        .\MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[1] (IC_SYNC_SR_ESTAT),
        .OL_RX_FIFO_FULL(OL_RX_FIFO_FULL),
        .OL_RX_FIFO_FULL_F1(OL_RX_FIFO_FULL_F1),
        .Q(\ol_rbmm/GEN_FIFO_CNTL.rxmsg_fifo_cntl/wr_index_i_reg ),
        .\RD_DATA_RET_reg[0] (\RD_DATA_RET_reg[0] ),
        .\RD_DATA_RET_reg[0]_0 (\RD_DATA_RET_reg[0]_0 ),
        .\RXE_DATA_STORED_AT_DLC_reg[0] ({ol_n_310,ol_n_311,ol_n_312,ol_n_313,ol_n_314,ol_n_315,ol_n_316,ol_n_317,ol_n_318,ol_n_319,ol_n_320}),
        .\RXE_DATA_STORED_AT_DLC_reg[0]_0 ({RXE_DOUT[0],RXE_DOUT[1],RXE_DOUT[2],RXE_DOUT[3],RXE_DOUT[4],RXE_DOUT[5],RXE_DOUT[6],RXE_DOUT[7],RXE_DOUT[8],RXE_DOUT[9],RXE_DOUT[10],RXE_DOUT[11],RXE_DOUT[12],RXE_DOUT[13],RXE_DOUT[14],RXE_DOUT[15],RXE_DOUT[16],RXE_DOUT[17],RXE_DOUT[18],RXE_DOUT[19],RXE_DOUT[20],RXE_DOUT[21],RXE_DOUT[22],RXE_DOUT[23],RXE_DOUT[24],RXE_DOUT[25],RXE_DOUT[26],RXE_DOUT[27],RXE_DOUT[28],RXE_DOUT[29],RXE_DOUT[30],RXE_DOUT[31]}),
        .RXE_FDF_I(\bsp/RXE_FDF_I ),
        .RXE_MSGVAL_EARLY_F0(RXE_MSGVAL_EARLY_F0),
        .RXE_MSGVAL_EARLY_F1(RXE_MSGVAL_EARLY_F1),
        .RXE_RXFIFO_WEN(RXE_RXFIFO_WEN),
        .RXE_RXFIFO_WEN_FD1(\bsp/RXE_RXFIFO_WEN_FD1 ),
        .RXE_RXFIFO_WEN_FD2(\bsp/RXE_RXFIFO_WEN_FD2 ),
        .RXE_RXMSG_INVAL_F0(RXE_RXMSG_INVAL_F0),
        .RXE_RXMSG_INVAL_F1(RXE_RXMSG_INVAL_F1),
        .RXE_RXMSG_VAL_F0(RXE_RXMSG_VAL_F0),
        .RXE_RXMSG_VAL_F1(RXE_RXMSG_VAL_F1),
        .RXF_FULL_AT_MSG_BOUNDARY(RXF_FULL_AT_MSG_BOUNDARY),
        .RXF_FULL_AT_MSG_BOUNDARY_F1(RXF_FULL_AT_MSG_BOUNDARY_F1),
        .RXF_FULL_I_reg(ol_n_18),
        .RXMNF_SET(RXMNF_SET),
        .RXOK_FS3(RXOK_FS3),
        .RXWM_SET(RXWM_SET),
        .RXWM_SET_F1(RXWM_SET_F1),
        .RX_ADDR_M_CC_F1(RX_ADDR_M_CC_F1[10:1]),
        .S(ol_n_271),
        .\SINGLE_BIT.s_level_out_d4_reg (\ic/IC_REG_SR_PEE_FS2 ),
        .\SINGLE_BIT.s_level_out_d4_reg_0 (\ic/IC_REG_SR_BSFR_FS2 ),
        .\SINGLE_BIT.s_level_out_d4_reg_1 (\ic/IC_REG_ESR_F_CRCER_FS2 ),
        .\SINGLE_BIT.s_level_out_d4_reg_10 (\ic/IC_REG_ESR_BERR_FS2 ),
        .\SINGLE_BIT.s_level_out_d4_reg_11 (\ic/IC_REG_ESR_ACKER_FS2 ),
        .\SINGLE_BIT.s_level_out_d4_reg_12 (\ic/IC_REG_SR_SLEEP_FS2 ),
        .\SINGLE_BIT.s_level_out_d4_reg_13 (RXOK_FS2),
        .\SINGLE_BIT.s_level_out_d4_reg_14 (\ic/IC_REG_ISR_MSGLST_FS2 ),
        .\SINGLE_BIT.s_level_out_d4_reg_15 (\ic/IC_REG_ISR_MSGLST_FS2_F1 ),
        .\SINGLE_BIT.s_level_out_d4_reg_16 (\ic/IC_REG_ISR_MSGLST_FS2_TXE ),
        .\SINGLE_BIT.s_level_out_d4_reg_17 (\ic/IC_REG_ISR_BSOFF_FS2 ),
        .\SINGLE_BIT.s_level_out_d4_reg_2 (\ic/IC_REG_ESR_F_FMER_FS2 ),
        .\SINGLE_BIT.s_level_out_d4_reg_3 (\ic/IC_REG_ESR_F_STER_FS2 ),
        .\SINGLE_BIT.s_level_out_d4_reg_4 (\ic/IC_REG_ESR_F_BERR_FS2 ),
        .\SINGLE_BIT.s_level_out_d4_reg_5 (\ic/IC_SYNC_TSR_WEN_FS2 ),
        .\SINGLE_BIT.s_level_out_d4_reg_6 (\ic/IC_SYNC_ECR_WEN_FS2 ),
        .\SINGLE_BIT.s_level_out_d4_reg_7 (\ic/IC_REG_ESR_CRCER_FS2 ),
        .\SINGLE_BIT.s_level_out_d4_reg_8 (\ic/IC_REG_ESR_FMER_FS2 ),
        .\SINGLE_BIT.s_level_out_d4_reg_9 (\ic/IC_REG_ESR_STER_FS2 ),
        .\SINGLE_BIT.s_level_out_d6_reg (\ic/IC_REG_ISR_ARBLST_FS2 ),
        .\SINGLE_BIT.s_level_out_d6_reg_0 (\ic/IC_REG_ISR_TXOK_FS2 ),
        .SR(E_RST_I_reg),
        .SYNC_RST_TL(SYNC_RST_TL),
        .TDCV_CNT_REG_WEN(TDCV_CNT_REG_WEN),
        .TRR_REG_WRITE_PULSE(\ol_tbmm/TRR_REG_WRITE_PULSE ),
        .\TRR_i_D1_reg[23] (ol_n_228),
        .\TRR_i_D1_reg[28] (ol_n_227),
        .\TRR_i_reg[13] (ol_n_226),
        .\TRR_i_reg[13]_0 (ol_n_229),
        .TS_RX_WDATA_F1({TS_RX_WDATA_F1[11],TS_RX_WDATA_F1[12],TS_RX_WDATA_F1[13],TS_RX_WDATA_F1[14],TS_RX_WDATA_F1[15],TS_RX_WDATA_F1[16],TS_RX_WDATA_F1[17],TS_RX_WDATA_F1[18],TS_RX_WDATA_F1[19],TS_RX_WDATA_F1[20],TS_RX_WDATA_F1[21],TS_RX_WDATA_F1[22],TS_RX_WDATA_F1[23],TS_RX_WDATA_F1[24],TS_RX_WDATA_F1[25],TS_RX_WDATA_F1[26],TS_RX_WDATA_F1[27],TS_RX_WDATA_F1[28],TS_RX_WDATA_F1[29],TS_RX_WDATA_F1[30],TS_RX_WDATA_F1[31]}),
        .TS_RX_WEN(TS_RX_WEN),
        .TS_RX_WEN_F1(TS_RX_WEN_F1),
        .TXEWM_SET(TXEWM_SET),
        .TXE_BRAM_WEN(TXE_BRAM_WEN),
        .\TXE_DATA_TS_reg[7] (ol_n_249),
        .TXE_MSGVAL_D1(\ol_tbmm/tx_event_fifo_cntl/TXE_MSGVAL_D1 ),
        .TXE_MSGVAL_D2(\ol_tbmm/tx_event_fifo_cntl/TXE_MSGVAL_D2 ),
        .TXE_MSGVAL_FD1(\bsp/TXE_MSGVAL_FD1 ),
        .TXE_MSGVAL_FD2(\bsp/TXE_MSGVAL_FD2 ),
        .ack_s_gate_toggle(\ol_rbmm/GEN_IMM.ol_imm/ack_s_gate_toggle ),
        .ack_s_gate_toggle_reg(ack_s_gate_toggle_i_1_n_0),
        .addr_location_incr_count_reg(TXE_BRAM_ADDR),
        .\addr_location_incr_count_reg[0]_0 (tl_n_131),
        .\addr_location_incr_count_reg[4] (TXE_TX_REN_D1_reg),
        .addr_location_incr_count_reg_0(addr_location_incr_count_i_1_n_0),
        .addr_location_incr_count_reg_0_sp_1(RX_ADDR_M_CC_F1[0]),
        .addra(addra),
        .addrb(addrb),
        .\arststages_ff_reg[1] (OL_FIFO_RST),
        .\arststages_ff_reg[1]_0 (ol_n_247),
        .can_clk(can_clk),
        .can_phy_rx(can_phy_rx),
        .can_phy_rx_0(ol_n_235),
        .dest_arst(\olglue/sync_tl_rst_n ),
        .dest_rst(dest_rst),
        .dina(dina),
        .doutb(doutb),
        .enb(enb),
        .host_req_reg(host_req_reg),
        .\ic_reg_sr_tdcv_cdc_tig_reg[6] (IC_REG_SR_TDCV),
        .\ic_sync_ecr_cdc_tig_reg[0] ({IC_SYNC_ECR[0],IC_SYNC_ECR[1],IC_SYNC_ECR[2],IC_SYNC_ECR[3],IC_SYNC_ECR[4],IC_SYNC_ECR[5],IC_SYNC_ECR[6],IC_SYNC_ECR[7],IC_SYNC_ECR[8],IC_SYNC_ECR[9],IC_SYNC_ECR[10],IC_SYNC_ECR[11],IC_SYNC_ECR[12],IC_SYNC_ECR[13],IC_SYNC_ECR[14],IC_SYNC_ECR[15]}),
        .\id_for_match_cdc_tig_reg[0]_0 ({ID_FOR_MATCH[0],ID_FOR_MATCH[1],ID_FOR_MATCH[2],ID_FOR_MATCH[3],ID_FOR_MATCH[4],ID_FOR_MATCH[5],ID_FOR_MATCH[6],ID_FOR_MATCH[7],ID_FOR_MATCH[8],ID_FOR_MATCH[9],ID_FOR_MATCH[10],ID_FOR_MATCH[11],ID_FOR_MATCH[12],ID_FOR_MATCH[13],ID_FOR_MATCH[14],ID_FOR_MATCH[15],ID_FOR_MATCH[16],ID_FOR_MATCH[17],ID_FOR_MATCH[18],ID_FOR_MATCH[19],ID_FOR_MATCH[20],ID_FOR_MATCH[21],ID_FOR_MATCH[22],ID_FOR_MATCH[23],ID_FOR_MATCH[24],ID_FOR_MATCH[25],ID_FOR_MATCH[26],ID_FOR_MATCH[27],ID_FOR_MATCH[28],ID_FOR_MATCH[29],ID_FOR_MATCH[30],ID_FOR_MATCH[31]}),
        .imm_cs(\ol_rbmm/GEN_IMM.ol_imm/imm_cs ),
        .index_valid_sig(\ol_tbmm/index_valid_sig ),
        .invalidate_buffer_i(\ol_tbmm/invalidate_buffer_i ),
        .invalidate_buffer_reg(invalidate_buffer_i_1_n_0),
        .ip2bus_intrevent(ip2bus_intrevent),
        .out(\olglue/ID_MATCH_EN_FS ),
        .p_13_in({\ic/p_13_in [31:30],\ic/p_13_in [17:8],\ic/p_13_in [6:0]}),
        .p_14_in(\ic/p_14_in ),
        .p_51_in(\ic/p_51_in ),
        .p_71_in(\ic/p_71_in ),
        .postpone_flag(\ol_tbmm/ol_nrh/postpone_flag ),
        .postpone_flag_2(\ol_tbmm/ol_nrh/postpone_flag_2 ),
        .postpone_flag_2_reg(ol_n_210),
        .postpone_flag_2_reg_0(postpone_flag_2_i_1_n_0),
        .postpone_flag_reg(postpone_flag_i_1_n_0),
        .pr1_rd_req_reg(pr1_rd_req_reg),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_arready(s_axi_arready),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready),
        .src_arst(src_arst),
        .src_in(BUFFER_IS_READY),
        .sync_tl_rst_n_d2_reg(ol_n_248),
        .\syncstages_ff_reg[3] (Bus2IP_Reset),
        .tbs_running_sig(\ol_tbmm/tbs_running_sig ),
        .\time_stamp_cnt_cdc_tig_reg[0] ({TIME_STAMP_CNT[0],TIME_STAMP_CNT[1],TIME_STAMP_CNT[2],TIME_STAMP_CNT[3],TIME_STAMP_CNT[4],TIME_STAMP_CNT[5],TIME_STAMP_CNT[6],TIME_STAMP_CNT[7],TIME_STAMP_CNT[8],TIME_STAMP_CNT[9],TIME_STAMP_CNT[10],TIME_STAMP_CNT[11],TIME_STAMP_CNT[12],TIME_STAMP_CNT[13],TIME_STAMP_CNT[14],TIME_STAMP_CNT[15]}),
        .trigger_next_round(\ol_tbmm/ol_tbs/trigger_next_round ),
        .\txe_id_data_i_reg[0] (\TXE_DLC_I_reg[0] ),
        .wea(wea),
        .winning_or_locked_index_cancel_req_reg(CANCEL_OR_INVALIDATE_BUFFER_OL2TL),
        .\wr_index_i_reg[1] (tl_n_132),
        .\wr_index_i_reg[1]_0 (tl_n_134),
        .\wr_index_i_reg[6] (\ol_rbmm/GEN_FIFO_1_CNTL.rxmsg_fifo_cntl_1/wr_index_i_reg ),
        .\wr_index_i_reg[6]_0 (tl_n_133),
        .\wr_index_i_reg[6]_1 (tl_n_135));
  LUT5 #(
    .INIT(32'h20202000)) 
    postpone_flag_2_i_1
       (.I0(BSP_IN_IFSPACE_OL),
        .I1(MSG_ON_CAN_BUS_AXI_D1),
        .I2(\ol_tbmm/index_valid_sig ),
        .I3(\ol_tbmm/TRR_REG_WRITE_PULSE ),
        .I4(\ol_tbmm/ol_nrh/postpone_flag_2 ),
        .O(postpone_flag_2_i_1_n_0));
  LUT3 #(
    .INIT(8'hC8)) 
    postpone_flag_i_1
       (.I0(\ol_tbmm/TRR_REG_WRITE_PULSE ),
        .I1(\ol_tbmm/tbs_running_sig ),
        .I2(\ol_tbmm/ol_nrh/postpone_flag ),
        .O(postpone_flag_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    sync_tl_rst_n_d1_i_1
       (.I0(\olglue/sync_tl_rst_n ),
        .O(SYNC_RST_TL));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_can_tl_top tl
       (.BIS_HSYNC_FLG_I(BIS_HSYNC_FLG_I),
        .BIS_HSYNC_FLG_I_reg(BIS_HSYNC_FLG_I_i_1_n_0),
        .BRS_EN_I_FLAG(\bsp/BRS_EN_I_FLAG ),
        .BRS_L_SP_FE_reg(tl_n_232),
        .BSP_CRCERR_I_CANFD_FLG(\bsp/BSP_CRCERR_I_CANFD_FLG ),
        .BSP_CRCERR_I_CANFD_FLG0(\bsp/BSP_CRCERR_I_CANFD_FLG0 ),
        .BSP_CRCERR_I_CANFD_FLG_reg(BSP_CRCERR_I_CANFD_FLG_i_1_n_0),
        .BSP_CRCERR_I_CAN_FLG(\bsp/BSP_CRCERR_I_CAN_FLG ),
        .BSP_CRCERR_I_CAN_FLG0(\bsp/BSP_CRCERR_I_CAN_FLG0 ),
        .BSP_CRCERR_I_CAN_FLG_reg(BSP_CRCERR_I_CAN_FLG_i_1_n_0),
        .BSP_IC_ACK_ERROR_I_reg(BSP_IC_ACK_ERROR_I_i_1_n_0),
        .BSP_IC_BIT_ERROR_I_reg(BSP_IC_BIT_ERROR_I_i_1_n_0),
        .BSP_IC_CRC_ERROR_I_reg(BSP_IC_CRC_ERROR_I_i_1_n_0),
        .BSP_IC_FRM_ERROR_I_reg(BSP_IC_FRM_ERROR_I_i_1_n_0),
        .BSP_IC_F_BIT_ERROR_I_reg(BSP_IC_F_BIT_ERROR_I_i_1_n_0),
        .BSP_IC_F_CRC_ERROR_I_reg(BSP_IC_F_CRC_ERROR_I_i_1_n_0),
        .BSP_IC_F_FRM_ERROR_I_reg(BSP_IC_F_FRM_ERROR_I_i_1_n_0),
        .BSP_IC_F_STUFF_ERROR_I_reg(BSP_IC_F_STUFF_ERROR_I_i_1_n_0),
        .BSP_IC_STUFF_ERROR_I_reg(BSP_IC_STUFF_ERROR_I_i_1_n_0),
        .BSP_IDVALID_FD1(\bsp/BSP_IDVALID_FD1 ),
        .BSP_IDVALID_FD2(\bsp/BSP_IDVALID_FD2 ),
        .BSP_IN_EOF(BSP_IN_EOF),
        .BSP_IN_ID_STATE_D1(\bsp/BSP_IN_ID_STATE_D1 ),
        .BSP_IN_ID_STATE_I(\bsp/BSP_IN_ID_STATE_I ),
        .BSP_IN_IFSPACE(BSP_IN_IFSPACE),
        .BSP_TXBIT_D1_reg(BSP_TXBIT_D1_i_1_n_0),
        .BSP_TXBIT_FD(BSP_TXBIT_FD),
        .BSP_TXBIT_FD_reg(tl_n_75),
        .BSP_TXBIT_FD_reg_0(tl_n_223),
        .BSP_TXBIT_FD_reg_1(tl_n_229),
        .BSP_TXBIT_FD_reg_2(BSP_TXBIT_FD_i_1_n_0),
        .BSP_TXBIT_I(BSP_TXBIT_I),
        .BTL_NTQ_I0_carry__0(tl_n_252),
        .BTL_RXBIT(BTL_RXBIT),
        .BTL_RXBIT_I_reg(tl_n_231),
        .BTL_RXBIT_I_reg_0(tl_n_233),
        .BTL_RXBIT_I_reg_1(tl_n_249),
        .BTL_RXBIT_I_reg_2(BTL_RXBIT_I_i_1_n_0),
        .BTL_SAMP_EN(BTL_SAMP_EN),
        .BTL_SAMP_EN_D1_reg(tl_n_112),
        .BTL_SAMP_EN_FD1(BTL_SAMP_EN_FD1),
        .BTL_SAMP_EN_FD2(BTL_SAMP_EN_FD2),
        .CANCEL_CONFIRMED_TL2OL_I_reg(CANCEL_CONFIRMED_TL2OL_I_i_1_n_0),
        .CANCEL_OR_INVALIDATE_CONFIRMED_TL2OL(CANCEL_OR_INVALIDATE_CONFIRMED_TL2OL),
        .CAN_PHY_RX_D(\btl/CAN_PHY_RX_D ),
        .CAN_PHY_RX_I1(CAN_PHY_RX_I1),
        .CAN_PHY_RX_I_NEG_FLOP(CAN_PHY_RX_I_NEG_FLOP),
        .CAN_PHY_TX_LP(CAN_PHY_TX_LP),
        .CAN_PHY_TX_LP_reg(CAN_PHY_TX_LP_i_1_n_0),
        .CAN_PHY_TX_POS_FLOP_X2(\btl/CAN_PHY_TX_POS_FLOP_X2 ),
        .CAN_PHY_TX_POS_FLOP_X2_reg(tl_n_76),
        .CAN_PHY_TX_POS_FLOP_X2_reg_0(CAN_PHY_TX_POS_FLOP_X2_i_1_n_0),
        .CAN_PHY_TX_POS_FLOP_reg(tl_n_77),
        .CAN_PHY_TX_POS_FLOP_reg_0(CAN_PHY_TX_POS_FLOP_i_1_n_0),
        .CLKM_EN(CLKM_EN),
        .CLKM_EN_D1(\timestamp/CLKM_EN_D1 ),
        .CO(\btl/CNTR_EQ_NTQ_I ),
        .D({TIME_STAMP_CNT[0],TIME_STAMP_CNT[1],TIME_STAMP_CNT[2],TIME_STAMP_CNT[3],TIME_STAMP_CNT[4],TIME_STAMP_CNT[5],TIME_STAMP_CNT[6],TIME_STAMP_CNT[7],TIME_STAMP_CNT[8],TIME_STAMP_CNT[9],TIME_STAMP_CNT[10],TIME_STAMP_CNT[11],TIME_STAMP_CNT[12],TIME_STAMP_CNT[13],TIME_STAMP_CNT[14],TIME_STAMP_CNT[15]}),
        .E(ID_MATCH_EN_i_1_n_0),
        .\EMU_OL_ECR_I_reg[0] ({IC_SYNC_ECR[0],IC_SYNC_ECR[1],IC_SYNC_ECR[2],IC_SYNC_ECR[3],IC_SYNC_ECR[4],IC_SYNC_ECR[5],IC_SYNC_ECR[6],IC_SYNC_ECR[7],IC_SYNC_ECR[8],IC_SYNC_ECR[9],IC_SYNC_ECR[10],IC_SYNC_ECR[11],IC_SYNC_ECR[12],IC_SYNC_ECR[13],IC_SYNC_ECR[14],IC_SYNC_ECR[15]}),
        .ERR_TXBERR_I_FD_SSP_EN_1_reg(tl_n_244),
        .HSYNC_FLG_I(\btl/HSYNC_FLG_I ),
        .HSYNC_FLG_I0(\btl/HSYNC_FLG_I0 ),
        .HSYNC_FLG_I_reg(HSYNC_FLG_I_i_1_n_0),
        .HSYNC_OCCR_D_reg(tl_n_246),
        .IC_REG_MSR_LBACK(IC_REG_MSR_LBACK),
        .IC_REG_MSR_SNOOP_FS2_D1_reg(tl_n_129),
        .IC_SYNC_ECR_WEN(IC_SYNC_ECR_WEN),
        .IC_SYNC_ESR_ACKER(IC_SYNC_ESR_ACKER),
        .IC_SYNC_ESR_BERR(IC_SYNC_ESR_BERR),
        .IC_SYNC_ESR_CRCER(IC_SYNC_ESR_CRCER),
        .IC_SYNC_ESR_FMER(IC_SYNC_ESR_FMER),
        .IC_SYNC_ESR_F_BERR(IC_SYNC_ESR_F_BERR),
        .IC_SYNC_ESR_F_CRCER(IC_SYNC_ESR_F_CRCER),
        .IC_SYNC_ESR_F_FMER(IC_SYNC_ESR_F_FMER),
        .IC_SYNC_ESR_F_STER(IC_SYNC_ESR_F_STER),
        .IC_SYNC_ESR_STER(IC_SYNC_ESR_STER),
        .IC_SYNC_ISR_ARBLST(IC_SYNC_ISR_ARBLST),
        .IC_SYNC_ISR_BSOFF(IC_SYNC_ISR_BSOFF),
        .IC_SYNC_ISR_MSGLST(IC_SYNC_ISR_MSGLST),
        .IC_SYNC_ISR_MSGLST_F1(IC_SYNC_ISR_MSGLST_F1),
        .IC_SYNC_ISR_MSGLST_F1_reg(IC_SYNC_ISR_MSGLST_F1_i_1_n_0),
        .IC_SYNC_ISR_MSGLST_reg(IC_SYNC_ISR_MSGLST_i_1__0_n_0),
        .IC_SYNC_ISR_RXOK(IC_SYNC_ISR_RXOK),
        .IC_SYNC_ISR_TXOK(IC_SYNC_ISR_TXOK),
        .IC_SYNC_SR_BIDLE(IC_SYNC_SR_BIDLE),
        .IC_SYNC_SR_BSFR(IC_SYNC_SR_BSFR),
        .IC_SYNC_SR_ERRWRN(IC_SYNC_SR_ERRWRN),
        .\IC_SYNC_SR_ESTAT_reg[1]_0 (IC_SYNC_SR_ESTAT),
        .IC_SYNC_SR_LBACK(IC_SYNC_SR_LBACK),
        .IC_SYNC_SR_PEE(IC_SYNC_SR_PEE),
        .IC_SYNC_SR_RSTST(IC_SYNC_SR_RSTST),
        .IC_SYNC_SR_SLEEP(IC_SYNC_SR_SLEEP),
        .IC_SYNC_TSR_WEN(IC_SYNC_TSR_WEN),
        .\ID_FOR_MATCH_reg[0] ({ID_FOR_MATCH[0],ID_FOR_MATCH[1],ID_FOR_MATCH[2],ID_FOR_MATCH[3],ID_FOR_MATCH[4],ID_FOR_MATCH[5],ID_FOR_MATCH[6],ID_FOR_MATCH[7],ID_FOR_MATCH[8],ID_FOR_MATCH[9],ID_FOR_MATCH[10],ID_FOR_MATCH[11],ID_FOR_MATCH[12],ID_FOR_MATCH[13],ID_FOR_MATCH[14],ID_FOR_MATCH[15],ID_FOR_MATCH[16],ID_FOR_MATCH[17],ID_FOR_MATCH[18],ID_FOR_MATCH[19],ID_FOR_MATCH[20],ID_FOR_MATCH[21],ID_FOR_MATCH[22],ID_FOR_MATCH[23],ID_FOR_MATCH[24],ID_FOR_MATCH[25],ID_FOR_MATCH[26],ID_FOR_MATCH[27],ID_FOR_MATCH[28],ID_FOR_MATCH[29],ID_FOR_MATCH[30],ID_FOR_MATCH[31]}),
        .ID_MATCH_EN(ID_MATCH_EN),
        .ID_MATCH_EN_reg(ID_MATCH_EN_i_2_n_0),
        .IFF6_EN_FS2(IFF6_EN_FS2),
        .IFF_EN_FS2(IFF_EN_FS2),
        .\MATCHED_FILTER_INDEX_FS2_D1_reg[0] (tl_n_253),
        .MATCH_RESULT_0_D1(\timestamp/MATCH_RESULT_0_D1 ),
        .MATCH_RESULT_1_D1(\timestamp/MATCH_RESULT_1_D1 ),
        .MATCH_RESULT_FS2_D1(\timestamp/MATCH_RESULT_FS2_D1 ),
        .MATCH_RESULT_TO_BSP0(\timestamp/MATCH_RESULT_TO_BSP0 ),
        .\MEM_reg[3] (tl_n_254),
        .MSG_ON_CAN_BUS(MSG_ON_CAN_BUS),
        .MSG_ON_CAN_BUS_reg(MSG_ON_CAN_BUS_i_1_n_0),
        .MSR_LBACK_FS2(MSR_LBACK_FS2),
        .MSR_SNOOP_FS2(MSR_SNOOP_FS2),
        .OL_RX_FIFO_FULL(OL_RX_FIFO_FULL),
        .OL_RX_FIFO_FULL_F1(OL_RX_FIFO_FULL_F1),
        .Q(IC_REG_SR_TDCV),
        .RXE_BRS_I(\bsp/RXE_BRS_I ),
        .RXE_BRS_I_reg(RXE_BRS_I_i_1_n_0),
        .\RXE_COUNTER_I_reg[0] (tl_n_120),
        .\RXE_COUNTER_I_reg[0]_0 (tl_n_251),
        .\RXE_COUNTER_I_reg[1] (tl_n_119),
        .\RXE_COUNTER_I_reg[4] (tl_n_115),
        .\RXE_COUNTER_I_reg[4]_0 (tl_n_237),
        .\RXE_COUNTER_I_reg[4]_1 (tl_n_239),
        .\RXE_COUNTER_I_reg[4]_2 (tl_n_240),
        .\RXE_COUNTER_I_reg[4]_3 (tl_n_241),
        .\RXE_COUNTER_I_reg[5] (tl_n_116),
        .\RXE_COUNTER_I_reg[6] (tl_n_238),
        .\RXE_DATA_STORED_AT_DLC_reg[0] (\RXE_DATA_STORED_AT_DLC_reg[0] ),
        .RXE_ESI_I_reg(tl_n_106),
        .RXE_ESI_I_reg_0(RXE_ESI_I_i_1_n_0),
        .RXE_FDF_I(\bsp/RXE_FDF_I ),
        .RXE_FDF_I_reg(RXE_FDF_I_i_1_n_0),
        .RXE_IC_RXOK_I_reg(RXE_IC_RXOK_I_i_1_n_0),
        .RXE_IDE_I(\bsp/RXE_IDE_I ),
        .RXE_IDE_I_reg(tl_n_248),
        .RXE_IDE_I_reg_0(RXE_IDE_I_i_1_n_0),
        .RXE_MSGVAL_EARLY_F0(RXE_MSGVAL_EARLY_F0),
        .RXE_MSGVAL_EARLY_F1(RXE_MSGVAL_EARLY_F1),
        .RXE_MSGVAL_FD1(\bsp/RXE_MSGVAL_FD1 ),
        .RXE_MSGVAL_FD2(\bsp/RXE_MSGVAL_FD2 ),
        .RXE_PASSFLG_I(\bsp/RXE_PASSFLG_I ),
        .RXE_PASSFLG_I_reg(RXE_PASSFLG_I_i_2_n_0),
        .RXE_RTR_I(\bsp/RXE_RTR_I ),
        .RXE_RTR_I_reg(RXE_RTR_I_i_1_n_0),
        .RXE_RXFIFO_WEN_FD1(\bsp/RXE_RXFIFO_WEN_FD1 ),
        .RXE_RXFIFO_WEN_FD2(\bsp/RXE_RXFIFO_WEN_FD2 ),
        .RXE_RXMSG_INVAL_F0(RXE_RXMSG_INVAL_F0),
        .RXE_RXMSG_INVAL_F1(RXE_RXMSG_INVAL_F1),
        .RXE_RXMSG_VAL_F0(RXE_RXMSG_VAL_F0),
        .RXE_RXMSG_VAL_F0_reg(tl_n_132),
        .RXE_RXMSG_VAL_F0_reg_0(tl_n_133),
        .RXE_RXMSG_VAL_F1(RXE_RXMSG_VAL_F1),
        .RXE_RXMSG_VAL_F1_reg(tl_n_134),
        .RXE_RXMSG_VAL_F1_reg_0(tl_n_135),
        .\RXE_SREG_I_reg[24] ({RXE_DOUT[0],RXE_DOUT[1],RXE_DOUT[2],RXE_DOUT[3],RXE_DOUT[4],RXE_DOUT[5],RXE_DOUT[6],RXE_DOUT[7],RXE_DOUT[8],RXE_DOUT[9],RXE_DOUT[10],RXE_DOUT[11],RXE_DOUT[12],RXE_DOUT[13],RXE_DOUT[14],RXE_DOUT[15],RXE_DOUT[16],RXE_DOUT[17],RXE_DOUT[18],RXE_DOUT[19],RXE_DOUT[20],RXE_DOUT[21],RXE_DOUT[22],RXE_DOUT[23],RXE_DOUT[24],RXE_DOUT[25],RXE_DOUT[26],RXE_DOUT[27],RXE_DOUT[28],RXE_DOUT[29],RXE_DOUT[30],RXE_DOUT[31]}),
        .\RXE_SREG_I_reg[30] (tl_n_222),
        .RXF_FULL_AT_MSG_BOUNDARY(RXF_FULL_AT_MSG_BOUNDARY),
        .RXF_FULL_AT_MSG_BOUNDARY_F1(RXF_FULL_AT_MSG_BOUNDARY_F1),
        .RXF_FULL_AT_MSG_BOUNDARY_reg(RXF_FULL_AT_MSG_BOUNDARY_reg),
        .S(ol_n_271),
        .SM_FLAG_I_reg(tl_n_242),
        .\SM_REG_I_reg[0] (CAN_PHY_RX_I_NEG_FLOP_X2_reg_n_0),
        .\SM_REG_I_reg[1] (tl_n_113),
        .SR(OL_FIFO_RST),
        .SSP_BTL_TXBIT_I(\btl/SSP_BTL_TXBIT_I ),
        .SSP_BTL_TXBIT_I_reg(SSP_BTL_TXBIT_I_i_1_n_0),
        .SSP_RCVD_RXBIT(\btl/SSP_RCVD_RXBIT ),
        .SSP_RCVD_RXBIT_reg(SSP_RCVD_RXBIT_i_1_n_0),
        .SYNC_RST_TL(SYNC_RST_TL),
        .TDCV_CNT_REG_WEN(TDCV_CNT_REG_WEN),
        .TDCV_CNT_REG_WEN_reg(TDCV_CNT_REG_WEN_i_1_n_0),
        .TDC_SSP_SAMP_PT(\btl/tdc/TDC_SSP_SAMP_PT ),
        .\TIME_STAMP_CNT_CAPTURE_reg[15] (BSP_IN_ID_STATE),
        .TIME_STAMP_CNT_REG_WEN_reg(TIME_STAMP_CNT_REG_WEN_i_1_n_0),
        .TS_COUNTER_SW_RST_D2(\timestamp/TS_COUNTER_SW_RST_D2 ),
        .TS_RX_WDATA_F1({TS_RX_WDATA_F1[11],TS_RX_WDATA_F1[12],TS_RX_WDATA_F1[13],TS_RX_WDATA_F1[14],TS_RX_WDATA_F1[15],TS_RX_WDATA_F1[16],TS_RX_WDATA_F1[17],TS_RX_WDATA_F1[18],TS_RX_WDATA_F1[19],TS_RX_WDATA_F1[20],TS_RX_WDATA_F1[21],TS_RX_WDATA_F1[22],TS_RX_WDATA_F1[23],TS_RX_WDATA_F1[24],TS_RX_WDATA_F1[25],TS_RX_WDATA_F1[26],TS_RX_WDATA_F1[27],TS_RX_WDATA_F1[28],TS_RX_WDATA_F1[29],TS_RX_WDATA_F1[30],TS_RX_WDATA_F1[31]}),
        .TS_RX_WEN(TS_RX_WEN),
        .TS_RX_WEN_F1(TS_RX_WEN_F1),
        .TXE_BRAM_WEN(TXE_BRAM_WEN),
        .\TXE_DLC_I_reg[0] (\TXE_DLC_I_reg[0] ),
        .TXE_IC_ARBLSS_I(\bsp/TXE_IC_ARBLSS_I ),
        .TXE_IC_ARBLSS_I_reg(TXE_IC_ARBLSS_I_i_1_n_0),
        .TXE_IC_TXOK_I_reg(TXE_IC_TXOK_I_i_1_n_0),
        .TXE_MSGVAL_D1_I_reg(tl_n_131),
        .TXE_MSGVAL_FD1(\bsp/TXE_MSGVAL_FD1 ),
        .TXE_MSGVAL_FD2(\bsp/TXE_MSGVAL_FD2 ),
        .TXE_PASSTX_I(\bsp/TXE_PASSTX_I ),
        .TXE_PASSTX_I_reg(TXE_PASSTX_I_i_1_n_0),
        .TXE_TRNSMT_FLG_reg(tl_n_86),
        .TXE_TXING055_out(\bsp/TXE_TXING055_out ),
        .TXE_TXING_reg(tl_n_90),
        .TXE_TXING_reg_0(tl_n_109),
        .TXE_TXING_reg_1(tl_n_117),
        .TXE_TXING_reg_2(tl_n_245),
        .TXE_TXING_reg_3(TXE_TXING_i_1_n_0),
        .TXE_TX_REN_D1(\bsp/TXE_TX_REN_D1 ),
        .TXE_TX_REN_D1_reg(TXE_TX_REN_D1_reg),
        .TXE_TX_REN_D1_reg_0(TXE_TX_REN_D1_i_1_n_0),
        .TXE_TX_REN_I(\bsp/TXE_TX_REN_I ),
        .TXING_BRS_EN_BTR(TXING_BRS_EN_BTR),
        .\addr_location_incr_count_reg[0] (ol_n_248),
        .can_clk(can_clk),
        .can_clk_x2(can_clk_x2),
        .dest_arst(\olglue/sync_tl_rst_n ),
        .dest_out(\bsp/CANCEL_BUFFER ),
        .ena(ena),
        .\gen_wr_a.gen_word_narrow.mem_reg_1 ({ol_n_310,ol_n_311,ol_n_312,ol_n_313,ol_n_314,ol_n_315,ol_n_316,ol_n_317,ol_n_318,ol_n_319,ol_n_320}),
        .\ic_reg_f_btr_sjw_cdc_tig_reg[0]_0 ({IC_REG_F_BTR_SJW[0],IC_REG_F_BTR_SJW[1],IC_REG_F_BTR_SJW[2],IC_REG_F_BTR_SJW[3]}),
        .\ic_reg_f_btr_ts1_cdc_tig_reg[0]_0 ({IC_REG_F_BTR_TS1[0],IC_REG_F_BTR_TS1[1],IC_REG_F_BTR_TS1[2],IC_REG_F_BTR_TS1[3],IC_REG_F_BTR_TS1[4]}),
        .\ic_reg_f_btr_ts2_cdc_tig_reg[0]_0 ({IC_REG_F_BTR_TS2[0],IC_REG_F_BTR_TS2[1],IC_REG_F_BTR_TS2[2],IC_REG_F_BTR_TS2[3]}),
        .\ic_reg_n_brpr_cdc_tig_reg[0]_0 ({IC_REG_BRPR[0],IC_REG_BRPR[1],IC_REG_BRPR[2],IC_REG_BRPR[3],IC_REG_BRPR[4],IC_REG_BRPR[5],IC_REG_BRPR[6],IC_REG_BRPR[7]}),
        .\ic_reg_n_btr_sjw_cdc_tig_reg[0]_0 ({IC_REG_N_BTR_SJW[0],IC_REG_N_BTR_SJW[1],IC_REG_N_BTR_SJW[2],IC_REG_N_BTR_SJW[3],IC_REG_N_BTR_SJW[4],IC_REG_N_BTR_SJW[5],IC_REG_N_BTR_SJW[6]}),
        .\ic_reg_n_btr_ts1_cdc_tig_reg[0]_0 ({IC_REG_N_BTR_TS1[0],IC_REG_N_BTR_TS1[1],IC_REG_N_BTR_TS1[2],IC_REG_N_BTR_TS1[3],IC_REG_N_BTR_TS1[4],IC_REG_N_BTR_TS1[5],IC_REG_N_BTR_TS1[6],IC_REG_N_BTR_TS1[7]}),
        .\ic_reg_n_btr_ts2_cdc_tig_reg[0]_0 ({IC_REG_N_BTR_TS2[0],IC_REG_N_BTR_TS2[1],IC_REG_N_BTR_TS2[2],IC_REG_N_BTR_TS2[3],IC_REG_N_BTR_TS2[4],IC_REG_N_BTR_TS2[5],IC_REG_N_BTR_TS2[6]}),
        .\ic_reg_wmr_rxfp_cdc_tig_reg[0]_0 ({IC_REG_WMR_RXFP[0],IC_REG_WMR_RXFP[1],IC_REG_WMR_RXFP[2],IC_REG_WMR_RXFP[3],IC_REG_WMR_RXFP[4]}),
        .src_in(BUFFER_IS_READY),
        .\state_reg[0] (tl_n_111),
        .\state_reg[0]_0 (tl_n_224),
        .\state_reg[0]_1 (tl_n_247),
        .\state_reg[2] (tl_n_114),
        .\state_reg[2]_0 (tl_n_121),
        .\state_reg[2]_1 (tl_n_228),
        .\state_reg[3] (tl_n_243),
        .\state_reg[4] (tl_n_110),
        .\state_reg[4]_0 (tl_n_225),
        .\state_reg[4]_1 (tl_n_250),
        .\syncstages_ff_reg[0] ({IC_REG_F_BRPR_TDC_EN,IC_REG_F_BRPR_TDCOFF[0],IC_REG_F_BRPR_TDCOFF[1],IC_REG_F_BRPR_TDCOFF[2],IC_REG_F_BRPR_TDCOFF[3],IC_REG_F_BRPR_TDCOFF[4],IC_REG_F_BRPR_TDCOFF[5],IC_REG_F_BRPR[0],IC_REG_F_BRPR[1],IC_REG_F_BRPR[2],IC_REG_F_BRPR[3],IC_REG_F_BRPR[4],IC_REG_F_BRPR[5],IC_REG_F_BRPR[6],IC_REG_F_BRPR[7]}),
        .\syncstages_ff_reg[0][4] (MATCHED_FILTER_INDEX),
        .\syncstages_ff_reg[0]_0 (IC_REG_MSR_SLEEP),
        .\syncstages_ff_reg[0]_1 (IC_REG_MSR_SNOOP),
        .\syncstages_ff_reg[0]_10 (CANCEL_OR_INVALIDATE_BUFFER_OL2TL),
        .\syncstages_ff_reg[0]_2 (IC_REG_MSR_DAR),
        .\syncstages_ff_reg[0]_3 ({IC_REG_IFF_EN[5],IC_REG_IFF_EN[6],IC_REG_IFF_EN[7]}),
        .\syncstages_ff_reg[0]_4 (IC_REG_MSR_DPEE),
        .\syncstages_ff_reg[0]_5 (IC_REG_SBR),
        .\syncstages_ff_reg[0]_6 (IC_REG_MSR_BRSD),
        .\syncstages_ff_reg[0]_7 (IC_TIMESTAMP_RST),
        .\syncstages_ff_reg[0]_8 (IC_SYNC_ECR_ACK),
        .\syncstages_ff_reg[0]_9 (MATCH_RESULT),
        .\wr_index_i_reg[6] (\ol_rbmm/GEN_FIFO_CNTL.rxmsg_fifo_cntl/wr_index_i_reg ),
        .\wr_index_i_reg[6]_0 (\ol_rbmm/GEN_FIFO_1_CNTL.rxmsg_fifo_cntl_1/wr_index_i_reg ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync
   (\SINGLE_BIT.s_level_out_d2_reg_0 ,
    SR,
    \SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ,
    can_clk,
    DAR_ENABLED_FS2_D1,
    dest_arst);
  output \SINGLE_BIT.s_level_out_d2_reg_0 ;
  input [0:0]SR;
  input \SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ;
  input can_clk;
  input DAR_ENABLED_FS2_D1;
  input dest_arst;

  wire DAR_ENABLED_FS2_D1;
  wire \SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ;
  wire \SINGLE_BIT.s_level_out_d2_reg_0 ;
  wire [0:0]SR;
  wire can_clk;
  wire dest_arst;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(can_clk),
        .CE(1'b1),
        .D(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ),
        .Q(s_level_out_d1_cdc_to),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(SR));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
  LUT3 #(
    .INIT(8'h10)) 
    transmit_mode_d1_i_1
       (.I0(s_level_out_d2),
        .I1(DAR_ENABLED_FS2_D1),
        .I2(dest_arst),
        .O(\SINGLE_BIT.s_level_out_d2_reg_0 ));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync_5
   (out,
    SR,
    \SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ,
    can_clk);
  output out;
  input [0:0]SR;
  input \SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ;
  input can_clk;

  wire \SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ;
  wire [0:0]SR;
  wire can_clk;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign out = s_level_out_d2;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(can_clk),
        .CE(1'b1),
        .D(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ),
        .Q(s_level_out_d1_cdc_to),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(SR));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized0
   (D,
    SR,
    Q,
    can_clk);
  output [5:0]D;
  input [0:0]SR;
  input [5:0]Q;
  input can_clk;

  wire [5:0]Q;
  wire [0:0]SR;
  wire can_clk;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire [5:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire [5:0]s_level_out_bus_d2;
  (* async_reg = "true" *) wire [5:0]s_level_out_bus_d3;
  (* async_reg = "true" *) wire [5:0]s_level_out_bus_d4;
  (* async_reg = "true" *) wire [5:0]s_level_out_bus_d5;
  (* async_reg = "true" *) wire [5:0]s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign D[5:0] = s_level_out_bus_d2;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized1
   (D,
    \MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ,
    wr_index_i_reg,
    s_axi_aclk,
    Q);
  output [5:0]D;
  input \MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ;
  input [0:0]wr_index_i_reg;
  input s_axi_aclk;
  input [4:0]Q;

  wire \MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ;
  wire [4:0]Q;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire [5:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire [5:0]s_level_out_bus_d2;
  (* async_reg = "true" *) wire [5:0]s_level_out_bus_d3;
  (* async_reg = "true" *) wire [5:0]s_level_out_bus_d4;
  (* async_reg = "true" *) wire [5:0]s_level_out_bus_d5;
  (* async_reg = "true" *) wire [5:0]s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;
  wire [0:0]wr_index_i_reg;

  assign D[5:0] = s_level_out_bus_d4;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_i_reg),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized2
   (D,
    SR,
    Q,
    can_clk);
  output [6:0]D;
  input [0:0]SR;
  input [6:0]Q;
  input can_clk;

  wire [6:0]Q;
  wire [0:0]SR;
  wire can_clk;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire [6:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire [6:0]s_level_out_bus_d2;
  (* async_reg = "true" *) wire [6:0]s_level_out_bus_d3;
  (* async_reg = "true" *) wire [6:0]s_level_out_bus_d4;
  (* async_reg = "true" *) wire [6:0]s_level_out_bus_d5;
  (* async_reg = "true" *) wire [6:0]s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign D[6:0] = s_level_out_bus_d2;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(can_clk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[6] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[6] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[6] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[6] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[6] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized2_8
   (D,
    SR,
    Q,
    can_clk);
  output [6:0]D;
  input [0:0]SR;
  input [6:0]Q;
  input can_clk;

  wire [6:0]Q;
  wire [0:0]SR;
  wire can_clk;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire [6:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire [6:0]s_level_out_bus_d2;
  (* async_reg = "true" *) wire [6:0]s_level_out_bus_d3;
  (* async_reg = "true" *) wire [6:0]s_level_out_bus_d4;
  (* async_reg = "true" *) wire [6:0]s_level_out_bus_d5;
  (* async_reg = "true" *) wire [6:0]s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign D[6:0] = s_level_out_bus_d2;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(can_clk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[6] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[6] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[6] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[6] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[0] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[1] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[2] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[3] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[4] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[5] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[6] 
       (.C(can_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized3
   (D,
    \MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ,
    wr_index_i_reg,
    s_axi_aclk,
    Q);
  output [6:0]D;
  input \MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ;
  input [0:0]wr_index_i_reg;
  input s_axi_aclk;
  input [5:0]Q;

  wire \MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ;
  wire [5:0]Q;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire [6:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire [6:0]s_level_out_bus_d2;
  (* async_reg = "true" *) wire [6:0]s_level_out_bus_d3;
  (* async_reg = "true" *) wire [6:0]s_level_out_bus_d4;
  (* async_reg = "true" *) wire [6:0]s_level_out_bus_d5;
  (* async_reg = "true" *) wire [6:0]s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;
  wire [0:0]wr_index_i_reg;

  assign D[6:0] = s_level_out_bus_d4;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_i_reg),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized3_9
   (D,
    \MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ,
    wr_index_i_reg,
    s_axi_aclk,
    Q);
  output [6:0]D;
  input \MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ;
  input [0:0]wr_index_i_reg;
  input s_axi_aclk;
  input [5:0]Q;

  wire \MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ;
  wire [5:0]Q;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire [6:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire [6:0]s_level_out_bus_d2;
  (* async_reg = "true" *) wire [6:0]s_level_out_bus_d3;
  (* async_reg = "true" *) wire [6:0]s_level_out_bus_d4;
  (* async_reg = "true" *) wire [6:0]s_level_out_bus_d5;
  (* async_reg = "true" *) wire [6:0]s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;
  wire [0:0]wr_index_i_reg;

  assign D[6:0] = s_level_out_bus_d4;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_index_i_reg),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(\MULTI_BIT.s_level_out_bus_d5_reg[0]_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4
   (\SINGLE_BIT.s_level_out_d4_reg_0 ,
    \SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ,
    BSP_IN_EOF,
    s_axi_aclk);
  output \SINGLE_BIT.s_level_out_d4_reg_0 ;
  input \SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ;
  input BSP_IN_EOF;
  input s_axi_aclk;

  wire BSP_IN_EOF;
  wire \SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign \SINGLE_BIT.s_level_out_d4_reg_0  = s_level_out_d4;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(BSP_IN_EOF),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_0
   (out,
    \SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ,
    BSP_IN_IFSPACE,
    s_axi_aclk);
  output out;
  input \SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ;
  input BSP_IN_IFSPACE;
  input s_axi_aclk;

  wire BSP_IN_IFSPACE;
  wire \SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign out = s_level_out_d4;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(BSP_IN_IFSPACE),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_1
   (out,
    \SINGLE_BIT.s_level_out_d4_reg_0 ,
    \SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ,
    CANCEL_OR_INVALIDATE_CONFIRMED_TL2OL,
    s_axi_aclk,
    MSG_ON_CAN_BUS_AXI,
    MSG_ON_CAN_BUS_OL_D1,
    MSG_ON_CAN_BUS_AXI_reg);
  output out;
  output \SINGLE_BIT.s_level_out_d4_reg_0 ;
  input \SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ;
  input CANCEL_OR_INVALIDATE_CONFIRMED_TL2OL;
  input s_axi_aclk;
  input MSG_ON_CAN_BUS_AXI;
  input MSG_ON_CAN_BUS_OL_D1;
  input MSG_ON_CAN_BUS_AXI_reg;

  wire CANCEL_OR_INVALIDATE_CONFIRMED_TL2OL;
  wire MSG_ON_CAN_BUS_AXI;
  wire MSG_ON_CAN_BUS_AXI_reg;
  wire MSG_ON_CAN_BUS_OL_D1;
  wire \SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ;
  wire \SINGLE_BIT.s_level_out_d4_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign out = s_level_out_d4;
  LUT5 #(
    .INIT(32'h00450000)) 
    MSG_ON_CAN_BUS_AXI_i_1
       (.I0(s_level_out_d4),
        .I1(MSG_ON_CAN_BUS_AXI),
        .I2(MSG_ON_CAN_BUS_OL_D1),
        .I3(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ),
        .I4(MSG_ON_CAN_BUS_AXI_reg),
        .O(\SINGLE_BIT.s_level_out_d4_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(CANCEL_OR_INVALIDATE_CONFIRMED_TL2OL),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_10
   (out,
    \SINGLE_BIT.s_level_out_d4_reg_0 ,
    \SINGLE_BIT.s_level_out_d6_reg_0 ,
    IC_SYNC_ESR_ACKER,
    s_axi_aclk,
    IC_REG_ESR_ACKER_FS3,
    IC_REG_ISR_ERROR_I_i_2,
    IC_REG_ESR_BERR_FS3,
    IC_REG_ISR_ERROR_I_i_2_0,
    IC_REG_ISR_ERROR_I_i_2_1);
  output out;
  output \SINGLE_BIT.s_level_out_d4_reg_0 ;
  input \SINGLE_BIT.s_level_out_d6_reg_0 ;
  input IC_SYNC_ESR_ACKER;
  input s_axi_aclk;
  input IC_REG_ESR_ACKER_FS3;
  input IC_REG_ISR_ERROR_I_i_2;
  input IC_REG_ESR_BERR_FS3;
  input IC_REG_ISR_ERROR_I_i_2_0;
  input IC_REG_ISR_ERROR_I_i_2_1;

  wire IC_REG_ESR_ACKER_FS3;
  wire IC_REG_ESR_BERR_FS3;
  wire IC_REG_ISR_ERROR_I_i_2;
  wire IC_REG_ISR_ERROR_I_i_2_0;
  wire IC_REG_ISR_ERROR_I_i_2_1;
  wire IC_SYNC_ESR_ACKER;
  wire \SINGLE_BIT.s_level_out_d4_reg_0 ;
  wire \SINGLE_BIT.s_level_out_d6_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign out = s_level_out_d4;
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF6FF6)) 
    IC_REG_ISR_ERROR_I_i_4
       (.I0(s_level_out_d4),
        .I1(IC_REG_ESR_ACKER_FS3),
        .I2(IC_REG_ISR_ERROR_I_i_2),
        .I3(IC_REG_ESR_BERR_FS3),
        .I4(IC_REG_ISR_ERROR_I_i_2_0),
        .I5(IC_REG_ISR_ERROR_I_i_2_1),
        .O(\SINGLE_BIT.s_level_out_d4_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_SYNC_ESR_ACKER),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_11
   (out,
    \SINGLE_BIT.s_level_out_d6_reg_0 ,
    IC_SYNC_ESR_BERR,
    s_axi_aclk);
  output out;
  input \SINGLE_BIT.s_level_out_d6_reg_0 ;
  input IC_SYNC_ESR_BERR;
  input s_axi_aclk;

  wire IC_SYNC_ESR_BERR;
  wire \SINGLE_BIT.s_level_out_d6_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign out = s_level_out_d4;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_SYNC_ESR_BERR),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_12
   (IC_REG_SR_BIDLE_I0,
    IC_REG_SR_BBSY_I0,
    \SINGLE_BIT.s_level_out_d6_reg_0 ,
    IC_SYNC_SR_BIDLE,
    s_axi_aclk,
    out);
  output IC_REG_SR_BIDLE_I0;
  output IC_REG_SR_BBSY_I0;
  input \SINGLE_BIT.s_level_out_d6_reg_0 ;
  input IC_SYNC_SR_BIDLE;
  input s_axi_aclk;
  input out;

  wire IC_REG_SR_BBSY_I0;
  wire IC_REG_SR_BIDLE_I0;
  wire IC_SYNC_SR_BIDLE;
  wire \SINGLE_BIT.s_level_out_d6_reg_0 ;
  wire out;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  LUT2 #(
    .INIT(4'h1)) 
    IC_REG_SR_BBSY_I_i_1
       (.I0(s_level_out_d4),
        .I1(out),
        .O(IC_REG_SR_BBSY_I0));
  LUT2 #(
    .INIT(4'h2)) 
    IC_REG_SR_BIDLE_I_i_1
       (.I0(s_level_out_d4),
        .I1(out),
        .O(IC_REG_SR_BIDLE_I0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_SYNC_SR_BIDLE),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_13
   (\SINGLE_BIT.s_level_out_d4_reg_0 ,
    \SINGLE_BIT.s_level_out_d6_reg_0 ,
    IC_SYNC_SR_BSFR,
    s_axi_aclk);
  output \SINGLE_BIT.s_level_out_d4_reg_0 ;
  input \SINGLE_BIT.s_level_out_d6_reg_0 ;
  input IC_SYNC_SR_BSFR;
  input s_axi_aclk;

  wire IC_SYNC_SR_BSFR;
  wire \SINGLE_BIT.s_level_out_d6_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign \SINGLE_BIT.s_level_out_d4_reg_0  = s_level_out_d4;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_SYNC_SR_BSFR),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_14
   (out,
    E_RST_I_reg,
    IC_REG_SR_ERRWRN_I0,
    D,
    \SINGLE_BIT.s_level_out_d6_reg_0 ,
    IC_SYNC_ISR_BSOFF,
    s_axi_aclk,
    IC_REG_MSR_SBR_I_reg,
    IC_REG_ISR_BSOFF_FS3,
    IC_REG_SR_ERRWRN_I_reg,
    IC_REG_SR_ERRWRN_I_reg_0,
    \IC_REG_SR_ESTAT_I_reg[0] );
  output out;
  output E_RST_I_reg;
  output IC_REG_SR_ERRWRN_I0;
  output [0:0]D;
  input \SINGLE_BIT.s_level_out_d6_reg_0 ;
  input IC_SYNC_ISR_BSOFF;
  input s_axi_aclk;
  input IC_REG_MSR_SBR_I_reg;
  input IC_REG_ISR_BSOFF_FS3;
  input IC_REG_SR_ERRWRN_I_reg;
  input IC_REG_SR_ERRWRN_I_reg_0;
  input [0:0]\IC_REG_SR_ESTAT_I_reg[0] ;

  wire [0:0]D;
  wire E_RST_I_reg;
  wire IC_REG_ISR_BSOFF_FS3;
  wire IC_REG_MSR_SBR_I_reg;
  wire IC_REG_SR_ERRWRN_I0;
  wire IC_REG_SR_ERRWRN_I_reg;
  wire IC_REG_SR_ERRWRN_I_reg_0;
  wire [0:0]\IC_REG_SR_ESTAT_I_reg[0] ;
  wire IC_SYNC_ISR_BSOFF;
  wire \SINGLE_BIT.s_level_out_d6_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign out = s_level_out_d4;
  LUT4 #(
    .INIT(16'h4404)) 
    IC_REG_MSR_SBR_I_i_1
       (.I0(\SINGLE_BIT.s_level_out_d6_reg_0 ),
        .I1(IC_REG_MSR_SBR_I_reg),
        .I2(IC_REG_ISR_BSOFF_FS3),
        .I3(s_level_out_d4),
        .O(E_RST_I_reg));
  LUT3 #(
    .INIT(8'h04)) 
    IC_REG_SR_ERRWRN_I_i_1
       (.I0(s_level_out_d4),
        .I1(IC_REG_SR_ERRWRN_I_reg),
        .I2(IC_REG_SR_ERRWRN_I_reg_0),
        .O(IC_REG_SR_ERRWRN_I0));
  LUT3 #(
    .INIT(8'h10)) 
    \IC_REG_SR_ESTAT_I[0]_i_1 
       (.I0(s_level_out_d4),
        .I1(IC_REG_SR_ERRWRN_I_reg_0),
        .I2(\IC_REG_SR_ESTAT_I_reg[0] ),
        .O(D));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_SYNC_ISR_BSOFF),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_15
   (out,
    \SINGLE_BIT.s_level_out_d6_reg_0 ,
    IC_SYNC_ESR_CRCER,
    s_axi_aclk);
  output out;
  input \SINGLE_BIT.s_level_out_d6_reg_0 ;
  input IC_SYNC_ESR_CRCER;
  input s_axi_aclk;

  wire IC_SYNC_ESR_CRCER;
  wire \SINGLE_BIT.s_level_out_d6_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign out = s_level_out_d4;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_SYNC_ESR_CRCER),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_16
   (out,
    IC_SYNC_ECR_ACK_I_reg,
    \SINGLE_BIT.s_level_out_d6_reg_0 ,
    IC_SYNC_ECR_WEN,
    s_axi_aclk,
    IC_SYNC_ECR_ACK_I_reg_0,
    IC_SYNC_ECR_WEN_FS3,
    IC_SYNC_ECR_ACK_I_reg_1);
  output out;
  output IC_SYNC_ECR_ACK_I_reg;
  input \SINGLE_BIT.s_level_out_d6_reg_0 ;
  input IC_SYNC_ECR_WEN;
  input s_axi_aclk;
  input IC_SYNC_ECR_ACK_I_reg_0;
  input IC_SYNC_ECR_WEN_FS3;
  input IC_SYNC_ECR_ACK_I_reg_1;

  wire IC_SYNC_ECR_ACK_I_reg;
  wire IC_SYNC_ECR_ACK_I_reg_0;
  wire IC_SYNC_ECR_ACK_I_reg_1;
  wire IC_SYNC_ECR_WEN;
  wire IC_SYNC_ECR_WEN_FS3;
  wire \SINGLE_BIT.s_level_out_d6_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign out = s_level_out_d4;
  LUT5 #(
    .INIT(32'h00009600)) 
    IC_SYNC_ECR_ACK_I_i_1
       (.I0(IC_SYNC_ECR_ACK_I_reg_0),
        .I1(IC_SYNC_ECR_WEN_FS3),
        .I2(s_level_out_d4),
        .I3(IC_SYNC_ECR_ACK_I_reg_1),
        .I4(\SINGLE_BIT.s_level_out_d6_reg_0 ),
        .O(IC_SYNC_ECR_ACK_I_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_SYNC_ECR_WEN),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_17
   (out,
    \SINGLE_BIT.s_level_out_d6_reg_0 ,
    IC_SYNC_SR_ERRWRN,
    s_axi_aclk);
  output out;
  input \SINGLE_BIT.s_level_out_d6_reg_0 ;
  input IC_SYNC_SR_ERRWRN;
  input s_axi_aclk;

  wire IC_SYNC_SR_ERRWRN;
  wire \SINGLE_BIT.s_level_out_d6_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign out = s_level_out_d4;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_SYNC_SR_ERRWRN),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_18
   (out,
    IC_REG_ISR_ERROR_I10_out,
    \SINGLE_BIT.s_level_out_d6_reg_0 ,
    IC_SYNC_ESR_FMER,
    s_axi_aclk,
    IC_REG_ESR_FMER_FS3,
    IC_REG_ESR_STER_FS3,
    IC_REG_ISR_ERROR_I_reg,
    IC_REG_ISR_ERROR_I_reg_0,
    IC_REG_ISR_ERROR_I_reg_1);
  output out;
  output IC_REG_ISR_ERROR_I10_out;
  input \SINGLE_BIT.s_level_out_d6_reg_0 ;
  input IC_SYNC_ESR_FMER;
  input s_axi_aclk;
  input IC_REG_ESR_FMER_FS3;
  input IC_REG_ESR_STER_FS3;
  input IC_REG_ISR_ERROR_I_reg;
  input IC_REG_ISR_ERROR_I_reg_0;
  input IC_REG_ISR_ERROR_I_reg_1;

  wire IC_REG_ESR_FMER_FS3;
  wire IC_REG_ESR_STER_FS3;
  wire IC_REG_ISR_ERROR_I10_out;
  wire IC_REG_ISR_ERROR_I_reg;
  wire IC_REG_ISR_ERROR_I_reg_0;
  wire IC_REG_ISR_ERROR_I_reg_1;
  wire IC_SYNC_ESR_FMER;
  wire \SINGLE_BIT.s_level_out_d6_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign out = s_level_out_d4;
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF6FF6)) 
    IC_REG_ISR_ERROR_I_i_2
       (.I0(IC_REG_ESR_FMER_FS3),
        .I1(s_level_out_d4),
        .I2(IC_REG_ESR_STER_FS3),
        .I3(IC_REG_ISR_ERROR_I_reg),
        .I4(IC_REG_ISR_ERROR_I_reg_0),
        .I5(IC_REG_ISR_ERROR_I_reg_1),
        .O(IC_REG_ISR_ERROR_I10_out));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_SYNC_ESR_FMER),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_19
   (out,
    \SINGLE_BIT.s_level_out_d4_reg_0 ,
    \SINGLE_BIT.s_level_out_d6_reg_0 ,
    IC_SYNC_ESR_F_BERR,
    s_axi_aclk,
    IC_REG_ESR_F_BERR_FS3,
    IC_REG_ISR_ERROR_I_i_2,
    IC_REG_ESR_F_STER_FS3,
    IC_REG_ESR_CRCER_FS3,
    IC_REG_ISR_ERROR_I_i_2_0);
  output out;
  output \SINGLE_BIT.s_level_out_d4_reg_0 ;
  input \SINGLE_BIT.s_level_out_d6_reg_0 ;
  input IC_SYNC_ESR_F_BERR;
  input s_axi_aclk;
  input IC_REG_ESR_F_BERR_FS3;
  input IC_REG_ISR_ERROR_I_i_2;
  input IC_REG_ESR_F_STER_FS3;
  input IC_REG_ESR_CRCER_FS3;
  input IC_REG_ISR_ERROR_I_i_2_0;

  wire IC_REG_ESR_CRCER_FS3;
  wire IC_REG_ESR_F_BERR_FS3;
  wire IC_REG_ESR_F_STER_FS3;
  wire IC_REG_ISR_ERROR_I_i_2;
  wire IC_REG_ISR_ERROR_I_i_2_0;
  wire IC_SYNC_ESR_F_BERR;
  wire \SINGLE_BIT.s_level_out_d4_reg_0 ;
  wire \SINGLE_BIT.s_level_out_d6_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign out = s_level_out_d4;
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    IC_REG_ISR_ERROR_I_i_3
       (.I0(s_level_out_d4),
        .I1(IC_REG_ESR_F_BERR_FS3),
        .I2(IC_REG_ISR_ERROR_I_i_2),
        .I3(IC_REG_ESR_F_STER_FS3),
        .I4(IC_REG_ESR_CRCER_FS3),
        .I5(IC_REG_ISR_ERROR_I_i_2_0),
        .O(\SINGLE_BIT.s_level_out_d4_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_SYNC_ESR_F_BERR),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_2
   (out,
    ID_MATCH_EN_FS_D1_reg,
    ID_MATCH_EN_OL,
    \SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ,
    ID_MATCH_EN,
    s_axi_aclk,
    ID_MATCH_EN_FS_D1,
    RXMNF_SET);
  output out;
  output ID_MATCH_EN_FS_D1_reg;
  output ID_MATCH_EN_OL;
  input \SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ;
  input ID_MATCH_EN;
  input s_axi_aclk;
  input ID_MATCH_EN_FS_D1;
  input RXMNF_SET;

  wire ID_MATCH_EN;
  wire ID_MATCH_EN_FS_D1;
  wire ID_MATCH_EN_FS_D1_reg;
  wire ID_MATCH_EN_OL;
  wire RXMNF_SET;
  wire \SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign out = s_level_out_d4;
  LUT4 #(
    .INIT(16'hFFF6)) 
    \FSM_sequential_imm_cs[1]_i_4 
       (.I0(ID_MATCH_EN_FS_D1),
        .I1(s_level_out_d4),
        .I2(RXMNF_SET),
        .I3(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ),
        .O(ID_MATCH_EN_FS_D1_reg));
  LUT2 #(
    .INIT(4'h6)) 
    ID_MATCH_EN_D1_i_1
       (.I0(ID_MATCH_EN_FS_D1),
        .I1(s_level_out_d4),
        .O(ID_MATCH_EN_OL));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ID_MATCH_EN),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_20
   (out,
    \SINGLE_BIT.s_level_out_d4_reg_0 ,
    \SINGLE_BIT.s_level_out_d6_reg_0 ,
    IC_SYNC_ESR_F_CRCER,
    s_axi_aclk,
    IC_REG_ESR_F_CRCER_FS3);
  output out;
  output \SINGLE_BIT.s_level_out_d4_reg_0 ;
  input \SINGLE_BIT.s_level_out_d6_reg_0 ;
  input IC_SYNC_ESR_F_CRCER;
  input s_axi_aclk;
  input IC_REG_ESR_F_CRCER_FS3;

  wire IC_REG_ESR_F_CRCER_FS3;
  wire IC_SYNC_ESR_F_CRCER;
  wire \SINGLE_BIT.s_level_out_d4_reg_0 ;
  wire \SINGLE_BIT.s_level_out_d6_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign out = s_level_out_d4;
  LUT2 #(
    .INIT(4'h6)) 
    IC_REG_ISR_ERROR_I_i_6
       (.I0(s_level_out_d4),
        .I1(IC_REG_ESR_F_CRCER_FS3),
        .O(\SINGLE_BIT.s_level_out_d4_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_SYNC_ESR_F_CRCER),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_21
   (out,
    \SINGLE_BIT.s_level_out_d4_reg_0 ,
    \SINGLE_BIT.s_level_out_d6_reg_0 ,
    IC_SYNC_ESR_F_FMER,
    s_axi_aclk,
    IC_REG_ESR_F_FMER_FS3);
  output out;
  output \SINGLE_BIT.s_level_out_d4_reg_0 ;
  input \SINGLE_BIT.s_level_out_d6_reg_0 ;
  input IC_SYNC_ESR_F_FMER;
  input s_axi_aclk;
  input IC_REG_ESR_F_FMER_FS3;

  wire IC_REG_ESR_F_FMER_FS3;
  wire IC_SYNC_ESR_F_FMER;
  wire \SINGLE_BIT.s_level_out_d4_reg_0 ;
  wire \SINGLE_BIT.s_level_out_d6_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign out = s_level_out_d4;
  LUT2 #(
    .INIT(4'h6)) 
    IC_REG_ISR_ERROR_I_i_5
       (.I0(s_level_out_d4),
        .I1(IC_REG_ESR_F_FMER_FS3),
        .O(\SINGLE_BIT.s_level_out_d4_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_SYNC_ESR_F_FMER),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_22
   (out,
    \SINGLE_BIT.s_level_out_d6_reg_0 ,
    IC_SYNC_ESR_F_STER,
    s_axi_aclk);
  output out;
  input \SINGLE_BIT.s_level_out_d6_reg_0 ;
  input IC_SYNC_ESR_F_STER;
  input s_axi_aclk;

  wire IC_SYNC_ESR_F_STER;
  wire \SINGLE_BIT.s_level_out_d6_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign out = s_level_out_d4;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_SYNC_ESR_F_STER),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_23
   (out,
    IC_REG_SR_LBACK_I0,
    IC_REG_SR_SLEEP_I0,
    \SINGLE_BIT.s_level_out_d6_reg_0 ,
    IC_SYNC_SR_LBACK,
    s_axi_aclk,
    IC_REG_SR_LBACK_I_reg,
    IC_REG_SR_SLEEP_I_reg);
  output out;
  output IC_REG_SR_LBACK_I0;
  output IC_REG_SR_SLEEP_I0;
  input \SINGLE_BIT.s_level_out_d6_reg_0 ;
  input IC_SYNC_SR_LBACK;
  input s_axi_aclk;
  input IC_REG_SR_LBACK_I_reg;
  input IC_REG_SR_SLEEP_I_reg;

  wire IC_REG_SR_LBACK_I0;
  wire IC_REG_SR_LBACK_I_reg;
  wire IC_REG_SR_SLEEP_I0;
  wire IC_REG_SR_SLEEP_I_reg;
  wire IC_SYNC_SR_LBACK;
  wire \SINGLE_BIT.s_level_out_d6_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign out = s_level_out_d4;
  LUT2 #(
    .INIT(4'h2)) 
    IC_REG_SR_LBACK_I_i_1
       (.I0(s_level_out_d4),
        .I1(IC_REG_SR_LBACK_I_reg),
        .O(IC_REG_SR_LBACK_I0));
  LUT3 #(
    .INIT(8'h04)) 
    IC_REG_SR_SLEEP_I_i_1
       (.I0(s_level_out_d4),
        .I1(IC_REG_SR_SLEEP_I_reg),
        .I2(IC_REG_SR_LBACK_I_reg),
        .O(IC_REG_SR_SLEEP_I0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_SYNC_SR_LBACK),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_24
   (\SINGLE_BIT.s_level_out_d4_reg_0 ,
    \SINGLE_BIT.s_level_out_d6_reg_0 ,
    IC_SYNC_ISR_MSGLST,
    s_axi_aclk);
  output \SINGLE_BIT.s_level_out_d4_reg_0 ;
  input \SINGLE_BIT.s_level_out_d6_reg_0 ;
  input IC_SYNC_ISR_MSGLST;
  input s_axi_aclk;

  wire IC_SYNC_ISR_MSGLST;
  wire \SINGLE_BIT.s_level_out_d6_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign \SINGLE_BIT.s_level_out_d4_reg_0  = s_level_out_d4;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_SYNC_ISR_MSGLST),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_25
   (\SINGLE_BIT.s_level_out_d4_reg_0 ,
    \SINGLE_BIT.s_level_out_d6_reg_0 ,
    IC_SYNC_ISR_MSGLST_F1,
    s_axi_aclk);
  output \SINGLE_BIT.s_level_out_d4_reg_0 ;
  input \SINGLE_BIT.s_level_out_d6_reg_0 ;
  input IC_SYNC_ISR_MSGLST_F1;
  input s_axi_aclk;

  wire IC_SYNC_ISR_MSGLST_F1;
  wire \SINGLE_BIT.s_level_out_d6_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign \SINGLE_BIT.s_level_out_d4_reg_0  = s_level_out_d4;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_SYNC_ISR_MSGLST_F1),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_26
   (\SINGLE_BIT.s_level_out_d4_reg_0 ,
    \SINGLE_BIT.s_level_out_d6_reg_0 ,
    IC_SYNC_ISR_MSGLST_TXE,
    s_axi_aclk);
  output \SINGLE_BIT.s_level_out_d4_reg_0 ;
  input \SINGLE_BIT.s_level_out_d6_reg_0 ;
  input IC_SYNC_ISR_MSGLST_TXE;
  input s_axi_aclk;

  wire IC_SYNC_ISR_MSGLST_TXE;
  wire \SINGLE_BIT.s_level_out_d6_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign \SINGLE_BIT.s_level_out_d4_reg_0  = s_level_out_d4;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_SYNC_ISR_MSGLST_TXE),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_27
   (\SINGLE_BIT.s_level_out_d4_reg_0 ,
    \SINGLE_BIT.s_level_out_d6_reg_0 ,
    IC_SYNC_SR_PEE,
    s_axi_aclk);
  output \SINGLE_BIT.s_level_out_d4_reg_0 ;
  input \SINGLE_BIT.s_level_out_d6_reg_0 ;
  input IC_SYNC_SR_PEE;
  input s_axi_aclk;

  wire IC_SYNC_SR_PEE;
  wire \SINGLE_BIT.s_level_out_d6_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign \SINGLE_BIT.s_level_out_d4_reg_0  = s_level_out_d4;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_SYNC_SR_PEE),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_28
   (\SINGLE_BIT.s_level_out_d4_reg_0 ,
    \SINGLE_BIT.s_level_out_d6_reg_0 ,
    IC_SYNC_ISR_RXOK,
    s_axi_aclk);
  output \SINGLE_BIT.s_level_out_d4_reg_0 ;
  input \SINGLE_BIT.s_level_out_d6_reg_0 ;
  input IC_SYNC_ISR_RXOK;
  input s_axi_aclk;

  wire IC_SYNC_ISR_RXOK;
  wire \SINGLE_BIT.s_level_out_d6_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign \SINGLE_BIT.s_level_out_d4_reg_0  = s_level_out_d4;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_SYNC_ISR_RXOK),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_29
   (out,
    IC_REG_SR_NORMAL_I0,
    \SINGLE_BIT.s_level_out_d4_reg_0 ,
    \SINGLE_BIT.s_level_out_d6_reg_0 ,
    IC_SYNC_SR_SLEEP,
    s_axi_aclk,
    IC_REG_SR_NORMAL_I_reg,
    IC_REG_SR_NORMAL_I_reg_0,
    IC_REG_SR_SLEEP_FS3);
  output out;
  output IC_REG_SR_NORMAL_I0;
  output \SINGLE_BIT.s_level_out_d4_reg_0 ;
  input \SINGLE_BIT.s_level_out_d6_reg_0 ;
  input IC_SYNC_SR_SLEEP;
  input s_axi_aclk;
  input IC_REG_SR_NORMAL_I_reg;
  input IC_REG_SR_NORMAL_I_reg_0;
  input IC_REG_SR_SLEEP_FS3;

  wire IC_REG_SR_NORMAL_I0;
  wire IC_REG_SR_NORMAL_I_reg;
  wire IC_REG_SR_NORMAL_I_reg_0;
  wire IC_REG_SR_SLEEP_FS3;
  wire IC_SYNC_SR_SLEEP;
  wire \SINGLE_BIT.s_level_out_d4_reg_0 ;
  wire \SINGLE_BIT.s_level_out_d6_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign out = s_level_out_d4;
  LUT2 #(
    .INIT(4'hB)) 
    IC_REG_MSR_SLEEP_I_i_2
       (.I0(s_level_out_d4),
        .I1(IC_REG_SR_SLEEP_FS3),
        .O(\SINGLE_BIT.s_level_out_d4_reg_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    IC_REG_SR_NORMAL_I_i_1
       (.I0(s_level_out_d4),
        .I1(IC_REG_SR_NORMAL_I_reg),
        .I2(IC_REG_SR_NORMAL_I_reg_0),
        .O(IC_REG_SR_NORMAL_I0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_SYNC_SR_SLEEP),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_3
   (\SINGLE_BIT.s_level_out_d4_reg_0 ,
    \SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ,
    MSG_ON_CAN_BUS,
    s_axi_aclk);
  output \SINGLE_BIT.s_level_out_d4_reg_0 ;
  input \SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ;
  input MSG_ON_CAN_BUS;
  input s_axi_aclk;

  wire MSG_ON_CAN_BUS;
  wire \SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign \SINGLE_BIT.s_level_out_d4_reg_0  = s_level_out_d4;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(MSG_ON_CAN_BUS),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d1_cdc_to_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_30
   (out,
    \SINGLE_BIT.s_level_out_d6_reg_0 ,
    IC_SYNC_ESR_STER,
    s_axi_aclk);
  output out;
  input \SINGLE_BIT.s_level_out_d6_reg_0 ;
  input IC_SYNC_ESR_STER;
  input s_axi_aclk;

  wire IC_SYNC_ESR_STER;
  wire \SINGLE_BIT.s_level_out_d6_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign out = s_level_out_d4;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_SYNC_ESR_STER),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_31
   (out,
    E,
    \SINGLE_BIT.s_level_out_d6_reg_0 ,
    TDCV_CNT_REG_WEN,
    s_axi_aclk,
    TDCV_CNT_REG_WEN_FS3,
    \IC_REG_SR_TDCV_I_reg[0] );
  output out;
  output [0:0]E;
  input \SINGLE_BIT.s_level_out_d6_reg_0 ;
  input TDCV_CNT_REG_WEN;
  input s_axi_aclk;
  input TDCV_CNT_REG_WEN_FS3;
  input \IC_REG_SR_TDCV_I_reg[0] ;

  wire [0:0]E;
  wire \IC_REG_SR_TDCV_I_reg[0] ;
  wire \SINGLE_BIT.s_level_out_d6_reg_0 ;
  wire TDCV_CNT_REG_WEN;
  wire TDCV_CNT_REG_WEN_FS3;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign out = s_level_out_d4;
  LUT3 #(
    .INIT(8'h48)) 
    \IC_REG_SR_TDCV_I[6]_i_1 
       (.I0(TDCV_CNT_REG_WEN_FS3),
        .I1(\IC_REG_SR_TDCV_I_reg[0] ),
        .I2(s_level_out_d4),
        .O(E));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(TDCV_CNT_REG_WEN),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized4_32
   (\SINGLE_BIT.s_level_out_d4_reg_0 ,
    \SINGLE_BIT.s_level_out_d6_reg_0 ,
    IC_SYNC_TSR_WEN,
    s_axi_aclk);
  output \SINGLE_BIT.s_level_out_d4_reg_0 ;
  input \SINGLE_BIT.s_level_out_d6_reg_0 ;
  input IC_SYNC_TSR_WEN;
  input s_axi_aclk;

  wire IC_SYNC_TSR_WEN;
  wire \SINGLE_BIT.s_level_out_d6_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign \SINGLE_BIT.s_level_out_d4_reg_0  = s_level_out_d4;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_SYNC_TSR_WEN),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized5
   (out,
    D,
    \SINGLE_BIT.s_level_out_d6_reg_0 ,
    IC_SYNC_SR_RSTST,
    s_axi_aclk,
    \IC_REG_SR_ESTAT_I_reg[1] ,
    \IC_REG_SR_ESTAT_I_reg[1]_0 );
  output out;
  output [0:0]D;
  input \SINGLE_BIT.s_level_out_d6_reg_0 ;
  input IC_SYNC_SR_RSTST;
  input s_axi_aclk;
  input [0:0]\IC_REG_SR_ESTAT_I_reg[1] ;
  input \IC_REG_SR_ESTAT_I_reg[1]_0 ;

  wire [0:0]D;
  wire [0:0]\IC_REG_SR_ESTAT_I_reg[1] ;
  wire \IC_REG_SR_ESTAT_I_reg[1]_0 ;
  wire IC_SYNC_SR_RSTST;
  wire \SINGLE_BIT.s_level_out_d6_reg_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign out = s_level_out_d4;
  LUT3 #(
    .INIT(8'hF4)) 
    \IC_REG_SR_ESTAT_I[1]_i_1 
       (.I0(s_level_out_d4),
        .I1(\IC_REG_SR_ESTAT_I_reg[1] ),
        .I2(\IC_REG_SR_ESTAT_I_reg[1]_0 ),
        .O(D));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDSE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_SYNC_SR_RSTST),
        .Q(s_level_out_d1_cdc_to),
        .S(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDSE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .S(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDSE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .S(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDSE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .S(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDSE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .S(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDSE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .S(\SINGLE_BIT.s_level_out_d6_reg_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized6
   (D,
    \MULTI_BIT.s_level_out_bus_d4_reg[0]_0 ,
    \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[1]_0 ,
    s_axi_aclk);
  output [1:0]D;
  input \MULTI_BIT.s_level_out_bus_d4_reg[0]_0 ;
  input [0:0]\MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[1]_0 ;
  input s_axi_aclk;

  wire [0:0]\MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[1]_0 ;
  wire \MULTI_BIT.s_level_out_bus_d4_reg[0]_0 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign D[1:0] = s_level_out_bus_d4;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b1),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(\MULTI_BIT.s_level_out_bus_d4_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\MULTI_BIT.s_level_out_bus_d1_cdc_to_reg[1]_0 ),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(\MULTI_BIT.s_level_out_bus_d4_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(\MULTI_BIT.s_level_out_bus_d4_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(\MULTI_BIT.s_level_out_bus_d4_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(\MULTI_BIT.s_level_out_bus_d4_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(\MULTI_BIT.s_level_out_bus_d4_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(\MULTI_BIT.s_level_out_bus_d4_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(\MULTI_BIT.s_level_out_bus_d4_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(\MULTI_BIT.s_level_out_bus_d4_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(\MULTI_BIT.s_level_out_bus_d4_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(\MULTI_BIT.s_level_out_bus_d4_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \MULTI_BIT.s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(\MULTI_BIT.s_level_out_bus_d4_reg[0]_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized7
   (\SINGLE_BIT.s_level_out_d6_reg_0 ,
    \SINGLE_BIT.s_level_out_d6_reg_1 ,
    IC_SYNC_ISR_ARBLST,
    s_axi_aclk);
  output \SINGLE_BIT.s_level_out_d6_reg_0 ;
  input \SINGLE_BIT.s_level_out_d6_reg_1 ;
  input IC_SYNC_ISR_ARBLST;
  input s_axi_aclk;

  wire IC_SYNC_ISR_ARBLST;
  wire \SINGLE_BIT.s_level_out_d6_reg_1 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign \SINGLE_BIT.s_level_out_d6_reg_0  = s_level_out_d6;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_SYNC_ISR_ARBLST),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

(* ORIG_REF_NAME = "canfd_v2_0_1_cdc_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_cdc_sync__parameterized7_33
   (\SINGLE_BIT.s_level_out_d6_reg_0 ,
    \SINGLE_BIT.s_level_out_d6_reg_1 ,
    IC_SYNC_ISR_TXOK,
    s_axi_aclk);
  output \SINGLE_BIT.s_level_out_d6_reg_0 ;
  input \SINGLE_BIT.s_level_out_d6_reg_1 ;
  input IC_SYNC_ISR_TXOK;
  input s_axi_aclk;

  wire IC_SYNC_ISR_TXOK;
  wire \SINGLE_BIT.s_level_out_d6_reg_1 ;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;

  assign \SINGLE_BIT.s_level_out_d6_reg_0  = s_level_out_d6;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d1_cdc_to_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IC_SYNC_ISR_TXOK),
        .Q(s_level_out_d1_cdc_to),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d2_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d3_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d4_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d5_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \SINGLE_BIT.s_level_out_d6_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(\SINGLE_BIT.s_level_out_d6_reg_1 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_slave_attachment
   (bus2ip_rnw_i_reg_0,
    Bus2IP_CS,
    s_axi_rvalid,
    s_axi_bvalid,
    s_axi_rdata,
    \bus2ip_addr_i_reg[14]_0 ,
    Bus2IP_Reset,
    s_axi_aclk,
    s_axi_arvalid,
    s_axi_awvalid,
    s_axi_wvalid,
    s_axi_wready,
    E_DATA_ACK,
    s_axi_bready,
    s_axi_rready,
    s_axi_araddr,
    s_axi_awaddr,
    dest_rst,
    Q);
  output bus2ip_rnw_i_reg_0;
  output Bus2IP_CS;
  output s_axi_rvalid;
  output s_axi_bvalid;
  output [31:0]s_axi_rdata;
  output [12:0]\bus2ip_addr_i_reg[14]_0 ;
  input Bus2IP_Reset;
  input s_axi_aclk;
  input s_axi_arvalid;
  input s_axi_awvalid;
  input s_axi_wvalid;
  input s_axi_wready;
  input E_DATA_ACK;
  input s_axi_bready;
  input s_axi_rready;
  input [12:0]s_axi_araddr;
  input [12:0]s_axi_awaddr;
  input dest_rst;
  input [31:0]Q;

  wire Bus2IP_CS;
  wire Bus2IP_Reset;
  wire E_DATA_ACK;
  wire \FSM_onehot_state[0]_i_1_n_0 ;
  wire \FSM_onehot_state[1]_i_1_n_0 ;
  wire \FSM_onehot_state[2]_i_1_n_0 ;
  wire \FSM_onehot_state[3]_i_1_n_0 ;
  wire \FSM_onehot_state_reg_n_0_[0] ;
  wire \FSM_onehot_state_reg_n_0_[1] ;
  wire [31:0]Q;
  wire \bus2ip_addr_i[10]_i_1_n_0 ;
  wire \bus2ip_addr_i[11]_i_1_n_0 ;
  wire \bus2ip_addr_i[12]_i_1_n_0 ;
  wire \bus2ip_addr_i[13]_i_1_n_0 ;
  wire \bus2ip_addr_i[14]_i_1_n_0 ;
  wire \bus2ip_addr_i[14]_i_2_n_0 ;
  wire \bus2ip_addr_i[2]_i_1_n_0 ;
  wire \bus2ip_addr_i[3]_i_1_n_0 ;
  wire \bus2ip_addr_i[4]_i_1_n_0 ;
  wire \bus2ip_addr_i[5]_i_1_n_0 ;
  wire \bus2ip_addr_i[6]_i_1_n_0 ;
  wire \bus2ip_addr_i[7]_i_1_n_0 ;
  wire \bus2ip_addr_i[8]_i_1_n_0 ;
  wire \bus2ip_addr_i[9]_i_1_n_0 ;
  wire [12:0]\bus2ip_addr_i_reg[14]_0 ;
  wire bus2ip_rnw_i_reg_0;
  wire dest_rst;
  wire rst;
  wire s_axi_aclk;
  wire [12:0]s_axi_araddr;
  wire s_axi_arvalid;
  wire [12:0]s_axi_awaddr;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bresp_i;
  wire s_axi_bvalid;
  wire s_axi_bvalid_i_i_1_n_0;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rresp_i;
  wire s_axi_rvalid;
  wire s_axi_rvalid_i_i_1_n_0;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire start2;
  wire start2_i_1_n_0;
  wire state1__2;

  LUT6 #(
    .INIT(64'hFF0CAEAE0C0C0C0C)) 
    \FSM_onehot_state[0]_i_1 
       (.I0(s_axi_bresp_i),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(state1__2),
        .I3(s_axi_rresp_i),
        .I4(bus2ip_rnw_i_reg_0),
        .I5(E_DATA_ACK),
        .O(\FSM_onehot_state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h888F8F8F88888888)) 
    \FSM_onehot_state[1]_i_1 
       (.I0(state1__2),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(s_axi_arvalid),
        .I3(s_axi_awvalid),
        .I4(s_axi_wvalid),
        .I5(\FSM_onehot_state_reg_n_0_[1] ),
        .O(\FSM_onehot_state[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \FSM_onehot_state[1]_i_2 
       (.I0(s_axi_bvalid),
        .I1(s_axi_bready),
        .I2(s_axi_rvalid),
        .I3(s_axi_rready),
        .O(state1__2));
  LUT6 #(
    .INIT(64'h0800FFFF08000800)) 
    \FSM_onehot_state[2]_i_1 
       (.I0(s_axi_awvalid),
        .I1(s_axi_wvalid),
        .I2(s_axi_arvalid),
        .I3(\FSM_onehot_state_reg_n_0_[1] ),
        .I4(s_axi_wready),
        .I5(s_axi_bresp_i),
        .O(\FSM_onehot_state[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8FFF8888)) 
    \FSM_onehot_state[3]_i_1 
       (.I0(s_axi_arvalid),
        .I1(\FSM_onehot_state_reg_n_0_[1] ),
        .I2(E_DATA_ACK),
        .I3(bus2ip_rnw_i_reg_0),
        .I4(s_axi_rresp_i),
        .O(\FSM_onehot_state[3]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "SM_READ:1000,SM_WRITE:0100,SM_RESP:0001,SM_IDLE:0010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[0] ),
        .R(rst));
  (* FSM_ENCODED_STATES = "SM_READ:1000,SM_WRITE:0100,SM_RESP:0001,SM_IDLE:0010" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[1] ),
        .S(rst));
  (* FSM_ENCODED_STATES = "SM_READ:1000,SM_WRITE:0100,SM_RESP:0001,SM_IDLE:0010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[2]_i_1_n_0 ),
        .Q(s_axi_bresp_i),
        .R(rst));
  (* FSM_ENCODED_STATES = "SM_READ:1000,SM_WRITE:0100,SM_RESP:0001,SM_IDLE:0010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[3]_i_1_n_0 ),
        .Q(s_axi_rresp_i),
        .R(rst));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_canfd_v2_0_1_address_decoder I_DECODER
       (.Bus2IP_CS(Bus2IP_CS),
        .E_DATA_ACK(E_DATA_ACK),
        .Q(start2),
        .dest_rst(dest_rst),
        .s_axi_aclk(s_axi_aclk));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \bus2ip_addr_i[10]_i_1 
       (.I0(s_axi_araddr[8]),
        .I1(s_axi_awaddr[8]),
        .I2(s_axi_arvalid),
        .O(\bus2ip_addr_i[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \bus2ip_addr_i[11]_i_1 
       (.I0(s_axi_araddr[9]),
        .I1(s_axi_awaddr[9]),
        .I2(s_axi_arvalid),
        .O(\bus2ip_addr_i[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \bus2ip_addr_i[12]_i_1 
       (.I0(s_axi_araddr[10]),
        .I1(s_axi_awaddr[10]),
        .I2(s_axi_arvalid),
        .O(\bus2ip_addr_i[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \bus2ip_addr_i[13]_i_1 
       (.I0(s_axi_araddr[11]),
        .I1(s_axi_awaddr[11]),
        .I2(s_axi_arvalid),
        .O(\bus2ip_addr_i[13]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hC888)) 
    \bus2ip_addr_i[14]_i_1 
       (.I0(s_axi_arvalid),
        .I1(\FSM_onehot_state_reg_n_0_[1] ),
        .I2(s_axi_wvalid),
        .I3(s_axi_awvalid),
        .O(\bus2ip_addr_i[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \bus2ip_addr_i[14]_i_2 
       (.I0(s_axi_araddr[12]),
        .I1(s_axi_awaddr[12]),
        .I2(s_axi_arvalid),
        .O(\bus2ip_addr_i[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \bus2ip_addr_i[2]_i_1 
       (.I0(s_axi_araddr[0]),
        .I1(s_axi_awaddr[0]),
        .I2(s_axi_arvalid),
        .O(\bus2ip_addr_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \bus2ip_addr_i[3]_i_1 
       (.I0(s_axi_araddr[1]),
        .I1(s_axi_awaddr[1]),
        .I2(s_axi_arvalid),
        .O(\bus2ip_addr_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \bus2ip_addr_i[4]_i_1 
       (.I0(s_axi_araddr[2]),
        .I1(s_axi_awaddr[2]),
        .I2(s_axi_arvalid),
        .O(\bus2ip_addr_i[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \bus2ip_addr_i[5]_i_1 
       (.I0(s_axi_araddr[3]),
        .I1(s_axi_awaddr[3]),
        .I2(s_axi_arvalid),
        .O(\bus2ip_addr_i[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \bus2ip_addr_i[6]_i_1 
       (.I0(s_axi_araddr[4]),
        .I1(s_axi_awaddr[4]),
        .I2(s_axi_arvalid),
        .O(\bus2ip_addr_i[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \bus2ip_addr_i[7]_i_1 
       (.I0(s_axi_araddr[5]),
        .I1(s_axi_awaddr[5]),
        .I2(s_axi_arvalid),
        .O(\bus2ip_addr_i[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \bus2ip_addr_i[8]_i_1 
       (.I0(s_axi_araddr[6]),
        .I1(s_axi_awaddr[6]),
        .I2(s_axi_arvalid),
        .O(\bus2ip_addr_i[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \bus2ip_addr_i[9]_i_1 
       (.I0(s_axi_araddr[7]),
        .I1(s_axi_awaddr[7]),
        .I2(s_axi_arvalid),
        .O(\bus2ip_addr_i[9]_i_1_n_0 ));
  FDRE \bus2ip_addr_i_reg[10] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[14]_i_1_n_0 ),
        .D(\bus2ip_addr_i[10]_i_1_n_0 ),
        .Q(\bus2ip_addr_i_reg[14]_0 [8]),
        .R(rst));
  FDRE \bus2ip_addr_i_reg[11] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[14]_i_1_n_0 ),
        .D(\bus2ip_addr_i[11]_i_1_n_0 ),
        .Q(\bus2ip_addr_i_reg[14]_0 [9]),
        .R(rst));
  FDRE \bus2ip_addr_i_reg[12] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[14]_i_1_n_0 ),
        .D(\bus2ip_addr_i[12]_i_1_n_0 ),
        .Q(\bus2ip_addr_i_reg[14]_0 [10]),
        .R(rst));
  FDRE \bus2ip_addr_i_reg[13] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[14]_i_1_n_0 ),
        .D(\bus2ip_addr_i[13]_i_1_n_0 ),
        .Q(\bus2ip_addr_i_reg[14]_0 [11]),
        .R(rst));
  FDRE \bus2ip_addr_i_reg[14] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[14]_i_1_n_0 ),
        .D(\bus2ip_addr_i[14]_i_2_n_0 ),
        .Q(\bus2ip_addr_i_reg[14]_0 [12]),
        .R(rst));
  FDRE \bus2ip_addr_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[14]_i_1_n_0 ),
        .D(\bus2ip_addr_i[2]_i_1_n_0 ),
        .Q(\bus2ip_addr_i_reg[14]_0 [0]),
        .R(rst));
  FDRE \bus2ip_addr_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[14]_i_1_n_0 ),
        .D(\bus2ip_addr_i[3]_i_1_n_0 ),
        .Q(\bus2ip_addr_i_reg[14]_0 [1]),
        .R(rst));
  FDRE \bus2ip_addr_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[14]_i_1_n_0 ),
        .D(\bus2ip_addr_i[4]_i_1_n_0 ),
        .Q(\bus2ip_addr_i_reg[14]_0 [2]),
        .R(rst));
  FDRE \bus2ip_addr_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[14]_i_1_n_0 ),
        .D(\bus2ip_addr_i[5]_i_1_n_0 ),
        .Q(\bus2ip_addr_i_reg[14]_0 [3]),
        .R(rst));
  FDRE \bus2ip_addr_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[14]_i_1_n_0 ),
        .D(\bus2ip_addr_i[6]_i_1_n_0 ),
        .Q(\bus2ip_addr_i_reg[14]_0 [4]),
        .R(rst));
  FDRE \bus2ip_addr_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[14]_i_1_n_0 ),
        .D(\bus2ip_addr_i[7]_i_1_n_0 ),
        .Q(\bus2ip_addr_i_reg[14]_0 [5]),
        .R(rst));
  FDRE \bus2ip_addr_i_reg[8] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[14]_i_1_n_0 ),
        .D(\bus2ip_addr_i[8]_i_1_n_0 ),
        .Q(\bus2ip_addr_i_reg[14]_0 [6]),
        .R(rst));
  FDRE \bus2ip_addr_i_reg[9] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[14]_i_1_n_0 ),
        .D(\bus2ip_addr_i[9]_i_1_n_0 ),
        .Q(\bus2ip_addr_i_reg[14]_0 [7]),
        .R(rst));
  FDRE bus2ip_rnw_i_reg
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[14]_i_1_n_0 ),
        .D(s_axi_arvalid),
        .Q(bus2ip_rnw_i_reg_0),
        .R(rst));
  FDRE rst_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Bus2IP_Reset),
        .Q(rst),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h08FF0808)) 
    s_axi_bvalid_i_i_1
       (.I0(s_axi_bresp_i),
        .I1(E_DATA_ACK),
        .I2(bus2ip_rnw_i_reg_0),
        .I3(s_axi_bready),
        .I4(s_axi_bvalid),
        .O(s_axi_bvalid_i_i_1_n_0));
  FDRE s_axi_bvalid_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_axi_bvalid_i_i_1_n_0),
        .Q(s_axi_bvalid),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[0]),
        .Q(s_axi_rdata[0]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[10] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[10]),
        .Q(s_axi_rdata[10]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[11] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[11]),
        .Q(s_axi_rdata[11]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[12] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[12]),
        .Q(s_axi_rdata[12]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[13] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[13]),
        .Q(s_axi_rdata[13]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[14] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[14]),
        .Q(s_axi_rdata[14]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[15] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[15]),
        .Q(s_axi_rdata[15]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[16] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[16]),
        .Q(s_axi_rdata[16]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[17] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[17]),
        .Q(s_axi_rdata[17]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[18] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[18]),
        .Q(s_axi_rdata[18]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[19] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[19]),
        .Q(s_axi_rdata[19]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[1]),
        .Q(s_axi_rdata[1]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[20] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[20]),
        .Q(s_axi_rdata[20]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[21] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[21]),
        .Q(s_axi_rdata[21]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[22] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[22]),
        .Q(s_axi_rdata[22]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[23] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[23]),
        .Q(s_axi_rdata[23]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[24] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[24]),
        .Q(s_axi_rdata[24]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[25] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[25]),
        .Q(s_axi_rdata[25]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[26] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[26]),
        .Q(s_axi_rdata[26]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[27] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[27]),
        .Q(s_axi_rdata[27]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[28] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[28]),
        .Q(s_axi_rdata[28]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[29] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[29]),
        .Q(s_axi_rdata[29]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[2]),
        .Q(s_axi_rdata[2]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[30] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[30]),
        .Q(s_axi_rdata[30]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[31] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[31]),
        .Q(s_axi_rdata[31]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[3]),
        .Q(s_axi_rdata[3]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[4]),
        .Q(s_axi_rdata[4]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[5]),
        .Q(s_axi_rdata[5]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[6]),
        .Q(s_axi_rdata[6]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[7]),
        .Q(s_axi_rdata[7]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[8] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[8]),
        .Q(s_axi_rdata[8]),
        .R(rst));
  FDRE \s_axi_rdata_i_reg[9] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[9]),
        .Q(s_axi_rdata[9]),
        .R(rst));
  LUT5 #(
    .INIT(32'h80FF8080)) 
    s_axi_rvalid_i_i_1
       (.I0(s_axi_rresp_i),
        .I1(E_DATA_ACK),
        .I2(bus2ip_rnw_i_reg_0),
        .I3(s_axi_rready),
        .I4(s_axi_rvalid),
        .O(s_axi_rvalid_i_i_1_n_0));
  FDRE s_axi_rvalid_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_axi_rvalid_i_i_1_n_0),
        .Q(s_axi_rvalid),
        .R(rst));
  LUT4 #(
    .INIT(16'hF800)) 
    start2_i_1
       (.I0(s_axi_wvalid),
        .I1(s_axi_awvalid),
        .I2(s_axi_arvalid),
        .I3(\FSM_onehot_state_reg_n_0_[1] ),
        .O(start2_i_1_n_0));
  FDRE start2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(start2_i_1_n_0),
        .Q(start2),
        .R(rst));
endmodule
`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "XILINX"
`pragma protect encrypt_agent_info = "Xilinx Encryption Tool 2014"
`pragma protect key_keyowner="Cadence Design Systems.", key_keyname="cds_rsa_key", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=64)
`pragma protect key_block
q0POklO33vo7nh+oAZ2DSyxNsO34aYVr4XA+Uruz6ATkW7PnQfWUICP6yyGCYwdr0eKqkaXAdOE2
hdr7oYRrXQ==

`pragma protect key_keyowner="Synopsys", key_keyname="SNPS-VCS-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
dibW9ATv0ItMsw4Pu7pzG101Kkt34bEMO/9FJCgVMIiefaZIrNDPRtU5FNd/6kq/DFyuTc5jWi0B
hKy8UIHMu+1mzwL52G71VWWyxM1lmSf9e881hu6F2wbLtkbeFExXGVY8WyrC3oECMzxcoUWjQ5GH
siiFGC7fOVjReBOYqgc=

`pragma protect key_keyowner="Aldec", key_keyname="ALDEC15_001", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
x3rVZodyzRJ4CdNKyMJBbkX3IJO7inyF7SKw7QrgELUXwa09iDs61kyofpnQ8LeKSXDjrhoygga1
H7yAzBbDTdz84Vkz4d8FrfQnZjGiZAFjavx/5i4LUkeb/r2Xbr8k8S9phsHbEEPqw2LeK2+0AlRz
LKIXqtOStd1xsSGPtR+BDjK2YM7QexDKolDdsRt9ixI6ry3VQWI71wMS+qZhApH4T0TUWFbqJcsF
U6OLbCV5PW6YS6ByI4OI6TG9z95jg6ZwdoPwRdv111TMGXTZ83CUl6TQQ1QUtPXaxQZW7YMWSH3V
M+qy0BwhRaOX+Tlawmj/Hl0CIAmLeVtHi+W5tQ==

`pragma protect key_keyowner="ATRENTA", key_keyname="ATR-SG-2015-RSA-3", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
psOI38v8NQO1n+9p+m/qgDRSeUOjCLl1pTQYTqvDr8rCUEMoDeAwJVzlgrfMsVjFg4UmZKri+Rau
SoK4VGng0JIce1Nob1jm4V4B88L/OPX9lBDRdsVBvsWJ6bhokwfH0NbqFuc4gRP1YrOrQF1Gzhum
memL1pP+qGNki0bh27rYNzMgo9igjkI5x1WhkOyuPsiwXGOL84NxCP3JP+WzcwZLG8pH84Y/PW/B
98BGL6m/ZGe+0MmO9jGySqPaZ47cW+K0gFqFtA9z19A3DHJy2qK5T3jEgs5JcPXKuKdsLIh8VZ2d
Kw5SqGSktLO+0CvpXrKm5A1rgrtLCAKpyyDQaQ==

`pragma protect key_keyowner="Xilinx", key_keyname="xilinxt_2019_02", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
IINTDAOvyvaJquTxDJZZvmhX82v/9uLBZmxw6Kes0RU1XWVBob7FIAuHSyih+smQCEPyvejHsC4g
RiBDec1bnlpz8RhMz0X5apykgDCMuWZI3xxxpsLkPEizGRHN6/1/UIkrYmB5vPFAod1/7oToX67/
g/Ja693EvNHnBbpkLCH5Fa136Y+7SYFDJSZZpfcaHJOUf/EK7kV/GbkOig+52T4hCnG6yPyuVUIa
umnX2VsX2LSKA1KvjfJOMGwSw6J44T38Uwf872H/c4bs/hKAnb3D3KZKPULUHQ6ebFr+/kmxR/vj
KfVirYxaI1FGZglNs2AtMr9cPLB36VCJf0K0oA==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VELOCE-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
kTsKzuFaBn9PhMZSOzh9SrzFrig7Kk6qpxRFJvWSYMN6yzrjKUf1VPK26BTumtNt1R2ZOeaFPYV7
epzhmZExoQPpr5688uUrHCRlGm/XodbxKmJxt3mbCiK7dg/rXzk7VImFtDK2urNxhAAGGxtspjDB
jZAz2CxKPkz7p+2wWUE=

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VERIF-SIM-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
XMpnd6UXk/RDimAJQu5m8g07Ka4hJkXTwZEjsScaudfDGZGQelCUVMASC3uVQ6AgA/lEMOthWkhi
KK1KINKJkrwzA4Kb7RIh78saggHWaMBZPlkYCe2eHYPbN8D4vyPJ7QDQJM3fErZX2VrtJrweNjbJ
ijmld0mZH9ksi8fvOFimRKqf3T3aEFbpWmZhxK9yBj8O3QbgW7AYCXUW61F1tjIpTzhD2wJNSHZV
RIivVY6OvItDNwHm34yE0APfT+olHWhLACcw/4EVhBfasSdqprjE59dcHeqjXIBEwFh5KshmGxh9
JefhJqrbC8WCeDsVJvWutSP0K04lxJMealfSJg==

`pragma protect data_method = "AES128-CBC"
`pragma protect encoding = (enctype = "BASE64", line_length = 76, bytes = 23552)
`pragma protect data_block
w0sPvbyPLCmWWvtejd1KErCxbdaWRTKE224cUfzI9QiPpCcfZNvs39IjYguEoEh/LD6w5PxecOEQ
kD+zbAL4R17FDT7VqfT6XpuPJvajTCQCioYznWYilv4/e2mxzbb8jzkNgIEAl3RuN+pnsPQ0lfoA
yFOyknJk0/M/lwbQUlgkerWQ9XBKXZdsnrTeY5Twv2GpIH+ScMrBq/o1iSldOu8w+qm8OWoq4fch
lPgDM+3qJumVkDARN1Ne8fod8epHrbRU6DJP68xlY90U1ujaGMEQEJje4Tf5ZFeH1WN6fWJBYGuM
jG6XNf48i2g8pPNwcu+OVvaDZynraL1zNHLQ5lEDAEnPEZxxhHPu+G3NRyJsce++Xe1+if5KisgY
/2hEaqWHneEJ+XovYvM3xhzWB0A5XM13tu9J9N6NdWSSelBU4S1ehfvmQ1jJvSGvdd1HUhDRIPOE
dCxy/4FPlbRxJ1TH90ur5XJPww0ALIjDEErUIKIZpYWD8sNyoN/kw1ZQfoOK5cibR44qW28ko19g
XKiZD7I4KXfsxKJuUjcLDDLQatbDbQq8X+KknmztXOdjcjZ4zggYO4nrM8jWlOx+GubEMf0Ds93D
PbL2hEiX8ecqC78qlSRAUWeXFeV8K4g9kWqeOv45XB7qPaRuZwKsOhej3xGdIg0VUccHQslQOFjK
jxHZlgWtxkl4jbOS/9E7sYpUy8Q4A3XCuBdSlfag79f3MqqJn/Kdza6ZmBfDJoLYX7dpZijyzOLo
h+tiqXoly7+jAatsVaKJ65iDHRtFrfNBNWdz1VWvAUvLFY8OonCVP+pExflzYiVdLfIXWqzDgz1O
57c2idHacp9+SeUgZczdmRQahPQCLq6jut5/WaHoNqExxrC7dxOlt6HM6lxYzczBV5Lk+0flZAEG
WNPhw5SjMkTf2nKVYAslLkqXhqNZh5yHLT2t/7euytXwiT7UtAYyQERQNR4aeAzCIvzL8dTHhZKY
OTA46P6RGH1c3GW7UJQhJn7W3IPpyq7I2JYwIarJtsYRT7hvC+BuQa0ZKNNvnNaON67mR8nDFoec
QseexxFJW7XxmXxfL9hU8oV17CODl/KqThaM0IGvsDHAjJhWBBdEpX2Lmomx/xleVe9JudbtHjv5
hswavMwvYbqEhKWiKTgveOxMEBHsnWFBi2+n3tgC4VUMaczbuQJxhrAAVXSQCR2RQ/5qrpDY4Y/s
3sX4GcwPgQYdBPscHQM1GKNZSk4dTI4s+1avo5vUBx+pWX95cjI2j02LeOA2c2K8bgknVSSFomih
l6or1warh9IvTRhCsMEjNCBfLSzrcnFedOYvU4pJty72LdWeke8BBJH90pzUj0X4nQYDtgFWY9yI
wsPR2OI/B93ZL8J7UoxLuKTNBnKvwGo+Po5UlODYOYxpPwfLLlGy7q0EgwzSe1dWrmAkMtKCTj2r
+jYO/KV01tf9HuGbynHflVLOOxrdL146/+fi2PPNHUTF0iYFUw9ZtBiELe5aRnCuA1FNqU7gYQwk
aB8q+k8MOTT9WofCOeVSNM2rpAn57kjSQaL4pqhF0xQPMjr2YKU7UL5DpBukGrTJTdnwJppAFGGB
ZjHO0eCyk3rhVglFjgF2jbzvtKWZZiPScj4Y0fEfI4Zz/ELxtGk8WzfU3rwQl9XWzOLd5/l2K/G4
4GtvLca5XcjCyyRowAH/WCCEfcUpvRSdiXDARa6UOILJaiSYLOQkHx7YQNDc0Qw1TmtVOUzO9zrq
pS7UOYBt0GpO4beFVGLXdTViK5ZGucLh6QCIZMvhE08qeSS1Axr9QOtdzuiXc4/wGfFi0ZnkchmP
ralqnDbZFK3DlPm3/jU5InFNhYxgWeMyxIzDMFUZzViT5RVSvsVB7xSUld7DOlQ/8mx03ceYY6lp
8oZcUqc5/ZGdGmbOkmmpnrtV536bMxo+SfE+xiYoRV5rRRjdpTE1xk9nDz/3O/jle1wGQTcKL6ds
C1xXmF45Tt53XqLLaUjZ1uGC5OnsCLDW9nYuC/gvWx0mX8xkRBNnYnEWLWk5HxwcD6ekY6gMxnBg
Etw/KGy9KZauN3HiJ9sF+hiaBuq1IbjZSHNY32GazkjTTLNu2Ct2wfJA85gmhlLRuc06KzKgxb0v
CR3aaPpwJtWLUeEm0Bn/RIWZv7Yqzc5/ekXPpxSDx+450kwsPDz5w4N2j7G1sZBN/Rxb678xouqu
xSKPE8yBO0+4h6jIViZBO3+XDUf6NKWjpcFbbDdB3BgR6IzYerKQBqZI5NLiZ5xR+WTML9w3Voji
GOi4CiE0yHMUjdKWuYHctrh5jkDNGAoT5XiOjQjM8ssqu76TAKTFyGT7JM+T5X+WsLgkmc4ga1Xc
Om9pEeD5fNYOWAPhZtU5b/BZHLAFcMmcY4kkeF0V5asc6sSdXL6MeR6VK1pYWp3oxEqC9zJ+qLgF
nCmAiu5cccrQ70eq9LA5HTLgCGNtXCdqSz96bcZqoQuoNwwfR2gp1EqoCck6g/jbLRY0CzWJ6Kwc
Cmo357Q/xnqh+GehJKoWjfTOhbp8XE2KWFbqXOL2mn+TafWLpk6I/SLA4TMEbuZr4kDdwkySVH4c
lSfVgKrqlteKf0BbNCS20kK2PEDOxhE6Mv4EJBynMCVw+L5aL98tf0Ror0si0ZCTvuS3Ge3oOA2r
vunyLRwnSZMbLDX1cEtXiqNqXL/ajMhDTM07Mfgk8uoSM8NKZAPcnBBquQo6ApvjArx9vXC9LG+6
kodJS+h6CgTv7Hyp4tjPWhP1BtVPHOqWr4WWfCF/ukQY0thXZxlV8JFOgZuh6ZXnikgR5gDXCgjq
NWhDme9SOlO7Yzx+SFQh3aDOb5dKjseI2Zse1iJXs3Gm5c1EY2Stj0jzuwcHMSt5cp1pK0ZcVtxN
sPt2851ZdY+OBbn2RBBMJLEP09D9HN2RC8Sk00NdTaA4r//XgUzy2Q3WkPv5gZBJ6tOnUcuKIBpz
f5lBl9rHbOWvEJja5QIsqxAmLBWpliCSwwJCAUFnG2dhULH+9IE9wLTcrFtlQhJJSv8Au9dCxIVC
dXi2FOTmEvFi+sGhwr4tMA3qWjumOTarNT4r0HJKTn5YgojzcuHydzFq02c0Le/zn/mFj1/m2TuP
Lh9JfLhChQ6cmqeum5tlp5/6dl/zcrs20QS+Fy1y2WOOmK044lzifggThzWJbvRqhE7Xg+bsIOK9
ih5m8OJNb0RuYFQLQmB3LVpUGmf/gSTXHa5hS08BMUzBP9mdIU9uE6qCFSblT+PSRRbU5CAFHbrA
qlGnf0Jz+YKqLL60G61fS6VeGgoW+PG3+FeHWF7jsaGPHJosFKZiuoy3s8mGJiOhJkfSKcO9PGOu
Ni2d8Kzl4qHYhL4YXpdnbFYRoqcClyXbzBxjriDiued99ffZEaEOjfaCTdV1aWUURafwEYsGnfLw
/ke+E0UrqlBF3ak539hDtQeWDkILp46cgpTz7nXIYM7vZ98ym7xfOrfHXZcS4YhoiOrG82sEbCMD
f+EkP6KOgsClLQjj6GdR8qHJAZo3ns+qFcUrWSxGByVYzkj+TEiciVEG4ePIoAd6eaberd0+ySvq
ZQp82o5L292LL3V4eWt7ruYZigAehBHkpPpxMYYh8pMBDCYSSGz0gtBuSEeMeZZX82o3HTM0UFhD
GfYjC1n2YPK/hwiYrQybAtIGcFEt4LIlZ8SYY/Kkqi3YpicHQLHte74twkmELDplifK1UrQ3BYfA
WcJycgnuwtbcTPscUUBS1fuM7NcjRNzB8hP9+YWOez4WX9UQRqSHaxzEN0l+LoZ6IoIj7GfYFmlz
ZAVayqOJVilSNLVv9fqiQu9+VfLIXxuc4kJ78p7UoV8SHzywTqk76VWmzoPzlIHxxbKfiRmBQ1mf
zbEOEfpDA2MQWeekYzhYJEs4nfI6es+c913/Cgi7Bp7IchXd6UAidnrZ/4CJFZdIJCIGBfzH3SXD
YqwJwBpbN7pYQ4lIrsriEHbtRFVj9A+wKwwHe3jvuVwh3Jjy6ecmf7cGHdXZ/2EwT3k4WHoQga33
50RDIuMyFlaGuV7sBA046GoTA/7w9FBWgXLsK1BIYaKeJ5z5+RKUG1cq0R97fVALaH5HDhAr1WVV
y/wfOjQJ9GKL6h5BASoSKyqtuaKvA1PokpDOTdDaetdJamXnIwbVYgfXUaPkqho8+znDptoakCrO
HTlCJ05RF68VOMG2wmkKbvEWKl67DyZyRkY2CY4Ih6YVcqXcK80L6onikguKq6eAxuG3nZSgYcN/
w0ALT4wpdYRAKh4mA05oWFpSdRt63BxDpZG2Oi09zc0ow+gUffOoS+y92l7wfjk6SKyo/r98il6G
iFm/k39GVb4Vn4SZWcWTbh8ABGRuDvOqCPOraQ+6QN1kOYmnqvbPBHxLTIrOMoSlkx6PW3YNMZfP
6N6N+h9sU9mhhdaSo0xRRl4LZ0b33q0WOBKXHQv8Ae+aQKWHRh6wednVyVkI+dHjz+gOVK5MgnKL
qShUMTrdG1w/il5mh17JEoKKuTnFfernNLEDceB9PqMN77wV6KqiKJd9c4y1gC24HmLl6Irj06EH
Bip/Pu4UOxELJjg3NObNQhDczeE+wyZfDd82Cy776svjvfvFwQ3rA1BF2XX1Du58+0NohKJHO9bp
v/nH2LpD98Js8/I/w5txgoJj+BJl4WD5y+utOIKznOcUnIdJ6xbkZYBruvxPupMbxsyFcc2SZfvn
fA5ujqhfa/et+srHgvExtcn2ELVZtrYMMaieu3EaLqXKD79q0HqvAHH2bguS+RmX2ziLujj4OfDC
8XM2thdRH8dYo5n0Aoj6TNLyqmOuBvKEG3hYJce72sdruvTzG03/Zjznnd+XsxzIsIwPj9GkuuFD
dfYn7vlmCCWNuZIbx+fLFUQXR0L9uQ95fTssHK+uUaKd+LdjBtdfeJWOMwkKce5xNSPDEwMJY2Gg
782kALTPmUH7sKBH0I7+2ITzHX02h11br2TblppqxreqkebzGdzAd2DGQ2HxJP4ysaY8UmQJHVjj
GZNfOhgv1fYhWxxQoJ0UCfHpdFAPYE6lJfZb5vjr9gtl6i3SXSUKNI/zC8EzIq0p5dcZZyYItBnY
mHuu0ed/APNh6gd8tyt32+wpC4xa9RaZqk5IKKLFG0zfLRIMOwRIhYQTTE0xz984dbFgBTNztrAk
ZCra+AV8Qt8YYIOJsxRx/1G5vp88hjwwtloXhIf3XVN7q+x65mm2qdLZHCLag2OUO142P92TY6gj
52LY3hMIUaHYqHUf+oLoEDxtzvWzxIVaxmFfVSHijTQyI33tDqMGJgX9ClYtN6Wjq6rCvX9Kmv5y
A5XqwIVCncqNpIMnPlpfVgpG5mazg9EyUZlf09PvTZ2Dl6PEHqAarOQ8mEfjmrdBiFLyJ6jj0uOe
lJYGokcNQo7jlykbNAI5zKmNPGFhrgBpU2gnz6XFRgysFs+TXiB8hh4jGTTgJsQI4tFnakKGE5I8
YSEzPGI+gMEaFhr/3sFfnO/V5DGPCFq4LtFpfPYVqZoMAAKsxPO5YsNH6D33Wc4Qm3MjYHyJWXn1
RZHGBFJfaX0oUEu8THWUHzYwXfUm5tz3OaevU8ynUZ0cEwJGjh1RW/u6JG25lcsRy2BsFN8IeSwj
/07G9AulT5E73HZC4M/avZ84OsnmYRJsx3euxQT0Aj6pD+FyGodDem9Q+zZG/I3aIyPlvtvWN4I/
p4Vb8oKXf0jBFRDPYA0s5OFWYieI7KDMT4Yh0desDUG5rAeE+pvShQN4Z+s24AAE/N1+j/f2v7i/
Kole+6t6HbdrZuQjWe9l5ZcELbdeqc+D2omGI6OWUemSNOEDam8af79OytflbteSSBuZuSIgwul6
5Xiy6rROKNpPyJvtGPAWiY1CI8qsXg1qol6yxErotDn/q8m9zyfMXr8HGQOWX+DYbhnp+V8rcdtX
u47Ts4PRxLdHbVfNsWcLNriyouggHym9RD3cQ2EjFal5oc7+5wGuUYR5s2bEL6+27H8ASJpep1lm
zqucTEQRFxBLRdCH5IeithRaoMKXhsX+Meuu04eayl77apqOjjrlgFNwuVxZ2EStCCcThVITBpme
S8h26Rs1NyO3zeDhhsr786sFyRX42yGIP4buoanCugtF6rPZI2hoDgng2hd1c1IsZhefIAVAToTX
5LXZRc6thgo3Xfu3zvvxsyIhP9TKLOSjZ5z18XH7gIUWNFLWJ+rn2o4NapEEkbRIP3Pi57zWnVKp
goC/vEiLxZmq19FtEtDNuV83jkqOWT4Upvbl/p7BJwYCIu2c28FJzWVR5TnYhzXcpH8Dn809ffKM
cmD2Y/sCLzhfR8ZJRwNc69D70F99+5RlF1WNOZKml3YbGJlveMBExLFuy2MfXiF3kLlRwo/F/PGt
qKHHX1LNRZrxCc3VEQad71zt7diL2Vzaae4NDB7UqI2zfNwMhmQMiDMUAzEgw/5UUJybSFHC11kw
e0ZHZ28Cm/yv2ypaPnN9L1S35XReqL21AqrvzEJD1Llkv0z8JecPMAq6wgrUUW5Xv81V2/DL7KK7
/QSM16cr/aKlCDiUrt4FTmH7gLgq+3VWoq5G7r4tA8CeV3Xt/PBRT4t1+QP0qEtOyZSbrAEVG9DC
THZcUH0Oxj4O1tIiOo2F74MbZ4gt3wFno1uUGaiVnkKb+WlpTrlqOPHOfwu2ihYUI3Ut/deJFakB
rVaPLkUHosFiJSe8KopbFRFJ9rfBmWDnvEYvaFJJ5rtRxWOWBo+jh6gsq82rSusXB/bUjs4jzgxr
QEIvP57HOKpDwY9sxXGyGActp2b2gQEARIm23LwwbmXFtrr0QhqF+hPyBYHgpw12auFMRfnFgnz2
8HMAssf516g8iCQLfi6M9DkTMyy/t+LiVeQaJPotWPvN5dk+xKzBMxcCJOjhRXM4WOO+BHH53vaS
usHJ/ddE8qlUBGCkCkS7L0GDcie89kBxjBxkieqgzEmSHp4UTTmawhVzqcXiGF9qIFOX4LLom0Sh
9krEX/1h2+KhmoKztQXtX2F/HjzIPsj9lBmTZfEjdL76u1O5yEPUWzADIkTOyDswyFfIJ4isOACf
hSmqWdAdFDFgqt1h9w2ievToVE0ksMDlkjndx8eymtN0kBglwBfXAMhSwBQWtS5gbII/azvvY212
pKVw5zWSLiI2WM8YA5JQND1jq1GV0SwY4ExRs8GJTJgHkAj4zBqhqVWm8B0l7p7kofm9LqkZGO+e
F2mjhmTuFSzX+NHIC7EqS9/N/6IVznOjN03HjOtMEyCJHNRc49B5yWvA3FPZfIbcX/FXR9OhPlOV
rHia7eNIrjcYX0bx0JyFeos1i2pHMBIEO/Yu8p9yXlxX7QQaY6Y2CAeWTDg+4e0djlW5CWnfldHf
hwFdWwnT3/1vaypFLscZNSeTpeIfGZPKN9y4/4zHbkpfnXePg2rRorBAzdS+x/rgOqmRksBvRa2D
PN+xnt4IkfnL8aS/NHaA25YzksJ/kdw6vcInJJs4Wcoi33FRnFy1BdoWSce4tzApjmgUgJ2WWlkD
GnbX4xkT2dPFNM+6TVqmsO1bd1lrPKEjnoruf96eg0oHpmMmDd5SNZ6PMSH0uJfN1xYD96uWzTSZ
Og22qL1AEUhn5gophPB0sOb/fY6T5Miwxltv1YMhKnYBCRo9Kz5kGAAeApaYA15IrRENt3xSVHj6
FiT8o5pzrn3UepMKiTWXXxkbWYaJnRVDR7B8vHEHDnHpjZpKyPLmH1WbMHTtGZ0ZSbRu+0hLz0Jk
rvj6wC8HzbE3og/hfBeu5A/nwCYts4oIN/RnfZvl9BMPHRXf3KSYXxFKmhdWz/Tpt8VAJGLXIizj
g/0oWzc2vn2NLHdl7OHEw6XBPPOkpRhEG7NusrGqTPavguRWFBxXWI0vBzCh4HuqJ5xEFR6l0r0W
+C7Ax66Taz1EqRkTSQ8a0cP5MTF+Eag/IZmq96TrM9edHjVuOVWRfI+Gg7WvOJP+gsuFqGFpuhyJ
4H57wdaSWVdRreYV90tIYXF++TS7UMSrqpiT9USxqblqdqLGwIOOxoaZBDqZbvsbqc1DnuX8YguK
/SE/qCSrFF5ikZUi6g7mELCSsudrweY66uMH4KrBGWpmKmriZFH/7cq/PwNmL7FAGRAybPlJAjMn
TjMsakNX9zHyTYfy1zcwn4UAHlwz+G/YsC9vRU5CmLg0I6qm2Pkrimb5bL85s1v5V/G6qv4Yj8RX
viZwc/FdtOeqpplDxyELUDUL7FnMJ0eVRJvvr57jDdQrn0r6q9ofO0eUcyCxV4l8BdDHM1JbRAYH
AFyOseGWJMVGYQebUgQzQmdk6QvjkmL5uRJUyD+JF6X2a4fsfWd2H2ZYL0JZZmU7IzcMTUzA136C
sdFZSbzgmAPO0xRb6HCA0x0hHQxDLY64kRw23cYwkKGX+LJ7tqPhzquiEB3iWAtMy1e6dCsl4J8P
zH4jwOv6M2mwt7yhIERDkkrdn7tewx5UhuCVJcGQJw2RHyDBjnCJKNbp9rNVtoaH+hbKWP1MuwlV
dLNA6ZKnUUDrC82comhhu2N+sjzoMF6gSCCzjeB1B62tIBL64Pzb8zvNzGeRPFJtOiVOHh2ZCFK3
0dc3EwWlB5MLmRQWWzu9Rn5PD9CSFdT4zq6kkbRxASt6/B8pXkDhBcVJP9q/9Cl+jWdwCegBrzr1
TLkqH6vsZpw2Kt8I8dDVA63CLtl0wuDrpkD1zG04VDeRzIQ9xJlb8paCt31Pv10k0wGrhwYh30/y
M6fTBf932CGEDFfjo8l3ocE+Qelk4s20xwdr8/1BNRGVrZHcGqqAhy+9q0AOJ9w+NfqnQjS5CRzT
nxZiUFb78harH2NU0lTJR2ZOLn+4BQ/Tu3Y/pHnZNsBEkoKxZfdT4otPdIgORZ5ybuQXguB2Eedy
DIu9m4UFFYLCU22QuR0KaaE15gu/vLDGgvHZ4S65iXwV6mdUoCtXXUnLICLu7rCGC6Sa+1StbkcD
Aq9frHvX53NeiBP4PX4L60CpdQDvdHyaVD9RfP+NVuDocvLcQyJhoqA2RGdF5S0IaMlrE6AMyxMr
47seOO5rV+dQNbtZBo8mJFtf5FoiK/mBoZ1w1FAAFr7siVBeR9NyQcGqm4ZNjmgy/4AxuaEOYiV0
LSq3+veWGbCjbKeCNeSYec/KeH/b2czy/NMJr9lAi0KfjCKJjRaBNA7IIOINaOnWCZDFWR05+fHl
8Le4KRp80C8jOXtIo/OWiKHcIgQFDJWkO/AGuVErLQcTbFVdpyLgET/LTYWOEJDLClgI3sMX4geX
SwYLLWlref078/BnB/OvRfT3PQCEzrqRREuI1SBVxxF/XlGAfIcIRalYCP/MM+/90qb6Ff7ZvQS1
jqhHp3fRH9CselrTN2KvOO+0MtRm7+IKvwCNTDxNaxpDE6ZJJu0Whni5r/3PruIot8V2z6aAgHLs
EDzL3h5bWcc593qG2xnB7PH2Rd6U3ledBxb1+8PtEBc0bhZAWa16tfgZ80IQWw6WjBWcOqTrlUPm
NK9shBknCsSfcRx+x9mwnrDY7eQA9AfOt7RiC9O8ss/iDvn/WyIGM6HWeoGQmgEjL/ZCXWz7NGqF
FvEyMeK/hTz4BVZPY4Q0Xkhs8sA7IX2CfDr1LyV9EDuheAaIn1zzT8f3+9wOexLJRpKt4j5SMnLE
i1MUvfz1qUOFBER6HtqbVF47PB0WfUMHW+UlKddioTQ/ii8bxLxGt58v2i+SZHEP5WWSt/znNyOY
5uZPX6F3lecLSRA6tbl0c7R0U5+F0IuvVQd56vIkt1k4fKwyeEpAMtXJnUCszxc+SP9dErvFpwVM
sviUf/5IWbEgISmau2/MxVsX+mkwdk69soTkhjTIat4EOIVc0u34w+T6JqGaMCWDPpBhaw6lYbqh
Vh2e7IGwlsUOIBOVVkEqh04K49JbLn40jddwr6JT27DkIdf7Xpk58x7Nua6nMbpk5lywk7oVijXB
bMjDXFAE7Aj/1YbEaaFblFIr4vBOkS5IGSfAXtsA2eipEt0tsDKi4R26PPWdu46FhWBMoCO0AiFy
szqumkGzxFiv+e2SCWV1W4cdlBFpkHel6YvInaemO2MvNG6G+DlMIlNZQNPKVv8vkAU5LyMPvWhZ
8/c2qnjfMOt12ZOVbg9cxX8s5KFqIOwZWqLBCNoeX5HjyQaLtlysy5lp0K9fLnwXyGsflPlU1L6I
JqDBLJIvMni2QKTcDAHS+/CLZYxwOsWFaw1F0vkEQrFpFNbiLMdV19JwwKlo7CpdpIFx/cm++Wqs
2EguFX4s3P5mhALsbOheyuaH1xCcAzlfCTKs6kBKZie+oWjSyWVC3tzaim3Xi22epVxb2LTHKqKu
P1VQg6J49LgyUL/JvWEvjOq+hO1Y03iYlFZxA38YifmQUUxFeYmwPzWrxrn9KTwOfrKS0uUCOjzz
Rw1w8SZlmfveC6G+SZ1P5A+tStNq2kTJ5nzbOOcZF0ALO+2GxK8n9U0xbN9+1IIQ7+k7mteYZ2KD
gn5O68b2PckhusRULZR4wnDeCoL3EQwf8cOFQl/WcmEW/6XQ13qJscfkaZ9ypd2C6bjvyEeYnBgK
Ht4hkedQe2wP80NdYQIo9hHBzMi6qJVWcoxI5DbAZACsY/MORYUIrgIsyeUwwMd4qg47vEPkA0e9
Tk4FZ3aDruzdoVarngcAQg3FOCFmHFvNt19aFbnyDP7UrnD+7Zfr7FUzRC6WtOJyoHY+nnmaFHKK
sLldLSyuMBU99MjM7pe9Dshcv0RkcWOgu+FSSKaxMz23DvNuP6onX8CE3zThDiZF00NhDJTtqo57
/bU7/WNP66ibpz+c3bwV8/9JyKJp25ukElWw8bPP5bddwPV8Ba43SgkywEII01LxZBGGTHxSa2Uw
Sc2FonwaBGbS/mLx/EBePbhfteg8Qp3a0sIDCqza7X+DZ1DAv+hEF5xcouw3csPQqvF/uG8jWXjM
j25hramuF34WR+zYP6IGZPlpWpN4h1+RpqIGinFwRY5oUAjhp/bdcSxkfwBJk5wlE9g60WD5BKrD
ClgpY6cWBcvueFrXMVBeTcUwA+65MWjWM6fmg4/sT+WpWsckYspzKy5wAaITOa5UqbHCCwLZlyZ0
h/Otkz5iKh/nBdIgwHDspEUihd7iy+p63otVy9Hn2DnJlXbN/X1nRDt512dlQFK0/EKOcJnwIGgV
CT7YOGLqkG4WPh9nNp0eUJw8yoteJ8ICDG6/v2Yr1Y7G2XAVRW5quLleEO6cTSNM6sfbQM2qiox5
h/MvJH7g/uE+3x6WrsSF0fsGojfJ6LkSiEBa6WyLbzqQzlr5eQDGDM2DcS3bIdTyZA/g6ejv41v/
97Vcx8hjZwcATP9T2RhPvX9Yru6EAAvjlMASlhWvuYeUPWvl1YBTkYTw3srJyTUrgy5uFXk3XwEz
2yi5tv47f+j/gTrbUo08zJziO8iDBVD0VmtRNCk19dqKkZXVFwIForfj+WdhWAcZXJqrIBdtpkga
vGMcQrCgGN0tdTTtHo4Xv0mvMESWF3q5mBsDcrnr+XfDGK7YiKzR9Bu+HOh6ScTvpsuESSEXjJcc
dLwGpk/VSDjGbDsUhTGXJ7JSRHlRmbOaB4NRYahVLh95QC+LL+R4Rtr17yEvT43GQFPhoMXV+Wfc
/9FSeZPZJCcQXTFxnJC8NOfL/AO9tikybGWkECulWufWM7PhfSEyoyjlJolT7f82j/zTAgg7x8g0
cUNUOndxZLvkGkBh4uX+HHPeOeNRQUnuOfnnEjqAGLCnOT2yAxcc4om5sFE+zgXa/YtRrHa5QrIM
Hvw2iP4OBbcUlNdDmOXrN6SAAswMXi8vZde/n3t71DaKFHDhROjFbBB1SUniUYmrzDpc7AypU/TN
sPAv8V1oKfZ6zTicvYSvRGCuXOAKimQ8xiiXJ0vfgLwZlUFwQAI71NTV9KltgCkKXJVViG5nhanJ
eAjxv72TlhoY0rVidNJMjM+NzzMX/mTSQU0k2keasuLb1iahYlO58Bo0TEwD9NKWjgWfcCV4OVWd
L3SjC5wrnZ819YDhaGyXnS5aYNKd9417yPmRNgJtW+GQBPaieXJNXU2voVjudl582l5wKR9jRuIP
/v3GUnFnhm6CbqbYF3Vur5eQeMumlMRSE4kFwYG6MeE8Bv57IcXA8KCAs1/Gl4m74/KM8w2+d82+
6uc++SphNZYfo7v0inCi91ycy3wg5StwIsLYezuzD1Zst77HOTAOgO33vwZqs/NvOLlAdlGzNuyf
1AmmTdKfVfi7dfk2REFALmKRMkAnGdvWX06VoPfMjX4Q87L8VXtis5uc/PK/O2UlY/zhvMg/juL6
Z2NE9xCj8Vbn1KTOztdh+6t8WWDtMZwXp7P30nm192MMFJNTA4gjKLYfXVY5BsYTX6QRKt/ddB3N
g2kmQ3Pwi+78qcmLcaItjc9wt62pUO7JeN891SIw4dw2fSKj9Htveq+AshJ1ohv5vmAsehq133Re
hMZr7xPc2088i5Lmve2/iskuVWHzbjjRLRISrDe6jsYfo6/MlNNKcPMo0tlk8XFJTJe4ut0b9d/Q
3MCmt6YheX6t64ZeFG29NEcM5zRyjn3M6o7oOINBtRJRjDF74ASW9RqGK8iqbwykaJSyGdPjcN8D
0CF9mga5kLs0EMkJrhty+NQe3tuPADrOCNvCr7bVr+dpXrE/5O9mPNUgt9/F0vxQD3doRj/GUQNU
4Hk6dtiaYMcV8E7xOtIwiTNc4L1vT100U55cJ+v20AYw/liAtGFdv4rhVdqefyb+Whp3PSFdnDwp
FTna/rQGM+hQgWQyznsFACiyXHXC/QsRNrky/5dnm0abPxGuokoOFRpw8xDzV4Cpld+OjQ++Vq87
FpCMmUJibZb64PWERf28UGDwrwTnf1AsdEAePIzf81rR1nOChI6JDHwMPMTFic/ux5/C6sKEvZCm
kUpLdsNPUwxTpy9HyE8hN3G/aWBUDHR3H9vqp4UzXavZ5fob32xkJ6TdAy1kJT5kFJeQku7PnBIa
eyNxaUEzU6iVcT04SG23e/mspPlxo7IkmFyc24y6JpTN225q+5h2Yslcq60RfxRVjaUhHXBWf6fm
pfJrFHXrmf+Xnfma80/GHV6VQO22iUkcp9y5fvpIxBZwWK8EPMAK03gdC/hfhYn9QnQmiC3pTSmr
L7bs/KkCYFeKY3FJd2gqwwvy5Ae3acwFbhI76IbeVd29d8VYAxkBGaorYXyozMtpgSPfYhDVxqvK
VXsF9LLCCNJwh9EFIKYitgsyh+sWI6foRTwFL1oV0dWQq/VLrIfrs7lJayhbxMDn5m9dgx0Qd27o
7JZGEmg/YRBSgv4ZLDtqyLAP38lqprBS7MxOaRK8uAuhYH2LgvhoU57ACrO9TH8W9Ahi/HHBUm6O
xZIqzFmleXG7EyquHy71F0sAKL2AIAmmE0rEfYKlvdIdYLxbLwhsbTuGA1P4QL66ZGShaCmP97oh
iEYkRdPLbgMlTrY3uxqzE3E+Gqsc3gWDw0jH/dLfLoMQt/MrL8kxDVGkt2W/kjF0BTCHvBYs3y9U
eURsJZ4zNrW5KvAk4gmYFnK6TRdV5d2OlHPHA6UfDN5jMj3Yr5I7SNP10qOz6SCislfKUQ8V7yau
TLZScxADiR+G9qj18pecpQ0poyFDM9lNESJC7KdsFan7MWJDsntg/jDRbyA5QskJFgkREPmJLdEJ
6Y79vBJ+hXOZlGhCkQST87ILwH0aHlEe+6F6IPMNvGVYsP/PuUuZTlAOK94fcNnCX6SPVFrFN+GF
FvBW95cAEIS+mHj/WjURuK2aNCWaEsK6Im6YglU1vIeLjSfHQaczhY1rd8ZwkyFwyAedR3qt5Oq/
dV5uz3KgcBr2B2Fud9xEIIx7QF7aMok/42CDy7+yOBth8FVPDaXsK2+QaV3bRmPyvx04PQFVwFxS
kTj6XxWPQirzG6aAlF9re6syRudxhwSeDi/esAHHnEEfSUiaOyIBg/jWdFsT5HMJqd0CxElhl/a6
L4l+zWUEosWvqaWjq/LjkQbnqdxkksf+FM3+2/bHv7royP7eK4nsdKQuJzIV3ar7+JJkpMsgk6rH
/Or/Mjj5vFDUW+MX3qnh0bwIpXlAx4bg6wF8Kcr5RZdbqybRNVjz8ixwx9RF8X5ahbxY3+rpQY/f
uUKfEcw1VKzG7n9xgg0q8Ae+WLskFh4B7iLNttvGDkhR/aoI4QxZLLquubvcX5MCZ0bHTm4b5PfO
wTL2l8jv4ouewvx7q9cNMTYNOgMDsOWuZ3G2/Jln60FRMscmVokBK2TN3HDvyw5XsqxskuxBt9sK
bBOCfC/AQN6v0Vvd4HDRgfJI2vb1sKBaUlWKELriBF91BQDSKb6MRgyRlkiPGObGs8sCA6Ov7N8Y
XDVdJ2WyClWOC9TqiTdj+wsjY8mfkiJtvf7OJBNku2pOzzEgZM27cVjYrDV3Js+Ne437MCcOEyeI
EmtB+7HrVHFF9HVNS6xZvxAubQwvD0FHdghSyxHCgHKKQMvH0IERA1EgAe6pQHq1DO+YNZNhFJha
JCctzIUYjs42M7Y0PHj94TsHHRKRCjbaXIA9Dgso7yTbUHdRi2KxXKrMSHKkUiofmJJ0SLGeCSrC
Yqm6uLq6AdQdi9Cjc/kzvS880WU/NpwS8WFzD/iGfND20sSarPhkulGCQ/BuoQ4uOhhz5rPaq//6
1MDZ7qHo/IF7pMw8tb9L/uA95qp00z4+Yp0VdPmTq8ivFEzW7PIwrUFs+ol/EMd/FQrChXOBLSHE
AFrv/HX8OlQQvPuTbwFkzEFgNmdlvxuhxXuZiGnXI5bBNnlwlwEn8uGgw8yhLGMH7SJLApLcQoIc
w6/5fk2dIjEpDosVnlfEtAHKF5lCd6UQtBkgCSXyqSxOQG+ApiKzdiLMt6Zt+NseXvDiuwqic+qU
F9iMV9GwYcjqWgGkLbZhJ4ViPLYt0sfnVTHKN/7/tOUjMHl4+0Xig2hudeW+oo3sbwBz9OkbHyIe
cuDk1NfyFMuxYKiIFIJJ5hDH3yhfaYn0H6Oma4JZiHO71ObraTfGqIm7dHQk9Nc4YYjt6ovRp5bs
1nkKZNy6FmMQIo++IYSYKi9ovNZURoYwipZ1iC2NFi/2VsOWb+3K5X0a1J1sXp5b1MyGFmv4R+Ig
AVVUiLH0wB+TJD028FIa7NfQYPqz0wDApl6KlBHbncB61bIQPetZIgzi4IhF9xelYPPFCUxUKxCL
Eetg2G8wC/hXZFxxfrbFy20X5ckSNiIHmJ6uwHsjGV45cGsaoqA2rH9KgKSKJCrstB3ng94MR+s2
0Nv6+lU3BITTXCvv+kQf6ONjx6Fco0dOT8mD6FOLlGEmgL2zE9rzf1QYL+YwH09KEMgogZULxUOq
BOXCUOSPXB1G8PWXd0/41CYKzOnvPg9Yi3wrDjpfu6EtMylEHaekS3Q1gzjBANoqdguqxhioZuwY
hY6I7i7JMO2Oxop2ygFkb+HkVABFBj17db7OtyAuLxYsR27qcusnsGeU8fPy5z2EqpJ1UtnYPbYB
lfu7g6jx9P1KnZ+Pc4Sj2tEiEWU5wGb/BPiyOwVnwQWIFaJgVmTvug/aIfn772APy8G/4Wc1zWAa
bT64jE4NQ8FTP5B34wY3toiSPShaFr0syA/TxZPluUrzXUxlinKG0UpvMBWVox9yB+r8YhPy7iLb
8saCABfiNQXngLIxcVMYCH3rB6aMP6B1aCs3ICyvLgK3x+KvAhpp8bChaRVL7igtOqFSUdTr92hC
yxkibN+WC02e4sYb54QAPF5TeumEYvyPcOkw14AY7OuvGtTjHD+MAWwHYtUOBtpOep+ipPa8ouwU
3NLvDsOCuekqbnfKpXTmP2UXQYkWzSCGbWtZ67JQGimNXzMPLB8g2D9mhc8MGs7OcJ3rdj6sqr7C
Q1ke962j0KC01jgAYsqlAVnumKScGjMb0sAwbu2QvWXgxU9LK1AA7gnhs3STJfPLhdcYlPMreUnu
nZw+kX7dj5D9kpNT3DIbU9+pq/QeIC84sD0jEFkD2wUyV2ldbprh6U3v1IVUs0EEUDhj1K/0Eo5H
c3CPGl3Bk6UPwsbicgkUqq3Ud4rz1Cd21q/Im+Yj4+78dAr5q4qp3aqENLnyTvVrrtOKFVoBIT90
zabcVLrMUCvd946A07xiP3UMNy+2FMnhMjkz1nIUznWYUn47nQM9Kk5oti+K50l3xHg100iq2ebp
w+4v3ohNWbOvmMxZPpQ7vgIabiPd/riTOCvvlIOxyiZliGEKhh3CLEg/GsxB8U1Z8pU2lgPOYpGX
DfjXXbrv7a8IIwdVtyjNzjvODV7gZjzr0OYbYx3ILJL9SCTmI/q6EmTPyWZ9h1f9nCpeb2HT/kOz
mwLxx3c6xSdRhEtSmlNa4GTsNg45qItqh4sijTeXRi7UF+N+1h7pkjNiB9AILK4873qSxv6pjHWQ
8vVW4n3EE5rX1n15+yggYrwcPUTNJaZIQ56foXoeXzv9aMjP8DR+SnzceT2+Id5zLcvKG1UkD/dE
Fq+LFp226N+kDxgCZKFJeC/KCZy2x/2ZleJ1BCcCv6k031l/TiYnsFvNYa98JDvSzcR4NCx4Yg6K
FO6z7YaseHvHR0Y84D+HYFP/mahlcfokrAD6pBGkvRkaTQSqia5qLzwviSzX8LAjCvvRBLnkC3I1
K0VDjA4dB0u/BiQpM6iBu7I0lrkLcW+Ac2+cMlOGg3xVx0aB0+/3QvXEvK9ZeezMvNHuWbzS+Sp7
g/onY3cusYLg57J600bN4b7EkWvcBJ7drCvgbS6KI6OJ+323TurD4ouDw6IOlWo0CfF008Y+V/8q
WBHnJqmc3jGdKn8JwpIn5qtIqnTG40cyGG1bPIkRaTqXakNbVZmwkZY0I0pA5k4gDfT5GF5kIPKf
OWvjUylNpzwGp2jCcO9qrjuDB6JzhsrowAq5PUGtUolbG2RBM0STd6vijxfBilHtnB1o/2w1mdNn
3qOwJgKik0+1e62e7oA1dCffH0MXKHoQiDAUpl1Wv+fRf175O3TcOQ/464PKg9aJYaIkQAtTcLit
v4/3wspvf5y/y91CXacDcrSSk7GrxI7rBdrXF7FZWlrrHh/xw3BHn61VGLrrZZjjCFv5EunPMGS5
00vvyWQLGT7iw3UMguqwvaRFczZuIagoDyAej0FN0uwxW3JcYWtV8UfL9LJlEMMnKqsgO/24djD/
RnrN95yjG/5eiPMGwxcpYFZeawa9VCHvZM9sKZTZVeIOp7fGUepvZaflMk9tbzgd4Do/DlpdTkza
AYRp3vEQiO5ta8eINNTxsNkCxEh932ahQ6Wo3GnCFN5m8Avk8U107csZrZWhCXMYarb+hK71IApm
/ZWVnsEGTUApjDy90VO+fo1UeOA0HeXF0GoIbqIWBuew2hGg4M0SpoZE/pw6LuR2z1kcHQT7EulR
aR+YBHdc2tDcGsKHXvWqun8lPMvpAZCzJEL6w6bYrKkYT49UeBsBTbbV5iWJtlitKXFjwvfE4QLP
+SROvpVJ0i0Pp+yqOFwwiccBWhEW6fvKVHe3YywvRuBO4N6IEKX5/2hC5wrm/PFsqr4h+3XqcCvT
rhdyEiq+XRvsuFbpEvZgTgiLsFb0dJh+AmCSCFa0XfX1E9icYRJHbnDWSCm16AqCg+QKY4xMfhc3
XK/tXmqG0VeMWOvz4+P0bzZHFslpvgSOON/WbB/HYxTJFW4LAmMelrXkWpyNUl7g/9XvW+7NlOLq
ncG5ejoXdTyq8Hc/qgGHZLyBXv6gw5fxM3AYJ4nhJckMIAnFEAlvOeStGusdIMD/KsSlf4VPSQxe
fF96gtwEJlpdLCrbqZx1d1KB1fFd0+X+yKSNkQ3tX9hhyIZZt7Yt5T323fDgtDSV0Xu71Ec/neKu
aun5PTI+IUuabPeEJYPm9l4sXQHRGE5kGeZppH4vE5p2PccU21H/uwDLORFSHVKYJiwmOOqfXKPk
hIWW5aDDegsS6MzRv2et6AzzuiHfShoZKavmMp4CMSpZ7vqb+AR9XrwAmKxx8KU+jAF1nak5HU6w
KWmcJ4wqjBqh3ZVH1u3lRHmsTWOBGomZZyBDwuGGOSlSRjBw7eivk6y4Ch5jQwpD0aDbOXMPIlfT
zLK2Dg1xEvd913oD3sMs4BpN46Sdt63E2QQoEmyskpBlqJSl3/mL3wCV3kMvlyipYMTITgah2Y0m
fm7AsOyyZi7uiqNXCJBYj+Bm4T0k34Pr1+hJPy8lzX1vTjxD055cYsSEVVIMAldm2ucXKlPAPbhB
0ibTh5Nrfd1vLMygU1KQuE/IDUDyGjJ4grB3Nzwu1HKdyHPpmIarCqBs7BgVVSUpGhjB01nRdSI/
8poLWcBCOEzXDWo7aTijzVO2G+nzV6zcweIzQAUFI2lzR465ntig4ox17FVHfBKnePvIjEq98uto
p0MeIbiihK4zmrQC9AzX8KrydDiwKPL9wwTRMKPjJc2XBsx3Q57t4LDOuhnx7sKmXJMi5YRx8eUA
aiz6+xDbnC3Fa95kiejgNtzbK7nuLLDif8VroCobeXk/C8lzlSJH7nOKXtqKuHf010ZFZ3aGn2H7
urmyxf8Vmc8sc1w0Ahayeu0DVEMa8Gq8RJBERmvpVykPPQqHadP5ZVuJbUYqJs8twKt1NS85QFnA
H8U1UqeuQlC7flI4Fv4hA27yGlUH+0j9f81Z6hlEQKbpOewsITchpFIQdpsyHpFNLZV+QqWkvWl9
c4b6QpbzIqmNXQOLF3pK3KvsP2Ef+Pu/yBcUcd0PnuIElMC269aJFLntWgq19P5bkpcyKY0r3mnJ
PXsTSYWuOF/Lo0gQPV6ngG4KeKwnnnMRA7xsDdorskkpVNWawfx533wBICJ/uNEQJh5CjWFK8cGw
LWegtpavaYH2WAz7YGEexIN+/VsZMRKoUjRBLODxW1N13ehIREY1dJo9jtkoqvpNWiKV/GD8rzrd
LBnJ3BJjdRRxyUA5jEGcOW/7QtGAlR1xB46ewIhOM6sDqxFlPsZ3xmc9WzLDwW7ohSSffgNylFrT
8x3lHQmZOu1sraVfSDUVZU83o1i5asoP+yV4U3L844RIrsaga+v/O9i1Dh8Av1uP0aij0JQdUN/n
jOAC1FNHDP4nAAEXIBjac7nZfXjjB+G1W9TA8Xw1gZybvXR1fnuhu9CnEpSyEQIsc/NXmEMHLcDn
BQSnhkwVtwAnafFCgx7bk7BdlxkN/L6R4qg1WW3oP402t0ETd4Gv+hT1D/aXi6oSF85ILzA9P6DB
09KYhMBC1Vu5wCeoA2f2DNr0RmFIyxFb8mEoNtr72T5mXUg5HiCWo1C3Z9R038tn964dlFJtPRW+
iQdQxCfHEkM9iDj2ITJ/GoVz3ZfGArlxlwvSEJSjXn6ht433wg/JHyoFFHUZcyZ1NRkIMvE9rbQ4
k0orCr8zNNvi6XDQEWVdgRPmIem6tnqZ/vZgNk4l79ToQ7dGqL/YIRMoFRbQMbBGNe1+RSyGqzO+
VlxHwah7u9miX9gPF+f80eMO5xj9CMgH0jR3YNop3SS0uDVMLplRwVV9HNYBHccT/UJpXnAHAAdb
bp5Qwhz8QgTLwpEJjZQJxR7Mi8v8qJQHY3+imnxZy47K84c5D7e397aoJ5jWVfRzhhJS3QcpcNDx
VW6zRJekvkYwEEes1YFfVVmFbi/TGc/77hGehnFjeAOmprX0qTfHeobbSkK/gF/vPw1wUPnBvJjB
arD8lFNW7mhyccjoFUj/I1rjIj7PsCPZXLnawpSWjdy6qj8yr1j0gAGE8E76qzWk/ndiirWbgsjU
4VSoO9XJW3eIqcmDttXpzvfelaggEW//aMYMZaITougNLPNOoOat1XaFVsv/COu4LddU/3mhRBpK
oRuTW8bZUlKkJleGOIBqlAjcUVJmoZvuoT0MtociX38amHN0v/chxEndfKKAiyTr9xCZVwhGPXBm
avn4UmoVly9D7/a+WDLYdYgpbLvSUzvDZxiBQJVTg+TJ6pE4QZuuwfNWaeqjR0xOiMw48RyzZM6V
akZDb4UyKDdzxBDDMBZic9g0ggS/3ujbCn2P8R0d8Wt76+Pfcacia/4IFuytJMa/jr294UQ0E+v9
qg2bJTyAyClmZtuFVHNmIwJLjBKgXP/A9gPPVdl8TRr2HFqvD42/HO4vL2ANAvgBgYoUWvME2SCN
Z1P5v6L9BaBne8Vcne1JQg2Lm/EM2l8w9G1ngiOvOoybdoHhBHUkGVqh7LpLJQGySkXyJKlL/EAx
6NRnGdLdnctfIiyY9lgP8/audcP4WA7NuvPUUc4umZo6De4nKI8Souat2qKNWYFqkR3/OtmxaaE4
JnWWZ/78VDGSxsj/2WL1ia8vMC2smcN+gqJxx+LbKd693bsOCLVSWU3wrHKWxPw5relkXZEgIDZz
bbnBUlZ5je7u+jl53FSJwj2N8edtksXosXn8prua1ZDMT7kPPNwUoLzXL8o7+Q+8ifRzn3yHZYV1
fY/XFZcEGiw49bqPZSCtbzmlAgbVvzYb05RJV269xvTU+qenScdTB6tAcOJTbqccLpgZ3pqPz2Lr
A8f33qcChf3ogDyZKpLWwVFJ6g8tR0hcAURKrpeumMzehT3aeaUTbesKgdcWcDs6OBVZY2uu59lU
Ys/J/r0KaagyMrkK82YpKrZQNgS6imixkDOG0c7V/JWj1PRZACB6sG8eZiKcaYZckj11eXnYNRlk
9/KGPy5oxRJ6dHsWbXMDao7CkszpTVw6pBidhaw691TiJ8bxt3WO4Zmav73G/9MXwdL7L7u56M7t
YvlQKtixto2tE0zA6Srp7uUo4qDahB2JDj3KdusCPPDyQsomThY00Xwp1q/WJs7ke97gOBetcgJ/
HqtGVBeZdD9iVlDMEXD3cte3QriNrPdCtNxh7Fwxo9ueayAoq20+EWJRwFmvd0Y5GM7iMR5rYt/7
bCrPTjivDic1YZeDTlLRwOur2cEIFethUtz9W04H548Yk2SU++0VChEsZk7LAEwPu/DEAd4G+/1U
F0xORmeZs0444GsUOXp3nFuS15/q0Pvjv06XUt8RObkQDDiKIY6YthuO14TB9ddYgBpJb3DeMS+E
gyblyUreUbAaB0l7pIgh+jzDvCXUeWtDHxbczvl1EALvJ99fZet5VIRBKgwi6lwQPI5klcrLSs6Q
sasJ1cjrNoFz8GQ3tJpQPmkQTgpByAljabJcSdd5Q3SNMF/JogZYvdsInLHhN65n9e3BX5iKbaXa
qjIhmCeNMdIGAGS96/w3S3fuby95xfBT7h6Uu2vBXnzKzBRUJ2u/QZkorOFq01CpjUj1+uPOOIAJ
6A/AYNTzW7y3oq9R6HsSAEcEid1ykuNNComnjbBdEy6nFBTmoL9SYxixZ3YarwbKQslwvVtcO0E8
FUXs2glc+4ADTFk2ZH4p9XqVCJuQ1jYNE56biH1z6uY5x+FVUtpgO7b+uLXullOVJL/bwciIFxxH
FHDgHWyuk7AhDnY+QKBS4tqucg+h7xOI6bbAz7AryC6XDUcKObSeKKIFUVHkzgLsU/lSb32SyEIw
dF5obCC/c/sOV5mGcweLN9+npN81Et+GrRM7RBh6XNBP+ZQ0YwIM4wjXlywwEvBp+uwIBiQQgnIV
uWTJtXhT+2iu0gWQm2ZNESv8F3XBBdp4eEmQbBlQhpWeeQAK3th/+YtWKRDt+ntWDtkwr+FrjMRn
Dhc1opKRS/uKqXCzIdiDoSoV81Q5DTvNq7soXcEnMiyB687AUj5nLBtHkPRuwgA6BIR8R+ZuITHJ
2bj+QclK8OEAem0H9m80qZ8r5/7U3mWK4c6ZWrCO2P1SuM3Lj7nW3fH/MG9SYs+sGXBs9g5FyaSU
rCRP4062G27r3G1hF8/Yqga++mP5dZq4WPvj/+aMGNE60veXKoQFJPxxjxjSRm5u61+YLGogeagu
fMxe3zYKLq90SpRm/t7CMd5GwdPV9EnetYhPalxwYDEQ6oqMOAc/59JDJnPwYUGBimlZVWfDxLqE
eBmYLtiXpHvK/c3oA8pHZPpz7qhOy4LrYC9g/Hm1F782TqpqPois8MEsDTDNcsVKZI9Jmxoz04Ka
cIv5lHXaYeLpKwOfQMbIsvH3gOq3I6vFfNxeGPViBscTUSfLCcqHOx0CU00vqtRIagjIWG1hH/3+
r3XpNR7rDz0JOQKfqqN1F1Pt4K2MgNyITo24zgKKl9kHW/2USkpIs+XfUpnRo3h4pc9qeSnMNALo
zsPu68Uz/URUBEF51va6dVdICkbvdcxaVRnX75cEHFWuGb0oY9bSDYltY1YnrsSayQ4/2yB1Yzs0
AuXkojdORhytHB2P9Rxr7oQMszhbE4+7PHU1mbMMuWYD2LNYxL0vV3HFEfrDeBchBRHvpmHrADlb
2XyaAeBoy6N1JIQZKJ+soY/n5PXr7O94TnIwNjqS2eeK0MCu16zH9oyRZ7F9BWeVVM3n0q3Wd9zp
LWDUlhmC1uuAnhr6rzX2VUXpJVXkS/WIbN6nCjDjujRZPYUK73ZeFxCvUvS8TFhAJvO04BjnfYqs
tiOjsVBPCghOfgXQznangvj9okof6CZ2O6ov4fPH4YnW5HXKigO+PqY0Im+BXd5enRjQomgxyBN5
YPzDsOqi19c/pwE0R58gigYtMcO7FFwXAuT4OXsGhu7lia4OtcrEXcXHpzOtz5KwT7dyUlezSoVu
jU44AbLCkqrGdZ+eIMTyg/6Z6IyrD0qP+hQ2rXlUk7Y3yxFS3caJQpiI7SObrcJeW8FA8dxXGJzA
sywr/sauF8Hb8z5fcDbq3hy2Cn8j1aPjONsZZGKRISpzHybgP+SA/FIvuuq/cV95SeIfXh6skrVb
qjrje26rqsOhslBSyjbbRcZYA2i5g8mBZXy4AeWflJIIgp2Mc5IxiD07zUHrYpIunzOqwVAhKBKi
s63P1DDGsllW4GpjxvDqnUqNsfyn3bd2h7vRv9OWQvJjU+d9VwOhBk1SFdPpAHRk9/ylQFr1+re8
bKifzXZMPJoNfML8BXSFeESsDb3gtSMep3+fZTJl0n0Ej01Ju0Tauxpu5X/dili13fc3wvyi1MnS
UlpD+LYJu9LUTDESslRbDO2HcrMnGAiUwDG79IKwEiXODs5QGcW4O6UDcGoZ4fPbEZJFfZG+SRhO
2PxmwzEEC2Xtaetkmp8y0p9dZxgHVMVesqMq9IcC079jHRdMBTJPPiejjXAV+UzajtWSmj3Q03OX
upoh0DsrKwewle/1QbRFZLbKZYKD64Tge+OOgumbvTU2tGMUeJXX7GkbGzKF8p6Uo17K588GMkwa
LDJpOOHtObX3H5blgIcCyjhUQTHKLTbb9JWOd6Elxa1xSF1k/CVPs3sIhopvuKCEOGOh6Rhew16x
m/XdG5lg6t2pFDBIkQErw6Ao2wA8l+SKHQayDmPbMIblpEVY8NA3P286hF157jipCL8t4+LZWcT/
bXyV0JzQ4UUwsiY2t7Hu6N5xoZfO8jiaO+lT8SVKWlQf9LymrNEr+rNNQso33RopBGNbAEs0T3di
2G8cxt2tqNwKCl3I+OeHnWGtHLSyct7RIp507s+BQDh4xcRiPmRIw8j/OgRjMNdz1S+vlxrsqucS
4phH3M7LTlqKTAmCbefi0tY93Sav51T1e2nOs1BIOwDexpsQcmjwwmnGCKOvQstY1EKUyFT69IDE
bTfTbxrorGPpyiMTlaGlAMAO2VJTK4IgfJbSCeHRlJgOsaplF/BOj5h9Qu6xLEWm1slMsldQEIlY
N+bnB6izqGh1j2t91V/8wz2iwae3jZvKWpthJ2X4/xoCwWu9hnfUFjnc8TGZ51MrZ9a/dNCYuLEf
C6aEzicvPMTqk4DFGCfet06Td9aqcra5KIT3ADJSUL3CVScfJr+6nu8jw51ug1mWl/7uu9Ij81hv
PX8BfpZahaZd8Xaemmr4xT6+sE4smrRx9s3pg9+y98Ia2sNUdineDvUPA+wCSD8M85kOzTl/pJep
9LPCqZLNP5hyFKRGBp8tE23ZuB6++2CYfhtXwOTmkSDxXnxjkTuODNk+y/juQS9pdwwSebe/ppPD
VEN0OZM9fTo8EPAc0z6cZKJ5hKLi/Jn26E0SSq82GMeWMxmqLqCxn/P39s/d4N3j+SSLQUB2S4pL
5fERwy/F3iYnlN6TFq1F8MpC3+hHIkDWkuKkIIGoUoAd+W+oesegiiJ+9uWgoorSSAphPxUFMZL+
CpomzpOpLNuhLRS9Joo7GXPrxYkgOigtTB9rQbLTbXgA0jpNCduwxNFfG9XMCYbkrBJnF0S+2c99
01A3abg4RsoYHeR9+Fg5N2Bc53/yIYMx5C+SPCzIbh/mzDpWtlsmMk3tHNvr6beKikCYCLHWvjEN
QVPG6a/n3FZBdd0we0R8UJEwBHdwaQd89kdcy+EpoHuXMHo/FiNjI1+ALVkT6zAYMc7xq71Us5O+
+RGstbwJSKYaDQos2k+w+s8MXAdDOSTGb/Oi5j949osxraomoaMYvtbjGO+Re6M6kcSdxIGvoy4c
uItqeH8KyCf2psCN2N/XAqqi7A3sYsFlySeJF5BQNfRyH7oOgbci7krE43vuHo65GoXfPjcq+kVk
BF3u1A4qg5A4vqn0m0yKAmA4jqzKeBgrO/S7b8y3/8Vh/GxaL1WjLEwSxaOwIjl9c+tXbJInhG3C
FnbNfn3JBBnc846qLpKSFrmmXMRHv1YxNC5tg1jJqorS0HDMRTZ2H7EqtNW+l+P8X7pBYDHWWCtz
MsUTqtvXgH81FMSgsc3qzch/xwQAPkpH5M40PZHd5TE1NvkV8jPPG4CzX4UoU9WYNEW08kYTV2Kl
vRKvAFfCQ2Aim8vt1JICbhrEiW59FqW502NVWOlnyVdQI0YWybwnjvfhKYQOEpNyrJa6WHL3kRhq
/cSJkbpquPK0cg800+2LtB5INKzgzCsu99CqxYJ9W86ptepiQyl+td6CueGfNHS+mGTIyWKZdg/q
Pnuv1FaPxomYq7Oel8pCuOMpt1+mBEHx0WkNniJRfrjUcUAw85KQONf6khQRfDXXKQ9Ldp/Cubep
OlJQTwLCB/6ZYb1ZP3Z1amM1gplVzI1bIgwCGWhF5PL2bxKb3rXLaKeK66TSQAP5ZBoKA3GiGtZF
DcAPA7pG25Dztyaj4k5BLvFSJua1fcTBPT/IS6tStxtIwBu4UNPg8NkDeXDAVtxOfLFhcXqeH+U+
f9VQdASa5PJR939SOZaNpomudsOH/EO9feF34tXQq63tV/7jY9mbFKZ/gKFlteWo+TSyNFNE0RyY
FmDbkabTeOXiU4oANla9mPsb0mYQFi4MvHWLsuS3hCLwxLa6Ah5yU4X/jHEsX18ImXS9XSDq2NiT
FghqZ8SRxPUd+7oGfDpdUVmejfD6AkXi1O2tdWX/2wIlTTGKlVCC7rmfv0oNiJeFBdmsdraJ9Cjc
5YZQV3yj4t6BtXP2b6+5eAyNtKi5/riF5smf6yb0CUiI1M3wV+dXRygEonhWwus7T2bNmG1dTE7M
QAvlfuu5NFBKYCqfCNmi4BYqjKkGxdULcWOgYtGIP0zVhRKk0dWOYAigTndX8xFTRmKe6zyBiyhg
abS65AV9/57vrhbuG8VGCOnSYmnvaxOVSqRBlGkZPYjijK7rG908O9bvDSJOrdMtCoksV9wFneJK
WdEnr7TVIvYpWgoOnZkT66tiV7JLtA2R0eozdHv+EAhOVeOA33abhAqJe/DvS7OtTrMsUAl3ihGC
Q94Z4m/QLfnDlzhIY557xtVJ8bwJHffInP4dvaFnwniFjRseK1kdiyPo4vvaRxamhAzAo+SHKrgo
t+YnAaRhA4ZxpwWE+FpDTYOWHtwY6OXazB5mcPpY+4eZiuxsOau5BWbCLLc/Nlo8QYmH/UNiItjw
b973+maSlyDW7pFdP6CinMIFwkYQ3zah5N5vqNKf05Gcyg31XaOpqhd3065sDhZHaFlZLjvVk8K/
k8urjADbfUAoJtDwfhKbcnlfaHbo6L+XbVEIzKm0Vndi48XgOr7+tn491FxV+B78NbpVB+t1l8AY
ADfIefsiPzqJOTitPPWtnYqfwU1IX4YRjujfo3s4RKJEqVxCzpKEsuGPoxPI5KU1q59N0cHeE1vW
k8YhoW+iAkzXAm6vqhVe2fXBkylzdX3/1iUv1HoEG2YtnK75xzcdyxpblbmX3OcjVTwjmvNILmCO
6LjDBU4ilxCw/C/4qBHx4KgOO7x18V1IWhISVsw8dPScchLx6ZgInS7e+lZZOiVREQlWppYrhyqy
oC2MZ6ce0juHBBdeW7HJ4hSA2APKOwuTG4RNoITjlUnqaH+i3roU/HJhhKuNLqWjXLt/WX6JSyQX
1TfCiHoKqutX+M0YvRo8E2+Rfq8v2CDxOe12o+6roX6v5PGNXcANrMNYBYTZNCk6GOWaITh02kf5
tsRFEsqWEVKj69bOr4EdkvuBNv+/SAV2TrbiecIE8Y9xEcmk9OBC/6b2wPU6TBBsXwesBMNYF+fy
FdUoilBSGjDxkBOHXsGhNGnemhzh/6KFI8mTVFWdUDVZK7/6wPyyfzOU7Mj1jILIh4aPWP6vt6T+
sbvlYI76Xv6DOK5oiX2OOGg3aCvjnlaBZh2kR3Eacvy6BbP6VIudztdBQazgGITarXZsCKHM1hff
LSthe0PAS4fdc6NYUKjqpvw+oWobwH9DHmjY2Pif7RDd/wO2M8Gh8xNw7+j8DVg5F06QJgIZE2p8
5TrWgRz8/H1VfqXVg4S54vBOhoyW0R/NuLqxohE2JdLXR+NpSGVQH18vhsi/M6hHcYB4WEw1ALnl
XTxASh8yITfnk4yN25mR6vNRDwc67IJt7JbrS+trmZWS1IGCxUX1f0vM/G8pAyfU1CZlCrCscY+S
b0TemrXnF/Une4GkYEJdXihVjrXyn1ZzkkCASnEgva/qEq8MsDI7eN57eVj00ZFcA+OCCTvOTaAe
T0SSeS8FvMSmN9KASM6HsmERIaVoGvLIxMlDWvbE5n7hxDfoOjlzm8xumH8vlmmMmhde0df7cODR
JAou7e2bmJaVpCFJCwWcG/m+NNalCp488GBSOAtV8DjS7YDCBlLlM1VJyweOB4aFLirkUjUum2o6
4bKKKRQYvgsmzUCs7c/RRuw0lt/BD+1jvbH7O6cAZJ53Fp8VEHqhRy5UxAzNW4/8+VL2WhFaoo5X
6H6IjcaN1fz5+zCv04loyya50durMI1I2KOcyKoCFE6EFBnN2TzxeIvDrIiuUxjl1hP9QbjPVElw
skAV4y0jiDrFxZkN5l1t22q8w25xb6L17e2e9Tjy2SyYY5Bosz9tU0M6Zcj5HpJkvXra2Y/iWoFo
mypnkDjzKGd1TEza8REEMiNKzAi5Xu+5Y6ViT1r84oDKf7yp1gLT0f49RUEuUyRI/eEESMTlkfkd
YgBw/yd+PE2OQhHOuchLGzkvrvskhsazdfBIGiRJTCmNAR7Krzzu8HJ2r7r6/n6yVQ4GZDotoMGP
pOHy1J2iRkB6HFqXYGzQmMIYsHliKgzo1iqj2vO2fhfeIACNlZ+gIUpncyrlexZg3TiErDknDjvh
wV524asZDH0TPeRcSJgx509SiLbLNt2JJGtMWcBTcv0E6KoNVNIFhHtke1hGrt6SEX/P2ksjAm7K
PguJyZtGdQSaAGLdRpw3vzqyjOaU1HYlxrYKnASFtq8hNQ9rEFoa8GH98KY7qGGEJUf1/tEhdn39
L4a7F5a+NusDM7HC2mDFh6CNi9qdoFjzCWMJFV9bJ/akGyhJfC5pJbiw7NjtbJEiUXl3Gu0pnamD
5NugCEAfsF8h1f5uZ2RDOoo8CQIF1E943BbQtxc4YnAPu/siPPbr27sAmH2Ka6lCfhhUBhtdqFE3
Pt716nmspQHppMw6fPbiWBe2m4Dg6QHA/bFaoRHSUwQAN5ALRDh4gRhIIfjzRKbTzgl+ayG+0ivI
UfnYV2lcNyXwnrTfKTnU9fXJAO8n/uUpupkzGDNr04aFwOhFbfd885LFgg5Y2K4Ai9Y8MjiXrLpP
5pLqGmzy8cxRFxBxqVGj0GO5IsFIEGCQwa+zXi6JfUKXkMTUiL/4cghIMdMlWuTETvYjaNlClVPx
dExHk1rN8kt1ENPT+2P/AYe116CfUhEv8N7LaR81d71pbOLSJ9gilrw/GaLBZ/K2wZKbmyf6Ap7L
udiQtez9zWUUHf/PBHZz0q8x165nJznSj8k3dR63iSUM/Eq/3loIbdEXDMIuLsyfUPMfxbYMZvdF
OyrqCHZOwgD8ynjqrn5tM6BWUMojFFXKGt4Iy+rQJcJoHU1KNV/HLyUNyarzpgwUsIWfp1WyARw4
vv5+37UEMK2/RlfvaM4IuM/ydetaFpS82BngjcdWvopiK4m0pcJEqV73hlVk9T7bHygeVAMuZ/7G
mcImy0frar9w194Gu3YAQ4z0cUdwk4tQzBu6BQFZLY3J4mYoKgPmGt0eThGjfqk4wLS7PvxmQ3UX
U37k8r5fAr8j5lTcHN2TaKktv3ojUF+hBRJzD7DwYrzkWt0QPiXnnG/adCs5PxoGY4keB/iLKF62
7m8aqoVmuf1Vkd+/PVFpw/eDZjU8Br0N65X0AJg5RDiiU6oyNX1jVkgJk02ANkQSKBkwuh7M8L4s
ZOBajYjNtWPFmvpIscso5g56wVodX20vPbJppQixhPXs3wh6WfFmRUU4FFIAACOoGQzHsFN0hcp2
eyrKnIr3J7fIZ0KAjDPHUf+aS9LiC9pfsUkcys9zwdp8jCBSdo9KrlqwnK5Y9JeL17g/TnP/hVoP
MTyOk0FEa9QoCip747SbK1n5ss5YQqr50DbJ8DgYsgKCTd/u7B8wPe5YYMbmfMdo+vXajwJ2X2Fu
0YHCY2otxrmSAhDhFRKI+wLnDZB4paviNVa3zR/0nJCfk7AneeNsMOua9A7qjLpGNlDw4ZqevpVt
Y8VJ1tKLVZWD7tghXyf9o1YVxBdwMbZxGXZhdkTADyxIAMuyTNXdhAvm5ohMGgae4qtkIG27U7cj
uc2m6+BpwAGrtbl6G9y8SS5P8bSCPj25q49zwz+A6rKbm48N5dFGWNvNTt9V2KDJL/xfWPmTrKne
Ad1LT+kV3/XplMGsysvIR0ehJ/nF5cMzqljojt6SEHuoHtc0XTsSjIHE7+QMTMZ5BtDXVL8gr6Oe
HJz4PAGlBUnX53Rl1/KtHSbROLwppcE3WevsPzcaKy5OMbqHWmbdD7DCkHi1w79oad7gfvqt/Cw4
G6TCE+guJ+Rea4/FEhsgK9vB9pRvCZlGAkitwZEZYzcbo7Jsj2ZUsyCM3yprID+dMCd2UgRHyIPI
Yg4qGxBZcxq+DKk0zcc4b+3mGiydLUbT6sSQk0l3pbfiD5MPanMXZLCQ1zUunMJ6Xd8urvcL0i9h
4OOMy+2kZxHjVC3NppfdnW3TJtvaAwsqywZiv9ThAbxyl2UHhLU21q06wlYYkf5TaF+3/rQuy8Uq
YnwIK1XbYPxjkuIQ4zoryYW2y1xD4i9UsK0LGXWC1G8qBEvuPbsMwRGLjKqU572w7NvQgYoHY9/G
YVvfIBy8kb1seSar0Y169IftuRbcfRywwcru14ArhmCsKLLygHKar4ec4X9YHfFWN09eJcMIzWS0
hOOg/TQ4LXzZ8NBPalbrW4RkVmeNYSP1Or6MPP2mJQIBWHC2cKX6nCLPUBUa/iXNzlQ+TNBcpWaQ
7uGRy8/7zCNazaDSeswvnjZpSj6kVdFWEThcfEp8uD7dPN5hTyL09dO3HaB6C6vtgc02TJZJkv27
RW8E9VcYcsT3cPP+Fhv14QJw/JoL0lhVYuwfFoz9jluQgiwlt7Tyrk5KjHh2b4cPu9k4d9aQs1Gi
oKn7ZexUlnvsdaGOg6UKipBF8XEn4GqORoGVLKs4YLmHteQhN1WIpf7pmyhepvD6cJ42xigCNxuj
+USxh0zd7lPRk2WxRHSIZssHjw7+wdTqGS1EjhoeKjf1acZiuNLCGukurm14UfIhkeaUi7PKj8dF
jP07bu9oxMnWe39pXxg51Rbsvut7RbXo3xuNhWhHLSE83AM7/izpz3CZvjHSSFYefGD9y9IxzRnK
WJjgoXOdFN5reYXd+aJH+yUkjdNi3lP5iIuk7iG6RASte32jiD9ey4xQqxxtEnsdfr9vPK0lNpL4
zs3H3S5UzKWJ9Okbk1l5aUdBNdoZLgo7i/bLqnr3PtazsBH41PM699JW+kxq/7r4mfejmQq/9DL/
BH4xTw0dggULyb5NxVw4+7fZNBLmJ4KcGLYn4t9cMc6dkFfvJr8J9mwkaiSIqxsJVCw8jQR6gpFM
6bJxzeNEhUm07NDacHef/DUvaXpVGy9vuTcdqm0AJ0nJpitCp2PsMUmNNUkSP3/Ny048sz7gi7AB
Ff9MgYYWPcpfMkrzm8JtbfudjMx0ds5JTyPYYT++omy4xrsSDQgqm8iJ6s6yn7uaI656TExk079I
a2IQdGnqMUWeOsEQs9Cr0xpYyTpJcdNAkVNXs5cyk8TTqOkYl+sGlGbNsn9EgsKlW157ixkyog8U
gtqTREQDKMD24h3xG0H+qKwJ8UqJQgfjcAyrJOVVyEyIMGgR6RdAQSfEJ35rWAD9nLfH/rqVRtfV
YyYXQGVWeYq+n5GGSHUFfDm+N/861TFWruZmtCn8NmX8tuQz+p+w1xSHmRbVs7UjRS7nmulGwGS7
zW5mzmti84CBm2FpapKp7mb3IcO39pb/Ye/D8ScIOzy7xQKXn6yy+QIRV5C8x2P2kX+yJJcCT9z+
ZZJiUGv3Uf9pkTTpEEceS0jryszJqwcS09evmc516mAKDQFu4MwenDEze1XZLGMJnA0YLey+YP+m
eozTGiDhSJY0C91QC70z6Xt7VYvYYR9DxP1pXKLFWfkctuZn7MlYRr/S44KIEzIwYRCV+kQqSnt+
nAalfYWXE6t4TvE+b6X1p1/s8WpDlIvJAW8FxPAcoLArq7B/hpQSnwJFOLr0jVuQvMNbwOCzacWU
QCQGifpUiI9AbDWD6+4olbwZBDmVZvJSyewtLTyeBCzYWbwqr4+rgQkCcxZCNZu7bLfIelxB2f7f
ysGZnZmNHG2cmKLE0oGuZ266vR6eohzoAVz/GWwkXhZR6whfZOL4fBMtU0tgDQiY+S1dVblvnVko
t1YcMUevxLguD/01LOlgklDMuNdGKnlOmlhcpg07k3igAMl3IOBxaYkqTSPrIEiY+BA0VcBvWQDS
MpywSM3veYrIxiwjVB4qt3BmEq4pV8Cwq17pqMcQunwsPN2EXXNKaEPN6I3hk7Wua1uTMs6cpGKs
9H3cukCqidJ4y/vGDvy1vFb73WrS+cT7WqkuWfCrXgQFkmwQ0LRfSCzzuyPtIjB3gnn7ZOR3oTMZ
tkL0mQ3F6LhIzRBsZJIHKf+n7hckhLSdjHE28gF9I4QBURUvdZ0BQPDuuwWLaGSiR/STTzlcqw0e
+cjjeWUMQv9nZSg=
`pragma protect end_protected
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
